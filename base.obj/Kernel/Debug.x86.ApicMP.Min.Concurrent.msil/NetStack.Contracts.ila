
//  Microsoft (R) .NET Framework IL Disassembler.  Version 2.0.50727.42
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v1.1.9999
.assembly extern Directory.Contracts
{
  .ver 0:0:0:0
}
.assembly extern Microsoft.SingSharp.Runtime
{
  .ver 1:0:3555:0
}
.assembly extern System.Compiler.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:5031:5
}
.assembly extern kernel
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly NetStack.Contracts
{

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom instance void [kernel]System.Diagnostics.DebuggableAttribute::.ctor(bool,
  //                                                                              bool) = ( 01 00 01 01 00 00 ) 

  .hash algorithm 0x00008004
  .ver 0:0:0:0
}
.module NetStack.Contracts.dll
// MVID: {E7AF4F72-9782-4C13-A972-16FC589BA391}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00010001    //  ILONLY TRACKDEBUGDATA
// Image base: 0x028B0000


// =============== CLASS MEMBERS DECLARATION ===================

.class public abstract auto ansi beforefieldinit NetStack.Contracts.DNSContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [kernel]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000011)
    .field public static literal specialname int32 NotFound = int32(0x00000003)
    .field public static literal specialname int32 AddressList = int32(0x00000004)
    .field public static literal specialname int32 DNSResults = int32(0x00000005)
    .field public static literal specialname int32 IsValid = int32(0x00000006)
    .field public static literal specialname int32 Address = int32(0x00000007)
    .field public static literal specialname int32 Ack = int32(0x00000008)
    .field public static literal specialname int32 AddNameServer = int32(0x00000009)
    .field public static literal specialname int32 RemoveNameServer = int32(0x0000000A)
    .field public static literal specialname int32 RotateNameServers = int32(0x0000000B)
    .field public static literal specialname int32 GetNameServers = int32(0x0000000C)
    .field public static literal specialname int32 GetCurrentNameServer = int32(0x0000000D)
    .field public static literal specialname int32 IsValidName = int32(0x0000000E)
    .field public static literal specialname int32 Resolve = int32(0x0000000F)
    .field public static literal specialname int32 Ready = int32(0x00000010)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype NetStack.Contracts.DNSContract/NotFound NotFoundPod0
    .field family valuetype NetStack.Contracts.DNSContract/AddressList AddressListPod0
    .field family valuetype NetStack.Contracts.DNSContract/DNSResults DNSResultsPod0
    .field family valuetype NetStack.Contracts.DNSContract/IsValid IsValidPod0
    .field family valuetype NetStack.Contracts.DNSContract/Address AddressPod0
    .field family valuetype NetStack.Contracts.DNSContract/Ack AckPod0
    .field family valuetype NetStack.Contracts.DNSContract/Ready ReadyPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600005D'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.DNSContract::CanonicalState$PST06000005(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.DNSContract::CanonicalState$PST06000005(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       234 (0xea)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0062

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   11
      IL_0017:  beq        IL_006d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   10
      IL_001f:  beq        IL_0078

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   9
      IL_0027:  beq        IL_0083

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.8
      IL_002e:  beq        IL_008e

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.7
      IL_0035:  beq        IL_0099

      IL_003a:  ldloc.0
      IL_003b:  ldc.i4.6
      IL_003c:  beq        IL_00a4

      IL_0041:  ldloc.0
      IL_0042:  ldc.i4.5
      IL_0043:  beq        IL_00af

      IL_0048:  ldloc.0
      IL_0049:  ldc.i4.4
      IL_004a:  beq        IL_00ba

      IL_004f:  ldloc.0
      IL_0050:  ldc.i4.3
      IL_0051:  beq        IL_00c5

      IL_0056:  ldloc.0
      IL_0057:  ldc.i4.2
      IL_0058:  beq        IL_00d0

      IL_005d:  br         IL_00db

      IL_0062:  ldstr      "ReadyState"
      IL_0067:  stloc.1
      IL_0068:  br         IL_00e6

      IL_006d:  ldstr      "ReadyState$0"
      IL_0072:  stloc.1
      IL_0073:  br         IL_00e6

      IL_0078:  ldstr      "ReadyState$1"
      IL_007d:  stloc.1
      IL_007e:  br         IL_00e6

      IL_0083:  ldstr      "ReadyState$2"
      IL_0088:  stloc.1
      IL_0089:  br         IL_00e6

      IL_008e:  ldstr      "ReadyState$3"
      IL_0093:  stloc.1
      IL_0094:  br         IL_00e6

      IL_0099:  ldstr      "ReadyState$4"
      IL_009e:  stloc.1
      IL_009f:  br         IL_00e6

      IL_00a4:  ldstr      "ReadyState$5"
      IL_00a9:  stloc.1
      IL_00aa:  br         IL_00e6

      IL_00af:  ldstr      "ReadyState$6"
      IL_00b4:  stloc.1
      IL_00b5:  br         IL_00e6

      IL_00ba:  ldstr      "ReadyState$7"
      IL_00bf:  stloc.1
      IL_00c0:  br         IL_00e6

      IL_00c5:  ldstr      "Start"
      IL_00ca:  stloc.1
      IL_00cb:  br         IL_00e6

      IL_00d0:  ldstr      "DoneState"
      IL_00d5:  stloc.1
      IL_00d6:  br         IL_00e6

      IL_00db:  ldstr      "<protocol terminated>"
      IL_00e0:  stloc.1
      IL_00e1:  br         IL_00e6

      IL_00e6:  ldloc.1
      IL_00e7:  stloc.2
      IL_00e8:  ldloc.1
      IL_00e9:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvNotFound() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NotFound when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype NetStack.Contracts.DNSContract/NotFound NetStack.Contracts.DNSContract/Imp::NotFoundPod0
      IL_0095:  initobj    NetStack.Contracts.DNSContract/NotFound
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv NotFound in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvNotFound

    .method public instance void  RecvAddressList([out] uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& addresses) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       209 (0xd1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ba

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AddressList when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype NetStack.Contracts.DNSContract/AddressList NetStack.Contracts.DNSContract/Imp::AddressListPod0
      IL_008d:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype NetStack.Contracts.DNSContract/AddressList NetStack.Contracts.DNSContract/Imp::AddressListPod0
      IL_00a2:  initobj    NetStack.Contracts.DNSContract/AddressList
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.s   12
      IL_00b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b5:  br         IL_00d0

      IL_00ba:  ldstr      "can't recv AddressList in state "
      IL_00bf:  ldarg.0
      IL_00c0:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_00c5:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00ca:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00cf:  throw

      IL_00d0:  ret
    } // end of method Imp::RecvAddressList

    .method public instance void  RecvDNSResults([out] uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& addresses,
                                                 [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& names) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       221 (0xdd)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00c6

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv DNSResults when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype NetStack.Contracts.DNSContract/DNSResults NetStack.Contracts.DNSContract/Imp::DNSResultsPod0
      IL_008d:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype NetStack.Contracts.DNSContract/DNSResults NetStack.Contracts.DNSContract/Imp::DNSResultsPod0
      IL_009a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_009f:  stind.i
      IL_00a0:  ldarg.0
      IL_00a1:  ldc.i4.0
      IL_00a2:  volatile.
      IL_00a4:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype NetStack.Contracts.DNSContract/DNSResults NetStack.Contracts.DNSContract/Imp::DNSResultsPod0
      IL_00af:  initobj    NetStack.Contracts.DNSContract/DNSResults
      IL_00b5:  ldarg.0
      IL_00b6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bb:  ldc.i4.5
      IL_00bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c1:  br         IL_00dc

      IL_00c6:  ldstr      "can't recv DNSResults in state "
      IL_00cb:  ldarg.0
      IL_00cc:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_00d1:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d6:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00db:  throw

      IL_00dc:  ret
    } // end of method Imp::RecvDNSResults

    .method public instance void  RecvIsValid([out] bool& valid) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       213 (0xd5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00be

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv IsValid when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype NetStack.Contracts.DNSContract/IsValid NetStack.Contracts.DNSContract/Imp::IsValidPod0
      IL_008d:  ldfld      bool NetStack.Contracts.DNSContract/IsValid::valid
      IL_0092:  stobj      [kernel]System.Boolean
      IL_0097:  ldarg.0
      IL_0098:  ldc.i4.0
      IL_0099:  volatile.
      IL_009b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype NetStack.Contracts.DNSContract/IsValid NetStack.Contracts.DNSContract/Imp::IsValidPod0
      IL_00a6:  initobj    NetStack.Contracts.DNSContract/IsValid
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b2:  ldc.i4.s   12
      IL_00b4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b9:  br         IL_00d4

      IL_00be:  ldstr      "can't recv IsValid in state "
      IL_00c3:  ldarg.0
      IL_00c4:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_00c9:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00ce:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d3:  throw

      IL_00d4:  ret
    } // end of method Imp::RecvIsValid

    .method public instance void  RecvAddress([out] uint32& address) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       209 (0xd1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ba

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Address when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype NetStack.Contracts.DNSContract/Address NetStack.Contracts.DNSContract/Imp::AddressPod0
      IL_008d:  ldfld      uint32 NetStack.Contracts.DNSContract/Address::address
      IL_0092:  stind.i4
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype NetStack.Contracts.DNSContract/Address NetStack.Contracts.DNSContract/Imp::AddressPod0
      IL_00a2:  initobj    NetStack.Contracts.DNSContract/Address
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.s   12
      IL_00b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b5:  br         IL_00d0

      IL_00ba:  ldstr      "can't recv Address in state "
      IL_00bf:  ldarg.0
      IL_00c0:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_00c5:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00ca:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00cf:  throw

      IL_00d0:  ret
    } // end of method Imp::RecvAddress

    .method public instance void  RecvAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       524 (0x20c)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  beq        IL_00be

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_0158

      IL_0024:  br         IL_01f5

      IL_0029:  ldc.i4.0
      IL_002a:  stloc.1
      IL_002b:  ldarg.0
      IL_002c:  volatile.
      IL_002e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0033:  stloc.2
      IL_0034:  ldloc.2
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldarg.0
      IL_003b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  volatile.
      IL_0044:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  brfalse    IL_006c

      IL_0053:  ldloc.1
      IL_0054:  brfalse    IL_0064

      IL_0059:  ldstr      "Peer is closed"
      IL_005e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0063:  throw

      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_006a:  br.s       IL_0029

      IL_006c:  ldarg.0
      IL_006d:  ldc.i4.8
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0073:  ldloc.2
      IL_0074:  ldc.i4.8
      IL_0075:  beq        IL_0097

      IL_007a:  ldstr      "can't recv Ack when next message has tag "
      IL_007f:  ldarg.0
      IL_0080:  volatile.
      IL_0082:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0087:  box        [kernel]System.Int32
      IL_008c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0091:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0096:  throw

      IL_0097:  ldarg.0
      IL_0098:  ldc.i4.0
      IL_0099:  volatile.
      IL_009b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype NetStack.Contracts.DNSContract/Ack NetStack.Contracts.DNSContract/Imp::AckPod0
      IL_00a6:  initobj    NetStack.Contracts.DNSContract/Ack
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b2:  ldc.i4.s   12
      IL_00b4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b9:  br         IL_020b

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.3
      IL_00c0:  ldarg.0
      IL_00c1:  volatile.
      IL_00c3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_00c8:  stloc.s    V_4
      IL_00ca:  ldloc.s    V_4
      IL_00cc:  brtrue     IL_00e2

      IL_00d1:  ldarg.0
      IL_00d2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d7:  stloc.3
      IL_00d8:  ldarg.0
      IL_00d9:  volatile.
      IL_00db:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_00e0:  stloc.s    V_4
      IL_00e2:  ldloc.s    V_4
      IL_00e4:  ldc.i4.0
      IL_00e5:  ceq
      IL_00e7:  brfalse    IL_0105

      IL_00ec:  ldloc.3
      IL_00ed:  brfalse    IL_00fd

      IL_00f2:  ldstr      "Peer is closed"
      IL_00f7:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00fc:  throw

      IL_00fd:  ldarg.0
      IL_00fe:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0103:  br.s       IL_00be

      IL_0105:  ldarg.0
      IL_0106:  ldc.i4.8
      IL_0107:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_010c:  ldloc.s    V_4
      IL_010e:  ldc.i4.8
      IL_010f:  beq        IL_0131

      IL_0114:  ldstr      "can't recv Ack when next message has tag "
      IL_0119:  ldarg.0
      IL_011a:  volatile.
      IL_011c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0121:  box        [kernel]System.Int32
      IL_0126:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_012b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0130:  throw

      IL_0131:  ldarg.0
      IL_0132:  ldc.i4.0
      IL_0133:  volatile.
      IL_0135:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_013a:  ldarg.0
      IL_013b:  ldflda     valuetype NetStack.Contracts.DNSContract/Ack NetStack.Contracts.DNSContract/Imp::AckPod0
      IL_0140:  initobj    NetStack.Contracts.DNSContract/Ack
      IL_0146:  ldarg.0
      IL_0147:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_014c:  ldc.i4.s   12
      IL_014e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0153:  br         IL_020b

      IL_0158:  ldc.i4.0
      IL_0159:  stloc.s    V_5
      IL_015b:  ldarg.0
      IL_015c:  volatile.
      IL_015e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0163:  stloc.s    V_6
      IL_0165:  ldloc.s    V_6
      IL_0167:  brtrue     IL_017e

      IL_016c:  ldarg.0
      IL_016d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0172:  stloc.s    V_5
      IL_0174:  ldarg.0
      IL_0175:  volatile.
      IL_0177:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_017c:  stloc.s    V_6
      IL_017e:  ldloc.s    V_6
      IL_0180:  ldc.i4.0
      IL_0181:  ceq
      IL_0183:  brfalse    IL_01a2

      IL_0188:  ldloc.s    V_5
      IL_018a:  brfalse    IL_019a

      IL_018f:  ldstr      "Peer is closed"
      IL_0194:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0199:  throw

      IL_019a:  ldarg.0
      IL_019b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01a0:  br.s       IL_0158

      IL_01a2:  ldarg.0
      IL_01a3:  ldc.i4.8
      IL_01a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01a9:  ldloc.s    V_6
      IL_01ab:  ldc.i4.8
      IL_01ac:  beq        IL_01ce

      IL_01b1:  ldstr      "can't recv Ack when next message has tag "
      IL_01b6:  ldarg.0
      IL_01b7:  volatile.
      IL_01b9:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_01be:  box        [kernel]System.Int32
      IL_01c3:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01c8:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01cd:  throw

      IL_01ce:  ldarg.0
      IL_01cf:  ldc.i4.0
      IL_01d0:  volatile.
      IL_01d2:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_01d7:  ldarg.0
      IL_01d8:  ldflda     valuetype NetStack.Contracts.DNSContract/Ack NetStack.Contracts.DNSContract/Imp::AckPod0
      IL_01dd:  initobj    NetStack.Contracts.DNSContract/Ack
      IL_01e3:  ldarg.0
      IL_01e4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01e9:  ldc.i4.s   12
      IL_01eb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01f0:  br         IL_020b

      IL_01f5:  ldstr      "can't recv Ack in state "
      IL_01fa:  ldarg.0
      IL_01fb:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_0200:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0205:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_020a:  throw

      IL_020b:  ret
    } // end of method Imp::RecvAck

    .method public instance void  SendAddNameServer(uint32 address) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverAddNameServer0$PST060000AB(uint32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallDeliverAddNameServer0$PST060000AC(uint32,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   11
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send AddNameServer in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendAddNameServer

    .method public instance void  SendRemoveNameServer(uint32 address) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverRemoveNameServer0$PST060000AD(uint32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallDeliverRemoveNameServer0$PST060000AE(uint32,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   10
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send RemoveNameServer in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendRemoveNameServer

    .method public instance void  SendRotateNameServers() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0038:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverRotateNameServers0$PST060000AF()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallDeliverRotateNameServers0$PST060000B0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   9
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send RotateNameServers in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendRotateNameServers

    .method public instance void  SendGetNameServers() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0038:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverGetNameServers0$PST060000B1()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallDeliverGetNameServers0$PST060000B2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.7
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send GetNameServers in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_0070:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendGetNameServers

    .method public instance void  SendGetCurrentNameServer() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0038:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverGetCurrentNameServer0$PST060000B3()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallDeliverGetCurrentNameServer0$PST060000B4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.8
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send GetCurrentNameServer in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_0070:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendGetCurrentNameServer

    .method public instance void  SendIsValidName(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       145 (0x91)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_007a

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0056

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_5
      IL_0037:  brfalse    IL_0045

      IL_003c:  ldloc.s    V_4
      IL_003e:  ldloc.s    V_5
      IL_0040:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0045:  ldloc.3
      IL_0046:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_004b:  ldarg.1
      IL_004c:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverIsValidName0$PST060000B5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0051:  br         IL_0063

      IL_0056:  ldloc.3
      IL_0057:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_005c:  ldarg.1
      IL_005d:  ldarg.0
      IL_005e:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallDeliverIsValidName0$PST060000B6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0063:  ldarg.0
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0069:  ldarg.0
      IL_006a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006f:  ldc.i4.4
      IL_0070:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0075:  br         IL_0090

      IL_007a:  ldstr      "can't send IsValidName in state "
      IL_007f:  ldarg.0
      IL_0080:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_0085:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_008a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_008f:  throw

      IL_0090:  ret
    } // end of method Imp::SendIsValidName

    .method public instance void  SendResolve(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) host) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       145 (0x91)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_007a

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0056

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_5
      IL_0037:  brfalse    IL_0045

      IL_003c:  ldloc.s    V_4
      IL_003e:  ldloc.s    V_5
      IL_0040:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0045:  ldloc.3
      IL_0046:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_004b:  ldarg.1
      IL_004c:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverResolve0$PST060000B7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0051:  br         IL_0063

      IL_0056:  ldloc.3
      IL_0057:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_005c:  ldarg.1
      IL_005d:  ldarg.0
      IL_005e:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallDeliverResolve0$PST060000B8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0063:  ldarg.0
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0069:  ldarg.0
      IL_006a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006f:  ldc.i4.6
      IL_0070:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0075:  br         IL_0090

      IL_007a:  ldstr      "can't send Resolve in state "
      IL_007f:  ldarg.0
      IL_0080:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_0085:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_008a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_008f:  throw

      IL_0090:  ret
    } // end of method Imp::SendResolve

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   16
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   16
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Ready when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0078:  box        [kernel]System.Int32
      IL_007d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype NetStack.Contracts.DNSContract/Ready NetStack.Contracts.DNSContract/Imp::ReadyPod0
      IL_0097:  initobj    NetStack.Contracts.DNSContract/Ready
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   12
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv Ready in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_00ba:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvReady

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.DNSContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.DNSContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.DNSContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.DNSContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.DNSContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.DNSContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.DNSContract/Imp
      IL_0022:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       741 (0x2e5)
      .maxstack  12
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               int32 V_21)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0056

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_0096

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.7
      IL_001e:  beq        IL_00de

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.8
      IL_0025:  beq        IL_0126

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.s   9
      IL_002d:  beq        IL_016e

      IL_0032:  ldloc.1
      IL_0033:  ldc.i4.s   10
      IL_0035:  beq        IL_01b6

      IL_003a:  ldloc.1
      IL_003b:  ldc.i4.s   11
      IL_003d:  beq        IL_01fe

      IL_0042:  ldloc.1
      IL_0043:  ldc.i4.s   12
      IL_0045:  beq        IL_0246

      IL_004a:  ldloc.1
      IL_004b:  ldc.i4.3
      IL_004c:  beq        IL_028e

      IL_0051:  br         IL_02d6

      IL_0056:  ldc.i4.0
      IL_0057:  stloc.2
      IL_0058:  ldarg.0
      IL_0059:  volatile.
      IL_005b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  brtrue     IL_0077

      IL_0067:  ldarg.0
      IL_0068:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_006d:  stloc.2
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0076:  stloc.3
      IL_0077:  ldloc.3
      IL_0078:  ldc.i4.0
      IL_0079:  ceq
      IL_007b:  brfalse    IL_008e

      IL_0080:  ldloc.2
      IL_0081:  brfalse    IL_008e

      IL_0086:  ldc.i4.m1
      IL_0087:  stloc.s    V_4
      IL_0089:  br         IL_02de

      IL_008e:  ldloc.3
      IL_008f:  stloc.s    V_4
      IL_0091:  br         IL_02de

      IL_0096:  ldc.i4.0
      IL_0097:  stloc.s    V_5
      IL_0099:  ldarg.0
      IL_009a:  volatile.
      IL_009c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_00a1:  stloc.s    V_6
      IL_00a3:  ldloc.s    V_6
      IL_00a5:  brtrue     IL_00bc

      IL_00aa:  ldarg.0
      IL_00ab:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00b0:  stloc.s    V_5
      IL_00b2:  ldarg.0
      IL_00b3:  volatile.
      IL_00b5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_00ba:  stloc.s    V_6
      IL_00bc:  ldloc.s    V_6
      IL_00be:  ldc.i4.0
      IL_00bf:  ceq
      IL_00c1:  brfalse    IL_00d5

      IL_00c6:  ldloc.s    V_5
      IL_00c8:  brfalse    IL_00d5

      IL_00cd:  ldc.i4.m1
      IL_00ce:  stloc.s    V_4
      IL_00d0:  br         IL_02de

      IL_00d5:  ldloc.s    V_6
      IL_00d7:  stloc.s    V_4
      IL_00d9:  br         IL_02de

      IL_00de:  ldc.i4.0
      IL_00df:  stloc.s    V_7
      IL_00e1:  ldarg.0
      IL_00e2:  volatile.
      IL_00e4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_00e9:  stloc.s    V_8
      IL_00eb:  ldloc.s    V_8
      IL_00ed:  brtrue     IL_0104

      IL_00f2:  ldarg.0
      IL_00f3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00f8:  stloc.s    V_7
      IL_00fa:  ldarg.0
      IL_00fb:  volatile.
      IL_00fd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0102:  stloc.s    V_8
      IL_0104:  ldloc.s    V_8
      IL_0106:  ldc.i4.0
      IL_0107:  ceq
      IL_0109:  brfalse    IL_011d

      IL_010e:  ldloc.s    V_7
      IL_0110:  brfalse    IL_011d

      IL_0115:  ldc.i4.m1
      IL_0116:  stloc.s    V_4
      IL_0118:  br         IL_02de

      IL_011d:  ldloc.s    V_8
      IL_011f:  stloc.s    V_4
      IL_0121:  br         IL_02de

      IL_0126:  ldc.i4.0
      IL_0127:  stloc.s    V_9
      IL_0129:  ldarg.0
      IL_012a:  volatile.
      IL_012c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0131:  stloc.s    V_10
      IL_0133:  ldloc.s    V_10
      IL_0135:  brtrue     IL_014c

      IL_013a:  ldarg.0
      IL_013b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0140:  stloc.s    V_9
      IL_0142:  ldarg.0
      IL_0143:  volatile.
      IL_0145:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_014a:  stloc.s    V_10
      IL_014c:  ldloc.s    V_10
      IL_014e:  ldc.i4.0
      IL_014f:  ceq
      IL_0151:  brfalse    IL_0165

      IL_0156:  ldloc.s    V_9
      IL_0158:  brfalse    IL_0165

      IL_015d:  ldc.i4.m1
      IL_015e:  stloc.s    V_4
      IL_0160:  br         IL_02de

      IL_0165:  ldloc.s    V_10
      IL_0167:  stloc.s    V_4
      IL_0169:  br         IL_02de

      IL_016e:  ldc.i4.0
      IL_016f:  stloc.s    V_11
      IL_0171:  ldarg.0
      IL_0172:  volatile.
      IL_0174:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0179:  stloc.s    V_12
      IL_017b:  ldloc.s    V_12
      IL_017d:  brtrue     IL_0194

      IL_0182:  ldarg.0
      IL_0183:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0188:  stloc.s    V_11
      IL_018a:  ldarg.0
      IL_018b:  volatile.
      IL_018d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0192:  stloc.s    V_12
      IL_0194:  ldloc.s    V_12
      IL_0196:  ldc.i4.0
      IL_0197:  ceq
      IL_0199:  brfalse    IL_01ad

      IL_019e:  ldloc.s    V_11
      IL_01a0:  brfalse    IL_01ad

      IL_01a5:  ldc.i4.m1
      IL_01a6:  stloc.s    V_4
      IL_01a8:  br         IL_02de

      IL_01ad:  ldloc.s    V_12
      IL_01af:  stloc.s    V_4
      IL_01b1:  br         IL_02de

      IL_01b6:  ldc.i4.0
      IL_01b7:  stloc.s    V_13
      IL_01b9:  ldarg.0
      IL_01ba:  volatile.
      IL_01bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_01c1:  stloc.s    V_14
      IL_01c3:  ldloc.s    V_14
      IL_01c5:  brtrue     IL_01dc

      IL_01ca:  ldarg.0
      IL_01cb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01d0:  stloc.s    V_13
      IL_01d2:  ldarg.0
      IL_01d3:  volatile.
      IL_01d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_01da:  stloc.s    V_14
      IL_01dc:  ldloc.s    V_14
      IL_01de:  ldc.i4.0
      IL_01df:  ceq
      IL_01e1:  brfalse    IL_01f5

      IL_01e6:  ldloc.s    V_13
      IL_01e8:  brfalse    IL_01f5

      IL_01ed:  ldc.i4.m1
      IL_01ee:  stloc.s    V_4
      IL_01f0:  br         IL_02de

      IL_01f5:  ldloc.s    V_14
      IL_01f7:  stloc.s    V_4
      IL_01f9:  br         IL_02de

      IL_01fe:  ldc.i4.0
      IL_01ff:  stloc.s    V_15
      IL_0201:  ldarg.0
      IL_0202:  volatile.
      IL_0204:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0209:  stloc.s    V_16
      IL_020b:  ldloc.s    V_16
      IL_020d:  brtrue     IL_0224

      IL_0212:  ldarg.0
      IL_0213:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0218:  stloc.s    V_15
      IL_021a:  ldarg.0
      IL_021b:  volatile.
      IL_021d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0222:  stloc.s    V_16
      IL_0224:  ldloc.s    V_16
      IL_0226:  ldc.i4.0
      IL_0227:  ceq
      IL_0229:  brfalse    IL_023d

      IL_022e:  ldloc.s    V_15
      IL_0230:  brfalse    IL_023d

      IL_0235:  ldc.i4.m1
      IL_0236:  stloc.s    V_4
      IL_0238:  br         IL_02de

      IL_023d:  ldloc.s    V_16
      IL_023f:  stloc.s    V_4
      IL_0241:  br         IL_02de

      IL_0246:  ldc.i4.0
      IL_0247:  stloc.s    V_17
      IL_0249:  ldarg.0
      IL_024a:  volatile.
      IL_024c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0251:  stloc.s    V_18
      IL_0253:  ldloc.s    V_18
      IL_0255:  brtrue     IL_026c

      IL_025a:  ldarg.0
      IL_025b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0260:  stloc.s    V_17
      IL_0262:  ldarg.0
      IL_0263:  volatile.
      IL_0265:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_026a:  stloc.s    V_18
      IL_026c:  ldloc.s    V_18
      IL_026e:  ldc.i4.0
      IL_026f:  ceq
      IL_0271:  brfalse    IL_0285

      IL_0276:  ldloc.s    V_17
      IL_0278:  brfalse    IL_0285

      IL_027d:  ldc.i4.m1
      IL_027e:  stloc.s    V_4
      IL_0280:  br         IL_02de

      IL_0285:  ldloc.s    V_18
      IL_0287:  stloc.s    V_4
      IL_0289:  br         IL_02de

      IL_028e:  ldc.i4.0
      IL_028f:  stloc.s    V_19
      IL_0291:  ldarg.0
      IL_0292:  volatile.
      IL_0294:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0299:  stloc.s    V_20
      IL_029b:  ldloc.s    V_20
      IL_029d:  brtrue     IL_02b4

      IL_02a2:  ldarg.0
      IL_02a3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02a8:  stloc.s    V_19
      IL_02aa:  ldarg.0
      IL_02ab:  volatile.
      IL_02ad:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_02b2:  stloc.s    V_20
      IL_02b4:  ldloc.s    V_20
      IL_02b6:  ldc.i4.0
      IL_02b7:  ceq
      IL_02b9:  brfalse    IL_02cd

      IL_02be:  ldloc.s    V_19
      IL_02c0:  brfalse    IL_02cd

      IL_02c5:  ldc.i4.m1
      IL_02c6:  stloc.s    V_4
      IL_02c8:  br         IL_02de

      IL_02cd:  ldloc.s    V_20
      IL_02cf:  stloc.s    V_4
      IL_02d1:  br         IL_02de

      IL_02d6:  ldc.i4.m1
      IL_02d7:  stloc.s    V_4
      IL_02d9:  br         IL_02de

      IL_02de:  ldloc.s    V_4
      IL_02e0:  stloc.s    V_21
      IL_02e2:  ldloc.s    V_4
      IL_02e4:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.DNSContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverNotFound0$PST0600007C() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNotFound0

    .method privatescope instance void  MarshallDeliverNotFound0$PST0600007D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverNotFound0$PST0600007C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.DNSContract/NotFound NetStack.Contracts.DNSContract/Imp::NotFoundPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.DNSContract/NotFound::MarshallAll(uint8*,
                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                              int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNotFound0

    .method privatescope instance void  DeliverAddressList0$PST0600007E(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) addresses) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.DNSContract/AddressList NetStack.Contracts.DNSContract/Imp::AddressListPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.4
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.4
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAddressList0

    .method privatescope instance void  MarshallDeliverAddressList0$PST0600007F(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) addresses,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverAddressList0$PST0600007E(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.DNSContract/AddressList NetStack.Contracts.DNSContract/Imp::AddressListPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.DNSContract/AddressList::MarshallAll(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAddressList0

    .method privatescope instance void  DeliverDNSResults0$PST06000080(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) addresses,
                                                                       char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) names) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.DNSContract/DNSResults NetStack.Contracts.DNSContract/Imp::DNSResultsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.DNSContract/DNSResults NetStack.Contracts.DNSContract/Imp::DNSResultsPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.5
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.5
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0028:  ret
    } // end of method Imp::DeliverDNSResults0

    .method privatescope instance void  MarshallDeliverDNSResults0$PST06000081(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) addresses,
                                                                               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) names,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverDNSResults0$PST06000080(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                            char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype NetStack.Contracts.DNSContract/DNSResults NetStack.Contracts.DNSContract/Imp::DNSResultsPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0016:  call       instance void NetStack.Contracts.DNSContract/DNSResults::MarshallAll(uint8*,
                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverDNSResults0

    .method privatescope instance void  DeliverIsValid0$PST06000082(bool valid) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.DNSContract/IsValid NetStack.Contracts.DNSContract/Imp::IsValidPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      bool NetStack.Contracts.DNSContract/IsValid::valid
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.6
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.6
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverIsValid0

    .method privatescope instance void  MarshallDeliverIsValid0$PST06000083(bool valid,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverIsValid0$PST06000082(bool)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.DNSContract/IsValid NetStack.Contracts.DNSContract/Imp::IsValidPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.DNSContract/IsValid::MarshallAll(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverIsValid0

    .method privatescope instance void  DeliverAddress0$PST06000084(uint32 address) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.DNSContract/Address NetStack.Contracts.DNSContract/Imp::AddressPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.DNSContract/Address::address
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.7
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.7
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAddress0

    .method privatescope instance void  MarshallDeliverAddress0$PST06000085(uint32 address,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverAddress0$PST06000084(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.DNSContract/Address NetStack.Contracts.DNSContract/Imp::AddressPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.DNSContract/Address::MarshallAll(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAddress0

    .method privatescope instance void  DeliverAck0$PST06000086() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAck0

    .method privatescope instance void  MarshallDeliverAck0$PST06000087(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverAck0$PST06000086()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.DNSContract/Ack NetStack.Contracts.DNSContract/Imp::AckPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.DNSContract/Ack::MarshallAll(uint8*,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                         int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAck0

    .method privatescope instance void  DeliverReady0$PST06000088() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   16
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   16
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST06000089(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverReady0$PST06000088()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.DNSContract/Ready NetStack.Contracts.DNSContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.DNSContract/Ready::MarshallAll(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverContractNotSupported0$PST0600008A() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST0600008B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverContractNotSupported0$PST0600008A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.DNSContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.DNSContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype NetStack.Contracts.DNSContract/AddNameServer AddNameServerPod0
    .field family valuetype NetStack.Contracts.DNSContract/RemoveNameServer RemoveNameServerPod0
    .field family valuetype NetStack.Contracts.DNSContract/RotateNameServers RotateNameServersPod0
    .field family valuetype NetStack.Contracts.DNSContract/GetNameServers GetNameServersPod0
    .field family valuetype NetStack.Contracts.DNSContract/GetCurrentNameServer GetCurrentNameServerPod0
    .field family valuetype NetStack.Contracts.DNSContract/IsValidName IsValidNamePod0
    .field family valuetype NetStack.Contracts.DNSContract/Resolve ResolvePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.DNSContract::CanonicalState$PST06000005(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.DNSContract::CanonicalState$PST06000005(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       234 (0xea)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0062

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   11
      IL_0017:  beq        IL_006d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   10
      IL_001f:  beq        IL_0078

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   9
      IL_0027:  beq        IL_0083

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.8
      IL_002e:  beq        IL_008e

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.7
      IL_0035:  beq        IL_0099

      IL_003a:  ldloc.0
      IL_003b:  ldc.i4.6
      IL_003c:  beq        IL_00a4

      IL_0041:  ldloc.0
      IL_0042:  ldc.i4.5
      IL_0043:  beq        IL_00af

      IL_0048:  ldloc.0
      IL_0049:  ldc.i4.4
      IL_004a:  beq        IL_00ba

      IL_004f:  ldloc.0
      IL_0050:  ldc.i4.3
      IL_0051:  beq        IL_00c5

      IL_0056:  ldloc.0
      IL_0057:  ldc.i4.2
      IL_0058:  beq        IL_00d0

      IL_005d:  br         IL_00db

      IL_0062:  ldstr      "ReadyState"
      IL_0067:  stloc.1
      IL_0068:  br         IL_00e6

      IL_006d:  ldstr      "ReadyState$0"
      IL_0072:  stloc.1
      IL_0073:  br         IL_00e6

      IL_0078:  ldstr      "ReadyState$1"
      IL_007d:  stloc.1
      IL_007e:  br         IL_00e6

      IL_0083:  ldstr      "ReadyState$2"
      IL_0088:  stloc.1
      IL_0089:  br         IL_00e6

      IL_008e:  ldstr      "ReadyState$3"
      IL_0093:  stloc.1
      IL_0094:  br         IL_00e6

      IL_0099:  ldstr      "ReadyState$4"
      IL_009e:  stloc.1
      IL_009f:  br         IL_00e6

      IL_00a4:  ldstr      "ReadyState$5"
      IL_00a9:  stloc.1
      IL_00aa:  br         IL_00e6

      IL_00af:  ldstr      "ReadyState$6"
      IL_00b4:  stloc.1
      IL_00b5:  br         IL_00e6

      IL_00ba:  ldstr      "ReadyState$7"
      IL_00bf:  stloc.1
      IL_00c0:  br         IL_00e6

      IL_00c5:  ldstr      "Start"
      IL_00ca:  stloc.1
      IL_00cb:  br         IL_00e6

      IL_00d0:  ldstr      "DoneState"
      IL_00d5:  stloc.1
      IL_00d6:  br         IL_00e6

      IL_00db:  ldstr      "<protocol terminated>"
      IL_00e0:  stloc.1
      IL_00e1:  br         IL_00e6

      IL_00e6:  ldloc.1
      IL_00e7:  stloc.2
      IL_00e8:  ldloc.1
      IL_00e9:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendNotFound() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverNotFound0$PST0600007C()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverNotFound0$PST0600007D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NotFound in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNotFound

    .method public instance void  SendAddressList(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) addresses) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       145 (0x91)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_007a

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0055

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_5
      IL_0036:  brfalse    IL_0044

      IL_003b:  ldloc.s    V_4
      IL_003d:  ldloc.s    V_5
      IL_003f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_004a:  ldarg.1
      IL_004b:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverAddressList0$PST0600007E(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0050:  br         IL_0062

      IL_0055:  ldloc.3
      IL_0056:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_005b:  ldarg.1
      IL_005c:  ldarg.0
      IL_005d:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverAddressList0$PST0600007F(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0062:  ldarg.0
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0068:  ldarg.0
      IL_0069:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006e:  ldc.i4.s   12
      IL_0070:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0075:  br         IL_0090

      IL_007a:  ldstr      "can't send AddressList in state "
      IL_007f:  ldarg.0
      IL_0080:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_0085:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_008a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_008f:  throw

      IL_0090:  ret
    } // end of method Exp::SendAddressList

    .method public instance void  SendDNSResults(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) addresses,
                                                 char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) names) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       213 (0xd5)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_6,
               int32 V_7,
               int32 V_8,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00be

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0099

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_5
      IL_0036:  brfalse    IL_0044

      IL_003b:  ldloc.s    V_4
      IL_003d:  ldloc.s    V_5
      IL_003f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0044:  ldarg.2
      IL_0045:  stloc.s    V_6
      IL_0047:  ldloc.s    V_6
      IL_0049:  brfalse    IL_0087

      IL_004e:  ldloc.s    V_6
      IL_0050:  ldlen
      IL_0051:  stloc.s    V_7
      IL_0053:  ldc.i4.0
      IL_0054:  stloc.s    V_8
      IL_0056:  ldloc.s    V_8
      IL_0058:  ldloc.s    V_7
      IL_005a:  bge        IL_007e

      IL_005f:  ldloc.s    V_6
      IL_0061:  ldloc.s    V_8
      IL_0063:  ldelem.i
      IL_0064:  stloc.s    V_9
      IL_0066:  ldloc.s    V_9
      IL_0068:  brfalse    IL_0076

      IL_006d:  ldloc.s    V_4
      IL_006f:  ldloc.s    V_9
      IL_0071:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0076:  ldloc.s    V_8
      IL_0078:  ldc.i4.1
      IL_0079:  add
      IL_007a:  stloc.s    V_8
      IL_007c:  br.s       IL_0056

      IL_007e:  ldloc.s    V_4
      IL_0080:  ldloc.s    V_6
      IL_0082:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0087:  ldloc.3
      IL_0088:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_008d:  ldarg.1
      IL_008e:  ldarg.2
      IL_008f:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverDNSResults0$PST06000080(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                            char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0094:  br         IL_00a7

      IL_0099:  ldloc.3
      IL_009a:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_009f:  ldarg.1
      IL_00a0:  ldarg.2
      IL_00a1:  ldarg.0
      IL_00a2:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverDNSResults0$PST06000081(uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a7:  ldarg.0
      IL_00a8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b3:  ldc.i4.5
      IL_00b4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b9:  br         IL_00d4

      IL_00be:  ldstr      "can't send DNSResults in state "
      IL_00c3:  ldarg.0
      IL_00c4:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_00c9:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00ce:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d3:  throw

      IL_00d4:  ret
    } // end of method Exp::SendDNSResults

    .method public instance void  SendIsValid(bool valid) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0067

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverIsValid0$PST06000082(bool)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverIsValid0$PST06000083(bool,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.s   12
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send IsValid in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_0072:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Exp::SendIsValid

    .method public instance void  SendAddress(uint32 address) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0067

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverAddress0$PST06000084(uint32)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverAddress0$PST06000085(uint32,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.s   12
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send Address in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_0072:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Exp::SendAddress

    .method public instance void  SendAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       309 (0x135)
      .maxstack  20
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_00ca

      IL_0024:  br         IL_011e

      IL_0029:  ldarg.0
      IL_002a:  ldloca.s   V_1
      IL_002c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0031:  stloc.2
      IL_0032:  ldloc.2
      IL_0033:  stloc.3
      IL_0034:  ldloc.3
      IL_0035:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_003a:  stloc.s    V_4
      IL_003c:  ldloc.1
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0048:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverAck0$PST06000086()
      IL_004d:  br         IL_005e

      IL_0052:  ldloc.3
      IL_0053:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0058:  ldarg.0
      IL_0059:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverAck0$PST06000087(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005e:  ldarg.0
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006a:  ldc.i4.s   12
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_0134

      IL_0076:  ldarg.0
      IL_0077:  ldloca.s   V_5
      IL_0079:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_007e:  stloc.s    V_6
      IL_0080:  ldloc.s    V_6
      IL_0082:  stloc.s    V_7
      IL_0084:  ldloc.s    V_7
      IL_0086:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_008b:  stloc.s    V_8
      IL_008d:  ldloc.s    V_5
      IL_008f:  brtrue     IL_00a5

      IL_0094:  ldloc.s    V_7
      IL_0096:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_009b:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverAck0$PST06000086()
      IL_00a0:  br         IL_00b2

      IL_00a5:  ldloc.s    V_7
      IL_00a7:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_00ac:  ldarg.0
      IL_00ad:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverAck0$PST06000087(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.s   12
      IL_00c0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c5:  br         IL_0134

      IL_00ca:  ldarg.0
      IL_00cb:  ldloca.s   V_9
      IL_00cd:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d2:  stloc.s    V_10
      IL_00d4:  ldloc.s    V_10
      IL_00d6:  stloc.s    V_11
      IL_00d8:  ldloc.s    V_11
      IL_00da:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_00df:  stloc.s    V_12
      IL_00e1:  ldloc.s    V_9
      IL_00e3:  brtrue     IL_00f9

      IL_00e8:  ldloc.s    V_11
      IL_00ea:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_00ef:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverAck0$PST06000086()
      IL_00f4:  br         IL_0106

      IL_00f9:  ldloc.s    V_11
      IL_00fb:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0100:  ldarg.0
      IL_0101:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverAck0$PST06000087(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0106:  ldarg.0
      IL_0107:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_010c:  ldarg.0
      IL_010d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0112:  ldc.i4.s   12
      IL_0114:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0119:  br         IL_0134

      IL_011e:  ldstr      "can't send Ack in state "
      IL_0123:  ldarg.0
      IL_0124:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_0129:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_012e:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0133:  throw

      IL_0134:  ret
    } // end of method Exp::SendAck

    .method public instance void  RecvAddNameServer([out] uint32& address) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AddNameServer when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.DNSContract/AddNameServer NetStack.Contracts.DNSContract/Exp::AddNameServerPod0
      IL_0090:  ldfld      uint32 NetStack.Contracts.DNSContract/AddNameServer::address
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.DNSContract/AddNameServer NetStack.Contracts.DNSContract/Exp::AddNameServerPod0
      IL_00a5:  initobj    NetStack.Contracts.DNSContract/AddNameServer
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   11
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv AddNameServer in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvAddNameServer

    .method public instance void  RecvRemoveNameServer([out] uint32& address) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   10
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   10
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv RemoveNameServer when next message has "
      + "tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.DNSContract/RemoveNameServer NetStack.Contracts.DNSContract/Exp::RemoveNameServerPod0
      IL_0090:  ldfld      uint32 NetStack.Contracts.DNSContract/RemoveNameServer::address
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.DNSContract/RemoveNameServer NetStack.Contracts.DNSContract/Exp::RemoveNameServerPod0
      IL_00a5:  initobj    NetStack.Contracts.DNSContract/RemoveNameServer
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   10
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv RemoveNameServer in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvRemoveNameServer

    .method public instance void  RecvRotateNameServers() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   11
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv RotateNameServers when next message has"
      + " tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.DNSContract/RotateNameServers NetStack.Contracts.DNSContract/Exp::RotateNameServersPod0
      IL_0098:  initobj    NetStack.Contracts.DNSContract/RotateNameServers
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   9
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv RotateNameServers in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_00bb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvRotateNameServers

    .method public instance void  RecvGetNameServers() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetNameServers when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.DNSContract/GetNameServers NetStack.Contracts.DNSContract/Exp::GetNameServersPod0
      IL_0098:  initobj    NetStack.Contracts.DNSContract/GetNameServers
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.7
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv GetNameServers in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_00ba:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvGetNameServers

    .method public instance void  RecvGetCurrentNameServer() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetCurrentNameServer when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.DNSContract/GetCurrentNameServer NetStack.Contracts.DNSContract/Exp::GetCurrentNameServerPod0
      IL_0098:  initobj    NetStack.Contracts.DNSContract/GetCurrentNameServer
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.8
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv GetCurrentNameServer in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_00ba:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvGetCurrentNameServer

    .method public instance void  RecvIsValidName([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   14
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv IsValidName when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.DNSContract/IsValidName NetStack.Contracts.DNSContract/Exp::IsValidNamePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.DNSContract/IsValidName NetStack.Contracts.DNSContract/Exp::IsValidNamePod0
      IL_00a5:  initobj    NetStack.Contracts.DNSContract/IsValidName
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.4
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv IsValidName in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_00c7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Exp::RecvIsValidName

    .method public instance void  RecvResolve([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& host) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   15
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   15
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Resolve when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.DNSContract/Resolve NetStack.Contracts.DNSContract/Exp::ResolvePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.DNSContract/Resolve NetStack.Contracts.DNSContract/Exp::ResolvePod0
      IL_00a5:  initobj    NetStack.Contracts.DNSContract/Resolve
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.6
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv Resolve in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_00c7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Exp::RecvResolve

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverReady0$PST06000088()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverReady0$PST06000089(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   12
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Ready in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_0070:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendReady

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.DNSContract/Imp::DeliverContractNotSupported0$PST0600008A()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.DNSContract/Imp::MarshallDeliverContractNotSupported0$PST0600008B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.DNSContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.DNSContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.DNSContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.DNSContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.DNSContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.DNSContract/Exp
      IL_0022:  call       instance void NetStack.Contracts.DNSContract/Exp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       741 (0x2e5)
      .maxstack  12
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               int32 V_21)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0056

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_0096

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.7
      IL_001e:  beq        IL_00de

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.8
      IL_0025:  beq        IL_0126

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.s   9
      IL_002d:  beq        IL_016e

      IL_0032:  ldloc.1
      IL_0033:  ldc.i4.s   10
      IL_0035:  beq        IL_01b6

      IL_003a:  ldloc.1
      IL_003b:  ldc.i4.s   11
      IL_003d:  beq        IL_01fe

      IL_0042:  ldloc.1
      IL_0043:  ldc.i4.s   12
      IL_0045:  beq        IL_0246

      IL_004a:  ldloc.1
      IL_004b:  ldc.i4.3
      IL_004c:  beq        IL_028e

      IL_0051:  br         IL_02d6

      IL_0056:  ldc.i4.0
      IL_0057:  stloc.2
      IL_0058:  ldarg.0
      IL_0059:  volatile.
      IL_005b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  brtrue     IL_0077

      IL_0067:  ldarg.0
      IL_0068:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_006d:  stloc.2
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  stloc.3
      IL_0077:  ldloc.3
      IL_0078:  ldc.i4.0
      IL_0079:  ceq
      IL_007b:  brfalse    IL_008e

      IL_0080:  ldloc.2
      IL_0081:  brfalse    IL_008e

      IL_0086:  ldc.i4.m1
      IL_0087:  stloc.s    V_4
      IL_0089:  br         IL_02de

      IL_008e:  ldloc.3
      IL_008f:  stloc.s    V_4
      IL_0091:  br         IL_02de

      IL_0096:  ldc.i4.0
      IL_0097:  stloc.s    V_5
      IL_0099:  ldarg.0
      IL_009a:  volatile.
      IL_009c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a1:  stloc.s    V_6
      IL_00a3:  ldloc.s    V_6
      IL_00a5:  brtrue     IL_00bc

      IL_00aa:  ldarg.0
      IL_00ab:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00b0:  stloc.s    V_5
      IL_00b2:  ldarg.0
      IL_00b3:  volatile.
      IL_00b5:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00ba:  stloc.s    V_6
      IL_00bc:  ldloc.s    V_6
      IL_00be:  ldc.i4.0
      IL_00bf:  ceq
      IL_00c1:  brfalse    IL_00d5

      IL_00c6:  ldloc.s    V_5
      IL_00c8:  brfalse    IL_00d5

      IL_00cd:  ldc.i4.m1
      IL_00ce:  stloc.s    V_4
      IL_00d0:  br         IL_02de

      IL_00d5:  ldloc.s    V_6
      IL_00d7:  stloc.s    V_4
      IL_00d9:  br         IL_02de

      IL_00de:  ldc.i4.0
      IL_00df:  stloc.s    V_7
      IL_00e1:  ldarg.0
      IL_00e2:  volatile.
      IL_00e4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e9:  stloc.s    V_8
      IL_00eb:  ldloc.s    V_8
      IL_00ed:  brtrue     IL_0104

      IL_00f2:  ldarg.0
      IL_00f3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00f8:  stloc.s    V_7
      IL_00fa:  ldarg.0
      IL_00fb:  volatile.
      IL_00fd:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0102:  stloc.s    V_8
      IL_0104:  ldloc.s    V_8
      IL_0106:  ldc.i4.0
      IL_0107:  ceq
      IL_0109:  brfalse    IL_011d

      IL_010e:  ldloc.s    V_7
      IL_0110:  brfalse    IL_011d

      IL_0115:  ldc.i4.m1
      IL_0116:  stloc.s    V_4
      IL_0118:  br         IL_02de

      IL_011d:  ldloc.s    V_8
      IL_011f:  stloc.s    V_4
      IL_0121:  br         IL_02de

      IL_0126:  ldc.i4.0
      IL_0127:  stloc.s    V_9
      IL_0129:  ldarg.0
      IL_012a:  volatile.
      IL_012c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0131:  stloc.s    V_10
      IL_0133:  ldloc.s    V_10
      IL_0135:  brtrue     IL_014c

      IL_013a:  ldarg.0
      IL_013b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0140:  stloc.s    V_9
      IL_0142:  ldarg.0
      IL_0143:  volatile.
      IL_0145:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_014a:  stloc.s    V_10
      IL_014c:  ldloc.s    V_10
      IL_014e:  ldc.i4.0
      IL_014f:  ceq
      IL_0151:  brfalse    IL_0165

      IL_0156:  ldloc.s    V_9
      IL_0158:  brfalse    IL_0165

      IL_015d:  ldc.i4.m1
      IL_015e:  stloc.s    V_4
      IL_0160:  br         IL_02de

      IL_0165:  ldloc.s    V_10
      IL_0167:  stloc.s    V_4
      IL_0169:  br         IL_02de

      IL_016e:  ldc.i4.0
      IL_016f:  stloc.s    V_11
      IL_0171:  ldarg.0
      IL_0172:  volatile.
      IL_0174:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0179:  stloc.s    V_12
      IL_017b:  ldloc.s    V_12
      IL_017d:  brtrue     IL_0194

      IL_0182:  ldarg.0
      IL_0183:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0188:  stloc.s    V_11
      IL_018a:  ldarg.0
      IL_018b:  volatile.
      IL_018d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0192:  stloc.s    V_12
      IL_0194:  ldloc.s    V_12
      IL_0196:  ldc.i4.0
      IL_0197:  ceq
      IL_0199:  brfalse    IL_01ad

      IL_019e:  ldloc.s    V_11
      IL_01a0:  brfalse    IL_01ad

      IL_01a5:  ldc.i4.m1
      IL_01a6:  stloc.s    V_4
      IL_01a8:  br         IL_02de

      IL_01ad:  ldloc.s    V_12
      IL_01af:  stloc.s    V_4
      IL_01b1:  br         IL_02de

      IL_01b6:  ldc.i4.0
      IL_01b7:  stloc.s    V_13
      IL_01b9:  ldarg.0
      IL_01ba:  volatile.
      IL_01bc:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01c1:  stloc.s    V_14
      IL_01c3:  ldloc.s    V_14
      IL_01c5:  brtrue     IL_01dc

      IL_01ca:  ldarg.0
      IL_01cb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01d0:  stloc.s    V_13
      IL_01d2:  ldarg.0
      IL_01d3:  volatile.
      IL_01d5:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01da:  stloc.s    V_14
      IL_01dc:  ldloc.s    V_14
      IL_01de:  ldc.i4.0
      IL_01df:  ceq
      IL_01e1:  brfalse    IL_01f5

      IL_01e6:  ldloc.s    V_13
      IL_01e8:  brfalse    IL_01f5

      IL_01ed:  ldc.i4.m1
      IL_01ee:  stloc.s    V_4
      IL_01f0:  br         IL_02de

      IL_01f5:  ldloc.s    V_14
      IL_01f7:  stloc.s    V_4
      IL_01f9:  br         IL_02de

      IL_01fe:  ldc.i4.0
      IL_01ff:  stloc.s    V_15
      IL_0201:  ldarg.0
      IL_0202:  volatile.
      IL_0204:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0209:  stloc.s    V_16
      IL_020b:  ldloc.s    V_16
      IL_020d:  brtrue     IL_0224

      IL_0212:  ldarg.0
      IL_0213:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0218:  stloc.s    V_15
      IL_021a:  ldarg.0
      IL_021b:  volatile.
      IL_021d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0222:  stloc.s    V_16
      IL_0224:  ldloc.s    V_16
      IL_0226:  ldc.i4.0
      IL_0227:  ceq
      IL_0229:  brfalse    IL_023d

      IL_022e:  ldloc.s    V_15
      IL_0230:  brfalse    IL_023d

      IL_0235:  ldc.i4.m1
      IL_0236:  stloc.s    V_4
      IL_0238:  br         IL_02de

      IL_023d:  ldloc.s    V_16
      IL_023f:  stloc.s    V_4
      IL_0241:  br         IL_02de

      IL_0246:  ldc.i4.0
      IL_0247:  stloc.s    V_17
      IL_0249:  ldarg.0
      IL_024a:  volatile.
      IL_024c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0251:  stloc.s    V_18
      IL_0253:  ldloc.s    V_18
      IL_0255:  brtrue     IL_026c

      IL_025a:  ldarg.0
      IL_025b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0260:  stloc.s    V_17
      IL_0262:  ldarg.0
      IL_0263:  volatile.
      IL_0265:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_026a:  stloc.s    V_18
      IL_026c:  ldloc.s    V_18
      IL_026e:  ldc.i4.0
      IL_026f:  ceq
      IL_0271:  brfalse    IL_0285

      IL_0276:  ldloc.s    V_17
      IL_0278:  brfalse    IL_0285

      IL_027d:  ldc.i4.m1
      IL_027e:  stloc.s    V_4
      IL_0280:  br         IL_02de

      IL_0285:  ldloc.s    V_18
      IL_0287:  stloc.s    V_4
      IL_0289:  br         IL_02de

      IL_028e:  ldc.i4.0
      IL_028f:  stloc.s    V_19
      IL_0291:  ldarg.0
      IL_0292:  volatile.
      IL_0294:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0299:  stloc.s    V_20
      IL_029b:  ldloc.s    V_20
      IL_029d:  brtrue     IL_02b4

      IL_02a2:  ldarg.0
      IL_02a3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02a8:  stloc.s    V_19
      IL_02aa:  ldarg.0
      IL_02ab:  volatile.
      IL_02ad:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02b2:  stloc.s    V_20
      IL_02b4:  ldloc.s    V_20
      IL_02b6:  ldc.i4.0
      IL_02b7:  ceq
      IL_02b9:  brfalse    IL_02cd

      IL_02be:  ldloc.s    V_19
      IL_02c0:  brfalse    IL_02cd

      IL_02c5:  ldc.i4.m1
      IL_02c6:  stloc.s    V_4
      IL_02c8:  br         IL_02de

      IL_02cd:  ldloc.s    V_20
      IL_02cf:  stloc.s    V_4
      IL_02d1:  br         IL_02de

      IL_02d6:  ldc.i4.m1
      IL_02d7:  stloc.s    V_4
      IL_02d9:  br         IL_02de

      IL_02de:  ldloc.s    V_4
      IL_02e0:  stloc.s    V_21
      IL_02e2:  ldloc.s    V_4
      IL_02e4:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.DNSContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverAddNameServer0$PST060000AB(uint32 address) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.DNSContract/AddNameServer NetStack.Contracts.DNSContract/Exp::AddNameServerPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.DNSContract/AddNameServer::address
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverAddNameServer0

    .method privatescope instance void  MarshallDeliverAddNameServer0$PST060000AC(uint32 address,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverAddNameServer0$PST060000AB(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.DNSContract/AddNameServer NetStack.Contracts.DNSContract/Exp::AddNameServerPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.DNSContract/AddNameServer::MarshallAll(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverAddNameServer0

    .method privatescope instance void  DeliverRemoveNameServer0$PST060000AD(uint32 address) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.DNSContract/RemoveNameServer NetStack.Contracts.DNSContract/Exp::RemoveNameServerPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.DNSContract/RemoveNameServer::address
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverRemoveNameServer0

    .method privatescope instance void  MarshallDeliverRemoveNameServer0$PST060000AE(uint32 address,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverRemoveNameServer0$PST060000AD(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.DNSContract/RemoveNameServer NetStack.Contracts.DNSContract/Exp::RemoveNameServerPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.DNSContract/RemoveNameServer::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverRemoveNameServer0

    .method privatescope instance void  DeliverRotateNameServers0$PST060000AF() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverRotateNameServers0

    .method privatescope instance void  MarshallDeliverRotateNameServers0$PST060000B0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverRotateNameServers0$PST060000AF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.DNSContract/RotateNameServers NetStack.Contracts.DNSContract/Exp::RotateNameServersPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.DNSContract/RotateNameServers::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverRotateNameServers0

    .method privatescope instance void  DeliverGetNameServers0$PST060000B1() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetNameServers0

    .method privatescope instance void  MarshallDeliverGetNameServers0$PST060000B2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverGetNameServers0$PST060000B1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.DNSContract/GetNameServers NetStack.Contracts.DNSContract/Exp::GetNameServersPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.DNSContract/GetNameServers::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetNameServers0

    .method privatescope instance void  DeliverGetCurrentNameServer0$PST060000B3() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   13
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   13
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetCurrentNameServer0

    .method privatescope instance void  MarshallDeliverGetCurrentNameServer0$PST060000B4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverGetCurrentNameServer0$PST060000B3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.DNSContract/GetCurrentNameServer NetStack.Contracts.DNSContract/Exp::GetCurrentNameServerPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.DNSContract/GetCurrentNameServer::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetCurrentNameServer0

    .method privatescope instance void  DeliverIsValidName0$PST060000B5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) name) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.DNSContract/IsValidName NetStack.Contracts.DNSContract/Exp::IsValidNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverIsValidName0

    .method privatescope instance void  MarshallDeliverIsValidName0$PST060000B6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) name,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverIsValidName0$PST060000B5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.DNSContract/IsValidName NetStack.Contracts.DNSContract/Exp::IsValidNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.DNSContract/IsValidName::MarshallAll(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverIsValidName0

    .method privatescope instance void  DeliverResolve0$PST060000B7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) host) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.DNSContract/Resolve NetStack.Contracts.DNSContract/Exp::ResolvePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverResolve0

    .method privatescope instance void  MarshallDeliverResolve0$PST060000B8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) host,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.DNSContract/Exp::DeliverResolve0$PST060000B7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.DNSContract/Resolve NetStack.Contracts.DNSContract/Exp::ResolvePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.DNSContract/Resolve::MarshallAll(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverResolve0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname NotFound
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/NotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NotFound::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/NotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NotFound::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/NotFound
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/NotFound::MarshallContent(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  uint8*,
                                                                                                  int32&)
      IL_001d:  ret
    } // end of method NotFound::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/NotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NotFound::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::Release

  } // end of class NotFound

  .class sequential ansi sealed nested public specialname AddressList
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) addresses
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AddressList::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/AddressList* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AddressList::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/AddressList* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AddressList::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/AddressList
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/AddressList::MarshallContent(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     uint8*,
                                                                                                     int32&)
      IL_001d:  ret
    } // end of method AddressList::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/AddressList* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AddressList::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint32& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_0008:  ldtoken    [kernel]System.UInt32
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_0033:  castclass  uint32&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AddressList::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/AddressList::addresses
      IL_001a:  ret
    } // end of method AddressList::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddressList::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddressList::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddressList::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddressList::Release

  } // end of class AddressList

  .class sequential ansi sealed nested public specialname DNSResults
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) addresses
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) names
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       79 (0x4f)
      .maxstack  5
      .locals init ([0] uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
               [2] int32 V_2,
               [3] int32 V_3,
               [4] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_004e

      IL_0021:  ldloc.1
      IL_0022:  ldlen
      IL_0023:  stloc.2
      IL_0024:  ldc.i4.0
      IL_0025:  stloc.3
      IL_0026:  ldloc.3
      IL_0027:  ldloc.2
      IL_0028:  bge        IL_0047

      IL_002d:  ldloc.1
      IL_002e:  ldloc.3
      IL_002f:  ldelem.i
      IL_0030:  stloc.s    V_4
      IL_0032:  ldloc.s    V_4
      IL_0034:  brfalse    IL_0041

      IL_0039:  ldarg.1
      IL_003a:  ldloc.s    V_4
      IL_003c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0041:  ldloc.3
      IL_0042:  ldc.i4.1
      IL_0043:  add
      IL_0044:  stloc.3
      IL_0045:  br.s       IL_0026

      IL_0047:  ldarg.1
      IL_0048:  ldloc.1
      IL_0049:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004e:  ret
    } // end of method DNSResults::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/DNSResults* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DNSResults::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/DNSResults* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DNSResults::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/DNSResults
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/DNSResults::MarshallContent(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    uint8*,
                                                                                                    int32&)
      IL_001d:  ret
    } // end of method DNSResults::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/DNSResults* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DNSResults::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       300 (0x12c)
      .maxstack  11
      .locals init ([0] uint32& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& V_3,
               [4] int32 V_4,
               [5] int32 V_5,
               [6] char& V_6,
               [7] int32 V_7,
               [8] int32 V_8)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_0008:  ldtoken    [kernel]System.UInt32
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_0033:  castclass  uint32&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_0058:  ldtoken    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)
      IL_005d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_0078:  brfalse    IL_012b

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_0083:  castclass  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_012b

      IL_009e:  ldarg.2
      IL_009f:  ldarg.1
      IL_00a0:  ldarg.0
      IL_00a1:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_00a6:  ldloc.s    V_5
      IL_00a8:  ldelema    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)
      IL_00ad:  ldtoken    [kernel]System.Char
      IL_00b2:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_00b7:  ldarg.0
      IL_00b8:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_00bd:  castclass  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)&
      IL_00c2:  ldarg.0
      IL_00c3:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_00c8:  ldloc.s    V_5
      IL_00ca:  ldelema    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)
      IL_00cf:  conv.i
      IL_00d0:  ldarg.0
      IL_00d1:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_00d6:  castclass  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)&
      IL_00db:  conv.i
      IL_00dc:  sub
      IL_00dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_00e2:  ldarg.0
      IL_00e3:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_00e8:  ldloc.s    V_5
      IL_00ea:  ldelem.i
      IL_00eb:  brfalse    IL_0120

      IL_00f0:  ldarg.0
      IL_00f1:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_00f6:  ldloc.s    V_5
      IL_00f8:  ldelem.i
      IL_00f9:  castclass  char&
      IL_00fe:  stloc.s    V_6
      IL_0100:  ldarg.0
      IL_0101:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_0106:  ldloc.s    V_5
      IL_0108:  ldelem.i
      IL_0109:  ldlen
      IL_010a:  stloc.s    V_7
      IL_010c:  ldc.i4.0
      IL_010d:  stloc.s    V_8
      IL_010f:  ldloc.s    V_8
      IL_0111:  ldloc.s    V_7
      IL_0113:  bge        IL_0120

      IL_0118:  ldloc.s    V_8
      IL_011a:  ldc.i4.1
      IL_011b:  add
      IL_011c:  stloc.s    V_8
      IL_011e:  br.s       IL_010f

      IL_0120:  ldloc.s    V_5
      IL_0122:  ldc.i4.1
      IL_0123:  add
      IL_0124:  stloc.s    V_5
      IL_0126:  br         IL_0095

      IL_012b:  ret
    } // end of method DNSResults::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       108 (0x6c)
      .maxstack  3
      .locals init ([0] uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
               [2] int32 V_2,
               [3] int32 V_3,
               [4] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::addresses
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_006b

      IL_0027:  ldloc.1
      IL_0028:  ldlen
      IL_0029:  stloc.2
      IL_002a:  ldc.i4.0
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  ldloc.2
      IL_002e:  bge        IL_005e

      IL_0033:  ldloc.1
      IL_0034:  ldloc.3
      IL_0035:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::Expose(void*,
                                                                                                      int32)
      IL_003a:  ldloc.1
      IL_003b:  ldloc.3
      IL_003c:  ldelem.i
      IL_003d:  stloc.s    V_4
      IL_003f:  ldloc.s    V_4
      IL_0041:  brfalse    IL_0051

      IL_0046:  ldloc.s    V_4
      IL_0048:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004d:  ldloc.1
      IL_004e:  ldloc.3
      IL_004f:  ldnull
      IL_0050:  stelem.i
      IL_0051:  ldloc.1
      IL_0052:  ldloc.3
      IL_0053:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::UnExpose(void*,
                                                                                                        int32)
      IL_0058:  ldloc.3
      IL_0059:  ldc.i4.1
      IL_005a:  add
      IL_005b:  stloc.3
      IL_005c:  br.s       IL_002c

      IL_005e:  ldloc.1
      IL_005f:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0064:  ldarg.0
      IL_0065:  ldnull
      IL_0066:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/DNSResults::names
      IL_006b:  ret
    } // end of method DNSResults::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DNSResults::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DNSResults::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DNSResults::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DNSResults::Release

  } // end of class DNSResults

  .class sequential ansi sealed nested public specialname IsValid
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public bool valid
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValid::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/IsValid* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsValid::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/IsValid* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsValid::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/IsValid
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/IsValid::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 int32&)
      IL_001d:  ret
    } // end of method IsValid::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/IsValid* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IsValid::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValid::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValid::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValid::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValid::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValid::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValid::Release

  } // end of class IsValid

  .class sequential ansi sealed nested public specialname Address
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint32 address
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Address::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/Address* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Address::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/Address* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Address::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/Address
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/Address::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 int32&)
      IL_001d:  ret
    } // end of method Address::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/Address* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Address::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Address::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Address::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Address::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Address::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Address::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Address::Release

  } // end of class Address

  .class sequential ansi sealed nested public specialname Ack
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/Ack
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/Ack::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*,
                                                                                             int32&)
      IL_001d:  ret
    } // end of method Ack::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ack::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Release

  } // end of class Ack

  .class sequential ansi sealed nested public specialname AddNameServer
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 address
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddNameServer::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/AddNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AddNameServer::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/AddNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AddNameServer::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/AddNameServer
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/AddNameServer::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*,
                                                                                                       int32&)
      IL_001d:  ret
    } // end of method AddNameServer::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/AddNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AddNameServer::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddNameServer::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddNameServer::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddNameServer::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddNameServer::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddNameServer::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddNameServer::Release

  } // end of class AddNameServer

  .class sequential ansi sealed nested public specialname RemoveNameServer
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 address
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RemoveNameServer::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/RemoveNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RemoveNameServer::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/RemoveNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RemoveNameServer::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/RemoveNameServer
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/RemoveNameServer::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method RemoveNameServer::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/RemoveNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method RemoveNameServer::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RemoveNameServer::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RemoveNameServer::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RemoveNameServer::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RemoveNameServer::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RemoveNameServer::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RemoveNameServer::Release

  } // end of class RemoveNameServer

  .class sequential ansi sealed nested public specialname RotateNameServers
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RotateNameServers::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/RotateNameServers* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RotateNameServers::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/RotateNameServers* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RotateNameServers::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/RotateNameServers
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/RotateNameServers::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method RotateNameServers::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/RotateNameServers* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method RotateNameServers::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RotateNameServers::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RotateNameServers::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RotateNameServers::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RotateNameServers::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RotateNameServers::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RotateNameServers::Release

  } // end of class RotateNameServers

  .class sequential ansi sealed nested public specialname GetNameServers
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNameServers::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/GetNameServers* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetNameServers::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/GetNameServers* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetNameServers::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/GetNameServers
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/GetNameServers::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method GetNameServers::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/GetNameServers* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetNameServers::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNameServers::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNameServers::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNameServers::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNameServers::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNameServers::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNameServers::Release

  } // end of class GetNameServers

  .class sequential ansi sealed nested public specialname GetCurrentNameServer
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCurrentNameServer::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/GetCurrentNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetCurrentNameServer::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/GetCurrentNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetCurrentNameServer::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/GetCurrentNameServer
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/GetCurrentNameServer::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*,
                                                                                                              int32&)
      IL_001d:  ret
    } // end of method GetCurrentNameServer::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/GetCurrentNameServer* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetCurrentNameServer::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCurrentNameServer::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCurrentNameServer::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCurrentNameServer::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCurrentNameServer::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCurrentNameServer::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCurrentNameServer::Release

  } // end of class GetCurrentNameServer

  .class sequential ansi sealed nested public specialname IsValidName
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) name
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method IsValidName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/IsValidName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsValidName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/IsValidName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsValidName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/IsValidName
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/IsValidName::MarshallContent(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     uint8*,
                                                                                                     int32&)
      IL_001d:  ret
    } // end of method IsValidName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/IsValidName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IsValidName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method IsValidName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/IsValidName::name
      IL_001a:  ret
    } // end of method IsValidName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValidName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValidName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValidName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsValidName::Release

  } // end of class IsValidName

  .class sequential ansi sealed nested public specialname Resolve
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) host
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Resolve::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/Resolve* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Resolve::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/Resolve* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Resolve::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/Resolve
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/Resolve::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 int32&)
      IL_001d:  ret
    } // end of method Resolve::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/Resolve* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Resolve::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Resolve::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.DNSContract/Resolve::host
      IL_001a:  ret
    } // end of method Resolve::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Resolve::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Resolve::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Resolve::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Resolve::Release

  } // end of class Resolve

  .class sequential ansi sealed nested public specialname Ready
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.DNSContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.DNSContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.DNSContract/Ready
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.DNSContract/Ready::MarshallContent(uint8*,
                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                               uint8*,
                                                                                               int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.DNSContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState 
            Send(valuetype NetStack.Contracts.DNSContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$0 
            Recv(valuetype NetStack.Contracts.DNSContract/AddNameServer msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$1 
            Recv(valuetype NetStack.Contracts.DNSContract/RemoveNameServer msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$2 
            Recv(valuetype NetStack.Contracts.DNSContract/RotateNameServers msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$3 
            Recv(valuetype NetStack.Contracts.DNSContract/GetCurrentNameServer msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$4 
            Recv(valuetype NetStack.Contracts.DNSContract/GetNameServers msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$5 
            Recv(valuetype NetStack.Contracts.DNSContract/Resolve msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$7 
            Recv(valuetype NetStack.Contracts.DNSContract/IsValidName msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState 
            Send(valuetype NetStack.Contracts.DNSContract/Ack msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .class abstract auto ansi nested public specialname ReadyState$1
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState 
            Send(valuetype NetStack.Contracts.DNSContract/Ack msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$1::.ctor

  } // end of class ReadyState$1

  .class abstract auto ansi nested public specialname ReadyState$2
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState 
            Send(valuetype NetStack.Contracts.DNSContract/Ack msg) cil managed
    {
    } // end of method ReadyState$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$2::.ctor

  } // end of class ReadyState$2

  .class abstract auto ansi nested public specialname ReadyState$3
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState 
            Send(valuetype NetStack.Contracts.DNSContract/Address msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$3::.ctor

  } // end of class ReadyState$3

  .class abstract auto ansi nested public specialname ReadyState$4
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState 
            Send(valuetype NetStack.Contracts.DNSContract/AddressList msg) cil managed
    {
    } // end of method ReadyState$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$4::.ctor

  } // end of class ReadyState$4

  .class abstract auto ansi nested public specialname ReadyState$5
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$6 
            Send(valuetype NetStack.Contracts.DNSContract/NotFound msg) cil managed
    {
    } // end of method ReadyState$5::Send

    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState$6 
            Send(valuetype NetStack.Contracts.DNSContract/DNSResults msg) cil managed
    {
    } // end of method ReadyState$5::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$5::.ctor

  } // end of class ReadyState$5

  .class abstract auto ansi nested public specialname ReadyState$6
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$6::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$6::.ctor

  } // end of class ReadyState$6

  .class abstract auto ansi nested public specialname ReadyState$7
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class NetStack.Contracts.DNSContract/ReadyState 
            Send(valuetype NetStack.Contracts.DNSContract/IsValid msg) cil managed
    {
    } // end of method ReadyState$7::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$7::.ctor

  } // end of class ReadyState$7

  .field public static literal string ModuleName = "/service/dns"
  .method public static void  NewChannel([out] valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.DNSContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void NetStack.Contracts.DNSContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.DNSContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void NetStack.Contracts.DNSContract/Imp::'.ctor$PST0600005D'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DNSContract::NewChannel

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.DNSContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.DNSContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.DNSContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.DNSContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void NetStack.Contracts.DNSContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.DNSContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.DNSContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void NetStack.Contracts.DNSContract/Imp::'.ctor$PST0600005D'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DNSContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method DNSContract::.ctor

  .method privatescope static int32  StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       78 (0x4e)
    .maxstack  7
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.5
    IL_000b:  beq        IL_001c

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.2
    IL_0012:  beq        IL_0030

    IL_0017:  br         IL_0043

    IL_001c:  ldarg.0
    IL_001d:  ldc.i4.s   12
    IL_001f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0024:  ldarg.0
    IL_0025:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_002a:  stloc.2
    IL_002b:  br         IL_004a

    IL_0030:  ldarg.0
    IL_0031:  ldc.i4.1
    IL_0032:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0037:  ldarg.0
    IL_0038:  call       int32 NetStack.Contracts.DNSContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_003d:  stloc.2
    IL_003e:  br         IL_004a

    IL_0043:  ldloc.0
    IL_0044:  stloc.2
    IL_0045:  br         IL_004a

    IL_004a:  ldloc.2
    IL_004b:  stloc.3
    IL_004c:  ldloc.2
    IL_004d:  ret
  } // end of method DNSContract::StableState

  .method privatescope static int32  CanonicalState$PST06000005(int32 state) cil managed
  {
    // Code size       47 (0x2f)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.5
    IL_0004:  beq        IL_0015

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_001d

    IL_0010:  br         IL_0024

    IL_0015:  ldc.i4.s   12
    IL_0017:  stloc.1
    IL_0018:  br         IL_002b

    IL_001d:  ldc.i4.1
    IL_001e:  stloc.1
    IL_001f:  br         IL_002b

    IL_0024:  ldarg.0
    IL_0025:  stloc.1
    IL_0026:  br         IL_002b

    IL_002b:  ldloc.1
    IL_002c:  stloc.2
    IL_002d:  ldloc.1
    IL_002e:  ret
  } // end of method DNSContract::CanonicalState

} // end of class NetStack.Contracts.DNSContract

.class public sequential ansi beforefieldinit NetStack.Contracts.HardwareAddress
       extends [kernel]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public uint8 b0
  .field public uint8 b1
  .field public uint8 b2
  .field public uint8 b3
  .field public uint8 b4
  .field public uint8 b5
  .method public hidebysig instance void 
          Set(uint8 bt0,
              uint8 bt1,
              uint8 bt2,
              uint8 bt3,
              uint8 bt4,
              uint8 bt5) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  stfld      uint8 NetStack.Contracts.HardwareAddress::b0
    IL_0007:  ldarg.0
    IL_0008:  ldarg.2
    IL_0009:  stfld      uint8 NetStack.Contracts.HardwareAddress::b1
    IL_000e:  ldarg.0
    IL_000f:  ldarg.3
    IL_0010:  stfld      uint8 NetStack.Contracts.HardwareAddress::b2
    IL_0015:  ldarg.0
    IL_0016:  ldarg.s    bt3
    IL_0018:  stfld      uint8 NetStack.Contracts.HardwareAddress::b3
    IL_001d:  ldarg.0
    IL_001e:  ldarg.s    bt4
    IL_0020:  stfld      uint8 NetStack.Contracts.HardwareAddress::b4
    IL_0025:  ldarg.0
    IL_0026:  ldarg.s    bt5
    IL_0028:  stfld      uint8 NetStack.Contracts.HardwareAddress::b5
    IL_002d:  ret
  } // end of method HardwareAddress::Set

  .method public hidebysig instance void 
          Set(uint8[] modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) bytes) cil managed
  {
    // Code size       75 (0x4b)
    .maxstack  3
    IL_0000:  ldarg.1
    IL_0001:  ldlen
    IL_0002:  conv.i4
    IL_0003:  ldc.i4.6
    IL_0004:  beq        IL_0014

    IL_0009:  ldstr      "Invalid array length in HardwareAddress()"
    IL_000e:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
    IL_0013:  throw

    IL_0014:  ldarg.0
    IL_0015:  ldarg.1
    IL_0016:  ldc.i4.0
    IL_0017:  ldelem.u1
    IL_0018:  stfld      uint8 NetStack.Contracts.HardwareAddress::b0
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  ldc.i4.1
    IL_0020:  ldelem.u1
    IL_0021:  stfld      uint8 NetStack.Contracts.HardwareAddress::b1
    IL_0026:  ldarg.0
    IL_0027:  ldarg.1
    IL_0028:  ldc.i4.2
    IL_0029:  ldelem.u1
    IL_002a:  stfld      uint8 NetStack.Contracts.HardwareAddress::b2
    IL_002f:  ldarg.0
    IL_0030:  ldarg.1
    IL_0031:  ldc.i4.3
    IL_0032:  ldelem.u1
    IL_0033:  stfld      uint8 NetStack.Contracts.HardwareAddress::b3
    IL_0038:  ldarg.0
    IL_0039:  ldarg.1
    IL_003a:  ldc.i4.4
    IL_003b:  ldelem.u1
    IL_003c:  stfld      uint8 NetStack.Contracts.HardwareAddress::b4
    IL_0041:  ldarg.0
    IL_0042:  ldarg.1
    IL_0043:  ldc.i4.5
    IL_0044:  ldelem.u1
    IL_0045:  stfld      uint8 NetStack.Contracts.HardwareAddress::b5
    IL_004a:  ret
  } // end of method HardwareAddress::Set

  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method HardwareAddress::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype NetStack.Contracts.HardwareAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method HardwareAddress::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype NetStack.Contracts.HardwareAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method HardwareAddress::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void NetStack.Contracts.HardwareAddress::MarshallContent(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           uint8*)
    IL_0009:  ret
  } // end of method HardwareAddress::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype NetStack.Contracts.HardwareAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    NetStack.Contracts.HardwareAddress
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    NetStack.Contracts.HardwareAddress
    IL_0022:  call       instance void NetStack.Contracts.HardwareAddress::MarshallContent(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method HardwareAddress::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method HardwareAddress::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method HardwareAddress::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method HardwareAddress::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method HardwareAddress::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method HardwareAddress::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method HardwareAddress::Release

} // end of class NetStack.Contracts.HardwareAddress

.class public sequential ansi beforefieldinit NetStack.Contracts.InterfaceIPInfo
       extends [kernel]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public uint32 address
  .field public uint32 netmask
  .field public uint32 gateway
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceIPInfo::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method InterfaceIPInfo::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method InterfaceIPInfo::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void NetStack.Contracts.InterfaceIPInfo::MarshallContent(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           uint8*)
    IL_0009:  ret
  } // end of method InterfaceIPInfo::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    NetStack.Contracts.InterfaceIPInfo
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    NetStack.Contracts.InterfaceIPInfo
    IL_0022:  call       instance void NetStack.Contracts.InterfaceIPInfo::MarshallContent(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method InterfaceIPInfo::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceIPInfo::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceIPInfo::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceIPInfo::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceIPInfo::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceIPInfo::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceIPInfo::Release

} // end of class NetStack.Contracts.InterfaceIPInfo

.class public sequential ansi beforefieldinit NetStack.Contracts.InterfaceInfo
       extends [kernel]System.ValueType
       implements [kernel]Microsoft.SingSharp.ITracked,
                  [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) driverName
  .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) driverVersion
  .field public uint32 linkSpeed
  .field public valuetype NetStack.Contracts.HardwareAddress hardwareAddress
  .field public valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) ipConfigs
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       53 (0x35)
    .maxstack  4
    .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
             [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverName
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  brfalse    IL_0014

    IL_000d:  ldarg.1
    IL_000e:  ldloc.0
    IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0014:  ldarg.0
    IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverVersion
    IL_001a:  stloc.1
    IL_001b:  ldloc.1
    IL_001c:  brfalse    IL_0028

    IL_0021:  ldarg.1
    IL_0022:  ldloc.1
    IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0028:  ldarg.1
    IL_0029:  ldarg.0
    IL_002a:  ldfld      valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::ipConfigs
    IL_002f:  call       void NetStack.Contracts.InterfaceIPInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                          valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
    IL_0034:  ret
  } // end of method InterfaceInfo::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype NetStack.Contracts.InterfaceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_0019

    IL_0006:  ldarg.1
    IL_0007:  castclass  valuetype NetStack.Contracts.InterfaceInfo&
    IL_000c:  ldarg.0
    IL_000d:  call       instance void NetStack.Contracts.InterfaceInfo::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0019:  ret
  } // end of method InterfaceInfo::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype NetStack.Contracts.InterfaceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_002c

    IL_0006:  ldarg.1
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_0025

    IL_0012:  ldarg.1
    IL_0013:  ldloc.1
    IL_0014:  ldelema    NetStack.Contracts.InterfaceInfo
    IL_0019:  ldarg.0
    IL_001a:  call       instance void NetStack.Contracts.InterfaceInfo::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.1
    IL_0021:  add
    IL_0022:  stloc.1
    IL_0023:  br.s       IL_000b

    IL_0025:  ldarg.0
    IL_0026:  ldarg.1
    IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_002c:  ret
  } // end of method InterfaceInfo::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void NetStack.Contracts.InterfaceInfo::MarshallContent(uint8*,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                         uint8*)
    IL_0009:  ret
  } // end of method InterfaceInfo::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype NetStack.Contracts.InterfaceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    NetStack.Contracts.InterfaceInfo
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    NetStack.Contracts.InterfaceInfo
    IL_0022:  call       instance void NetStack.Contracts.InterfaceInfo::MarshallContent(uint8*,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                         uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method InterfaceInfo::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       229 (0xe5)
    .maxstack  12
    .locals init ([0] char& V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] char& V_3,
             [4] int32 V_4,
             [5] int32 V_5)
    IL_0000:  ldarg.2
    IL_0001:  ldarg.1
    IL_0002:  ldarg.0
    IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverName
    IL_0008:  ldtoken    [kernel]System.Char
    IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_0012:  ldarg.3
    IL_0013:  ldarg.0
    IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverName
    IL_0019:  conv.i
    IL_001a:  ldarg.3
    IL_001b:  conv.i
    IL_001c:  sub
    IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             uint8*,
                                                                                                                             int32)
    IL_0022:  ldarg.0
    IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverName
    IL_0028:  brfalse    IL_0050

    IL_002d:  ldarg.0
    IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverName
    IL_0033:  castclass  char&
    IL_0038:  stloc.0
    IL_0039:  ldarg.0
    IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverName
    IL_003f:  ldlen
    IL_0040:  stloc.1
    IL_0041:  ldc.i4.0
    IL_0042:  stloc.2
    IL_0043:  ldloc.2
    IL_0044:  ldloc.1
    IL_0045:  bge        IL_0050

    IL_004a:  ldloc.2
    IL_004b:  ldc.i4.1
    IL_004c:  add
    IL_004d:  stloc.2
    IL_004e:  br.s       IL_0043

    IL_0050:  ldarg.2
    IL_0051:  ldarg.1
    IL_0052:  ldarg.0
    IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverVersion
    IL_0058:  ldtoken    [kernel]System.Char
    IL_005d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_0062:  ldarg.3
    IL_0063:  ldarg.0
    IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverVersion
    IL_0069:  conv.i
    IL_006a:  ldarg.3
    IL_006b:  conv.i
    IL_006c:  sub
    IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             uint8*,
                                                                                                                             int32)
    IL_0072:  ldarg.0
    IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverVersion
    IL_0078:  brfalse    IL_00a6

    IL_007d:  ldarg.0
    IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverVersion
    IL_0083:  castclass  char&
    IL_0088:  stloc.3
    IL_0089:  ldarg.0
    IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverVersion
    IL_008f:  ldlen
    IL_0090:  stloc.s    V_4
    IL_0092:  ldc.i4.0
    IL_0093:  stloc.s    V_5
    IL_0095:  ldloc.s    V_5
    IL_0097:  ldloc.s    V_4
    IL_0099:  bge        IL_00a6

    IL_009e:  ldloc.s    V_5
    IL_00a0:  ldc.i4.1
    IL_00a1:  add
    IL_00a2:  stloc.s    V_5
    IL_00a4:  br.s       IL_0095

    IL_00a6:  ldarg.0
    IL_00a7:  ldflda     valuetype NetStack.Contracts.HardwareAddress NetStack.Contracts.InterfaceInfo::hardwareAddress
    IL_00ac:  ldarg.1
    IL_00ad:  ldarg.2
    IL_00ae:  ldarg.3
    IL_00af:  call       instance void NetStack.Contracts.HardwareAddress::MarshallContent(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           uint8*)
    IL_00b4:  ldarg.2
    IL_00b5:  ldarg.1
    IL_00b6:  ldarg.0
    IL_00b7:  ldflda     valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::ipConfigs
    IL_00bc:  ldtoken    NetStack.Contracts.InterfaceIPInfo
    IL_00c1:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_00c6:  ldarg.3
    IL_00c7:  ldarg.0
    IL_00c8:  ldflda     valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::ipConfigs
    IL_00cd:  conv.i
    IL_00ce:  ldarg.3
    IL_00cf:  conv.i
    IL_00d0:  sub
    IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             uint8*,
                                                                                                                             int32)
    IL_00d6:  ldarg.1
    IL_00d7:  ldarg.2
    IL_00d8:  ldarg.3
    IL_00d9:  ldarg.0
    IL_00da:  ldfld      valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::ipConfigs
    IL_00df:  call       void NetStack.Contracts.InterfaceIPInfo::MarshallVector(uint8*,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                 uint8*,
                                                                                 valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
    IL_00e4:  ret
  } // end of method InterfaceInfo::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       79 (0x4f)
    .maxstack  2
    .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
             [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
             [2] valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverName
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  brfalse    IL_001a

    IL_000d:  ldloc.0
    IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0013:  ldarg.0
    IL_0014:  ldnull
    IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverName
    IL_001a:  ldarg.0
    IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverVersion
    IL_0020:  stloc.1
    IL_0021:  ldloc.1
    IL_0022:  brfalse    IL_0034

    IL_0027:  ldloc.1
    IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_002d:  ldarg.0
    IL_002e:  ldnull
    IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::driverVersion
    IL_0034:  ldarg.0
    IL_0035:  ldfld      valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::ipConfigs
    IL_003a:  stloc.2
    IL_003b:  ldloc.2
    IL_003c:  brfalse    IL_004e

    IL_0041:  ldloc.2
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0047:  ldarg.0
    IL_0048:  ldnull
    IL_0049:  stfld      valuetype NetStack.Contracts.InterfaceIPInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.InterfaceInfo::ipConfigs
    IL_004e:  ret
  } // end of method InterfaceInfo::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceInfo::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceInfo::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceInfo::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method InterfaceInfo::Release

} // end of class NetStack.Contracts.InterfaceInfo

.class public abstract auto ansi beforefieldinit NetStack.Contracts.IPContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [kernel]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000019)
    .field public static literal specialname int32 InterfaceList = int32(0x00000003)
    .field public static literal specialname int32 InterfaceState = int32(0x00000004)
    .field public static literal specialname int32 HostName = int32(0x00000005)
    .field public static literal specialname int32 DomainName = int32(0x00000006)
    .field public static literal specialname int32 Running = int32(0x00000007)
    .field public static literal specialname int32 IsLocal = int32(0x00000008)
    .field public static literal specialname int32 InterfaceNotFound = int32(0x00000009)
    .field public static literal specialname int32 Err = int32(0x0000000A)
    .field public static literal specialname int32 OK = int32(0x0000000B)
    .field public static literal specialname int32 GetDomainName = int32(0x0000000C)
    .field public static literal specialname int32 SetDomainName = int32(0x0000000D)
    .field public static literal specialname int32 GetHostName = int32(0x0000000E)
    .field public static literal specialname int32 SetHostName = int32(0x0000000F)
    .field public static literal specialname int32 IsLocalAddress = int32(0x00000010)
    .field public static literal specialname int32 Test = int32(0x00000011)
    .field public static literal specialname int32 StartDhcp = int32(0x00000012)
    .field public static literal specialname int32 StopDhcp = int32(0x00000013)
    .field public static literal specialname int32 IsRunningDhcp = int32(0x00000014)
    .field public static literal specialname int32 GetInterfaces = int32(0x00000015)
    .field public static literal specialname int32 SetInterfaceState = int32(0x00000016)
    .field public static literal specialname int32 GetInterfaceState = int32(0x00000017)
    .field public static literal specialname int32 Ready = int32(0x00000018)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype NetStack.Contracts.IPContract/InterfaceList InterfaceListPod0
    .field family valuetype NetStack.Contracts.IPContract/InterfaceState InterfaceStatePod0
    .field family valuetype NetStack.Contracts.IPContract/HostName HostNamePod0
    .field family valuetype NetStack.Contracts.IPContract/DomainName DomainNamePod0
    .field family valuetype NetStack.Contracts.IPContract/Running RunningPod0
    .field family valuetype NetStack.Contracts.IPContract/IsLocal IsLocalPod0
    .field family valuetype NetStack.Contracts.IPContract/InterfaceNotFound InterfaceNotFoundPod0
    .field family valuetype NetStack.Contracts.IPContract/Err ErrPod0
    .field family valuetype NetStack.Contracts.IPContract/OK OKPod0
    .field family valuetype NetStack.Contracts.IPContract/Ready ReadyPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600016E'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.IPContract::CanonicalState$PST0600002D(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.IPContract::CanonicalState$PST0600002D(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       424 (0x1a8)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_00b2

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   21
      IL_0017:  beq        IL_00bd

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   20
      IL_001f:  beq        IL_00c8

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   19
      IL_0027:  beq        IL_00d3

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   18
      IL_002f:  beq        IL_00de

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   17
      IL_0037:  beq        IL_00e9

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   16
      IL_003f:  beq        IL_00f4

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   15
      IL_0047:  beq        IL_00ff

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   14
      IL_004f:  beq        IL_010a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   13
      IL_0057:  beq        IL_0115

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  beq        IL_0120

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_012b

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   10
      IL_006f:  beq        IL_0136

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   9
      IL_0077:  beq        IL_0141

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.8
      IL_007e:  beq        IL_014c

      IL_0083:  ldloc.0
      IL_0084:  ldc.i4.7
      IL_0085:  beq        IL_0157

      IL_008a:  ldloc.0
      IL_008b:  ldc.i4.6
      IL_008c:  beq        IL_0162

      IL_0091:  ldloc.0
      IL_0092:  ldc.i4.5
      IL_0093:  beq        IL_016d

      IL_0098:  ldloc.0
      IL_0099:  ldc.i4.4
      IL_009a:  beq        IL_0178

      IL_009f:  ldloc.0
      IL_00a0:  ldc.i4.3
      IL_00a1:  beq        IL_0183

      IL_00a6:  ldloc.0
      IL_00a7:  ldc.i4.2
      IL_00a8:  beq        IL_018e

      IL_00ad:  br         IL_0199

      IL_00b2:  ldstr      "ReadyState"
      IL_00b7:  stloc.1
      IL_00b8:  br         IL_01a4

      IL_00bd:  ldstr      "ReadyState$0"
      IL_00c2:  stloc.1
      IL_00c3:  br         IL_01a4

      IL_00c8:  ldstr      "ReadyState$1"
      IL_00cd:  stloc.1
      IL_00ce:  br         IL_01a4

      IL_00d3:  ldstr      "ReadyState$2"
      IL_00d8:  stloc.1
      IL_00d9:  br         IL_01a4

      IL_00de:  ldstr      "ReadyState$3"
      IL_00e3:  stloc.1
      IL_00e4:  br         IL_01a4

      IL_00e9:  ldstr      "ReadyState$4"
      IL_00ee:  stloc.1
      IL_00ef:  br         IL_01a4

      IL_00f4:  ldstr      "ReadyState$5"
      IL_00f9:  stloc.1
      IL_00fa:  br         IL_01a4

      IL_00ff:  ldstr      "ReadyState$6"
      IL_0104:  stloc.1
      IL_0105:  br         IL_01a4

      IL_010a:  ldstr      "ReadyState$7"
      IL_010f:  stloc.1
      IL_0110:  br         IL_01a4

      IL_0115:  ldstr      "ReadyState$8"
      IL_011a:  stloc.1
      IL_011b:  br         IL_01a4

      IL_0120:  ldstr      "ReadyState$9"
      IL_0125:  stloc.1
      IL_0126:  br         IL_01a4

      IL_012b:  ldstr      "ReadyState$10"
      IL_0130:  stloc.1
      IL_0131:  br         IL_01a4

      IL_0136:  ldstr      "ReadyState$11"
      IL_013b:  stloc.1
      IL_013c:  br         IL_01a4

      IL_0141:  ldstr      "ReadyState$12"
      IL_0146:  stloc.1
      IL_0147:  br         IL_01a4

      IL_014c:  ldstr      "ReadyState$13"
      IL_0151:  stloc.1
      IL_0152:  br         IL_01a4

      IL_0157:  ldstr      "ReadyState$14"
      IL_015c:  stloc.1
      IL_015d:  br         IL_01a4

      IL_0162:  ldstr      "ReadyState$15"
      IL_0167:  stloc.1
      IL_0168:  br         IL_01a4

      IL_016d:  ldstr      "ReadyState$16"
      IL_0172:  stloc.1
      IL_0173:  br         IL_01a4

      IL_0178:  ldstr      "ReadyState$17"
      IL_017d:  stloc.1
      IL_017e:  br         IL_01a4

      IL_0183:  ldstr      "Start"
      IL_0188:  stloc.1
      IL_0189:  br         IL_01a4

      IL_018e:  ldstr      "DoneState"
      IL_0193:  stloc.1
      IL_0194:  br         IL_01a4

      IL_0199:  ldstr      "<protocol terminated>"
      IL_019e:  stloc.1
      IL_019f:  br         IL_01a4

      IL_01a4:  ldloc.1
      IL_01a5:  stloc.2
      IL_01a6:  ldloc.1
      IL_01a7:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvInterfaceList([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& names) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       209 (0xd1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ba

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv InterfaceList when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceList NetStack.Contracts.IPContract/Imp::InterfaceListPod0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceList NetStack.Contracts.IPContract/Imp::InterfaceListPod0
      IL_00a2:  initobj    NetStack.Contracts.IPContract/InterfaceList
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.s   22
      IL_00b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b5:  br         IL_00d0

      IL_00ba:  ldstr      "can't recv InterfaceList in state "
      IL_00bf:  ldarg.0
      IL_00c0:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_00c5:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00ca:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00cf:  throw

      IL_00d0:  ret
    } // end of method Imp::RecvInterfaceList

    .method public instance void  RecvInterfaceState([out] valuetype NetStack.Contracts.InterfaceInfo& ifInfo) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bd

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv InterfaceState when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceState NetStack.Contracts.IPContract/Imp::InterfaceStatePod0
      IL_008d:  ldfld      valuetype NetStack.Contracts.InterfaceInfo NetStack.Contracts.IPContract/InterfaceState::ifInfo
      IL_0092:  stobj      NetStack.Contracts.InterfaceInfo
      IL_0097:  ldarg.0
      IL_0098:  ldc.i4.0
      IL_0099:  volatile.
      IL_009b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceState NetStack.Contracts.IPContract/Imp::InterfaceStatePod0
      IL_00a6:  initobj    NetStack.Contracts.IPContract/InterfaceState
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b2:  ldc.i4.4
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv InterfaceState in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Imp::RecvInterfaceState

    .method public instance void  RecvHostName([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& hostname) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv HostName when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.IPContract/HostName NetStack.Contracts.IPContract/Imp::HostNamePod0
      IL_008e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_0093:  stind.i
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype NetStack.Contracts.IPContract/HostName NetStack.Contracts.IPContract/Imp::HostNamePod0
      IL_00a3:  initobj    NetStack.Contracts.IPContract/HostName
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   22
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv HostName in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_00c6:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvHostName

    .method public instance void  RecvDomainName([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& domainName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.6
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.6
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv DomainName when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.IPContract/DomainName NetStack.Contracts.IPContract/Imp::DomainNamePod0
      IL_008e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_0093:  stind.i
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype NetStack.Contracts.IPContract/DomainName NetStack.Contracts.IPContract/Imp::DomainNamePod0
      IL_00a3:  initobj    NetStack.Contracts.IPContract/DomainName
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   22
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv DomainName in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_00c6:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvDomainName

    .method public instance void  RecvRunning([out] bool& isRunning) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       214 (0xd6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bf

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.7
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.7
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Running when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.IPContract/Running NetStack.Contracts.IPContract/Imp::RunningPod0
      IL_008e:  ldfld      bool NetStack.Contracts.IPContract/Running::isRunning
      IL_0093:  stobj      [kernel]System.Boolean
      IL_0098:  ldarg.0
      IL_0099:  ldc.i4.0
      IL_009a:  volatile.
      IL_009c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype NetStack.Contracts.IPContract/Running NetStack.Contracts.IPContract/Imp::RunningPod0
      IL_00a7:  initobj    NetStack.Contracts.IPContract/Running
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b3:  ldc.i4.s   9
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ba:  br         IL_00d5

      IL_00bf:  ldstr      "can't recv Running in state "
      IL_00c4:  ldarg.0
      IL_00c5:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_00ca:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d4:  throw

      IL_00d5:  ret
    } // end of method Imp::RecvRunning

    .method public instance void  RecvIsLocal([out] bool& isLocal) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       214 (0xd6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bf

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv IsLocal when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.IPContract/IsLocal NetStack.Contracts.IPContract/Imp::IsLocalPod0
      IL_008e:  ldfld      bool NetStack.Contracts.IPContract/IsLocal::isLocal
      IL_0093:  stobj      [kernel]System.Boolean
      IL_0098:  ldarg.0
      IL_0099:  ldc.i4.0
      IL_009a:  volatile.
      IL_009c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype NetStack.Contracts.IPContract/IsLocal NetStack.Contracts.IPContract/Imp::IsLocalPod0
      IL_00a7:  initobj    NetStack.Contracts.IPContract/IsLocal
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b3:  ldc.i4.s   22
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ba:  br         IL_00d5

      IL_00bf:  ldstr      "can't recv IsLocal in state "
      IL_00c4:  ldarg.0
      IL_00c5:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_00ca:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d4:  throw

      IL_00d5:  ret
    } // end of method Imp::RecvIsLocal

    .method public instance void  RecvInterfaceNotFound() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       860 (0x35c)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0037

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.5
      IL_0016:  beq        IL_00ce

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   10
      IL_001e:  beq        IL_0169

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0208

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.s   12
      IL_002d:  beq        IL_02a6

      IL_0032:  br         IL_0345

      IL_0037:  ldc.i4.0
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  brtrue     IL_0058

      IL_0048:  ldarg.0
      IL_0049:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004e:  stloc.1
      IL_004f:  ldarg.0
      IL_0050:  volatile.
      IL_0052:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0057:  stloc.2
      IL_0058:  ldloc.2
      IL_0059:  ldc.i4.0
      IL_005a:  ceq
      IL_005c:  brfalse    IL_007a

      IL_0061:  ldloc.1
      IL_0062:  brfalse    IL_0072

      IL_0067:  ldstr      "Peer is closed"
      IL_006c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0071:  throw

      IL_0072:  ldarg.0
      IL_0073:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0078:  br.s       IL_0037

      IL_007a:  ldarg.0
      IL_007b:  ldc.i4.s   9
      IL_007d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0082:  ldloc.2
      IL_0083:  ldc.i4.s   9
      IL_0085:  beq        IL_00a7

      IL_008a:  ldstr      "can't recv InterfaceNotFound when next message has"
      + " tag "
      IL_008f:  ldarg.0
      IL_0090:  volatile.
      IL_0092:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0097:  box        [kernel]System.Int32
      IL_009c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00a1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a6:  throw

      IL_00a7:  ldarg.0
      IL_00a8:  ldc.i4.0
      IL_00a9:  volatile.
      IL_00ab:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceNotFound NetStack.Contracts.IPContract/Imp::InterfaceNotFoundPod0
      IL_00b6:  initobj    NetStack.Contracts.IPContract/InterfaceNotFound
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c2:  ldc.i4.s   13
      IL_00c4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c9:  br         IL_035b

      IL_00ce:  ldc.i4.0
      IL_00cf:  stloc.3
      IL_00d0:  ldarg.0
      IL_00d1:  volatile.
      IL_00d3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00d8:  stloc.s    V_4
      IL_00da:  ldloc.s    V_4
      IL_00dc:  brtrue     IL_00f2

      IL_00e1:  ldarg.0
      IL_00e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e7:  stloc.3
      IL_00e8:  ldarg.0
      IL_00e9:  volatile.
      IL_00eb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00f0:  stloc.s    V_4
      IL_00f2:  ldloc.s    V_4
      IL_00f4:  ldc.i4.0
      IL_00f5:  ceq
      IL_00f7:  brfalse    IL_0115

      IL_00fc:  ldloc.3
      IL_00fd:  brfalse    IL_010d

      IL_0102:  ldstr      "Peer is closed"
      IL_0107:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_010c:  throw

      IL_010d:  ldarg.0
      IL_010e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0113:  br.s       IL_00ce

      IL_0115:  ldarg.0
      IL_0116:  ldc.i4.s   9
      IL_0118:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_011d:  ldloc.s    V_4
      IL_011f:  ldc.i4.s   9
      IL_0121:  beq        IL_0143

      IL_0126:  ldstr      "can't recv InterfaceNotFound when next message has"
      + " tag "
      IL_012b:  ldarg.0
      IL_012c:  volatile.
      IL_012e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0133:  box        [kernel]System.Int32
      IL_0138:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_013d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0142:  throw

      IL_0143:  ldarg.0
      IL_0144:  ldc.i4.0
      IL_0145:  volatile.
      IL_0147:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_014c:  ldarg.0
      IL_014d:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceNotFound NetStack.Contracts.IPContract/Imp::InterfaceNotFoundPod0
      IL_0152:  initobj    NetStack.Contracts.IPContract/InterfaceNotFound
      IL_0158:  ldarg.0
      IL_0159:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_015e:  ldc.i4.4
      IL_015f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0164:  br         IL_035b

      IL_0169:  ldc.i4.0
      IL_016a:  stloc.s    V_5
      IL_016c:  ldarg.0
      IL_016d:  volatile.
      IL_016f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0174:  stloc.s    V_6
      IL_0176:  ldloc.s    V_6
      IL_0178:  brtrue     IL_018f

      IL_017d:  ldarg.0
      IL_017e:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0183:  stloc.s    V_5
      IL_0185:  ldarg.0
      IL_0186:  volatile.
      IL_0188:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_018d:  stloc.s    V_6
      IL_018f:  ldloc.s    V_6
      IL_0191:  ldc.i4.0
      IL_0192:  ceq
      IL_0194:  brfalse    IL_01b3

      IL_0199:  ldloc.s    V_5
      IL_019b:  brfalse    IL_01ab

      IL_01a0:  ldstr      "Peer is closed"
      IL_01a5:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01aa:  throw

      IL_01ab:  ldarg.0
      IL_01ac:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01b1:  br.s       IL_0169

      IL_01b3:  ldarg.0
      IL_01b4:  ldc.i4.s   9
      IL_01b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01bb:  ldloc.s    V_6
      IL_01bd:  ldc.i4.s   9
      IL_01bf:  beq        IL_01e1

      IL_01c4:  ldstr      "can't recv InterfaceNotFound when next message has"
      + " tag "
      IL_01c9:  ldarg.0
      IL_01ca:  volatile.
      IL_01cc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01d1:  box        [kernel]System.Int32
      IL_01d6:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01db:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01e0:  throw

      IL_01e1:  ldarg.0
      IL_01e2:  ldc.i4.0
      IL_01e3:  volatile.
      IL_01e5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01ea:  ldarg.0
      IL_01eb:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceNotFound NetStack.Contracts.IPContract/Imp::InterfaceNotFoundPod0
      IL_01f0:  initobj    NetStack.Contracts.IPContract/InterfaceNotFound
      IL_01f6:  ldarg.0
      IL_01f7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01fc:  ldc.i4.s   9
      IL_01fe:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0203:  br         IL_035b

      IL_0208:  ldc.i4.0
      IL_0209:  stloc.s    V_7
      IL_020b:  ldarg.0
      IL_020c:  volatile.
      IL_020e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0213:  stloc.s    V_8
      IL_0215:  ldloc.s    V_8
      IL_0217:  brtrue     IL_022e

      IL_021c:  ldarg.0
      IL_021d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0222:  stloc.s    V_7
      IL_0224:  ldarg.0
      IL_0225:  volatile.
      IL_0227:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_022c:  stloc.s    V_8
      IL_022e:  ldloc.s    V_8
      IL_0230:  ldc.i4.0
      IL_0231:  ceq
      IL_0233:  brfalse    IL_0252

      IL_0238:  ldloc.s    V_7
      IL_023a:  brfalse    IL_024a

      IL_023f:  ldstr      "Peer is closed"
      IL_0244:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0249:  throw

      IL_024a:  ldarg.0
      IL_024b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0250:  br.s       IL_0208

      IL_0252:  ldarg.0
      IL_0253:  ldc.i4.s   9
      IL_0255:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_025a:  ldloc.s    V_8
      IL_025c:  ldc.i4.s   9
      IL_025e:  beq        IL_0280

      IL_0263:  ldstr      "can't recv InterfaceNotFound when next message has"
      + " tag "
      IL_0268:  ldarg.0
      IL_0269:  volatile.
      IL_026b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0270:  box        [kernel]System.Int32
      IL_0275:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_027a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_027f:  throw

      IL_0280:  ldarg.0
      IL_0281:  ldc.i4.0
      IL_0282:  volatile.
      IL_0284:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0289:  ldarg.0
      IL_028a:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceNotFound NetStack.Contracts.IPContract/Imp::InterfaceNotFoundPod0
      IL_028f:  initobj    NetStack.Contracts.IPContract/InterfaceNotFound
      IL_0295:  ldarg.0
      IL_0296:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_029b:  ldc.i4.6
      IL_029c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02a1:  br         IL_035b

      IL_02a6:  ldc.i4.0
      IL_02a7:  stloc.s    V_9
      IL_02a9:  ldarg.0
      IL_02aa:  volatile.
      IL_02ac:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_02b1:  stloc.s    V_10
      IL_02b3:  ldloc.s    V_10
      IL_02b5:  brtrue     IL_02cc

      IL_02ba:  ldarg.0
      IL_02bb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02c0:  stloc.s    V_9
      IL_02c2:  ldarg.0
      IL_02c3:  volatile.
      IL_02c5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_02ca:  stloc.s    V_10
      IL_02cc:  ldloc.s    V_10
      IL_02ce:  ldc.i4.0
      IL_02cf:  ceq
      IL_02d1:  brfalse    IL_02f0

      IL_02d6:  ldloc.s    V_9
      IL_02d8:  brfalse    IL_02e8

      IL_02dd:  ldstr      "Peer is closed"
      IL_02e2:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02e7:  throw

      IL_02e8:  ldarg.0
      IL_02e9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02ee:  br.s       IL_02a6

      IL_02f0:  ldarg.0
      IL_02f1:  ldc.i4.s   9
      IL_02f3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_02f8:  ldloc.s    V_10
      IL_02fa:  ldc.i4.s   9
      IL_02fc:  beq        IL_031e

      IL_0301:  ldstr      "can't recv InterfaceNotFound when next message has"
      + " tag "
      IL_0306:  ldarg.0
      IL_0307:  volatile.
      IL_0309:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_030e:  box        [kernel]System.Int32
      IL_0313:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0318:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_031d:  throw

      IL_031e:  ldarg.0
      IL_031f:  ldc.i4.0
      IL_0320:  volatile.
      IL_0322:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0327:  ldarg.0
      IL_0328:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceNotFound NetStack.Contracts.IPContract/Imp::InterfaceNotFoundPod0
      IL_032d:  initobj    NetStack.Contracts.IPContract/InterfaceNotFound
      IL_0333:  ldarg.0
      IL_0334:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0339:  ldc.i4.s   11
      IL_033b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0340:  br         IL_035b

      IL_0345:  ldstr      "can't recv InterfaceNotFound in state "
      IL_034a:  ldarg.0
      IL_034b:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_0350:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0355:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_035a:  throw

      IL_035b:  ret
    } // end of method Imp::RecvInterfaceNotFound

    .method public instance void  RecvErr() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       528 (0x210)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0028

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.7
      IL_0016:  beq        IL_00bf

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   20
      IL_001e:  beq        IL_015a

      IL_0023:  br         IL_01f9

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.1
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0032:  stloc.2
      IL_0033:  ldloc.2
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.1
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0048:  stloc.2
      IL_0049:  ldloc.2
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_006b

      IL_0052:  ldloc.1
      IL_0053:  brfalse    IL_0063

      IL_0058:  ldstr      "Peer is closed"
      IL_005d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0062:  throw

      IL_0063:  ldarg.0
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0069:  br.s       IL_0028

      IL_006b:  ldarg.0
      IL_006c:  ldc.i4.s   10
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0073:  ldloc.2
      IL_0074:  ldc.i4.s   10
      IL_0076:  beq        IL_0098

      IL_007b:  ldstr      "can't recv Err when next message has tag "
      IL_0080:  ldarg.0
      IL_0081:  volatile.
      IL_0083:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0088:  box        [kernel]System.Int32
      IL_008d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0092:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0097:  throw

      IL_0098:  ldarg.0
      IL_0099:  ldc.i4.0
      IL_009a:  volatile.
      IL_009c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype NetStack.Contracts.IPContract/Err NetStack.Contracts.IPContract/Imp::ErrPod0
      IL_00a7:  initobj    NetStack.Contracts.IPContract/Err
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b3:  ldc.i4.s   16
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ba:  br         IL_020f

      IL_00bf:  ldc.i4.0
      IL_00c0:  stloc.3
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00c9:  stloc.s    V_4
      IL_00cb:  ldloc.s    V_4
      IL_00cd:  brtrue     IL_00e3

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.3
      IL_00d9:  ldarg.0
      IL_00da:  volatile.
      IL_00dc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00e1:  stloc.s    V_4
      IL_00e3:  ldloc.s    V_4
      IL_00e5:  ldc.i4.0
      IL_00e6:  ceq
      IL_00e8:  brfalse    IL_0106

      IL_00ed:  ldloc.3
      IL_00ee:  brfalse    IL_00fe

      IL_00f3:  ldstr      "Peer is closed"
      IL_00f8:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00fd:  throw

      IL_00fe:  ldarg.0
      IL_00ff:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0104:  br.s       IL_00bf

      IL_0106:  ldarg.0
      IL_0107:  ldc.i4.s   10
      IL_0109:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_010e:  ldloc.s    V_4
      IL_0110:  ldc.i4.s   10
      IL_0112:  beq        IL_0134

      IL_0117:  ldstr      "can't recv Err when next message has tag "
      IL_011c:  ldarg.0
      IL_011d:  volatile.
      IL_011f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0124:  box        [kernel]System.Int32
      IL_0129:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_012e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0133:  throw

      IL_0134:  ldarg.0
      IL_0135:  ldc.i4.0
      IL_0136:  volatile.
      IL_0138:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_013d:  ldarg.0
      IL_013e:  ldflda     valuetype NetStack.Contracts.IPContract/Err NetStack.Contracts.IPContract/Imp::ErrPod0
      IL_0143:  initobj    NetStack.Contracts.IPContract/Err
      IL_0149:  ldarg.0
      IL_014a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_014f:  ldc.i4.6
      IL_0150:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0155:  br         IL_020f

      IL_015a:  ldc.i4.0
      IL_015b:  stloc.s    V_5
      IL_015d:  ldarg.0
      IL_015e:  volatile.
      IL_0160:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0165:  stloc.s    V_6
      IL_0167:  ldloc.s    V_6
      IL_0169:  brtrue     IL_0180

      IL_016e:  ldarg.0
      IL_016f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0174:  stloc.s    V_5
      IL_0176:  ldarg.0
      IL_0177:  volatile.
      IL_0179:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_017e:  stloc.s    V_6
      IL_0180:  ldloc.s    V_6
      IL_0182:  ldc.i4.0
      IL_0183:  ceq
      IL_0185:  brfalse    IL_01a4

      IL_018a:  ldloc.s    V_5
      IL_018c:  brfalse    IL_019c

      IL_0191:  ldstr      "Peer is closed"
      IL_0196:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_019b:  throw

      IL_019c:  ldarg.0
      IL_019d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01a2:  br.s       IL_015a

      IL_01a4:  ldarg.0
      IL_01a5:  ldc.i4.s   10
      IL_01a7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01ac:  ldloc.s    V_6
      IL_01ae:  ldc.i4.s   10
      IL_01b0:  beq        IL_01d2

      IL_01b5:  ldstr      "can't recv Err when next message has tag "
      IL_01ba:  ldarg.0
      IL_01bb:  volatile.
      IL_01bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01c2:  box        [kernel]System.Int32
      IL_01c7:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01cc:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d1:  throw

      IL_01d2:  ldarg.0
      IL_01d3:  ldc.i4.0
      IL_01d4:  volatile.
      IL_01d6:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01db:  ldarg.0
      IL_01dc:  ldflda     valuetype NetStack.Contracts.IPContract/Err NetStack.Contracts.IPContract/Imp::ErrPod0
      IL_01e1:  initobj    NetStack.Contracts.IPContract/Err
      IL_01e7:  ldarg.0
      IL_01e8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01ed:  ldc.i4.s   19
      IL_01ef:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01f4:  br         IL_020f

      IL_01f9:  ldstr      "can't recv Err in state "
      IL_01fe:  ldarg.0
      IL_01ff:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_0204:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0209:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_020e:  throw

      IL_020f:  ret
    } // end of method Imp::RecvErr

    .method public instance void  RecvOK() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       862 (0x35e)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0038

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_00cf

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.7
      IL_001e:  beq        IL_016b

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.s   12
      IL_0026:  beq        IL_0209

      IL_002b:  ldloc.0
      IL_002c:  ldc.i4.s   20
      IL_002e:  beq        IL_02a8

      IL_0033:  br         IL_0347

      IL_0038:  ldc.i4.0
      IL_0039:  stloc.1
      IL_003a:  ldarg.0
      IL_003b:  volatile.
      IL_003d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  brtrue     IL_0059

      IL_0049:  ldarg.0
      IL_004a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004f:  stloc.1
      IL_0050:  ldarg.0
      IL_0051:  volatile.
      IL_0053:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0058:  stloc.2
      IL_0059:  ldloc.2
      IL_005a:  ldc.i4.0
      IL_005b:  ceq
      IL_005d:  brfalse    IL_007b

      IL_0062:  ldloc.1
      IL_0063:  brfalse    IL_0073

      IL_0068:  ldstr      "Peer is closed"
      IL_006d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0072:  throw

      IL_0073:  ldarg.0
      IL_0074:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0079:  br.s       IL_0038

      IL_007b:  ldarg.0
      IL_007c:  ldc.i4.s   11
      IL_007e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0083:  ldloc.2
      IL_0084:  ldc.i4.s   11
      IL_0086:  beq        IL_00a8

      IL_008b:  ldstr      "can't recv OK when next message has tag "
      IL_0090:  ldarg.0
      IL_0091:  volatile.
      IL_0093:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0098:  box        [kernel]System.Int32
      IL_009d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00a2:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a7:  throw

      IL_00a8:  ldarg.0
      IL_00a9:  ldc.i4.0
      IL_00aa:  volatile.
      IL_00ac:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00b1:  ldarg.0
      IL_00b2:  ldflda     valuetype NetStack.Contracts.IPContract/OK NetStack.Contracts.IPContract/Imp::OKPod0
      IL_00b7:  initobj    NetStack.Contracts.IPContract/OK
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c3:  ldc.i4.s   16
      IL_00c5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ca:  br         IL_035d

      IL_00cf:  ldc.i4.0
      IL_00d0:  stloc.3
      IL_00d1:  ldarg.0
      IL_00d2:  volatile.
      IL_00d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00d9:  stloc.s    V_4
      IL_00db:  ldloc.s    V_4
      IL_00dd:  brtrue     IL_00f3

      IL_00e2:  ldarg.0
      IL_00e3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e8:  stloc.3
      IL_00e9:  ldarg.0
      IL_00ea:  volatile.
      IL_00ec:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00f1:  stloc.s    V_4
      IL_00f3:  ldloc.s    V_4
      IL_00f5:  ldc.i4.0
      IL_00f6:  ceq
      IL_00f8:  brfalse    IL_0116

      IL_00fd:  ldloc.3
      IL_00fe:  brfalse    IL_010e

      IL_0103:  ldstr      "Peer is closed"
      IL_0108:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_010d:  throw

      IL_010e:  ldarg.0
      IL_010f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0114:  br.s       IL_00cf

      IL_0116:  ldarg.0
      IL_0117:  ldc.i4.s   11
      IL_0119:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_011e:  ldloc.s    V_4
      IL_0120:  ldc.i4.s   11
      IL_0122:  beq        IL_0144

      IL_0127:  ldstr      "can't recv OK when next message has tag "
      IL_012c:  ldarg.0
      IL_012d:  volatile.
      IL_012f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0134:  box        [kernel]System.Int32
      IL_0139:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_013e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0143:  throw

      IL_0144:  ldarg.0
      IL_0145:  ldc.i4.0
      IL_0146:  volatile.
      IL_0148:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_014d:  ldarg.0
      IL_014e:  ldflda     valuetype NetStack.Contracts.IPContract/OK NetStack.Contracts.IPContract/Imp::OKPod0
      IL_0153:  initobj    NetStack.Contracts.IPContract/OK
      IL_0159:  ldarg.0
      IL_015a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_015f:  ldc.i4.s   13
      IL_0161:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0166:  br         IL_035d

      IL_016b:  ldc.i4.0
      IL_016c:  stloc.s    V_5
      IL_016e:  ldarg.0
      IL_016f:  volatile.
      IL_0171:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0176:  stloc.s    V_6
      IL_0178:  ldloc.s    V_6
      IL_017a:  brtrue     IL_0191

      IL_017f:  ldarg.0
      IL_0180:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0185:  stloc.s    V_5
      IL_0187:  ldarg.0
      IL_0188:  volatile.
      IL_018a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_018f:  stloc.s    V_6
      IL_0191:  ldloc.s    V_6
      IL_0193:  ldc.i4.0
      IL_0194:  ceq
      IL_0196:  brfalse    IL_01b5

      IL_019b:  ldloc.s    V_5
      IL_019d:  brfalse    IL_01ad

      IL_01a2:  ldstr      "Peer is closed"
      IL_01a7:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01ac:  throw

      IL_01ad:  ldarg.0
      IL_01ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01b3:  br.s       IL_016b

      IL_01b5:  ldarg.0
      IL_01b6:  ldc.i4.s   11
      IL_01b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01bd:  ldloc.s    V_6
      IL_01bf:  ldc.i4.s   11
      IL_01c1:  beq        IL_01e3

      IL_01c6:  ldstr      "can't recv OK when next message has tag "
      IL_01cb:  ldarg.0
      IL_01cc:  volatile.
      IL_01ce:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01d3:  box        [kernel]System.Int32
      IL_01d8:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01dd:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01e2:  throw

      IL_01e3:  ldarg.0
      IL_01e4:  ldc.i4.0
      IL_01e5:  volatile.
      IL_01e7:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01ec:  ldarg.0
      IL_01ed:  ldflda     valuetype NetStack.Contracts.IPContract/OK NetStack.Contracts.IPContract/Imp::OKPod0
      IL_01f2:  initobj    NetStack.Contracts.IPContract/OK
      IL_01f8:  ldarg.0
      IL_01f9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01fe:  ldc.i4.6
      IL_01ff:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0204:  br         IL_035d

      IL_0209:  ldc.i4.0
      IL_020a:  stloc.s    V_7
      IL_020c:  ldarg.0
      IL_020d:  volatile.
      IL_020f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0214:  stloc.s    V_8
      IL_0216:  ldloc.s    V_8
      IL_0218:  brtrue     IL_022f

      IL_021d:  ldarg.0
      IL_021e:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0223:  stloc.s    V_7
      IL_0225:  ldarg.0
      IL_0226:  volatile.
      IL_0228:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_022d:  stloc.s    V_8
      IL_022f:  ldloc.s    V_8
      IL_0231:  ldc.i4.0
      IL_0232:  ceq
      IL_0234:  brfalse    IL_0253

      IL_0239:  ldloc.s    V_7
      IL_023b:  brfalse    IL_024b

      IL_0240:  ldstr      "Peer is closed"
      IL_0245:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_024a:  throw

      IL_024b:  ldarg.0
      IL_024c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0251:  br.s       IL_0209

      IL_0253:  ldarg.0
      IL_0254:  ldc.i4.s   11
      IL_0256:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_025b:  ldloc.s    V_8
      IL_025d:  ldc.i4.s   11
      IL_025f:  beq        IL_0281

      IL_0264:  ldstr      "can't recv OK when next message has tag "
      IL_0269:  ldarg.0
      IL_026a:  volatile.
      IL_026c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0271:  box        [kernel]System.Int32
      IL_0276:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_027b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0280:  throw

      IL_0281:  ldarg.0
      IL_0282:  ldc.i4.0
      IL_0283:  volatile.
      IL_0285:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_028a:  ldarg.0
      IL_028b:  ldflda     valuetype NetStack.Contracts.IPContract/OK NetStack.Contracts.IPContract/Imp::OKPod0
      IL_0290:  initobj    NetStack.Contracts.IPContract/OK
      IL_0296:  ldarg.0
      IL_0297:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_029c:  ldc.i4.s   11
      IL_029e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02a3:  br         IL_035d

      IL_02a8:  ldc.i4.0
      IL_02a9:  stloc.s    V_9
      IL_02ab:  ldarg.0
      IL_02ac:  volatile.
      IL_02ae:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_02b3:  stloc.s    V_10
      IL_02b5:  ldloc.s    V_10
      IL_02b7:  brtrue     IL_02ce

      IL_02bc:  ldarg.0
      IL_02bd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02c2:  stloc.s    V_9
      IL_02c4:  ldarg.0
      IL_02c5:  volatile.
      IL_02c7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_02cc:  stloc.s    V_10
      IL_02ce:  ldloc.s    V_10
      IL_02d0:  ldc.i4.0
      IL_02d1:  ceq
      IL_02d3:  brfalse    IL_02f2

      IL_02d8:  ldloc.s    V_9
      IL_02da:  brfalse    IL_02ea

      IL_02df:  ldstr      "Peer is closed"
      IL_02e4:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02e9:  throw

      IL_02ea:  ldarg.0
      IL_02eb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02f0:  br.s       IL_02a8

      IL_02f2:  ldarg.0
      IL_02f3:  ldc.i4.s   11
      IL_02f5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_02fa:  ldloc.s    V_10
      IL_02fc:  ldc.i4.s   11
      IL_02fe:  beq        IL_0320

      IL_0303:  ldstr      "can't recv OK when next message has tag "
      IL_0308:  ldarg.0
      IL_0309:  volatile.
      IL_030b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0310:  box        [kernel]System.Int32
      IL_0315:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_031a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_031f:  throw

      IL_0320:  ldarg.0
      IL_0321:  ldc.i4.0
      IL_0322:  volatile.
      IL_0324:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0329:  ldarg.0
      IL_032a:  ldflda     valuetype NetStack.Contracts.IPContract/OK NetStack.Contracts.IPContract/Imp::OKPod0
      IL_032f:  initobj    NetStack.Contracts.IPContract/OK
      IL_0335:  ldarg.0
      IL_0336:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_033b:  ldc.i4.s   19
      IL_033d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0342:  br         IL_035d

      IL_0347:  ldstr      "can't recv OK in state "
      IL_034c:  ldarg.0
      IL_034d:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_0352:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0357:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_035c:  throw

      IL_035d:  ret
    } // end of method Imp::RecvOK

    .method public instance void  SendGetDomainName() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0038:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverGetDomainName0$PST060001D2()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverGetDomainName0$PST060001D3(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   21
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetDomainName in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetDomainName

    .method public instance void  SendSetDomainName(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverSetDomainName0$PST060001D4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverSetDomainName0$PST060001D5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   20
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send SetDomainName in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_007f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendSetDomainName

    .method public instance void  SendGetHostName() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0038:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverGetHostName0$PST060001D6()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverGetHostName0$PST060001D7(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   18
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetHostName in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetHostName

    .method public instance void  SendSetHostName(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverSetHostName0$PST060001D8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverSetHostName0$PST060001D9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   17
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send SetHostName in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_007f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendSetHostName

    .method public instance void  SendIsLocalAddress(uint32 addr) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverIsLocalAddress0$PST060001DA(uint32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverIsLocalAddress0$PST060001DB(uint32,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   15
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send IsLocalAddress in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendIsLocalAddress

    .method public instance void  SendTest() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       40 (0x28)
      .maxstack  4
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  br         IL_0011

      IL_0011:  ldstr      "can't send Test in state "
      IL_0016:  ldarg.0
      IL_0017:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_001c:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0021:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0026:  throw

      IL_0027:  ret
    } // end of method Imp::SendTest

    .method public instance void  SendStartDhcp(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverStartDhcp0$PST060001DC(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverStartDhcp0$PST060001DD(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   14
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send StartDhcp in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_007f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendStartDhcp

    .method public instance void  SendStopDhcp(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverStopDhcp0$PST060001DE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverStopDhcp0$PST060001DF(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   12
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send StopDhcp in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_007f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendStopDhcp

    .method public instance void  SendIsRunningDhcp(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverIsRunningDhcp0$PST060001E0(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverIsRunningDhcp0$PST060001E1(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   10
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send IsRunningDhcp in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_007f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendIsRunningDhcp

    .method public instance void  SendGetInterfaces() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0038:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverGetInterfaces0$PST060001E2()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverGetInterfaces0$PST060001E3(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.8
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send GetInterfaces in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_0070:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendGetInterfaces

    .method public instance void  SendSetInterfaceState(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName,
                                                        uint32 address,
                                                        uint32 netMask,
                                                        uint32 gateway) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       146 (0x92)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_007b

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0053

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  ldarg.2
      IL_0046:  ldarg.3
      IL_0047:  ldarg.s    gateway
      IL_0049:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverSetInterfaceState0$PST060001E4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                  uint32,
                                                                                                                  uint32,
                                                                                                                  uint32)
      IL_004e:  br         IL_0064

      IL_0053:  ldloc.3
      IL_0054:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0059:  ldarg.1
      IL_005a:  ldarg.2
      IL_005b:  ldarg.3
      IL_005c:  ldarg.s    gateway
      IL_005e:  ldarg.0
      IL_005f:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverSetInterfaceState0$PST060001E5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                          uint32,
                                                                                                                          uint32,
                                                                                                                          uint32,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006a:  ldarg.0
      IL_006b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0070:  ldc.i4.7
      IL_0071:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0076:  br         IL_0091

      IL_007b:  ldstr      "can't send SetInterfaceState in state "
      IL_0080:  ldarg.0
      IL_0081:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_0086:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_008b:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ret
    } // end of method Imp::SendSetInterfaceState

    .method public instance void  SendGetInterfaceState(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       138 (0x8a)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0073

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverGetInterfaceState0$PST060001E6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallDeliverGetInterfaceState0$PST060001E7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.5
      IL_0069:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006e:  br         IL_0089

      IL_0073:  ldstr      "can't send GetInterfaceState in state "
      IL_0078:  ldarg.0
      IL_0079:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_007e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0083:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ret
    } // end of method Imp::SendGetInterfaceState

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   24
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   24
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Ready when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0078:  box        [kernel]System.Int32
      IL_007d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype NetStack.Contracts.IPContract/Ready NetStack.Contracts.IPContract/Imp::ReadyPod0
      IL_0097:  initobj    NetStack.Contracts.IPContract/Ready
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   22
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv Ready in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_00ba:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvReady

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.IPContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.IPContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.IPContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.IPContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.IPContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallContent(uint8*,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                            uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.IPContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.IPContract/Imp
      IL_0022:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallContent(uint8*,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                            uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       1062 (0x426)
      .maxstack  16
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               int32 V_29)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0077

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_00b7

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.8
      IL_001e:  beq        IL_00ff

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.s   10
      IL_0026:  beq        IL_0147

      IL_002b:  ldloc.1
      IL_002c:  ldc.i4.s   12
      IL_002e:  beq        IL_018f

      IL_0033:  ldloc.1
      IL_0034:  ldc.i4.s   14
      IL_0036:  beq        IL_01d7

      IL_003b:  ldloc.1
      IL_003c:  ldc.i4.s   15
      IL_003e:  beq        IL_021f

      IL_0043:  ldloc.1
      IL_0044:  ldc.i4.s   17
      IL_0046:  beq        IL_0267

      IL_004b:  ldloc.1
      IL_004c:  ldc.i4.s   18
      IL_004e:  beq        IL_02af

      IL_0053:  ldloc.1
      IL_0054:  ldc.i4.s   20
      IL_0056:  beq        IL_02f7

      IL_005b:  ldloc.1
      IL_005c:  ldc.i4.s   21
      IL_005e:  beq        IL_033f

      IL_0063:  ldloc.1
      IL_0064:  ldc.i4.s   22
      IL_0066:  beq        IL_0387

      IL_006b:  ldloc.1
      IL_006c:  ldc.i4.3
      IL_006d:  beq        IL_03cf

      IL_0072:  br         IL_0417

      IL_0077:  ldc.i4.0
      IL_0078:  stloc.2
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0081:  stloc.3
      IL_0082:  ldloc.3
      IL_0083:  brtrue     IL_0098

      IL_0088:  ldarg.0
      IL_0089:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_008e:  stloc.2
      IL_008f:  ldarg.0
      IL_0090:  volatile.
      IL_0092:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0097:  stloc.3
      IL_0098:  ldloc.3
      IL_0099:  ldc.i4.0
      IL_009a:  ceq
      IL_009c:  brfalse    IL_00af

      IL_00a1:  ldloc.2
      IL_00a2:  brfalse    IL_00af

      IL_00a7:  ldc.i4.m1
      IL_00a8:  stloc.s    V_4
      IL_00aa:  br         IL_041f

      IL_00af:  ldloc.3
      IL_00b0:  stloc.s    V_4
      IL_00b2:  br         IL_041f

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.s    V_5
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00c2:  stloc.s    V_6
      IL_00c4:  ldloc.s    V_6
      IL_00c6:  brtrue     IL_00dd

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.s    V_5
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_00db:  stloc.s    V_6
      IL_00dd:  ldloc.s    V_6
      IL_00df:  ldc.i4.0
      IL_00e0:  ceq
      IL_00e2:  brfalse    IL_00f6

      IL_00e7:  ldloc.s    V_5
      IL_00e9:  brfalse    IL_00f6

      IL_00ee:  ldc.i4.m1
      IL_00ef:  stloc.s    V_4
      IL_00f1:  br         IL_041f

      IL_00f6:  ldloc.s    V_6
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_041f

      IL_00ff:  ldc.i4.0
      IL_0100:  stloc.s    V_7
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_010a:  stloc.s    V_8
      IL_010c:  ldloc.s    V_8
      IL_010e:  brtrue     IL_0125

      IL_0113:  ldarg.0
      IL_0114:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0119:  stloc.s    V_7
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0123:  stloc.s    V_8
      IL_0125:  ldloc.s    V_8
      IL_0127:  ldc.i4.0
      IL_0128:  ceq
      IL_012a:  brfalse    IL_013e

      IL_012f:  ldloc.s    V_7
      IL_0131:  brfalse    IL_013e

      IL_0136:  ldc.i4.m1
      IL_0137:  stloc.s    V_4
      IL_0139:  br         IL_041f

      IL_013e:  ldloc.s    V_8
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_041f

      IL_0147:  ldc.i4.0
      IL_0148:  stloc.s    V_9
      IL_014a:  ldarg.0
      IL_014b:  volatile.
      IL_014d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0152:  stloc.s    V_10
      IL_0154:  ldloc.s    V_10
      IL_0156:  brtrue     IL_016d

      IL_015b:  ldarg.0
      IL_015c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0161:  stloc.s    V_9
      IL_0163:  ldarg.0
      IL_0164:  volatile.
      IL_0166:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_016b:  stloc.s    V_10
      IL_016d:  ldloc.s    V_10
      IL_016f:  ldc.i4.0
      IL_0170:  ceq
      IL_0172:  brfalse    IL_0186

      IL_0177:  ldloc.s    V_9
      IL_0179:  brfalse    IL_0186

      IL_017e:  ldc.i4.m1
      IL_017f:  stloc.s    V_4
      IL_0181:  br         IL_041f

      IL_0186:  ldloc.s    V_10
      IL_0188:  stloc.s    V_4
      IL_018a:  br         IL_041f

      IL_018f:  ldc.i4.0
      IL_0190:  stloc.s    V_11
      IL_0192:  ldarg.0
      IL_0193:  volatile.
      IL_0195:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_019a:  stloc.s    V_12
      IL_019c:  ldloc.s    V_12
      IL_019e:  brtrue     IL_01b5

      IL_01a3:  ldarg.0
      IL_01a4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01a9:  stloc.s    V_11
      IL_01ab:  ldarg.0
      IL_01ac:  volatile.
      IL_01ae:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01b3:  stloc.s    V_12
      IL_01b5:  ldloc.s    V_12
      IL_01b7:  ldc.i4.0
      IL_01b8:  ceq
      IL_01ba:  brfalse    IL_01ce

      IL_01bf:  ldloc.s    V_11
      IL_01c1:  brfalse    IL_01ce

      IL_01c6:  ldc.i4.m1
      IL_01c7:  stloc.s    V_4
      IL_01c9:  br         IL_041f

      IL_01ce:  ldloc.s    V_12
      IL_01d0:  stloc.s    V_4
      IL_01d2:  br         IL_041f

      IL_01d7:  ldc.i4.0
      IL_01d8:  stloc.s    V_13
      IL_01da:  ldarg.0
      IL_01db:  volatile.
      IL_01dd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01e2:  stloc.s    V_14
      IL_01e4:  ldloc.s    V_14
      IL_01e6:  brtrue     IL_01fd

      IL_01eb:  ldarg.0
      IL_01ec:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01f1:  stloc.s    V_13
      IL_01f3:  ldarg.0
      IL_01f4:  volatile.
      IL_01f6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_01fb:  stloc.s    V_14
      IL_01fd:  ldloc.s    V_14
      IL_01ff:  ldc.i4.0
      IL_0200:  ceq
      IL_0202:  brfalse    IL_0216

      IL_0207:  ldloc.s    V_13
      IL_0209:  brfalse    IL_0216

      IL_020e:  ldc.i4.m1
      IL_020f:  stloc.s    V_4
      IL_0211:  br         IL_041f

      IL_0216:  ldloc.s    V_14
      IL_0218:  stloc.s    V_4
      IL_021a:  br         IL_041f

      IL_021f:  ldc.i4.0
      IL_0220:  stloc.s    V_15
      IL_0222:  ldarg.0
      IL_0223:  volatile.
      IL_0225:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_022a:  stloc.s    V_16
      IL_022c:  ldloc.s    V_16
      IL_022e:  brtrue     IL_0245

      IL_0233:  ldarg.0
      IL_0234:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0239:  stloc.s    V_15
      IL_023b:  ldarg.0
      IL_023c:  volatile.
      IL_023e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0243:  stloc.s    V_16
      IL_0245:  ldloc.s    V_16
      IL_0247:  ldc.i4.0
      IL_0248:  ceq
      IL_024a:  brfalse    IL_025e

      IL_024f:  ldloc.s    V_15
      IL_0251:  brfalse    IL_025e

      IL_0256:  ldc.i4.m1
      IL_0257:  stloc.s    V_4
      IL_0259:  br         IL_041f

      IL_025e:  ldloc.s    V_16
      IL_0260:  stloc.s    V_4
      IL_0262:  br         IL_041f

      IL_0267:  ldc.i4.0
      IL_0268:  stloc.s    V_17
      IL_026a:  ldarg.0
      IL_026b:  volatile.
      IL_026d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0272:  stloc.s    V_18
      IL_0274:  ldloc.s    V_18
      IL_0276:  brtrue     IL_028d

      IL_027b:  ldarg.0
      IL_027c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0281:  stloc.s    V_17
      IL_0283:  ldarg.0
      IL_0284:  volatile.
      IL_0286:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_028b:  stloc.s    V_18
      IL_028d:  ldloc.s    V_18
      IL_028f:  ldc.i4.0
      IL_0290:  ceq
      IL_0292:  brfalse    IL_02a6

      IL_0297:  ldloc.s    V_17
      IL_0299:  brfalse    IL_02a6

      IL_029e:  ldc.i4.m1
      IL_029f:  stloc.s    V_4
      IL_02a1:  br         IL_041f

      IL_02a6:  ldloc.s    V_18
      IL_02a8:  stloc.s    V_4
      IL_02aa:  br         IL_041f

      IL_02af:  ldc.i4.0
      IL_02b0:  stloc.s    V_19
      IL_02b2:  ldarg.0
      IL_02b3:  volatile.
      IL_02b5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_02ba:  stloc.s    V_20
      IL_02bc:  ldloc.s    V_20
      IL_02be:  brtrue     IL_02d5

      IL_02c3:  ldarg.0
      IL_02c4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02c9:  stloc.s    V_19
      IL_02cb:  ldarg.0
      IL_02cc:  volatile.
      IL_02ce:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_02d3:  stloc.s    V_20
      IL_02d5:  ldloc.s    V_20
      IL_02d7:  ldc.i4.0
      IL_02d8:  ceq
      IL_02da:  brfalse    IL_02ee

      IL_02df:  ldloc.s    V_19
      IL_02e1:  brfalse    IL_02ee

      IL_02e6:  ldc.i4.m1
      IL_02e7:  stloc.s    V_4
      IL_02e9:  br         IL_041f

      IL_02ee:  ldloc.s    V_20
      IL_02f0:  stloc.s    V_4
      IL_02f2:  br         IL_041f

      IL_02f7:  ldc.i4.0
      IL_02f8:  stloc.s    V_21
      IL_02fa:  ldarg.0
      IL_02fb:  volatile.
      IL_02fd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0302:  stloc.s    V_22
      IL_0304:  ldloc.s    V_22
      IL_0306:  brtrue     IL_031d

      IL_030b:  ldarg.0
      IL_030c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0311:  stloc.s    V_21
      IL_0313:  ldarg.0
      IL_0314:  volatile.
      IL_0316:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_031b:  stloc.s    V_22
      IL_031d:  ldloc.s    V_22
      IL_031f:  ldc.i4.0
      IL_0320:  ceq
      IL_0322:  brfalse    IL_0336

      IL_0327:  ldloc.s    V_21
      IL_0329:  brfalse    IL_0336

      IL_032e:  ldc.i4.m1
      IL_032f:  stloc.s    V_4
      IL_0331:  br         IL_041f

      IL_0336:  ldloc.s    V_22
      IL_0338:  stloc.s    V_4
      IL_033a:  br         IL_041f

      IL_033f:  ldc.i4.0
      IL_0340:  stloc.s    V_23
      IL_0342:  ldarg.0
      IL_0343:  volatile.
      IL_0345:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_034a:  stloc.s    V_24
      IL_034c:  ldloc.s    V_24
      IL_034e:  brtrue     IL_0365

      IL_0353:  ldarg.0
      IL_0354:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0359:  stloc.s    V_23
      IL_035b:  ldarg.0
      IL_035c:  volatile.
      IL_035e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0363:  stloc.s    V_24
      IL_0365:  ldloc.s    V_24
      IL_0367:  ldc.i4.0
      IL_0368:  ceq
      IL_036a:  brfalse    IL_037e

      IL_036f:  ldloc.s    V_23
      IL_0371:  brfalse    IL_037e

      IL_0376:  ldc.i4.m1
      IL_0377:  stloc.s    V_4
      IL_0379:  br         IL_041f

      IL_037e:  ldloc.s    V_24
      IL_0380:  stloc.s    V_4
      IL_0382:  br         IL_041f

      IL_0387:  ldc.i4.0
      IL_0388:  stloc.s    V_25
      IL_038a:  ldarg.0
      IL_038b:  volatile.
      IL_038d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0392:  stloc.s    V_26
      IL_0394:  ldloc.s    V_26
      IL_0396:  brtrue     IL_03ad

      IL_039b:  ldarg.0
      IL_039c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03a1:  stloc.s    V_25
      IL_03a3:  ldarg.0
      IL_03a4:  volatile.
      IL_03a6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_03ab:  stloc.s    V_26
      IL_03ad:  ldloc.s    V_26
      IL_03af:  ldc.i4.0
      IL_03b0:  ceq
      IL_03b2:  brfalse    IL_03c6

      IL_03b7:  ldloc.s    V_25
      IL_03b9:  brfalse    IL_03c6

      IL_03be:  ldc.i4.m1
      IL_03bf:  stloc.s    V_4
      IL_03c1:  br         IL_041f

      IL_03c6:  ldloc.s    V_26
      IL_03c8:  stloc.s    V_4
      IL_03ca:  br         IL_041f

      IL_03cf:  ldc.i4.0
      IL_03d0:  stloc.s    V_27
      IL_03d2:  ldarg.0
      IL_03d3:  volatile.
      IL_03d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_03da:  stloc.s    V_28
      IL_03dc:  ldloc.s    V_28
      IL_03de:  brtrue     IL_03f5

      IL_03e3:  ldarg.0
      IL_03e4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03e9:  stloc.s    V_27
      IL_03eb:  ldarg.0
      IL_03ec:  volatile.
      IL_03ee:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_03f3:  stloc.s    V_28
      IL_03f5:  ldloc.s    V_28
      IL_03f7:  ldc.i4.0
      IL_03f8:  ceq
      IL_03fa:  brfalse    IL_040e

      IL_03ff:  ldloc.s    V_27
      IL_0401:  brfalse    IL_040e

      IL_0406:  ldc.i4.m1
      IL_0407:  stloc.s    V_4
      IL_0409:  br         IL_041f

      IL_040e:  ldloc.s    V_28
      IL_0410:  stloc.s    V_4
      IL_0412:  br         IL_041f

      IL_0417:  ldc.i4.m1
      IL_0418:  stloc.s    V_4
      IL_041a:  br         IL_041f

      IL_041f:  ldloc.s    V_4
      IL_0421:  stloc.s    V_29
      IL_0423:  ldloc.s    V_4
      IL_0425:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.IPContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverInterfaceList0$PST06000195(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) names) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceList NetStack.Contracts.IPContract/Imp::InterfaceListPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.3
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.3
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverInterfaceList0

    .method privatescope instance void  MarshallDeliverInterfaceList0$PST06000196(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) names,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceList0$PST06000195(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceList NetStack.Contracts.IPContract/Imp::InterfaceListPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/InterfaceList::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverInterfaceList0

    .method privatescope instance void  DeliverInterfaceState0$PST06000197(valuetype NetStack.Contracts.InterfaceInfo ifInfo) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceState NetStack.Contracts.IPContract/Imp::InterfaceStatePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.InterfaceInfo NetStack.Contracts.IPContract/InterfaceState::ifInfo
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.4
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.4
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverInterfaceState0

    .method privatescope instance void  MarshallDeliverInterfaceState0$PST06000198(valuetype NetStack.Contracts.InterfaceInfo ifInfo,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceState0$PST06000197(valuetype NetStack.Contracts.InterfaceInfo)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceState NetStack.Contracts.IPContract/Imp::InterfaceStatePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/InterfaceState::MarshallAll(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverInterfaceState0

    .method privatescope instance void  DeliverHostName0$PST06000199(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) hostname) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/HostName NetStack.Contracts.IPContract/Imp::HostNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverHostName0

    .method privatescope instance void  MarshallDeliverHostName0$PST0600019A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) hostname,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverHostName0$PST06000199(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/HostName NetStack.Contracts.IPContract/Imp::HostNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/HostName::MarshallAll(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverHostName0

    .method privatescope instance void  DeliverDomainName0$PST0600019B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) domainName) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/DomainName NetStack.Contracts.IPContract/Imp::DomainNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.6
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.6
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverDomainName0

    .method privatescope instance void  MarshallDeliverDomainName0$PST0600019C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) domainName,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverDomainName0$PST0600019B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/DomainName NetStack.Contracts.IPContract/Imp::DomainNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/DomainName::MarshallAll(uint8*,
                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                               int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverDomainName0

    .method privatescope instance void  DeliverRunning0$PST0600019D(bool isRunning) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/Running NetStack.Contracts.IPContract/Imp::RunningPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      bool NetStack.Contracts.IPContract/Running::isRunning
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.7
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.7
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverRunning0

    .method privatescope instance void  MarshallDeliverRunning0$PST0600019E(bool isRunning,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverRunning0$PST0600019D(bool)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/Running NetStack.Contracts.IPContract/Imp::RunningPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/Running::MarshallAll(uint8*,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                            int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverRunning0

    .method privatescope instance void  DeliverIsLocal0$PST0600019F(bool isLocal) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/IsLocal NetStack.Contracts.IPContract/Imp::IsLocalPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      bool NetStack.Contracts.IPContract/IsLocal::isLocal
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.8
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.8
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverIsLocal0

    .method privatescope instance void  MarshallDeliverIsLocal0$PST060001A0(bool isLocal,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverIsLocal0$PST0600019F(bool)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/IsLocal NetStack.Contracts.IPContract/Imp::IsLocalPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/IsLocal::MarshallAll(uint8*,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                            int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverIsLocal0

    .method privatescope instance void  DeliverInterfaceNotFound0$PST060001A1() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   9
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   9
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverInterfaceNotFound0

    .method privatescope instance void  MarshallDeliverInterfaceNotFound0$PST060001A2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceNotFound0$PST060001A1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.IPContract/InterfaceNotFound NetStack.Contracts.IPContract/Imp::InterfaceNotFoundPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.IPContract/InterfaceNotFound::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverInterfaceNotFound0

    .method privatescope instance void  DeliverErr0$PST060001A3() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   10
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   10
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverErr0

    .method privatescope instance void  MarshallDeliverErr0$PST060001A4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverErr0$PST060001A3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.IPContract/Err NetStack.Contracts.IPContract/Imp::ErrPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.IPContract/Err::MarshallAll(uint8*,
                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                        int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverErr0

    .method privatescope instance void  DeliverOK0$PST060001A5() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverOK0

    .method privatescope instance void  MarshallDeliverOK0$PST060001A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverOK0$PST060001A5()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.IPContract/OK NetStack.Contracts.IPContract/Imp::OKPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.IPContract/OK::MarshallAll(uint8*,
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverOK0

    .method privatescope instance void  DeliverReady0$PST060001A7() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   24
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   24
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST060001A8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverReady0$PST060001A7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.IPContract/Ready NetStack.Contracts.IPContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.IPContract/Ready::MarshallAll(uint8*,
                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                          int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverContractNotSupported0$PST060001A9() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST060001AA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverContractNotSupported0$PST060001A9()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.IPContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.IPContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype NetStack.Contracts.IPContract/GetDomainName GetDomainNamePod0
    .field family valuetype NetStack.Contracts.IPContract/SetDomainName SetDomainNamePod0
    .field family valuetype NetStack.Contracts.IPContract/GetHostName GetHostNamePod0
    .field family valuetype NetStack.Contracts.IPContract/SetHostName SetHostNamePod0
    .field family valuetype NetStack.Contracts.IPContract/IsLocalAddress IsLocalAddressPod0
    .field family valuetype NetStack.Contracts.IPContract/StartDhcp StartDhcpPod0
    .field family valuetype NetStack.Contracts.IPContract/StopDhcp StopDhcpPod0
    .field family valuetype NetStack.Contracts.IPContract/IsRunningDhcp IsRunningDhcpPod0
    .field family valuetype NetStack.Contracts.IPContract/GetInterfaces GetInterfacesPod0
    .field family valuetype NetStack.Contracts.IPContract/SetInterfaceState SetInterfaceStatePod0
    .field family valuetype NetStack.Contracts.IPContract/GetInterfaceState GetInterfaceStatePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.IPContract::CanonicalState$PST0600002D(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.IPContract::CanonicalState$PST0600002D(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       424 (0x1a8)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_00b2

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   21
      IL_0017:  beq        IL_00bd

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   20
      IL_001f:  beq        IL_00c8

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   19
      IL_0027:  beq        IL_00d3

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   18
      IL_002f:  beq        IL_00de

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   17
      IL_0037:  beq        IL_00e9

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   16
      IL_003f:  beq        IL_00f4

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   15
      IL_0047:  beq        IL_00ff

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   14
      IL_004f:  beq        IL_010a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   13
      IL_0057:  beq        IL_0115

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  beq        IL_0120

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_012b

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   10
      IL_006f:  beq        IL_0136

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   9
      IL_0077:  beq        IL_0141

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.8
      IL_007e:  beq        IL_014c

      IL_0083:  ldloc.0
      IL_0084:  ldc.i4.7
      IL_0085:  beq        IL_0157

      IL_008a:  ldloc.0
      IL_008b:  ldc.i4.6
      IL_008c:  beq        IL_0162

      IL_0091:  ldloc.0
      IL_0092:  ldc.i4.5
      IL_0093:  beq        IL_016d

      IL_0098:  ldloc.0
      IL_0099:  ldc.i4.4
      IL_009a:  beq        IL_0178

      IL_009f:  ldloc.0
      IL_00a0:  ldc.i4.3
      IL_00a1:  beq        IL_0183

      IL_00a6:  ldloc.0
      IL_00a7:  ldc.i4.2
      IL_00a8:  beq        IL_018e

      IL_00ad:  br         IL_0199

      IL_00b2:  ldstr      "ReadyState"
      IL_00b7:  stloc.1
      IL_00b8:  br         IL_01a4

      IL_00bd:  ldstr      "ReadyState$0"
      IL_00c2:  stloc.1
      IL_00c3:  br         IL_01a4

      IL_00c8:  ldstr      "ReadyState$1"
      IL_00cd:  stloc.1
      IL_00ce:  br         IL_01a4

      IL_00d3:  ldstr      "ReadyState$2"
      IL_00d8:  stloc.1
      IL_00d9:  br         IL_01a4

      IL_00de:  ldstr      "ReadyState$3"
      IL_00e3:  stloc.1
      IL_00e4:  br         IL_01a4

      IL_00e9:  ldstr      "ReadyState$4"
      IL_00ee:  stloc.1
      IL_00ef:  br         IL_01a4

      IL_00f4:  ldstr      "ReadyState$5"
      IL_00f9:  stloc.1
      IL_00fa:  br         IL_01a4

      IL_00ff:  ldstr      "ReadyState$6"
      IL_0104:  stloc.1
      IL_0105:  br         IL_01a4

      IL_010a:  ldstr      "ReadyState$7"
      IL_010f:  stloc.1
      IL_0110:  br         IL_01a4

      IL_0115:  ldstr      "ReadyState$8"
      IL_011a:  stloc.1
      IL_011b:  br         IL_01a4

      IL_0120:  ldstr      "ReadyState$9"
      IL_0125:  stloc.1
      IL_0126:  br         IL_01a4

      IL_012b:  ldstr      "ReadyState$10"
      IL_0130:  stloc.1
      IL_0131:  br         IL_01a4

      IL_0136:  ldstr      "ReadyState$11"
      IL_013b:  stloc.1
      IL_013c:  br         IL_01a4

      IL_0141:  ldstr      "ReadyState$12"
      IL_0146:  stloc.1
      IL_0147:  br         IL_01a4

      IL_014c:  ldstr      "ReadyState$13"
      IL_0151:  stloc.1
      IL_0152:  br         IL_01a4

      IL_0157:  ldstr      "ReadyState$14"
      IL_015c:  stloc.1
      IL_015d:  br         IL_01a4

      IL_0162:  ldstr      "ReadyState$15"
      IL_0167:  stloc.1
      IL_0168:  br         IL_01a4

      IL_016d:  ldstr      "ReadyState$16"
      IL_0172:  stloc.1
      IL_0173:  br         IL_01a4

      IL_0178:  ldstr      "ReadyState$17"
      IL_017d:  stloc.1
      IL_017e:  br         IL_01a4

      IL_0183:  ldstr      "Start"
      IL_0188:  stloc.1
      IL_0189:  br         IL_01a4

      IL_018e:  ldstr      "DoneState"
      IL_0193:  stloc.1
      IL_0194:  br         IL_01a4

      IL_0199:  ldstr      "<protocol terminated>"
      IL_019e:  stloc.1
      IL_019f:  br         IL_01a4

      IL_01a4:  ldloc.1
      IL_01a5:  stloc.2
      IL_01a6:  ldloc.1
      IL_01a7:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendInterfaceList(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) names) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       186 (0xba)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               int32 V_6,
               int32 V_7,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00a3

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_007e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_5
      IL_0036:  ldlen
      IL_0037:  stloc.s    V_6
      IL_0039:  ldc.i4.0
      IL_003a:  stloc.s    V_7
      IL_003c:  ldloc.s    V_7
      IL_003e:  ldloc.s    V_6
      IL_0040:  bge        IL_0064

      IL_0045:  ldloc.s    V_5
      IL_0047:  ldloc.s    V_7
      IL_0049:  ldelem.i
      IL_004a:  stloc.s    V_8
      IL_004c:  ldloc.s    V_8
      IL_004e:  brfalse    IL_005c

      IL_0053:  ldloc.s    V_4
      IL_0055:  ldloc.s    V_8
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_005c:  ldloc.s    V_7
      IL_005e:  ldc.i4.1
      IL_005f:  add
      IL_0060:  stloc.s    V_7
      IL_0062:  br.s       IL_003c

      IL_0064:  ldloc.s    V_4
      IL_0066:  ldloc.s    V_5
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_006d:  ldloc.3
      IL_006e:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0073:  ldarg.1
      IL_0074:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceList0$PST06000195(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0079:  br         IL_008b

      IL_007e:  ldloc.3
      IL_007f:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0084:  ldarg.1
      IL_0085:  ldarg.0
      IL_0086:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverInterfaceList0$PST06000196(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_008b:  ldarg.0
      IL_008c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0097:  ldc.i4.s   22
      IL_0099:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_009e:  br         IL_00b9

      IL_00a3:  ldstr      "can't send InterfaceList in state "
      IL_00a8:  ldarg.0
      IL_00a9:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00ae:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00b3:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00b8:  throw

      IL_00b9:  ret
    } // end of method Exp::SendInterfaceList

    .method public instance void  SendInterfaceState(valuetype NetStack.Contracts.InterfaceInfo ifInfo) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       134 (0x86)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_006f

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004b

      IL_0031:  ldarga.s   ifInfo
      IL_0033:  ldloc.s    V_4
      IL_0035:  call       instance void NetStack.Contracts.InterfaceInfo::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0040:  ldarg.1
      IL_0041:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceState0$PST06000197(valuetype NetStack.Contracts.InterfaceInfo)
      IL_0046:  br         IL_0058

      IL_004b:  ldloc.3
      IL_004c:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverInterfaceState0$PST06000198(valuetype NetStack.Contracts.InterfaceInfo,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0058:  ldarg.0
      IL_0059:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005e:  ldarg.0
      IL_005f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0064:  ldc.i4.4
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006a:  br         IL_0085

      IL_006f:  ldstr      "can't send InterfaceState in state "
      IL_0074:  ldarg.0
      IL_0075:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_007a:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_007f:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0084:  throw

      IL_0085:  ret
    } // end of method Exp::SendInterfaceState

    .method public instance void  SendHostName(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) hostname) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverHostName0$PST06000199(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverHostName0$PST0600019A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   22
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send HostName in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_007f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendHostName

    .method public instance void  SendDomainName(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) domainName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverDomainName0$PST0600019B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverDomainName0$PST0600019C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   22
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send DomainName in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_007f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendDomainName

    .method public instance void  SendRunning(bool isRunning) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverRunning0$PST0600019D(bool)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverRunning0$PST0600019E(bool,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send Running in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendRunning

    .method public instance void  SendIsLocal(bool isLocal) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverIsLocal0$PST0600019F(bool)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverIsLocal0$PST060001A0(bool,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   22
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send IsLocal in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendIsLocal

    .method public instance void  SendInterfaceNotFound() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       489 (0x1e9)
      .maxstack  30
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0037

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.5
      IL_0016:  beq        IL_0084

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   10
      IL_001e:  beq        IL_00d7

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_012b

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.s   12
      IL_002d:  beq        IL_017e

      IL_0032:  br         IL_01d2

      IL_0037:  ldarg.0
      IL_0038:  ldloca.s   V_1
      IL_003a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_003f:  stloc.2
      IL_0040:  ldloc.2
      IL_0041:  stloc.3
      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0048:  stloc.s    V_4
      IL_004a:  ldloc.1
      IL_004b:  brtrue     IL_0060

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0056:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceNotFound0$PST060001A1()
      IL_005b:  br         IL_006c

      IL_0060:  ldloc.3
      IL_0061:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0066:  ldarg.0
      IL_0067:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverInterfaceNotFound0$PST060001A2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   13
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_01e8

      IL_0084:  ldarg.0
      IL_0085:  ldloca.s   V_5
      IL_0087:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  stloc.s    V_7
      IL_0092:  ldloc.s    V_7
      IL_0094:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0099:  stloc.s    V_8
      IL_009b:  ldloc.s    V_5
      IL_009d:  brtrue     IL_00b3

      IL_00a2:  ldloc.s    V_7
      IL_00a4:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00a9:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceNotFound0$PST060001A1()
      IL_00ae:  br         IL_00c0

      IL_00b3:  ldloc.s    V_7
      IL_00b5:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00ba:  ldarg.0
      IL_00bb:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverInterfaceNotFound0$PST060001A2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c6:  ldarg.0
      IL_00c7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cc:  ldc.i4.4
      IL_00cd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d2:  br         IL_01e8

      IL_00d7:  ldarg.0
      IL_00d8:  ldloca.s   V_9
      IL_00da:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00df:  stloc.s    V_10
      IL_00e1:  ldloc.s    V_10
      IL_00e3:  stloc.s    V_11
      IL_00e5:  ldloc.s    V_11
      IL_00e7:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00ec:  stloc.s    V_12
      IL_00ee:  ldloc.s    V_9
      IL_00f0:  brtrue     IL_0106

      IL_00f5:  ldloc.s    V_11
      IL_00f7:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00fc:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceNotFound0$PST060001A1()
      IL_0101:  br         IL_0113

      IL_0106:  ldloc.s    V_11
      IL_0108:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_010d:  ldarg.0
      IL_010e:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverInterfaceNotFound0$PST060001A2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0113:  ldarg.0
      IL_0114:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0119:  ldarg.0
      IL_011a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_011f:  ldc.i4.s   9
      IL_0121:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0126:  br         IL_01e8

      IL_012b:  ldarg.0
      IL_012c:  ldloca.s   V_13
      IL_012e:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0133:  stloc.s    V_14
      IL_0135:  ldloc.s    V_14
      IL_0137:  stloc.s    V_15
      IL_0139:  ldloc.s    V_15
      IL_013b:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0140:  stloc.s    V_16
      IL_0142:  ldloc.s    V_13
      IL_0144:  brtrue     IL_015a

      IL_0149:  ldloc.s    V_15
      IL_014b:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0150:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceNotFound0$PST060001A1()
      IL_0155:  br         IL_0167

      IL_015a:  ldloc.s    V_15
      IL_015c:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0161:  ldarg.0
      IL_0162:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverInterfaceNotFound0$PST060001A2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0167:  ldarg.0
      IL_0168:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_016d:  ldarg.0
      IL_016e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0173:  ldc.i4.6
      IL_0174:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0179:  br         IL_01e8

      IL_017e:  ldarg.0
      IL_017f:  ldloca.s   V_17
      IL_0181:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0186:  stloc.s    V_18
      IL_0188:  ldloc.s    V_18
      IL_018a:  stloc.s    V_19
      IL_018c:  ldloc.s    V_19
      IL_018e:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0193:  stloc.s    V_20
      IL_0195:  ldloc.s    V_17
      IL_0197:  brtrue     IL_01ad

      IL_019c:  ldloc.s    V_19
      IL_019e:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_01a3:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverInterfaceNotFound0$PST060001A1()
      IL_01a8:  br         IL_01ba

      IL_01ad:  ldloc.s    V_19
      IL_01af:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_01b4:  ldarg.0
      IL_01b5:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverInterfaceNotFound0$PST060001A2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01ba:  ldarg.0
      IL_01bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01c0:  ldarg.0
      IL_01c1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01c6:  ldc.i4.s   11
      IL_01c8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01cd:  br         IL_01e8

      IL_01d2:  ldstr      "can't send InterfaceNotFound in state "
      IL_01d7:  ldarg.0
      IL_01d8:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_01dd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_01e2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_01e7:  throw

      IL_01e8:  ret
    } // end of method Exp::SendInterfaceNotFound

    .method public instance void  SendErr() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       307 (0x133)
      .maxstack  20
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0028

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.7
      IL_0016:  beq        IL_0075

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   20
      IL_001e:  beq        IL_00c8

      IL_0023:  br         IL_011c

      IL_0028:  ldarg.0
      IL_0029:  ldloca.s   V_1
      IL_002b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0030:  stloc.2
      IL_0031:  ldloc.2
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0039:  stloc.s    V_4
      IL_003b:  ldloc.1
      IL_003c:  brtrue     IL_0051

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0047:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverErr0$PST060001A3()
      IL_004c:  br         IL_005d

      IL_0051:  ldloc.3
      IL_0052:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0057:  ldarg.0
      IL_0058:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverErr0$PST060001A4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005d:  ldarg.0
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0063:  ldarg.0
      IL_0064:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0069:  ldc.i4.s   16
      IL_006b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0070:  br         IL_0132

      IL_0075:  ldarg.0
      IL_0076:  ldloca.s   V_5
      IL_0078:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_007d:  stloc.s    V_6
      IL_007f:  ldloc.s    V_6
      IL_0081:  stloc.s    V_7
      IL_0083:  ldloc.s    V_7
      IL_0085:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_008a:  stloc.s    V_8
      IL_008c:  ldloc.s    V_5
      IL_008e:  brtrue     IL_00a4

      IL_0093:  ldloc.s    V_7
      IL_0095:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_009a:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverErr0$PST060001A3()
      IL_009f:  br         IL_00b1

      IL_00a4:  ldloc.s    V_7
      IL_00a6:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00ab:  ldarg.0
      IL_00ac:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverErr0$PST060001A4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bd:  ldc.i4.6
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_0132

      IL_00c8:  ldarg.0
      IL_00c9:  ldloca.s   V_9
      IL_00cb:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d0:  stloc.s    V_10
      IL_00d2:  ldloc.s    V_10
      IL_00d4:  stloc.s    V_11
      IL_00d6:  ldloc.s    V_11
      IL_00d8:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00dd:  stloc.s    V_12
      IL_00df:  ldloc.s    V_9
      IL_00e1:  brtrue     IL_00f7

      IL_00e6:  ldloc.s    V_11
      IL_00e8:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00ed:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverErr0$PST060001A3()
      IL_00f2:  br         IL_0104

      IL_00f7:  ldloc.s    V_11
      IL_00f9:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00fe:  ldarg.0
      IL_00ff:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverErr0$PST060001A4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0104:  ldarg.0
      IL_0105:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_010a:  ldarg.0
      IL_010b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0110:  ldc.i4.s   19
      IL_0112:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0117:  br         IL_0132

      IL_011c:  ldstr      "can't send Err in state "
      IL_0121:  ldarg.0
      IL_0122:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_0127:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_012c:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0131:  throw

      IL_0132:  ret
    } // end of method Exp::SendErr

    .method public instance void  SendOK() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       491 (0x1eb)
      .maxstack  30
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0038

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_0085

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.7
      IL_001e:  beq        IL_00d9

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.s   12
      IL_0026:  beq        IL_012c

      IL_002b:  ldloc.0
      IL_002c:  ldc.i4.s   20
      IL_002e:  beq        IL_0180

      IL_0033:  br         IL_01d4

      IL_0038:  ldarg.0
      IL_0039:  ldloca.s   V_1
      IL_003b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0040:  stloc.2
      IL_0041:  ldloc.2
      IL_0042:  stloc.3
      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0049:  stloc.s    V_4
      IL_004b:  ldloc.1
      IL_004c:  brtrue     IL_0061

      IL_0051:  ldloc.3
      IL_0052:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0057:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverOK0$PST060001A5()
      IL_005c:  br         IL_006d

      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0067:  ldarg.0
      IL_0068:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverOK0$PST060001A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006d:  ldarg.0
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0073:  ldarg.0
      IL_0074:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0079:  ldc.i4.s   16
      IL_007b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0080:  br         IL_01ea

      IL_0085:  ldarg.0
      IL_0086:  ldloca.s   V_5
      IL_0088:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_008d:  stloc.s    V_6
      IL_008f:  ldloc.s    V_6
      IL_0091:  stloc.s    V_7
      IL_0093:  ldloc.s    V_7
      IL_0095:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_009a:  stloc.s    V_8
      IL_009c:  ldloc.s    V_5
      IL_009e:  brtrue     IL_00b4

      IL_00a3:  ldloc.s    V_7
      IL_00a5:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00aa:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverOK0$PST060001A5()
      IL_00af:  br         IL_00c1

      IL_00b4:  ldloc.s    V_7
      IL_00b6:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00bb:  ldarg.0
      IL_00bc:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverOK0$PST060001A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c7:  ldarg.0
      IL_00c8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cd:  ldc.i4.s   13
      IL_00cf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d4:  br         IL_01ea

      IL_00d9:  ldarg.0
      IL_00da:  ldloca.s   V_9
      IL_00dc:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00e1:  stloc.s    V_10
      IL_00e3:  ldloc.s    V_10
      IL_00e5:  stloc.s    V_11
      IL_00e7:  ldloc.s    V_11
      IL_00e9:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00ee:  stloc.s    V_12
      IL_00f0:  ldloc.s    V_9
      IL_00f2:  brtrue     IL_0108

      IL_00f7:  ldloc.s    V_11
      IL_00f9:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_00fe:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverOK0$PST060001A5()
      IL_0103:  br         IL_0115

      IL_0108:  ldloc.s    V_11
      IL_010a:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_010f:  ldarg.0
      IL_0110:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverOK0$PST060001A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0115:  ldarg.0
      IL_0116:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_011b:  ldarg.0
      IL_011c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0121:  ldc.i4.6
      IL_0122:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0127:  br         IL_01ea

      IL_012c:  ldarg.0
      IL_012d:  ldloca.s   V_13
      IL_012f:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0134:  stloc.s    V_14
      IL_0136:  ldloc.s    V_14
      IL_0138:  stloc.s    V_15
      IL_013a:  ldloc.s    V_15
      IL_013c:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0141:  stloc.s    V_16
      IL_0143:  ldloc.s    V_13
      IL_0145:  brtrue     IL_015b

      IL_014a:  ldloc.s    V_15
      IL_014c:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0151:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverOK0$PST060001A5()
      IL_0156:  br         IL_0168

      IL_015b:  ldloc.s    V_15
      IL_015d:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0162:  ldarg.0
      IL_0163:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverOK0$PST060001A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0168:  ldarg.0
      IL_0169:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_016e:  ldarg.0
      IL_016f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0174:  ldc.i4.s   11
      IL_0176:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_017b:  br         IL_01ea

      IL_0180:  ldarg.0
      IL_0181:  ldloca.s   V_17
      IL_0183:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0188:  stloc.s    V_18
      IL_018a:  ldloc.s    V_18
      IL_018c:  stloc.s    V_19
      IL_018e:  ldloc.s    V_19
      IL_0190:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0195:  stloc.s    V_20
      IL_0197:  ldloc.s    V_17
      IL_0199:  brtrue     IL_01af

      IL_019e:  ldloc.s    V_19
      IL_01a0:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_01a5:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverOK0$PST060001A5()
      IL_01aa:  br         IL_01bc

      IL_01af:  ldloc.s    V_19
      IL_01b1:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_01b6:  ldarg.0
      IL_01b7:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverOK0$PST060001A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01bc:  ldarg.0
      IL_01bd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01c2:  ldarg.0
      IL_01c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01c8:  ldc.i4.s   19
      IL_01ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01cf:  br         IL_01ea

      IL_01d4:  ldstr      "can't send OK in state "
      IL_01d9:  ldarg.0
      IL_01da:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_01df:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_01e4:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_01e9:  throw

      IL_01ea:  ret
    } // end of method Exp::SendOK

    .method public instance void  RecvGetDomainName() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetDomainName when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.IPContract/GetDomainName NetStack.Contracts.IPContract/Exp::GetDomainNamePod0
      IL_0098:  initobj    NetStack.Contracts.IPContract/GetDomainName
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   21
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv GetDomainName in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00bb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvGetDomainName

    .method public instance void  RecvSetDomainName([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv SetDomainName when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.IPContract/SetDomainName NetStack.Contracts.IPContract/Exp::SetDomainNamePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.IPContract/SetDomainName NetStack.Contracts.IPContract/Exp::SetDomainNamePod0
      IL_00a5:  initobj    NetStack.Contracts.IPContract/SetDomainName
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   20
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv SetDomainName in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvSetDomainName

    .method public instance void  RecvGetHostName() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   14
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetHostName when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.IPContract/GetHostName NetStack.Contracts.IPContract/Exp::GetHostNamePod0
      IL_0098:  initobj    NetStack.Contracts.IPContract/GetHostName
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   18
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv GetHostName in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00bb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvGetHostName

    .method public instance void  RecvSetHostName([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   15
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   15
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv SetHostName when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.IPContract/SetHostName NetStack.Contracts.IPContract/Exp::SetHostNamePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.IPContract/SetHostName NetStack.Contracts.IPContract/Exp::SetHostNamePod0
      IL_00a5:  initobj    NetStack.Contracts.IPContract/SetHostName
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   17
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv SetHostName in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvSetHostName

    .method public instance void  RecvIsLocalAddress([out] uint32& addr) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   16
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   16
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv IsLocalAddress when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.IPContract/IsLocalAddress NetStack.Contracts.IPContract/Exp::IsLocalAddressPod0
      IL_0090:  ldfld      uint32 NetStack.Contracts.IPContract/IsLocalAddress::addr
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.IPContract/IsLocalAddress NetStack.Contracts.IPContract/Exp::IsLocalAddressPod0
      IL_00a5:  initobj    NetStack.Contracts.IPContract/IsLocalAddress
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   15
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv IsLocalAddress in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvIsLocalAddress

    .method public instance void  RecvTest() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       40 (0x28)
      .maxstack  4
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  br         IL_0011

      IL_0011:  ldstr      "can't recv Test in state "
      IL_0016:  ldarg.0
      IL_0017:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_001c:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0021:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0026:  throw

      IL_0027:  ret
    } // end of method Exp::RecvTest

    .method public instance void  RecvStartDhcp([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& interfaceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   18
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   18
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv StartDhcp when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.IPContract/StartDhcp NetStack.Contracts.IPContract/Exp::StartDhcpPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.IPContract/StartDhcp NetStack.Contracts.IPContract/Exp::StartDhcpPod0
      IL_00a5:  initobj    NetStack.Contracts.IPContract/StartDhcp
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   14
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv StartDhcp in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvStartDhcp

    .method public instance void  RecvStopDhcp([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& interfaceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   19
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   19
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv StopDhcp when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.IPContract/StopDhcp NetStack.Contracts.IPContract/Exp::StopDhcpPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.IPContract/StopDhcp NetStack.Contracts.IPContract/Exp::StopDhcpPod0
      IL_00a5:  initobj    NetStack.Contracts.IPContract/StopDhcp
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   12
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv StopDhcp in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvStopDhcp

    .method public instance void  RecvIsRunningDhcp([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& interfaceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   20
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   20
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv IsRunningDhcp when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.IPContract/IsRunningDhcp NetStack.Contracts.IPContract/Exp::IsRunningDhcpPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.IPContract/IsRunningDhcp NetStack.Contracts.IPContract/Exp::IsRunningDhcpPod0
      IL_00a5:  initobj    NetStack.Contracts.IPContract/IsRunningDhcp
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   10
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv IsRunningDhcp in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvIsRunningDhcp

    .method public instance void  RecvGetInterfaces() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   21
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   21
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetInterfaces when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.IPContract/GetInterfaces NetStack.Contracts.IPContract/Exp::GetInterfacesPod0
      IL_0098:  initobj    NetStack.Contracts.IPContract/GetInterfaces
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.8
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv GetInterfaces in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00ba:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvGetInterfaces

    .method public instance void  RecvSetInterfaceState([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& interfaceName,
                                                        [out] uint32& address,
                                                        [out] uint32& netMask,
                                                        [out] uint32& gateway) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       251 (0xfb)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00e4

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   22
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   22
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv SetInterfaceState when next message has"
      + " tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_009d:  ldfld      uint32 NetStack.Contracts.IPContract/SetInterfaceState::address
      IL_00a2:  stind.i4
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_00aa:  ldfld      uint32 NetStack.Contracts.IPContract/SetInterfaceState::netMask
      IL_00af:  stind.i4
      IL_00b0:  ldarg.s    gateway
      IL_00b2:  ldarg.0
      IL_00b3:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_00b8:  ldfld      uint32 NetStack.Contracts.IPContract/SetInterfaceState::gateway
      IL_00bd:  stind.i4
      IL_00be:  ldarg.0
      IL_00bf:  ldc.i4.0
      IL_00c0:  volatile.
      IL_00c2:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c7:  ldarg.0
      IL_00c8:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_00cd:  initobj    NetStack.Contracts.IPContract/SetInterfaceState
      IL_00d3:  ldarg.0
      IL_00d4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d9:  ldc.i4.7
      IL_00da:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00df:  br         IL_00fa

      IL_00e4:  ldstr      "can't recv SetInterfaceState in state "
      IL_00e9:  ldarg.0
      IL_00ea:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00ef:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00f4:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00f9:  throw

      IL_00fa:  ret
    } // end of method Exp::RecvSetInterfaceState

    .method public instance void  RecvGetInterfaceState([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& interfaceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   23
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   23
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetInterfaceState when next message has"
      + " tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.IPContract/GetInterfaceState NetStack.Contracts.IPContract/Exp::GetInterfaceStatePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.IPContract/GetInterfaceState NetStack.Contracts.IPContract/Exp::GetInterfaceStatePod0
      IL_00a5:  initobj    NetStack.Contracts.IPContract/GetInterfaceState
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.5
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv GetInterfaceState in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_00c7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Exp::RecvGetInterfaceState

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverReady0$PST060001A7()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverReady0$PST060001A8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   22
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Ready in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_0070:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendReady

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.IPContract/Imp::DeliverContractNotSupported0$PST060001A9()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.IPContract/Imp::MarshallDeliverContractNotSupported0$PST060001AA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.IPContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.IPContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.IPContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.IPContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallContent(uint8*,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                            uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.IPContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.IPContract/Exp
      IL_0022:  call       instance void NetStack.Contracts.IPContract/Exp::MarshallContent(uint8*,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                            uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       1062 (0x426)
      .maxstack  16
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               int32 V_29)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0077

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_00b7

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.8
      IL_001e:  beq        IL_00ff

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.s   10
      IL_0026:  beq        IL_0147

      IL_002b:  ldloc.1
      IL_002c:  ldc.i4.s   12
      IL_002e:  beq        IL_018f

      IL_0033:  ldloc.1
      IL_0034:  ldc.i4.s   14
      IL_0036:  beq        IL_01d7

      IL_003b:  ldloc.1
      IL_003c:  ldc.i4.s   15
      IL_003e:  beq        IL_021f

      IL_0043:  ldloc.1
      IL_0044:  ldc.i4.s   17
      IL_0046:  beq        IL_0267

      IL_004b:  ldloc.1
      IL_004c:  ldc.i4.s   18
      IL_004e:  beq        IL_02af

      IL_0053:  ldloc.1
      IL_0054:  ldc.i4.s   20
      IL_0056:  beq        IL_02f7

      IL_005b:  ldloc.1
      IL_005c:  ldc.i4.s   21
      IL_005e:  beq        IL_033f

      IL_0063:  ldloc.1
      IL_0064:  ldc.i4.s   22
      IL_0066:  beq        IL_0387

      IL_006b:  ldloc.1
      IL_006c:  ldc.i4.3
      IL_006d:  beq        IL_03cf

      IL_0072:  br         IL_0417

      IL_0077:  ldc.i4.0
      IL_0078:  stloc.2
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0081:  stloc.3
      IL_0082:  ldloc.3
      IL_0083:  brtrue     IL_0098

      IL_0088:  ldarg.0
      IL_0089:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_008e:  stloc.2
      IL_008f:  ldarg.0
      IL_0090:  volatile.
      IL_0092:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0097:  stloc.3
      IL_0098:  ldloc.3
      IL_0099:  ldc.i4.0
      IL_009a:  ceq
      IL_009c:  brfalse    IL_00af

      IL_00a1:  ldloc.2
      IL_00a2:  brfalse    IL_00af

      IL_00a7:  ldc.i4.m1
      IL_00a8:  stloc.s    V_4
      IL_00aa:  br         IL_041f

      IL_00af:  ldloc.3
      IL_00b0:  stloc.s    V_4
      IL_00b2:  br         IL_041f

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.s    V_5
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c2:  stloc.s    V_6
      IL_00c4:  ldloc.s    V_6
      IL_00c6:  brtrue     IL_00dd

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.s    V_5
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00db:  stloc.s    V_6
      IL_00dd:  ldloc.s    V_6
      IL_00df:  ldc.i4.0
      IL_00e0:  ceq
      IL_00e2:  brfalse    IL_00f6

      IL_00e7:  ldloc.s    V_5
      IL_00e9:  brfalse    IL_00f6

      IL_00ee:  ldc.i4.m1
      IL_00ef:  stloc.s    V_4
      IL_00f1:  br         IL_041f

      IL_00f6:  ldloc.s    V_6
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_041f

      IL_00ff:  ldc.i4.0
      IL_0100:  stloc.s    V_7
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_010a:  stloc.s    V_8
      IL_010c:  ldloc.s    V_8
      IL_010e:  brtrue     IL_0125

      IL_0113:  ldarg.0
      IL_0114:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0119:  stloc.s    V_7
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0123:  stloc.s    V_8
      IL_0125:  ldloc.s    V_8
      IL_0127:  ldc.i4.0
      IL_0128:  ceq
      IL_012a:  brfalse    IL_013e

      IL_012f:  ldloc.s    V_7
      IL_0131:  brfalse    IL_013e

      IL_0136:  ldc.i4.m1
      IL_0137:  stloc.s    V_4
      IL_0139:  br         IL_041f

      IL_013e:  ldloc.s    V_8
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_041f

      IL_0147:  ldc.i4.0
      IL_0148:  stloc.s    V_9
      IL_014a:  ldarg.0
      IL_014b:  volatile.
      IL_014d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0152:  stloc.s    V_10
      IL_0154:  ldloc.s    V_10
      IL_0156:  brtrue     IL_016d

      IL_015b:  ldarg.0
      IL_015c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0161:  stloc.s    V_9
      IL_0163:  ldarg.0
      IL_0164:  volatile.
      IL_0166:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_016b:  stloc.s    V_10
      IL_016d:  ldloc.s    V_10
      IL_016f:  ldc.i4.0
      IL_0170:  ceq
      IL_0172:  brfalse    IL_0186

      IL_0177:  ldloc.s    V_9
      IL_0179:  brfalse    IL_0186

      IL_017e:  ldc.i4.m1
      IL_017f:  stloc.s    V_4
      IL_0181:  br         IL_041f

      IL_0186:  ldloc.s    V_10
      IL_0188:  stloc.s    V_4
      IL_018a:  br         IL_041f

      IL_018f:  ldc.i4.0
      IL_0190:  stloc.s    V_11
      IL_0192:  ldarg.0
      IL_0193:  volatile.
      IL_0195:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_019a:  stloc.s    V_12
      IL_019c:  ldloc.s    V_12
      IL_019e:  brtrue     IL_01b5

      IL_01a3:  ldarg.0
      IL_01a4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01a9:  stloc.s    V_11
      IL_01ab:  ldarg.0
      IL_01ac:  volatile.
      IL_01ae:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01b3:  stloc.s    V_12
      IL_01b5:  ldloc.s    V_12
      IL_01b7:  ldc.i4.0
      IL_01b8:  ceq
      IL_01ba:  brfalse    IL_01ce

      IL_01bf:  ldloc.s    V_11
      IL_01c1:  brfalse    IL_01ce

      IL_01c6:  ldc.i4.m1
      IL_01c7:  stloc.s    V_4
      IL_01c9:  br         IL_041f

      IL_01ce:  ldloc.s    V_12
      IL_01d0:  stloc.s    V_4
      IL_01d2:  br         IL_041f

      IL_01d7:  ldc.i4.0
      IL_01d8:  stloc.s    V_13
      IL_01da:  ldarg.0
      IL_01db:  volatile.
      IL_01dd:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01e2:  stloc.s    V_14
      IL_01e4:  ldloc.s    V_14
      IL_01e6:  brtrue     IL_01fd

      IL_01eb:  ldarg.0
      IL_01ec:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01f1:  stloc.s    V_13
      IL_01f3:  ldarg.0
      IL_01f4:  volatile.
      IL_01f6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01fb:  stloc.s    V_14
      IL_01fd:  ldloc.s    V_14
      IL_01ff:  ldc.i4.0
      IL_0200:  ceq
      IL_0202:  brfalse    IL_0216

      IL_0207:  ldloc.s    V_13
      IL_0209:  brfalse    IL_0216

      IL_020e:  ldc.i4.m1
      IL_020f:  stloc.s    V_4
      IL_0211:  br         IL_041f

      IL_0216:  ldloc.s    V_14
      IL_0218:  stloc.s    V_4
      IL_021a:  br         IL_041f

      IL_021f:  ldc.i4.0
      IL_0220:  stloc.s    V_15
      IL_0222:  ldarg.0
      IL_0223:  volatile.
      IL_0225:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_022a:  stloc.s    V_16
      IL_022c:  ldloc.s    V_16
      IL_022e:  brtrue     IL_0245

      IL_0233:  ldarg.0
      IL_0234:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0239:  stloc.s    V_15
      IL_023b:  ldarg.0
      IL_023c:  volatile.
      IL_023e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0243:  stloc.s    V_16
      IL_0245:  ldloc.s    V_16
      IL_0247:  ldc.i4.0
      IL_0248:  ceq
      IL_024a:  brfalse    IL_025e

      IL_024f:  ldloc.s    V_15
      IL_0251:  brfalse    IL_025e

      IL_0256:  ldc.i4.m1
      IL_0257:  stloc.s    V_4
      IL_0259:  br         IL_041f

      IL_025e:  ldloc.s    V_16
      IL_0260:  stloc.s    V_4
      IL_0262:  br         IL_041f

      IL_0267:  ldc.i4.0
      IL_0268:  stloc.s    V_17
      IL_026a:  ldarg.0
      IL_026b:  volatile.
      IL_026d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0272:  stloc.s    V_18
      IL_0274:  ldloc.s    V_18
      IL_0276:  brtrue     IL_028d

      IL_027b:  ldarg.0
      IL_027c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0281:  stloc.s    V_17
      IL_0283:  ldarg.0
      IL_0284:  volatile.
      IL_0286:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_028b:  stloc.s    V_18
      IL_028d:  ldloc.s    V_18
      IL_028f:  ldc.i4.0
      IL_0290:  ceq
      IL_0292:  brfalse    IL_02a6

      IL_0297:  ldloc.s    V_17
      IL_0299:  brfalse    IL_02a6

      IL_029e:  ldc.i4.m1
      IL_029f:  stloc.s    V_4
      IL_02a1:  br         IL_041f

      IL_02a6:  ldloc.s    V_18
      IL_02a8:  stloc.s    V_4
      IL_02aa:  br         IL_041f

      IL_02af:  ldc.i4.0
      IL_02b0:  stloc.s    V_19
      IL_02b2:  ldarg.0
      IL_02b3:  volatile.
      IL_02b5:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02ba:  stloc.s    V_20
      IL_02bc:  ldloc.s    V_20
      IL_02be:  brtrue     IL_02d5

      IL_02c3:  ldarg.0
      IL_02c4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02c9:  stloc.s    V_19
      IL_02cb:  ldarg.0
      IL_02cc:  volatile.
      IL_02ce:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02d3:  stloc.s    V_20
      IL_02d5:  ldloc.s    V_20
      IL_02d7:  ldc.i4.0
      IL_02d8:  ceq
      IL_02da:  brfalse    IL_02ee

      IL_02df:  ldloc.s    V_19
      IL_02e1:  brfalse    IL_02ee

      IL_02e6:  ldc.i4.m1
      IL_02e7:  stloc.s    V_4
      IL_02e9:  br         IL_041f

      IL_02ee:  ldloc.s    V_20
      IL_02f0:  stloc.s    V_4
      IL_02f2:  br         IL_041f

      IL_02f7:  ldc.i4.0
      IL_02f8:  stloc.s    V_21
      IL_02fa:  ldarg.0
      IL_02fb:  volatile.
      IL_02fd:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0302:  stloc.s    V_22
      IL_0304:  ldloc.s    V_22
      IL_0306:  brtrue     IL_031d

      IL_030b:  ldarg.0
      IL_030c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0311:  stloc.s    V_21
      IL_0313:  ldarg.0
      IL_0314:  volatile.
      IL_0316:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_031b:  stloc.s    V_22
      IL_031d:  ldloc.s    V_22
      IL_031f:  ldc.i4.0
      IL_0320:  ceq
      IL_0322:  brfalse    IL_0336

      IL_0327:  ldloc.s    V_21
      IL_0329:  brfalse    IL_0336

      IL_032e:  ldc.i4.m1
      IL_032f:  stloc.s    V_4
      IL_0331:  br         IL_041f

      IL_0336:  ldloc.s    V_22
      IL_0338:  stloc.s    V_4
      IL_033a:  br         IL_041f

      IL_033f:  ldc.i4.0
      IL_0340:  stloc.s    V_23
      IL_0342:  ldarg.0
      IL_0343:  volatile.
      IL_0345:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_034a:  stloc.s    V_24
      IL_034c:  ldloc.s    V_24
      IL_034e:  brtrue     IL_0365

      IL_0353:  ldarg.0
      IL_0354:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0359:  stloc.s    V_23
      IL_035b:  ldarg.0
      IL_035c:  volatile.
      IL_035e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0363:  stloc.s    V_24
      IL_0365:  ldloc.s    V_24
      IL_0367:  ldc.i4.0
      IL_0368:  ceq
      IL_036a:  brfalse    IL_037e

      IL_036f:  ldloc.s    V_23
      IL_0371:  brfalse    IL_037e

      IL_0376:  ldc.i4.m1
      IL_0377:  stloc.s    V_4
      IL_0379:  br         IL_041f

      IL_037e:  ldloc.s    V_24
      IL_0380:  stloc.s    V_4
      IL_0382:  br         IL_041f

      IL_0387:  ldc.i4.0
      IL_0388:  stloc.s    V_25
      IL_038a:  ldarg.0
      IL_038b:  volatile.
      IL_038d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0392:  stloc.s    V_26
      IL_0394:  ldloc.s    V_26
      IL_0396:  brtrue     IL_03ad

      IL_039b:  ldarg.0
      IL_039c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03a1:  stloc.s    V_25
      IL_03a3:  ldarg.0
      IL_03a4:  volatile.
      IL_03a6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03ab:  stloc.s    V_26
      IL_03ad:  ldloc.s    V_26
      IL_03af:  ldc.i4.0
      IL_03b0:  ceq
      IL_03b2:  brfalse    IL_03c6

      IL_03b7:  ldloc.s    V_25
      IL_03b9:  brfalse    IL_03c6

      IL_03be:  ldc.i4.m1
      IL_03bf:  stloc.s    V_4
      IL_03c1:  br         IL_041f

      IL_03c6:  ldloc.s    V_26
      IL_03c8:  stloc.s    V_4
      IL_03ca:  br         IL_041f

      IL_03cf:  ldc.i4.0
      IL_03d0:  stloc.s    V_27
      IL_03d2:  ldarg.0
      IL_03d3:  volatile.
      IL_03d5:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03da:  stloc.s    V_28
      IL_03dc:  ldloc.s    V_28
      IL_03de:  brtrue     IL_03f5

      IL_03e3:  ldarg.0
      IL_03e4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03e9:  stloc.s    V_27
      IL_03eb:  ldarg.0
      IL_03ec:  volatile.
      IL_03ee:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03f3:  stloc.s    V_28
      IL_03f5:  ldloc.s    V_28
      IL_03f7:  ldc.i4.0
      IL_03f8:  ceq
      IL_03fa:  brfalse    IL_040e

      IL_03ff:  ldloc.s    V_27
      IL_0401:  brfalse    IL_040e

      IL_0406:  ldc.i4.m1
      IL_0407:  stloc.s    V_4
      IL_0409:  br         IL_041f

      IL_040e:  ldloc.s    V_28
      IL_0410:  stloc.s    V_4
      IL_0412:  br         IL_041f

      IL_0417:  ldc.i4.m1
      IL_0418:  stloc.s    V_4
      IL_041a:  br         IL_041f

      IL_041f:  ldloc.s    V_4
      IL_0421:  stloc.s    V_29
      IL_0423:  ldloc.s    V_4
      IL_0425:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.IPContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetDomainName0$PST060001D2() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetDomainName0

    .method privatescope instance void  MarshallDeliverGetDomainName0$PST060001D3(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverGetDomainName0$PST060001D2()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.IPContract/GetDomainName NetStack.Contracts.IPContract/Exp::GetDomainNamePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.IPContract/GetDomainName::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetDomainName0

    .method privatescope instance void  DeliverSetDomainName0$PST060001D4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/SetDomainName NetStack.Contracts.IPContract/Exp::SetDomainNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverSetDomainName0

    .method privatescope instance void  MarshallDeliverSetDomainName0$PST060001D5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverSetDomainName0$PST060001D4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/SetDomainName NetStack.Contracts.IPContract/Exp::SetDomainNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/SetDomainName::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverSetDomainName0

    .method privatescope instance void  DeliverGetHostName0$PST060001D6() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   14
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   14
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetHostName0

    .method privatescope instance void  MarshallDeliverGetHostName0$PST060001D7(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverGetHostName0$PST060001D6()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.IPContract/GetHostName NetStack.Contracts.IPContract/Exp::GetHostNamePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.IPContract/GetHostName::MarshallAll(uint8*,
                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetHostName0

    .method privatescope instance void  DeliverSetHostName0$PST060001D8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/SetHostName NetStack.Contracts.IPContract/Exp::SetHostNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverSetHostName0

    .method privatescope instance void  MarshallDeliverSetHostName0$PST060001D9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverSetHostName0$PST060001D8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/SetHostName NetStack.Contracts.IPContract/Exp::SetHostNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/SetHostName::MarshallAll(uint8*,
                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverSetHostName0

    .method privatescope instance void  DeliverIsLocalAddress0$PST060001DA(uint32 addr) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/IsLocalAddress NetStack.Contracts.IPContract/Exp::IsLocalAddressPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.IPContract/IsLocalAddress::addr
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   16
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   16
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverIsLocalAddress0

    .method privatescope instance void  MarshallDeliverIsLocalAddress0$PST060001DB(uint32 addr,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverIsLocalAddress0$PST060001DA(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/IsLocalAddress NetStack.Contracts.IPContract/Exp::IsLocalAddressPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/IsLocalAddress::MarshallAll(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverIsLocalAddress0

    .method privatescope instance void  DeliverStartDhcp0$PST060001DC(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/StartDhcp NetStack.Contracts.IPContract/Exp::StartDhcpPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   18
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverStartDhcp0

    .method privatescope instance void  MarshallDeliverStartDhcp0$PST060001DD(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName,
                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverStartDhcp0$PST060001DC(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/StartDhcp NetStack.Contracts.IPContract/Exp::StartDhcpPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/StartDhcp::MarshallAll(uint8*,
                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                              int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverStartDhcp0

    .method privatescope instance void  DeliverStopDhcp0$PST060001DE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/StopDhcp NetStack.Contracts.IPContract/Exp::StopDhcpPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   19
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverStopDhcp0

    .method privatescope instance void  MarshallDeliverStopDhcp0$PST060001DF(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverStopDhcp0$PST060001DE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/StopDhcp NetStack.Contracts.IPContract/Exp::StopDhcpPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/StopDhcp::MarshallAll(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverStopDhcp0

    .method privatescope instance void  DeliverIsRunningDhcp0$PST060001E0(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/IsRunningDhcp NetStack.Contracts.IPContract/Exp::IsRunningDhcpPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   20
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   20
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverIsRunningDhcp0

    .method privatescope instance void  MarshallDeliverIsRunningDhcp0$PST060001E1(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverIsRunningDhcp0$PST060001E0(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/IsRunningDhcp NetStack.Contracts.IPContract/Exp::IsRunningDhcpPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/IsRunningDhcp::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverIsRunningDhcp0

    .method privatescope instance void  DeliverGetInterfaces0$PST060001E2() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   21
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   21
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetInterfaces0

    .method privatescope instance void  MarshallDeliverGetInterfaces0$PST060001E3(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverGetInterfaces0$PST060001E2()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.IPContract/GetInterfaces NetStack.Contracts.IPContract/Exp::GetInterfacesPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.IPContract/GetInterfaces::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetInterfaces0

    .method privatescope instance void  DeliverSetInterfaceState0$PST060001E4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName,
                                                                              uint32 address,
                                                                              uint32 netMask,
                                                                              uint32 gateway) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       68 (0x44)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint32 NetStack.Contracts.IPContract/SetInterfaceState::address
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint32 NetStack.Contracts.IPContract/SetInterfaceState::netMask
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_002a:  ldarg.s    gateway
      IL_002c:  stfld      uint32 NetStack.Contracts.IPContract/SetInterfaceState::gateway
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.s   22
      IL_0034:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0039:  ldarg.0
      IL_003a:  ldc.i4.s   22
      IL_003c:  volatile.
      IL_003e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0043:  ret
    } // end of method Exp::DeliverSetInterfaceState0

    .method privatescope instance void  MarshallDeliverSetInterfaceState0$PST060001E5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName,
                                                                                      uint32 address,
                                                                                      uint32 netMask,
                                                                                      uint32 gateway,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    gateway
      IL_0006:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverSetInterfaceState0$PST060001E4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                  uint32,
                                                                                                                  uint32,
                                                                                                                  uint32)
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype NetStack.Contracts.IPContract/SetInterfaceState NetStack.Contracts.IPContract/Exp::SetInterfaceStatePod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001a:  call       instance void NetStack.Contracts.IPContract/SetInterfaceState::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001f:  ret
    } // end of method Exp::MarshallDeliverSetInterfaceState0

    .method privatescope instance void  DeliverGetInterfaceState0$PST060001E6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.IPContract/GetInterfaceState NetStack.Contracts.IPContract/Exp::GetInterfaceStatePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   23
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverGetInterfaceState0

    .method privatescope instance void  MarshallDeliverGetInterfaceState0$PST060001E7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) interfaceName,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.IPContract/Exp::DeliverGetInterfaceState0$PST060001E6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.IPContract/GetInterfaceState NetStack.Contracts.IPContract/Exp::GetInterfaceStatePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.IPContract/GetInterfaceState::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetInterfaceState0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname InterfaceList
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) names
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       56 (0x38)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_3)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0037

      IL_000d:  ldloc.0
      IL_000e:  ldlen
      IL_000f:  stloc.1
      IL_0010:  ldc.i4.0
      IL_0011:  stloc.2
      IL_0012:  ldloc.2
      IL_0013:  ldloc.1
      IL_0014:  bge        IL_0030

      IL_0019:  ldloc.0
      IL_001a:  ldloc.2
      IL_001b:  ldelem.i
      IL_001c:  stloc.3
      IL_001d:  ldloc.3
      IL_001e:  brfalse    IL_002a

      IL_0023:  ldarg.1
      IL_0024:  ldloc.3
      IL_0025:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002a:  ldloc.2
      IL_002b:  ldc.i4.1
      IL_002c:  add
      IL_002d:  stloc.2
      IL_002e:  br.s       IL_0012

      IL_0030:  ldarg.1
      IL_0031:  ldloc.0
      IL_0032:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0037:  ret
    } // end of method InterfaceList::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/InterfaceList* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InterfaceList::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/InterfaceList* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InterfaceList::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/InterfaceList
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/InterfaceList::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*,
                                                                                                      int32&)
      IL_001d:  ret
    } // end of method InterfaceList::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/InterfaceList* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method InterfaceList::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       208 (0xd0)
      .maxstack  10
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0008:  ldtoken    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0028:  brfalse    IL_00cf

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0033:  castclass  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_00cf

      IL_004a:  ldarg.2
      IL_004b:  ldarg.1
      IL_004c:  ldarg.0
      IL_004d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0052:  ldloc.2
      IL_0053:  ldelema    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)
      IL_0058:  ldtoken    [kernel]System.Char
      IL_005d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0062:  ldarg.0
      IL_0063:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0068:  castclass  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)&
      IL_006d:  ldarg.0
      IL_006e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0073:  ldloc.2
      IL_0074:  ldelema    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)
      IL_0079:  conv.i
      IL_007a:  ldarg.0
      IL_007b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0080:  castclass  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)&
      IL_0085:  conv.i
      IL_0086:  sub
      IL_0087:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_008c:  ldarg.0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0092:  ldloc.2
      IL_0093:  ldelem.i
      IL_0094:  brfalse    IL_00c6

      IL_0099:  ldarg.0
      IL_009a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_009f:  ldloc.2
      IL_00a0:  ldelem.i
      IL_00a1:  castclass  char&
      IL_00a6:  stloc.3
      IL_00a7:  ldarg.0
      IL_00a8:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_00ad:  ldloc.2
      IL_00ae:  ldelem.i
      IL_00af:  ldlen
      IL_00b0:  stloc.s    V_4
      IL_00b2:  ldc.i4.0
      IL_00b3:  stloc.s    V_5
      IL_00b5:  ldloc.s    V_5
      IL_00b7:  ldloc.s    V_4
      IL_00b9:  bge        IL_00c6

      IL_00be:  ldloc.s    V_5
      IL_00c0:  ldc.i4.1
      IL_00c1:  add
      IL_00c2:  stloc.s    V_5
      IL_00c4:  br.s       IL_00b5

      IL_00c6:  ldloc.2
      IL_00c7:  ldc.i4.1
      IL_00c8:  add
      IL_00c9:  stloc.2
      IL_00ca:  br         IL_0043

      IL_00cf:  ret
    } // end of method InterfaceList::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       79 (0x4f)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_3)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_004e

      IL_000d:  ldloc.0
      IL_000e:  ldlen
      IL_000f:  stloc.1
      IL_0010:  ldc.i4.0
      IL_0011:  stloc.2
      IL_0012:  ldloc.2
      IL_0013:  ldloc.1
      IL_0014:  bge        IL_0041

      IL_0019:  ldloc.0
      IL_001a:  ldloc.2
      IL_001b:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::Expose(void*,
                                                                                                      int32)
      IL_0020:  ldloc.0
      IL_0021:  ldloc.2
      IL_0022:  ldelem.i
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  brfalse    IL_0034

      IL_002a:  ldloc.3
      IL_002b:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0030:  ldloc.0
      IL_0031:  ldloc.2
      IL_0032:  ldnull
      IL_0033:  stelem.i
      IL_0034:  ldloc.0
      IL_0035:  ldloc.2
      IL_0036:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::UnExpose(void*,
                                                                                                        int32)
      IL_003b:  ldloc.2
      IL_003c:  ldc.i4.1
      IL_003d:  add
      IL_003e:  stloc.2
      IL_003f:  br.s       IL_0012

      IL_0041:  ldloc.0
      IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0047:  ldarg.0
      IL_0048:  ldnull
      IL_0049:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/InterfaceList::names
      IL_004e:  ret
    } // end of method InterfaceList::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceList::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceList::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceList::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceList::Release

  } // end of class InterfaceList

  .class sequential ansi sealed nested public specialname InterfaceState
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.InterfaceInfo ifInfo
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.InterfaceInfo NetStack.Contracts.IPContract/InterfaceState::ifInfo
      IL_0006:  ldarg.1
      IL_0007:  call       instance void NetStack.Contracts.InterfaceInfo::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_000c:  ret
    } // end of method InterfaceState::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/InterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InterfaceState::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/InterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InterfaceState::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/InterfaceState
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/InterfaceState::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*,
                                                                                                       int32&)
      IL_001d:  ret
    } // end of method InterfaceState::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/InterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method InterfaceState::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.InterfaceInfo NetStack.Contracts.IPContract/InterfaceState::ifInfo
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void NetStack.Contracts.InterfaceInfo::MarshallContent(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           uint8*)
      IL_000e:  ret
    } // end of method InterfaceState::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.InterfaceInfo NetStack.Contracts.IPContract/InterfaceState::ifInfo
      IL_0006:  call       instance void NetStack.Contracts.InterfaceInfo::Dispose()
      IL_000b:  ret
    } // end of method InterfaceState::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceState::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceState::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceState::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceState::Release

  } // end of class InterfaceState

  .class sequential ansi sealed nested public specialname HostName
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) hostname
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method HostName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/HostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method HostName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/HostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method HostName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/HostName
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/HostName::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 int32&)
      IL_001d:  ret
    } // end of method HostName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/HostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method HostName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method HostName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/HostName::hostname
      IL_001a:  ret
    } // end of method HostName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HostName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HostName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HostName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HostName::Release

  } // end of class HostName

  .class sequential ansi sealed nested public specialname DomainName
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) domainName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method DomainName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/DomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DomainName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/DomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DomainName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/DomainName
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/DomainName::MarshallContent(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   uint8*,
                                                                                                   int32&)
      IL_001d:  ret
    } // end of method DomainName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/DomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DomainName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method DomainName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/DomainName::domainName
      IL_001a:  ret
    } // end of method DomainName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DomainName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DomainName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DomainName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DomainName::Release

  } // end of class DomainName

  .class sequential ansi sealed nested public specialname Running
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public bool isRunning
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Running::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/Running* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Running::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/Running* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Running::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/Running
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/Running::MarshallContent(uint8*,
                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                uint8*,
                                                                                                int32&)
      IL_001d:  ret
    } // end of method Running::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/Running* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Running::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Running::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Running::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Running::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Running::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Running::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Running::Release

  } // end of class Running

  .class sequential ansi sealed nested public specialname IsLocal
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public bool isLocal
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocal::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/IsLocal* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsLocal::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/IsLocal* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsLocal::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/IsLocal
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/IsLocal::MarshallContent(uint8*,
                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                uint8*,
                                                                                                int32&)
      IL_001d:  ret
    } // end of method IsLocal::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/IsLocal* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IsLocal::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocal::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocal::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocal::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocal::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocal::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocal::Release

  } // end of class IsLocal

  .class sequential ansi sealed nested public specialname InterfaceNotFound
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceNotFound::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/InterfaceNotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InterfaceNotFound::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/InterfaceNotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InterfaceNotFound::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/InterfaceNotFound
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/InterfaceNotFound::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method InterfaceNotFound::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/InterfaceNotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method InterfaceNotFound::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceNotFound::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceNotFound::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceNotFound::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceNotFound::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceNotFound::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InterfaceNotFound::Release

  } // end of class InterfaceNotFound

  .class sequential ansi sealed nested public specialname Err
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/Err* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Err::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/Err* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Err::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/Err
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/Err::MarshallContent(uint8*,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                            uint8*,
                                                                                            int32&)
      IL_001d:  ret
    } // end of method Err::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/Err* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Err::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::Release

  } // end of class Err

  .class sequential ansi sealed nested public specialname OK
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method OK::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method OK::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/OK
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/OK::MarshallContent(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           uint8*,
                                                                                           int32&)
      IL_001d:  ret
    } // end of method OK::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method OK::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Release

  } // end of class OK

  .class sequential ansi sealed nested public specialname GetDomainName
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDomainName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/GetDomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDomainName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/GetDomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDomainName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/GetDomainName
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/GetDomainName::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*,
                                                                                                      int32&)
      IL_001d:  ret
    } // end of method GetDomainName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/GetDomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetDomainName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDomainName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDomainName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDomainName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDomainName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDomainName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDomainName::Release

  } // end of class GetDomainName

  .class sequential ansi sealed nested public specialname SetDomainName
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) name
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method SetDomainName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/SetDomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetDomainName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/SetDomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetDomainName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/SetDomainName
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/SetDomainName::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*,
                                                                                                      int32&)
      IL_001d:  ret
    } // end of method SetDomainName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/SetDomainName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method SetDomainName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method SetDomainName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetDomainName::name
      IL_001a:  ret
    } // end of method SetDomainName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetDomainName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetDomainName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetDomainName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetDomainName::Release

  } // end of class SetDomainName

  .class sequential ansi sealed nested public specialname GetHostName
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetHostName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/GetHostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetHostName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/GetHostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetHostName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/GetHostName
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/GetHostName::MarshallContent(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    uint8*,
                                                                                                    int32&)
      IL_001d:  ret
    } // end of method GetHostName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/GetHostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetHostName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetHostName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetHostName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetHostName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetHostName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetHostName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetHostName::Release

  } // end of class GetHostName

  .class sequential ansi sealed nested public specialname SetHostName
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) name
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method SetHostName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/SetHostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetHostName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/SetHostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetHostName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/SetHostName
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/SetHostName::MarshallContent(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    uint8*,
                                                                                                    int32&)
      IL_001d:  ret
    } // end of method SetHostName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/SetHostName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method SetHostName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method SetHostName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetHostName::name
      IL_001a:  ret
    } // end of method SetHostName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetHostName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetHostName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetHostName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetHostName::Release

  } // end of class SetHostName

  .class sequential ansi sealed nested public specialname IsLocalAddress
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 addr
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocalAddress::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/IsLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsLocalAddress::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/IsLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsLocalAddress::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/IsLocalAddress
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/IsLocalAddress::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*,
                                                                                                       int32&)
      IL_001d:  ret
    } // end of method IsLocalAddress::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/IsLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IsLocalAddress::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocalAddress::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocalAddress::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocalAddress::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocalAddress::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocalAddress::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsLocalAddress::Release

  } // end of class IsLocalAddress

  .class sequential ansi sealed nested public specialname Test
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Test::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/Test* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Test::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/Test* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Test::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/Test
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/Test::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*,
                                                                                             int32&)
      IL_001d:  ret
    } // end of method Test::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/Test* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Test::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Test::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Test::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Test::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Test::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Test::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Test::Release

  } // end of class Test

  .class sequential ansi sealed nested public specialname StartDhcp
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) interfaceName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method StartDhcp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/StartDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartDhcp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/StartDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartDhcp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/StartDhcp
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/StartDhcp::MarshallContent(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  uint8*,
                                                                                                  int32&)
      IL_001d:  ret
    } // end of method StartDhcp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/StartDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StartDhcp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method StartDhcp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StartDhcp::interfaceName
      IL_001a:  ret
    } // end of method StartDhcp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartDhcp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartDhcp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartDhcp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartDhcp::Release

  } // end of class StartDhcp

  .class sequential ansi sealed nested public specialname StopDhcp
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) interfaceName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method StopDhcp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/StopDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopDhcp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/StopDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopDhcp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/StopDhcp
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/StopDhcp::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 int32&)
      IL_001d:  ret
    } // end of method StopDhcp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/StopDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StopDhcp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method StopDhcp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/StopDhcp::interfaceName
      IL_001a:  ret
    } // end of method StopDhcp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopDhcp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopDhcp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopDhcp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopDhcp::Release

  } // end of class StopDhcp

  .class sequential ansi sealed nested public specialname IsRunningDhcp
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) interfaceName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method IsRunningDhcp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/IsRunningDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsRunningDhcp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/IsRunningDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsRunningDhcp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/IsRunningDhcp
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/IsRunningDhcp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*,
                                                                                                      int32&)
      IL_001d:  ret
    } // end of method IsRunningDhcp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/IsRunningDhcp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IsRunningDhcp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method IsRunningDhcp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/IsRunningDhcp::interfaceName
      IL_001a:  ret
    } // end of method IsRunningDhcp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsRunningDhcp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsRunningDhcp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsRunningDhcp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsRunningDhcp::Release

  } // end of class IsRunningDhcp

  .class sequential ansi sealed nested public specialname GetInterfaces
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaces::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/GetInterfaces* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetInterfaces::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/GetInterfaces* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetInterfaces::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/GetInterfaces
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/GetInterfaces::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*,
                                                                                                      int32&)
      IL_001d:  ret
    } // end of method GetInterfaces::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/GetInterfaces* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetInterfaces::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaces::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaces::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaces::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaces::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaces::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaces::Release

  } // end of class GetInterfaces

  .class sequential ansi sealed nested public specialname SetInterfaceState
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) interfaceName
    .field public uint32 address
    .field public uint32 netMask
    .field public uint32 gateway
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method SetInterfaceState::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/SetInterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetInterfaceState::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/SetInterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetInterfaceState::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/SetInterfaceState
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/SetInterfaceState::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method SetInterfaceState::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/SetInterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method SetInterfaceState::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method SetInterfaceState::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/SetInterfaceState::interfaceName
      IL_001a:  ret
    } // end of method SetInterfaceState::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetInterfaceState::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetInterfaceState::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetInterfaceState::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetInterfaceState::Release

  } // end of class SetInterfaceState

  .class sequential ansi sealed nested public specialname GetInterfaceState
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) interfaceName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method GetInterfaceState::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/GetInterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetInterfaceState::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/GetInterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetInterfaceState::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/GetInterfaceState
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/GetInterfaceState::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method GetInterfaceState::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/GetInterfaceState* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetInterfaceState::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_0008:  ldtoken    [kernel]System.Char
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method GetInterfaceState::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.IPContract/GetInterfaceState::interfaceName
      IL_001a:  ret
    } // end of method GetInterfaceState::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaceState::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaceState::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaceState::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetInterfaceState::Release

  } // end of class GetInterfaceState

  .class sequential ansi sealed nested public specialname Ready
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.IPContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.IPContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.IPContract/Ready
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.IPContract/Ready::MarshallContent(uint8*,
                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                              uint8*,
                                                                                              int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.IPContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Send(valuetype NetStack.Contracts.IPContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000016)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$0 
            Recv(valuetype NetStack.Contracts.IPContract/GetDomainName msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$1 
            Recv(valuetype NetStack.Contracts.IPContract/SetDomainName msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$3 
            Recv(valuetype NetStack.Contracts.IPContract/GetHostName msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$4 
            Recv(valuetype NetStack.Contracts.IPContract/SetHostName msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$6 
            Recv(valuetype NetStack.Contracts.IPContract/IsLocalAddress msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$7 
            Recv(valuetype NetStack.Contracts.IPContract/StartDhcp msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$9 
            Recv(valuetype NetStack.Contracts.IPContract/StopDhcp msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$11 
            Recv(valuetype NetStack.Contracts.IPContract/IsRunningDhcp msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$13 
            Recv(valuetype NetStack.Contracts.IPContract/GetInterfaces msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$14 
            Recv(valuetype NetStack.Contracts.IPContract/SetInterfaceState msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$16 
            Recv(valuetype NetStack.Contracts.IPContract/GetInterfaceState msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000015)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Send(valuetype NetStack.Contracts.IPContract/DomainName msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .class abstract auto ansi nested public specialname ReadyState$1
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000014)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$2 
            Send(valuetype NetStack.Contracts.IPContract/Err msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$2 
            Send(valuetype NetStack.Contracts.IPContract/OK msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$1::.ctor

  } // end of class ReadyState$1

  .class abstract auto ansi nested public specialname ReadyState$2
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000013)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$2::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$2::.ctor

  } // end of class ReadyState$2

  .class abstract auto ansi nested public specialname ReadyState$3
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000012)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Send(valuetype NetStack.Contracts.IPContract/HostName msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$3::.ctor

  } // end of class ReadyState$3

  .class abstract auto ansi nested public specialname ReadyState$4
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000011)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$5 
            Send(valuetype NetStack.Contracts.IPContract/Err msg) cil managed
    {
    } // end of method ReadyState$4::Send

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$5 
            Send(valuetype NetStack.Contracts.IPContract/OK msg) cil managed
    {
    } // end of method ReadyState$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$4::.ctor

  } // end of class ReadyState$4

  .class abstract auto ansi nested public specialname ReadyState$5
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000010)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$5::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$5::.ctor

  } // end of class ReadyState$5

  .class abstract auto ansi nested public specialname ReadyState$6
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000F)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Send(valuetype NetStack.Contracts.IPContract/IsLocal msg) cil managed
    {
    } // end of method ReadyState$6::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$6::.ctor

  } // end of class ReadyState$6

  .class abstract auto ansi nested public specialname ReadyState$7
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$8 
            Send(valuetype NetStack.Contracts.IPContract/InterfaceNotFound msg) cil managed
    {
    } // end of method ReadyState$7::Send

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$8 
            Send(valuetype NetStack.Contracts.IPContract/OK msg) cil managed
    {
    } // end of method ReadyState$7::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$7::.ctor

  } // end of class ReadyState$7

  .class abstract auto ansi nested public specialname ReadyState$8
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$8::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$8::.ctor

  } // end of class ReadyState$8

  .class abstract auto ansi nested public specialname ReadyState$9
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$10 
            Send(valuetype NetStack.Contracts.IPContract/InterfaceNotFound msg) cil managed
    {
    } // end of method ReadyState$9::Send

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$10 
            Send(valuetype NetStack.Contracts.IPContract/OK msg) cil managed
    {
    } // end of method ReadyState$9::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$9::.ctor

  } // end of class ReadyState$9

  .class abstract auto ansi nested public specialname ReadyState$10
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$10::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$10::.ctor

  } // end of class ReadyState$10

  .class abstract auto ansi nested public specialname ReadyState$11
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$12 
            Send(valuetype NetStack.Contracts.IPContract/InterfaceNotFound msg) cil managed
    {
    } // end of method ReadyState$11::Send

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$12 
            Send(valuetype NetStack.Contracts.IPContract/Running msg) cil managed
    {
    } // end of method ReadyState$11::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$11::.ctor

  } // end of class ReadyState$11

  .class abstract auto ansi nested public specialname ReadyState$12
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$12::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$12::.ctor

  } // end of class ReadyState$12

  .class abstract auto ansi nested public specialname ReadyState$13
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Send(valuetype NetStack.Contracts.IPContract/InterfaceList msg) cil managed
    {
    } // end of method ReadyState$13::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$13::.ctor

  } // end of class ReadyState$13

  .class abstract auto ansi nested public specialname ReadyState$14
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$15 
            Send(valuetype NetStack.Contracts.IPContract/InterfaceNotFound msg) cil managed
    {
    } // end of method ReadyState$14::Send

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$15 
            Send(valuetype NetStack.Contracts.IPContract/Err msg) cil managed
    {
    } // end of method ReadyState$14::Send

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$15 
            Send(valuetype NetStack.Contracts.IPContract/OK msg) cil managed
    {
    } // end of method ReadyState$14::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$14::.ctor

  } // end of class ReadyState$14

  .class abstract auto ansi nested public specialname ReadyState$15
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$15::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$15::.ctor

  } // end of class ReadyState$15

  .class abstract auto ansi nested public specialname ReadyState$16
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$17 
            Send(valuetype NetStack.Contracts.IPContract/InterfaceNotFound msg) cil managed
    {
    } // end of method ReadyState$16::Send

    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState$17 
            Send(valuetype NetStack.Contracts.IPContract/InterfaceState msg) cil managed
    {
    } // end of method ReadyState$16::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$16::.ctor

  } // end of class ReadyState$16

  .class abstract auto ansi nested public specialname ReadyState$17
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class NetStack.Contracts.IPContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$17::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$17::.ctor

  } // end of class ReadyState$17

  .field public static literal string ModuleName = "/service/ip"
  .method public static void  NewChannel([out] valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.IPContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void NetStack.Contracts.IPContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.IPContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void NetStack.Contracts.IPContract/Imp::'.ctor$PST0600016E'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method IPContract::NewChannel

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.IPContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.IPContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.IPContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.IPContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void NetStack.Contracts.IPContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.IPContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.IPContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void NetStack.Contracts.IPContract/Imp::'.ctor$PST0600016E'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method IPContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method IPContract::.ctor

  .method privatescope static int32  StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       245 (0xf5)
    .maxstack  13
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.4
    IL_000b:  beq        IL_004b

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.s   16
    IL_0013:  beq        IL_005f

    IL_0018:  ldloc.1
    IL_0019:  ldc.i4.6
    IL_001a:  beq        IL_0073

    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.s   11
    IL_0022:  beq        IL_0087

    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.s   19
    IL_002a:  beq        IL_009b

    IL_002f:  ldloc.1
    IL_0030:  ldc.i4.2
    IL_0031:  beq        IL_00af

    IL_0036:  ldloc.1
    IL_0037:  ldc.i4.s   9
    IL_0039:  beq        IL_00c2

    IL_003e:  ldloc.1
    IL_003f:  ldc.i4.s   13
    IL_0041:  beq        IL_00d6

    IL_0046:  br         IL_00ea

    IL_004b:  ldarg.0
    IL_004c:  ldc.i4.s   22
    IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0053:  ldarg.0
    IL_0054:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0059:  stloc.2
    IL_005a:  br         IL_00f1

    IL_005f:  ldarg.0
    IL_0060:  ldc.i4.s   22
    IL_0062:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0067:  ldarg.0
    IL_0068:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_006d:  stloc.2
    IL_006e:  br         IL_00f1

    IL_0073:  ldarg.0
    IL_0074:  ldc.i4.s   22
    IL_0076:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_007b:  ldarg.0
    IL_007c:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0081:  stloc.2
    IL_0082:  br         IL_00f1

    IL_0087:  ldarg.0
    IL_0088:  ldc.i4.s   22
    IL_008a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_008f:  ldarg.0
    IL_0090:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0095:  stloc.2
    IL_0096:  br         IL_00f1

    IL_009b:  ldarg.0
    IL_009c:  ldc.i4.s   22
    IL_009e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00a3:  ldarg.0
    IL_00a4:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00a9:  stloc.2
    IL_00aa:  br         IL_00f1

    IL_00af:  ldarg.0
    IL_00b0:  ldc.i4.1
    IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00b6:  ldarg.0
    IL_00b7:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00bc:  stloc.2
    IL_00bd:  br         IL_00f1

    IL_00c2:  ldarg.0
    IL_00c3:  ldc.i4.s   22
    IL_00c5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00ca:  ldarg.0
    IL_00cb:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00d0:  stloc.2
    IL_00d1:  br         IL_00f1

    IL_00d6:  ldarg.0
    IL_00d7:  ldc.i4.s   22
    IL_00d9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00de:  ldarg.0
    IL_00df:  call       int32 NetStack.Contracts.IPContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00e4:  stloc.2
    IL_00e5:  br         IL_00f1

    IL_00ea:  ldloc.0
    IL_00eb:  stloc.2
    IL_00ec:  br         IL_00f1

    IL_00f1:  ldloc.2
    IL_00f2:  stloc.3
    IL_00f3:  ldloc.2
    IL_00f4:  ret
  } // end of method IPContract::StableState

  .method privatescope static int32  CanonicalState$PST0600002D(int32 state) cil managed
  {
    // Code size       142 (0x8e)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.4
    IL_0004:  beq        IL_0044

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.s   16
    IL_000c:  beq        IL_004c

    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.6
    IL_0013:  beq        IL_0054

    IL_0018:  ldloc.0
    IL_0019:  ldc.i4.s   11
    IL_001b:  beq        IL_005c

    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.s   19
    IL_0023:  beq        IL_0064

    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.2
    IL_002a:  beq        IL_006c

    IL_002f:  ldloc.0
    IL_0030:  ldc.i4.s   9
    IL_0032:  beq        IL_0073

    IL_0037:  ldloc.0
    IL_0038:  ldc.i4.s   13
    IL_003a:  beq        IL_007b

    IL_003f:  br         IL_0083

    IL_0044:  ldc.i4.s   22
    IL_0046:  stloc.1
    IL_0047:  br         IL_008a

    IL_004c:  ldc.i4.s   22
    IL_004e:  stloc.1
    IL_004f:  br         IL_008a

    IL_0054:  ldc.i4.s   22
    IL_0056:  stloc.1
    IL_0057:  br         IL_008a

    IL_005c:  ldc.i4.s   22
    IL_005e:  stloc.1
    IL_005f:  br         IL_008a

    IL_0064:  ldc.i4.s   22
    IL_0066:  stloc.1
    IL_0067:  br         IL_008a

    IL_006c:  ldc.i4.1
    IL_006d:  stloc.1
    IL_006e:  br         IL_008a

    IL_0073:  ldc.i4.s   22
    IL_0075:  stloc.1
    IL_0076:  br         IL_008a

    IL_007b:  ldc.i4.s   22
    IL_007d:  stloc.1
    IL_007e:  br         IL_008a

    IL_0083:  ldarg.0
    IL_0084:  stloc.1
    IL_0085:  br         IL_008a

    IL_008a:  ldloc.1
    IL_008b:  stloc.2
    IL_008c:  ldloc.1
    IL_008d:  ret
  } // end of method IPContract::CanonicalState

} // end of class NetStack.Contracts.IPContract

.class public sequential ansi beforefieldinit NetStack.Contracts.Network
       extends [kernel]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public uint32 network
  .field public uint32 netmask
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Network::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype NetStack.Contracts.Network* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method Network::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype NetStack.Contracts.Network* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method Network::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void NetStack.Contracts.Network::MarshallContent(uint8*,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                   uint8*)
    IL_0009:  ret
  } // end of method Network::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype NetStack.Contracts.Network* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    NetStack.Contracts.Network
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    NetStack.Contracts.Network
    IL_0022:  call       instance void NetStack.Contracts.Network::MarshallContent(uint8*,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                   uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method Network::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Network::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Network::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Network::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Network::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Network::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method Network::Release

} // end of class NetStack.Contracts.Network

.class public sequential ansi beforefieldinit NetStack.Contracts.RouteEntry
       extends [kernel]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public valuetype NetStack.Contracts.Network network
  .field public uint32 gateway
  .field public uint32 ifaddr
  .field public uint32 metric
  .field public uint32 tag
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method RouteEntry::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method RouteEntry::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method RouteEntry::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void NetStack.Contracts.RouteEntry::MarshallContent(uint8*,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                      uint8*)
    IL_0009:  ret
  } // end of method RouteEntry::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    NetStack.Contracts.RouteEntry
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    NetStack.Contracts.RouteEntry
    IL_0022:  call       instance void NetStack.Contracts.RouteEntry::MarshallContent(uint8*,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                      uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method RouteEntry::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype NetStack.Contracts.Network NetStack.Contracts.RouteEntry::network
    IL_0006:  ldarg.1
    IL_0007:  ldarg.2
    IL_0008:  ldarg.3
    IL_0009:  call       instance void NetStack.Contracts.Network::MarshallContent(uint8*,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                   uint8*)
    IL_000e:  ret
  } // end of method RouteEntry::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method RouteEntry::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method RouteEntry::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method RouteEntry::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method RouteEntry::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method RouteEntry::Release

} // end of class NetStack.Contracts.RouteEntry

.class public abstract auto ansi beforefieldinit NetStack.Contracts.RoutingContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [kernel]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000010)
    .field public static literal specialname int32 RoutingTable = int32(0x00000003)
    .field public static literal specialname int32 Err = int32(0x00000004)
    .field public static literal specialname int32 NoRouteFound = int32(0x00000005)
    .field public static literal specialname int32 Route = int32(0x00000006)
    .field public static literal specialname int32 OK = int32(0x00000007)
    .field public static literal specialname int32 GetRoutingTable = int32(0x00000008)
    .field public static literal specialname int32 AddRoute = int32(0x00000009)
    .field public static literal specialname int32 DeleteRoute = int32(0x0000000A)
    .field public static literal specialname int32 FindHostRoute = int32(0x0000000B)
    .field public static literal specialname int32 FindNetRoute = int32(0x0000000C)
    .field public static literal specialname int32 FindSpecificHostRoute = int32(0x0000000D)
    .field public static literal specialname int32 FindSpecificNetRoute = int32(0x0000000E)
    .field public static literal specialname int32 Ready = int32(0x0000000F)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype NetStack.Contracts.RoutingContract/RoutingTable RoutingTablePod0
    .field family valuetype NetStack.Contracts.RoutingContract/Err ErrPod0
    .field family valuetype NetStack.Contracts.RoutingContract/NoRouteFound NoRouteFoundPod0
    .field family valuetype NetStack.Contracts.RoutingContract/Route RoutePod0
    .field family valuetype NetStack.Contracts.RoutingContract/OK OKPod0
    .field family valuetype NetStack.Contracts.RoutingContract/Ready ReadyPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000314'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.RoutingContract::CanonicalState$PST06000048(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.RoutingContract::CanonicalState$PST06000048(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       329 (0x149)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_008a

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   16
      IL_0017:  beq        IL_0095

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   15
      IL_001f:  beq        IL_00a0

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   14
      IL_0027:  beq        IL_00ab

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_00b6

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   12
      IL_0037:  beq        IL_00c1

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   11
      IL_003f:  beq        IL_00cc

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   10
      IL_0047:  beq        IL_00d7

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   9
      IL_004f:  beq        IL_00e2

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.8
      IL_0056:  beq        IL_00ed

      IL_005b:  ldloc.0
      IL_005c:  ldc.i4.7
      IL_005d:  beq        IL_00f8

      IL_0062:  ldloc.0
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0103

      IL_0069:  ldloc.0
      IL_006a:  ldc.i4.5
      IL_006b:  beq        IL_010e

      IL_0070:  ldloc.0
      IL_0071:  ldc.i4.4
      IL_0072:  beq        IL_0119

      IL_0077:  ldloc.0
      IL_0078:  ldc.i4.3
      IL_0079:  beq        IL_0124

      IL_007e:  ldloc.0
      IL_007f:  ldc.i4.2
      IL_0080:  beq        IL_012f

      IL_0085:  br         IL_013a

      IL_008a:  ldstr      "ReadyState"
      IL_008f:  stloc.1
      IL_0090:  br         IL_0145

      IL_0095:  ldstr      "ReadyState$0"
      IL_009a:  stloc.1
      IL_009b:  br         IL_0145

      IL_00a0:  ldstr      "ReadyState$1"
      IL_00a5:  stloc.1
      IL_00a6:  br         IL_0145

      IL_00ab:  ldstr      "ReadyState$2"
      IL_00b0:  stloc.1
      IL_00b1:  br         IL_0145

      IL_00b6:  ldstr      "ReadyState$3"
      IL_00bb:  stloc.1
      IL_00bc:  br         IL_0145

      IL_00c1:  ldstr      "ReadyState$4"
      IL_00c6:  stloc.1
      IL_00c7:  br         IL_0145

      IL_00cc:  ldstr      "ReadyState$5"
      IL_00d1:  stloc.1
      IL_00d2:  br         IL_0145

      IL_00d7:  ldstr      "ReadyState$6"
      IL_00dc:  stloc.1
      IL_00dd:  br         IL_0145

      IL_00e2:  ldstr      "ReadyState$7"
      IL_00e7:  stloc.1
      IL_00e8:  br         IL_0145

      IL_00ed:  ldstr      "ReadyState$8"
      IL_00f2:  stloc.1
      IL_00f3:  br         IL_0145

      IL_00f8:  ldstr      "ReadyState$9"
      IL_00fd:  stloc.1
      IL_00fe:  br         IL_0145

      IL_0103:  ldstr      "ReadyState$10"
      IL_0108:  stloc.1
      IL_0109:  br         IL_0145

      IL_010e:  ldstr      "ReadyState$11"
      IL_0113:  stloc.1
      IL_0114:  br         IL_0145

      IL_0119:  ldstr      "ReadyState$12"
      IL_011e:  stloc.1
      IL_011f:  br         IL_0145

      IL_0124:  ldstr      "Start"
      IL_0129:  stloc.1
      IL_012a:  br         IL_0145

      IL_012f:  ldstr      "DoneState"
      IL_0134:  stloc.1
      IL_0135:  br         IL_0145

      IL_013a:  ldstr      "<protocol terminated>"
      IL_013f:  stloc.1
      IL_0140:  br         IL_0145

      IL_0145:  ldloc.1
      IL_0146:  stloc.2
      IL_0147:  ldloc.1
      IL_0148:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvRoutingTable([out] valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& routes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   16
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.3
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.3
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv RoutingTable when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.RoutingContract/RoutingTable NetStack.Contracts.RoutingContract/Imp::RoutingTablePod0
      IL_008e:  ldfld      valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.RoutingContract/RoutingTable::routes
      IL_0093:  stind.i
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype NetStack.Contracts.RoutingContract/RoutingTable NetStack.Contracts.RoutingContract/Imp::RoutingTablePod0
      IL_00a3:  initobj    NetStack.Contracts.RoutingContract/RoutingTable
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   17
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv RoutingTable in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_00c6:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvRoutingTable

    .method public instance void  RecvErr() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.4
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.4
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Err when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype NetStack.Contracts.RoutingContract/Err NetStack.Contracts.RoutingContract/Imp::ErrPod0
      IL_0096:  initobj    NetStack.Contracts.RoutingContract/Err
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   14
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv Err in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_00b9:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvErr

    .method public instance void  RecvNoRouteFound() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       849 (0x351)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0037

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.5
      IL_0016:  beq        IL_00cc

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   13
      IL_001e:  beq        IL_0165

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0202

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.s   9
      IL_002d:  beq        IL_029e

      IL_0032:  br         IL_033a

      IL_0037:  ldc.i4.0
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  brtrue     IL_0058

      IL_0048:  ldarg.0
      IL_0049:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004e:  stloc.1
      IL_004f:  ldarg.0
      IL_0050:  volatile.
      IL_0052:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0057:  stloc.2
      IL_0058:  ldloc.2
      IL_0059:  ldc.i4.0
      IL_005a:  ceq
      IL_005c:  brfalse    IL_007a

      IL_0061:  ldloc.1
      IL_0062:  brfalse    IL_0072

      IL_0067:  ldstr      "Peer is closed"
      IL_006c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0071:  throw

      IL_0072:  ldarg.0
      IL_0073:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0078:  br.s       IL_0037

      IL_007a:  ldarg.0
      IL_007b:  ldc.i4.5
      IL_007c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0081:  ldloc.2
      IL_0082:  ldc.i4.5
      IL_0083:  beq        IL_00a5

      IL_0088:  ldstr      "can't recv NoRouteFound when next message has tag "
      IL_008d:  ldarg.0
      IL_008e:  volatile.
      IL_0090:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0095:  box        [kernel]System.Int32
      IL_009a:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_009f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a4:  throw

      IL_00a5:  ldarg.0
      IL_00a6:  ldc.i4.0
      IL_00a7:  volatile.
      IL_00a9:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00ae:  ldarg.0
      IL_00af:  ldflda     valuetype NetStack.Contracts.RoutingContract/NoRouteFound NetStack.Contracts.RoutingContract/Imp::NoRouteFoundPod0
      IL_00b4:  initobj    NetStack.Contracts.RoutingContract/NoRouteFound
      IL_00ba:  ldarg.0
      IL_00bb:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c0:  ldc.i4.s   10
      IL_00c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c7:  br         IL_0350

      IL_00cc:  ldc.i4.0
      IL_00cd:  stloc.3
      IL_00ce:  ldarg.0
      IL_00cf:  volatile.
      IL_00d1:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00d6:  stloc.s    V_4
      IL_00d8:  ldloc.s    V_4
      IL_00da:  brtrue     IL_00f0

      IL_00df:  ldarg.0
      IL_00e0:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e5:  stloc.3
      IL_00e6:  ldarg.0
      IL_00e7:  volatile.
      IL_00e9:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00ee:  stloc.s    V_4
      IL_00f0:  ldloc.s    V_4
      IL_00f2:  ldc.i4.0
      IL_00f3:  ceq
      IL_00f5:  brfalse    IL_0113

      IL_00fa:  ldloc.3
      IL_00fb:  brfalse    IL_010b

      IL_0100:  ldstr      "Peer is closed"
      IL_0105:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_010a:  throw

      IL_010b:  ldarg.0
      IL_010c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0111:  br.s       IL_00cc

      IL_0113:  ldarg.0
      IL_0114:  ldc.i4.5
      IL_0115:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_011a:  ldloc.s    V_4
      IL_011c:  ldc.i4.5
      IL_011d:  beq        IL_013f

      IL_0122:  ldstr      "can't recv NoRouteFound when next message has tag "
      IL_0127:  ldarg.0
      IL_0128:  volatile.
      IL_012a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_012f:  box        [kernel]System.Int32
      IL_0134:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0139:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_013e:  throw

      IL_013f:  ldarg.0
      IL_0140:  ldc.i4.0
      IL_0141:  volatile.
      IL_0143:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0148:  ldarg.0
      IL_0149:  ldflda     valuetype NetStack.Contracts.RoutingContract/NoRouteFound NetStack.Contracts.RoutingContract/Imp::NoRouteFoundPod0
      IL_014e:  initobj    NetStack.Contracts.RoutingContract/NoRouteFound
      IL_0154:  ldarg.0
      IL_0155:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_015a:  ldc.i4.4
      IL_015b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0160:  br         IL_0350

      IL_0165:  ldc.i4.0
      IL_0166:  stloc.s    V_5
      IL_0168:  ldarg.0
      IL_0169:  volatile.
      IL_016b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0170:  stloc.s    V_6
      IL_0172:  ldloc.s    V_6
      IL_0174:  brtrue     IL_018b

      IL_0179:  ldarg.0
      IL_017a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_017f:  stloc.s    V_5
      IL_0181:  ldarg.0
      IL_0182:  volatile.
      IL_0184:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0189:  stloc.s    V_6
      IL_018b:  ldloc.s    V_6
      IL_018d:  ldc.i4.0
      IL_018e:  ceq
      IL_0190:  brfalse    IL_01af

      IL_0195:  ldloc.s    V_5
      IL_0197:  brfalse    IL_01a7

      IL_019c:  ldstr      "Peer is closed"
      IL_01a1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01a6:  throw

      IL_01a7:  ldarg.0
      IL_01a8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01ad:  br.s       IL_0165

      IL_01af:  ldarg.0
      IL_01b0:  ldc.i4.5
      IL_01b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01b6:  ldloc.s    V_6
      IL_01b8:  ldc.i4.5
      IL_01b9:  beq        IL_01db

      IL_01be:  ldstr      "can't recv NoRouteFound when next message has tag "
      IL_01c3:  ldarg.0
      IL_01c4:  volatile.
      IL_01c6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_01cb:  box        [kernel]System.Int32
      IL_01d0:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01d5:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01da:  throw

      IL_01db:  ldarg.0
      IL_01dc:  ldc.i4.0
      IL_01dd:  volatile.
      IL_01df:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_01e4:  ldarg.0
      IL_01e5:  ldflda     valuetype NetStack.Contracts.RoutingContract/NoRouteFound NetStack.Contracts.RoutingContract/Imp::NoRouteFoundPod0
      IL_01ea:  initobj    NetStack.Contracts.RoutingContract/NoRouteFound
      IL_01f0:  ldarg.0
      IL_01f1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01f6:  ldc.i4.s   12
      IL_01f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01fd:  br         IL_0350

      IL_0202:  ldc.i4.0
      IL_0203:  stloc.s    V_7
      IL_0205:  ldarg.0
      IL_0206:  volatile.
      IL_0208:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_020d:  stloc.s    V_8
      IL_020f:  ldloc.s    V_8
      IL_0211:  brtrue     IL_0228

      IL_0216:  ldarg.0
      IL_0217:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_021c:  stloc.s    V_7
      IL_021e:  ldarg.0
      IL_021f:  volatile.
      IL_0221:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0226:  stloc.s    V_8
      IL_0228:  ldloc.s    V_8
      IL_022a:  ldc.i4.0
      IL_022b:  ceq
      IL_022d:  brfalse    IL_024c

      IL_0232:  ldloc.s    V_7
      IL_0234:  brfalse    IL_0244

      IL_0239:  ldstr      "Peer is closed"
      IL_023e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0243:  throw

      IL_0244:  ldarg.0
      IL_0245:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_024a:  br.s       IL_0202

      IL_024c:  ldarg.0
      IL_024d:  ldc.i4.5
      IL_024e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0253:  ldloc.s    V_8
      IL_0255:  ldc.i4.5
      IL_0256:  beq        IL_0278

      IL_025b:  ldstr      "can't recv NoRouteFound when next message has tag "
      IL_0260:  ldarg.0
      IL_0261:  volatile.
      IL_0263:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0268:  box        [kernel]System.Int32
      IL_026d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0272:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0277:  throw

      IL_0278:  ldarg.0
      IL_0279:  ldc.i4.0
      IL_027a:  volatile.
      IL_027c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0281:  ldarg.0
      IL_0282:  ldflda     valuetype NetStack.Contracts.RoutingContract/NoRouteFound NetStack.Contracts.RoutingContract/Imp::NoRouteFoundPod0
      IL_0287:  initobj    NetStack.Contracts.RoutingContract/NoRouteFound
      IL_028d:  ldarg.0
      IL_028e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0293:  ldc.i4.6
      IL_0294:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0299:  br         IL_0350

      IL_029e:  ldc.i4.0
      IL_029f:  stloc.s    V_9
      IL_02a1:  ldarg.0
      IL_02a2:  volatile.
      IL_02a4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_02a9:  stloc.s    V_10
      IL_02ab:  ldloc.s    V_10
      IL_02ad:  brtrue     IL_02c4

      IL_02b2:  ldarg.0
      IL_02b3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02b8:  stloc.s    V_9
      IL_02ba:  ldarg.0
      IL_02bb:  volatile.
      IL_02bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_02c2:  stloc.s    V_10
      IL_02c4:  ldloc.s    V_10
      IL_02c6:  ldc.i4.0
      IL_02c7:  ceq
      IL_02c9:  brfalse    IL_02e8

      IL_02ce:  ldloc.s    V_9
      IL_02d0:  brfalse    IL_02e0

      IL_02d5:  ldstr      "Peer is closed"
      IL_02da:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02df:  throw

      IL_02e0:  ldarg.0
      IL_02e1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02e6:  br.s       IL_029e

      IL_02e8:  ldarg.0
      IL_02e9:  ldc.i4.5
      IL_02ea:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_02ef:  ldloc.s    V_10
      IL_02f1:  ldc.i4.5
      IL_02f2:  beq        IL_0314

      IL_02f7:  ldstr      "can't recv NoRouteFound when next message has tag "
      IL_02fc:  ldarg.0
      IL_02fd:  volatile.
      IL_02ff:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0304:  box        [kernel]System.Int32
      IL_0309:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_030e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0313:  throw

      IL_0314:  ldarg.0
      IL_0315:  ldc.i4.0
      IL_0316:  volatile.
      IL_0318:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_031d:  ldarg.0
      IL_031e:  ldflda     valuetype NetStack.Contracts.RoutingContract/NoRouteFound NetStack.Contracts.RoutingContract/Imp::NoRouteFoundPod0
      IL_0323:  initobj    NetStack.Contracts.RoutingContract/NoRouteFound
      IL_0329:  ldarg.0
      IL_032a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_032f:  ldc.i4.8
      IL_0330:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0335:  br         IL_0350

      IL_033a:  ldstr      "can't recv NoRouteFound in state "
      IL_033f:  ldarg.0
      IL_0340:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_0345:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_034a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_034f:  throw

      IL_0350:  ret
    } // end of method Imp::RecvNoRouteFound

    .method public instance void  RecvRoute([out] valuetype NetStack.Contracts.RouteEntry& route) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       752 (0x2f0)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_002f

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.5
      IL_0016:  beq        IL_00d5

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.7
      IL_001d:  beq        IL_017f

      IL_0022:  ldloc.0
      IL_0023:  ldc.i4.s   9
      IL_0025:  beq        IL_022c

      IL_002a:  br         IL_02d9

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.1
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_004f:  stloc.2
      IL_0050:  ldloc.2
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0072

      IL_0059:  ldloc.1
      IL_005a:  brfalse    IL_006a

      IL_005f:  ldstr      "Peer is closed"
      IL_0064:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0069:  throw

      IL_006a:  ldarg.0
      IL_006b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0070:  br.s       IL_002f

      IL_0072:  ldarg.0
      IL_0073:  ldc.i4.6
      IL_0074:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0079:  ldloc.2
      IL_007a:  ldc.i4.6
      IL_007b:  beq        IL_009d

      IL_0080:  ldstr      "can't recv Route when next message has tag "
      IL_0085:  ldarg.0
      IL_0086:  volatile.
      IL_0088:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_008d:  box        [kernel]System.Int32
      IL_0092:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0097:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_009c:  throw

      IL_009d:  ldarg.1
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_00a4:  ldfld      valuetype NetStack.Contracts.RouteEntry NetStack.Contracts.RoutingContract/Route::route
      IL_00a9:  stobj      NetStack.Contracts.RouteEntry
      IL_00ae:  ldarg.0
      IL_00af:  ldc.i4.0
      IL_00b0:  volatile.
      IL_00b2:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_00bd:  initobj    NetStack.Contracts.RoutingContract/Route
      IL_00c3:  ldarg.0
      IL_00c4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c9:  ldc.i4.s   10
      IL_00cb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d0:  br         IL_02ef

      IL_00d5:  ldc.i4.0
      IL_00d6:  stloc.3
      IL_00d7:  ldarg.0
      IL_00d8:  volatile.
      IL_00da:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00df:  stloc.s    V_4
      IL_00e1:  ldloc.s    V_4
      IL_00e3:  brtrue     IL_00f9

      IL_00e8:  ldarg.0
      IL_00e9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ee:  stloc.3
      IL_00ef:  ldarg.0
      IL_00f0:  volatile.
      IL_00f2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00f7:  stloc.s    V_4
      IL_00f9:  ldloc.s    V_4
      IL_00fb:  ldc.i4.0
      IL_00fc:  ceq
      IL_00fe:  brfalse    IL_011c

      IL_0103:  ldloc.3
      IL_0104:  brfalse    IL_0114

      IL_0109:  ldstr      "Peer is closed"
      IL_010e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0113:  throw

      IL_0114:  ldarg.0
      IL_0115:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_011a:  br.s       IL_00d5

      IL_011c:  ldarg.0
      IL_011d:  ldc.i4.6
      IL_011e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0123:  ldloc.s    V_4
      IL_0125:  ldc.i4.6
      IL_0126:  beq        IL_0148

      IL_012b:  ldstr      "can't recv Route when next message has tag "
      IL_0130:  ldarg.0
      IL_0131:  volatile.
      IL_0133:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0138:  box        [kernel]System.Int32
      IL_013d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0142:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0147:  throw

      IL_0148:  ldarg.1
      IL_0149:  ldarg.0
      IL_014a:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_014f:  ldfld      valuetype NetStack.Contracts.RouteEntry NetStack.Contracts.RoutingContract/Route::route
      IL_0154:  stobj      NetStack.Contracts.RouteEntry
      IL_0159:  ldarg.0
      IL_015a:  ldc.i4.0
      IL_015b:  volatile.
      IL_015d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0162:  ldarg.0
      IL_0163:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_0168:  initobj    NetStack.Contracts.RoutingContract/Route
      IL_016e:  ldarg.0
      IL_016f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0174:  ldc.i4.4
      IL_0175:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_017a:  br         IL_02ef

      IL_017f:  ldc.i4.0
      IL_0180:  stloc.s    V_5
      IL_0182:  ldarg.0
      IL_0183:  volatile.
      IL_0185:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_018a:  stloc.s    V_6
      IL_018c:  ldloc.s    V_6
      IL_018e:  brtrue     IL_01a5

      IL_0193:  ldarg.0
      IL_0194:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0199:  stloc.s    V_5
      IL_019b:  ldarg.0
      IL_019c:  volatile.
      IL_019e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_01a3:  stloc.s    V_6
      IL_01a5:  ldloc.s    V_6
      IL_01a7:  ldc.i4.0
      IL_01a8:  ceq
      IL_01aa:  brfalse    IL_01c9

      IL_01af:  ldloc.s    V_5
      IL_01b1:  brfalse    IL_01c1

      IL_01b6:  ldstr      "Peer is closed"
      IL_01bb:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01c0:  throw

      IL_01c1:  ldarg.0
      IL_01c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01c7:  br.s       IL_017f

      IL_01c9:  ldarg.0
      IL_01ca:  ldc.i4.6
      IL_01cb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01d0:  ldloc.s    V_6
      IL_01d2:  ldc.i4.6
      IL_01d3:  beq        IL_01f5

      IL_01d8:  ldstr      "can't recv Route when next message has tag "
      IL_01dd:  ldarg.0
      IL_01de:  volatile.
      IL_01e0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_01e5:  box        [kernel]System.Int32
      IL_01ea:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01ef:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01f4:  throw

      IL_01f5:  ldarg.1
      IL_01f6:  ldarg.0
      IL_01f7:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_01fc:  ldfld      valuetype NetStack.Contracts.RouteEntry NetStack.Contracts.RoutingContract/Route::route
      IL_0201:  stobj      NetStack.Contracts.RouteEntry
      IL_0206:  ldarg.0
      IL_0207:  ldc.i4.0
      IL_0208:  volatile.
      IL_020a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_020f:  ldarg.0
      IL_0210:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_0215:  initobj    NetStack.Contracts.RoutingContract/Route
      IL_021b:  ldarg.0
      IL_021c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0221:  ldc.i4.6
      IL_0222:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0227:  br         IL_02ef

      IL_022c:  ldc.i4.0
      IL_022d:  stloc.s    V_7
      IL_022f:  ldarg.0
      IL_0230:  volatile.
      IL_0232:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0237:  stloc.s    V_8
      IL_0239:  ldloc.s    V_8
      IL_023b:  brtrue     IL_0252

      IL_0240:  ldarg.0
      IL_0241:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0246:  stloc.s    V_7
      IL_0248:  ldarg.0
      IL_0249:  volatile.
      IL_024b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0250:  stloc.s    V_8
      IL_0252:  ldloc.s    V_8
      IL_0254:  ldc.i4.0
      IL_0255:  ceq
      IL_0257:  brfalse    IL_0276

      IL_025c:  ldloc.s    V_7
      IL_025e:  brfalse    IL_026e

      IL_0263:  ldstr      "Peer is closed"
      IL_0268:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_026d:  throw

      IL_026e:  ldarg.0
      IL_026f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0274:  br.s       IL_022c

      IL_0276:  ldarg.0
      IL_0277:  ldc.i4.6
      IL_0278:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_027d:  ldloc.s    V_8
      IL_027f:  ldc.i4.6
      IL_0280:  beq        IL_02a2

      IL_0285:  ldstr      "can't recv Route when next message has tag "
      IL_028a:  ldarg.0
      IL_028b:  volatile.
      IL_028d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0292:  box        [kernel]System.Int32
      IL_0297:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_029c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02a1:  throw

      IL_02a2:  ldarg.1
      IL_02a3:  ldarg.0
      IL_02a4:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_02a9:  ldfld      valuetype NetStack.Contracts.RouteEntry NetStack.Contracts.RoutingContract/Route::route
      IL_02ae:  stobj      NetStack.Contracts.RouteEntry
      IL_02b3:  ldarg.0
      IL_02b4:  ldc.i4.0
      IL_02b5:  volatile.
      IL_02b7:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_02bc:  ldarg.0
      IL_02bd:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_02c2:  initobj    NetStack.Contracts.RoutingContract/Route
      IL_02c8:  ldarg.0
      IL_02c9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02ce:  ldc.i4.8
      IL_02cf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02d4:  br         IL_02ef

      IL_02d9:  ldstr      "can't recv Route in state "
      IL_02de:  ldarg.0
      IL_02df:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_02e4:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02e9:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02ee:  throw

      IL_02ef:  ret
    } // end of method Imp::RecvRoute

    .method public instance void  RecvOK() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       359 (0x167)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  beq        IL_00b6

      IL_001c:  br         IL_0150

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.7
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006b:  ldloc.2
      IL_006c:  ldc.i4.7
      IL_006d:  beq        IL_008f

      IL_0072:  ldstr      "can't recv OK when next message has tag "
      IL_0077:  ldarg.0
      IL_0078:  volatile.
      IL_007a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_007f:  box        [kernel]System.Int32
      IL_0084:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0089:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ldarg.0
      IL_0090:  ldc.i4.0
      IL_0091:  volatile.
      IL_0093:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0098:  ldarg.0
      IL_0099:  ldflda     valuetype NetStack.Contracts.RoutingContract/OK NetStack.Contracts.RoutingContract/Imp::OKPod0
      IL_009e:  initobj    NetStack.Contracts.RoutingContract/OK
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00aa:  ldc.i4.s   12
      IL_00ac:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b1:  br         IL_0166

      IL_00b6:  ldc.i4.0
      IL_00b7:  stloc.3
      IL_00b8:  ldarg.0
      IL_00b9:  volatile.
      IL_00bb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00c0:  stloc.s    V_4
      IL_00c2:  ldloc.s    V_4
      IL_00c4:  brtrue     IL_00da

      IL_00c9:  ldarg.0
      IL_00ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00cf:  stloc.3
      IL_00d0:  ldarg.0
      IL_00d1:  volatile.
      IL_00d3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00d8:  stloc.s    V_4
      IL_00da:  ldloc.s    V_4
      IL_00dc:  ldc.i4.0
      IL_00dd:  ceq
      IL_00df:  brfalse    IL_00fd

      IL_00e4:  ldloc.3
      IL_00e5:  brfalse    IL_00f5

      IL_00ea:  ldstr      "Peer is closed"
      IL_00ef:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f4:  throw

      IL_00f5:  ldarg.0
      IL_00f6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fb:  br.s       IL_00b6

      IL_00fd:  ldarg.0
      IL_00fe:  ldc.i4.7
      IL_00ff:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0104:  ldloc.s    V_4
      IL_0106:  ldc.i4.7
      IL_0107:  beq        IL_0129

      IL_010c:  ldstr      "can't recv OK when next message has tag "
      IL_0111:  ldarg.0
      IL_0112:  volatile.
      IL_0114:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0119:  box        [kernel]System.Int32
      IL_011e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0123:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0128:  throw

      IL_0129:  ldarg.0
      IL_012a:  ldc.i4.0
      IL_012b:  volatile.
      IL_012d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0132:  ldarg.0
      IL_0133:  ldflda     valuetype NetStack.Contracts.RoutingContract/OK NetStack.Contracts.RoutingContract/Imp::OKPod0
      IL_0138:  initobj    NetStack.Contracts.RoutingContract/OK
      IL_013e:  ldarg.0
      IL_013f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0144:  ldc.i4.s   14
      IL_0146:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014b:  br         IL_0166

      IL_0150:  ldstr      "can't recv OK in state "
      IL_0155:  ldarg.0
      IL_0156:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_015b:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0160:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0165:  throw

      IL_0166:  ret
    } // end of method Imp::RecvOK

    .method public instance void  SendGetRoutingTable() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0038:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverGetRoutingTable0$PST0600035E()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallDeliverGetRoutingTable0$PST0600035F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   16
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetRoutingTable in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetRoutingTable

    .method public instance void  SendAddRoute(valuetype NetStack.Contracts.Network dest,
                                               uint32 gateway,
                                               uint32 ifaddr) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       140 (0x8c)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0075

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004e

      IL_0032:  ldarga.s   dest
      IL_0034:  ldloc.s    V_4
      IL_0036:  call       instance void NetStack.Contracts.Network::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0041:  ldarg.1
      IL_0042:  ldarg.2
      IL_0043:  ldarg.3
      IL_0044:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverAddRoute0$PST06000360(valuetype NetStack.Contracts.Network,
                                                                                                              uint32,
                                                                                                              uint32)
      IL_0049:  br         IL_005d

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.2
      IL_0056:  ldarg.3
      IL_0057:  ldarg.0
      IL_0058:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallDeliverAddRoute0$PST06000361(valuetype NetStack.Contracts.Network,
                                                                                                                      uint32,
                                                                                                                      uint32,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005d:  ldarg.0
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0063:  ldarg.0
      IL_0064:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0069:  ldc.i4.s   15
      IL_006b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0070:  br         IL_008b

      IL_0075:  ldstr      "can't send AddRoute in state "
      IL_007a:  ldarg.0
      IL_007b:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_0080:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0085:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_008a:  throw

      IL_008b:  ret
    } // end of method Imp::SendAddRoute

    .method public instance void  SendDeleteRoute(valuetype NetStack.Contracts.Network dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       136 (0x88)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0071

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldarga.s   dest
      IL_0034:  ldloc.s    V_4
      IL_0036:  call       instance void NetStack.Contracts.Network::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0041:  ldarg.1
      IL_0042:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverDeleteRoute0$PST06000362(valuetype NetStack.Contracts.Network)
      IL_0047:  br         IL_0059

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.0
      IL_0054:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallDeliverDeleteRoute0$PST06000363(valuetype NetStack.Contracts.Network,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0059:  ldarg.0
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005f:  ldarg.0
      IL_0060:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0065:  ldc.i4.s   13
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006c:  br         IL_0087

      IL_0071:  ldstr      "can't send DeleteRoute in state "
      IL_0076:  ldarg.0
      IL_0077:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_007c:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0081:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ret
    } // end of method Imp::SendDeleteRoute

    .method public instance void  SendFindHostRoute(uint32 dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverFindHostRoute0$PST06000364(uint32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallDeliverFindHostRoute0$PST06000365(uint32,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   11
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send FindHostRoute in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendFindHostRoute

    .method public instance void  SendFindNetRoute(valuetype NetStack.Contracts.Network dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       136 (0x88)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0071

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldarga.s   dest
      IL_0034:  ldloc.s    V_4
      IL_0036:  call       instance void NetStack.Contracts.Network::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0041:  ldarg.1
      IL_0042:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverFindNetRoute0$PST06000366(valuetype NetStack.Contracts.Network)
      IL_0047:  br         IL_0059

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.0
      IL_0054:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallDeliverFindNetRoute0$PST06000367(valuetype NetStack.Contracts.Network,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0059:  ldarg.0
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005f:  ldarg.0
      IL_0060:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0065:  ldc.i4.s   9
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006c:  br         IL_0087

      IL_0071:  ldstr      "can't send FindNetRoute in state "
      IL_0076:  ldarg.0
      IL_0077:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_007c:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0081:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ret
    } // end of method Imp::SendFindNetRoute

    .method public instance void  SendFindSpecificHostRoute(uint32 dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0067

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverFindSpecificHostRoute0$PST06000368(uint32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallDeliverFindSpecificHostRoute0$PST06000369(uint32,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send FindSpecificHostRoute in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_0072:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Imp::SendFindSpecificHostRoute

    .method public instance void  SendFindSpecificNetRoute(valuetype NetStack.Contracts.Network dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       135 (0x87)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0070

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldarga.s   dest
      IL_0034:  ldloc.s    V_4
      IL_0036:  call       instance void NetStack.Contracts.Network::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0041:  ldarg.1
      IL_0042:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverFindSpecificNetRoute0$PST0600036A(valuetype NetStack.Contracts.Network)
      IL_0047:  br         IL_0059

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.0
      IL_0054:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallDeliverFindSpecificNetRoute0$PST0600036B(valuetype NetStack.Contracts.Network,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0059:  ldarg.0
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005f:  ldarg.0
      IL_0060:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0065:  ldc.i4.5
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006b:  br         IL_0086

      IL_0070:  ldstr      "can't send FindSpecificNetRoute in state "
      IL_0075:  ldarg.0
      IL_0076:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_007b:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0080:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ret
    } // end of method Imp::SendFindSpecificNetRoute

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   15
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   15
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Ready when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0078:  box        [kernel]System.Int32
      IL_007d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype NetStack.Contracts.RoutingContract/Ready NetStack.Contracts.RoutingContract/Imp::ReadyPod0
      IL_0097:  initobj    NetStack.Contracts.RoutingContract/Ready
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   17
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv Ready in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_00ba:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvReady

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.RoutingContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.RoutingContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.RoutingContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.RoutingContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.RoutingContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.RoutingContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.RoutingContract/Imp
      IL_0022:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       743 (0x2e7)
      .maxstack  12
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               int32 V_21)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0058

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_0098

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_00e0

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0128

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_0170

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   15
      IL_0037:  beq        IL_01b8

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.s   16
      IL_003f:  beq        IL_0200

      IL_0044:  ldloc.1
      IL_0045:  ldc.i4.s   17
      IL_0047:  beq        IL_0248

      IL_004c:  ldloc.1
      IL_004d:  ldc.i4.3
      IL_004e:  beq        IL_0290

      IL_0053:  br         IL_02d8

      IL_0058:  ldc.i4.0
      IL_0059:  stloc.2
      IL_005a:  ldarg.0
      IL_005b:  volatile.
      IL_005d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0062:  stloc.3
      IL_0063:  ldloc.3
      IL_0064:  brtrue     IL_0079

      IL_0069:  ldarg.0
      IL_006a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_006f:  stloc.2
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0078:  stloc.3
      IL_0079:  ldloc.3
      IL_007a:  ldc.i4.0
      IL_007b:  ceq
      IL_007d:  brfalse    IL_0090

      IL_0082:  ldloc.2
      IL_0083:  brfalse    IL_0090

      IL_0088:  ldc.i4.m1
      IL_0089:  stloc.s    V_4
      IL_008b:  br         IL_02e0

      IL_0090:  ldloc.3
      IL_0091:  stloc.s    V_4
      IL_0093:  br         IL_02e0

      IL_0098:  ldc.i4.0
      IL_0099:  stloc.s    V_5
      IL_009b:  ldarg.0
      IL_009c:  volatile.
      IL_009e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00a3:  stloc.s    V_6
      IL_00a5:  ldloc.s    V_6
      IL_00a7:  brtrue     IL_00be

      IL_00ac:  ldarg.0
      IL_00ad:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00b2:  stloc.s    V_5
      IL_00b4:  ldarg.0
      IL_00b5:  volatile.
      IL_00b7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00bc:  stloc.s    V_6
      IL_00be:  ldloc.s    V_6
      IL_00c0:  ldc.i4.0
      IL_00c1:  ceq
      IL_00c3:  brfalse    IL_00d7

      IL_00c8:  ldloc.s    V_5
      IL_00ca:  brfalse    IL_00d7

      IL_00cf:  ldc.i4.m1
      IL_00d0:  stloc.s    V_4
      IL_00d2:  br         IL_02e0

      IL_00d7:  ldloc.s    V_6
      IL_00d9:  stloc.s    V_4
      IL_00db:  br         IL_02e0

      IL_00e0:  ldc.i4.0
      IL_00e1:  stloc.s    V_7
      IL_00e3:  ldarg.0
      IL_00e4:  volatile.
      IL_00e6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_00eb:  stloc.s    V_8
      IL_00ed:  ldloc.s    V_8
      IL_00ef:  brtrue     IL_0106

      IL_00f4:  ldarg.0
      IL_00f5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00fa:  stloc.s    V_7
      IL_00fc:  ldarg.0
      IL_00fd:  volatile.
      IL_00ff:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0104:  stloc.s    V_8
      IL_0106:  ldloc.s    V_8
      IL_0108:  ldc.i4.0
      IL_0109:  ceq
      IL_010b:  brfalse    IL_011f

      IL_0110:  ldloc.s    V_7
      IL_0112:  brfalse    IL_011f

      IL_0117:  ldc.i4.m1
      IL_0118:  stloc.s    V_4
      IL_011a:  br         IL_02e0

      IL_011f:  ldloc.s    V_8
      IL_0121:  stloc.s    V_4
      IL_0123:  br         IL_02e0

      IL_0128:  ldc.i4.0
      IL_0129:  stloc.s    V_9
      IL_012b:  ldarg.0
      IL_012c:  volatile.
      IL_012e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0133:  stloc.s    V_10
      IL_0135:  ldloc.s    V_10
      IL_0137:  brtrue     IL_014e

      IL_013c:  ldarg.0
      IL_013d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0142:  stloc.s    V_9
      IL_0144:  ldarg.0
      IL_0145:  volatile.
      IL_0147:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_014c:  stloc.s    V_10
      IL_014e:  ldloc.s    V_10
      IL_0150:  ldc.i4.0
      IL_0151:  ceq
      IL_0153:  brfalse    IL_0167

      IL_0158:  ldloc.s    V_9
      IL_015a:  brfalse    IL_0167

      IL_015f:  ldc.i4.m1
      IL_0160:  stloc.s    V_4
      IL_0162:  br         IL_02e0

      IL_0167:  ldloc.s    V_10
      IL_0169:  stloc.s    V_4
      IL_016b:  br         IL_02e0

      IL_0170:  ldc.i4.0
      IL_0171:  stloc.s    V_11
      IL_0173:  ldarg.0
      IL_0174:  volatile.
      IL_0176:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_017b:  stloc.s    V_12
      IL_017d:  ldloc.s    V_12
      IL_017f:  brtrue     IL_0196

      IL_0184:  ldarg.0
      IL_0185:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_018a:  stloc.s    V_11
      IL_018c:  ldarg.0
      IL_018d:  volatile.
      IL_018f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0194:  stloc.s    V_12
      IL_0196:  ldloc.s    V_12
      IL_0198:  ldc.i4.0
      IL_0199:  ceq
      IL_019b:  brfalse    IL_01af

      IL_01a0:  ldloc.s    V_11
      IL_01a2:  brfalse    IL_01af

      IL_01a7:  ldc.i4.m1
      IL_01a8:  stloc.s    V_4
      IL_01aa:  br         IL_02e0

      IL_01af:  ldloc.s    V_12
      IL_01b1:  stloc.s    V_4
      IL_01b3:  br         IL_02e0

      IL_01b8:  ldc.i4.0
      IL_01b9:  stloc.s    V_13
      IL_01bb:  ldarg.0
      IL_01bc:  volatile.
      IL_01be:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_01c3:  stloc.s    V_14
      IL_01c5:  ldloc.s    V_14
      IL_01c7:  brtrue     IL_01de

      IL_01cc:  ldarg.0
      IL_01cd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01d2:  stloc.s    V_13
      IL_01d4:  ldarg.0
      IL_01d5:  volatile.
      IL_01d7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_01dc:  stloc.s    V_14
      IL_01de:  ldloc.s    V_14
      IL_01e0:  ldc.i4.0
      IL_01e1:  ceq
      IL_01e3:  brfalse    IL_01f7

      IL_01e8:  ldloc.s    V_13
      IL_01ea:  brfalse    IL_01f7

      IL_01ef:  ldc.i4.m1
      IL_01f0:  stloc.s    V_4
      IL_01f2:  br         IL_02e0

      IL_01f7:  ldloc.s    V_14
      IL_01f9:  stloc.s    V_4
      IL_01fb:  br         IL_02e0

      IL_0200:  ldc.i4.0
      IL_0201:  stloc.s    V_15
      IL_0203:  ldarg.0
      IL_0204:  volatile.
      IL_0206:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_020b:  stloc.s    V_16
      IL_020d:  ldloc.s    V_16
      IL_020f:  brtrue     IL_0226

      IL_0214:  ldarg.0
      IL_0215:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_021a:  stloc.s    V_15
      IL_021c:  ldarg.0
      IL_021d:  volatile.
      IL_021f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0224:  stloc.s    V_16
      IL_0226:  ldloc.s    V_16
      IL_0228:  ldc.i4.0
      IL_0229:  ceq
      IL_022b:  brfalse    IL_023f

      IL_0230:  ldloc.s    V_15
      IL_0232:  brfalse    IL_023f

      IL_0237:  ldc.i4.m1
      IL_0238:  stloc.s    V_4
      IL_023a:  br         IL_02e0

      IL_023f:  ldloc.s    V_16
      IL_0241:  stloc.s    V_4
      IL_0243:  br         IL_02e0

      IL_0248:  ldc.i4.0
      IL_0249:  stloc.s    V_17
      IL_024b:  ldarg.0
      IL_024c:  volatile.
      IL_024e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0253:  stloc.s    V_18
      IL_0255:  ldloc.s    V_18
      IL_0257:  brtrue     IL_026e

      IL_025c:  ldarg.0
      IL_025d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0262:  stloc.s    V_17
      IL_0264:  ldarg.0
      IL_0265:  volatile.
      IL_0267:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_026c:  stloc.s    V_18
      IL_026e:  ldloc.s    V_18
      IL_0270:  ldc.i4.0
      IL_0271:  ceq
      IL_0273:  brfalse    IL_0287

      IL_0278:  ldloc.s    V_17
      IL_027a:  brfalse    IL_0287

      IL_027f:  ldc.i4.m1
      IL_0280:  stloc.s    V_4
      IL_0282:  br         IL_02e0

      IL_0287:  ldloc.s    V_18
      IL_0289:  stloc.s    V_4
      IL_028b:  br         IL_02e0

      IL_0290:  ldc.i4.0
      IL_0291:  stloc.s    V_19
      IL_0293:  ldarg.0
      IL_0294:  volatile.
      IL_0296:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_029b:  stloc.s    V_20
      IL_029d:  ldloc.s    V_20
      IL_029f:  brtrue     IL_02b6

      IL_02a4:  ldarg.0
      IL_02a5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02aa:  stloc.s    V_19
      IL_02ac:  ldarg.0
      IL_02ad:  volatile.
      IL_02af:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_02b4:  stloc.s    V_20
      IL_02b6:  ldloc.s    V_20
      IL_02b8:  ldc.i4.0
      IL_02b9:  ceq
      IL_02bb:  brfalse    IL_02cf

      IL_02c0:  ldloc.s    V_19
      IL_02c2:  brfalse    IL_02cf

      IL_02c7:  ldc.i4.m1
      IL_02c8:  stloc.s    V_4
      IL_02ca:  br         IL_02e0

      IL_02cf:  ldloc.s    V_20
      IL_02d1:  stloc.s    V_4
      IL_02d3:  br         IL_02e0

      IL_02d8:  ldc.i4.m1
      IL_02d9:  stloc.s    V_4
      IL_02db:  br         IL_02e0

      IL_02e0:  ldloc.s    V_4
      IL_02e2:  stloc.s    V_21
      IL_02e4:  ldloc.s    V_4
      IL_02e6:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.RoutingContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverRoutingTable0$PST06000332(valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) routes) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RoutingContract/RoutingTable NetStack.Contracts.RoutingContract/Imp::RoutingTablePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.RoutingContract/RoutingTable::routes
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.3
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.3
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverRoutingTable0

    .method privatescope instance void  MarshallDeliverRoutingTable0$PST06000333(valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) routes,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverRoutingTable0$PST06000332(valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.RoutingContract/RoutingTable NetStack.Contracts.RoutingContract/Imp::RoutingTablePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.RoutingContract/RoutingTable::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverRoutingTable0

    .method privatescope instance void  DeliverErr0$PST06000334() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverErr0

    .method privatescope instance void  MarshallDeliverErr0$PST06000335(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverErr0$PST06000334()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.RoutingContract/Err NetStack.Contracts.RoutingContract/Imp::ErrPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.RoutingContract/Err::MarshallAll(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverErr0

    .method privatescope instance void  DeliverNoRouteFound0$PST06000336() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNoRouteFound0

    .method privatescope instance void  MarshallDeliverNoRouteFound0$PST06000337(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverNoRouteFound0$PST06000336()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.RoutingContract/NoRouteFound NetStack.Contracts.RoutingContract/Imp::NoRouteFoundPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.RoutingContract/NoRouteFound::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNoRouteFound0

    .method privatescope instance void  DeliverRoute0$PST06000338(valuetype NetStack.Contracts.RouteEntry route) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.RouteEntry NetStack.Contracts.RoutingContract/Route::route
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.6
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.6
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverRoute0

    .method privatescope instance void  MarshallDeliverRoute0$PST06000339(valuetype NetStack.Contracts.RouteEntry route,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverRoute0$PST06000338(valuetype NetStack.Contracts.RouteEntry)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.RoutingContract/Route NetStack.Contracts.RoutingContract/Imp::RoutePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.RoutingContract/Route::MarshallAll(uint8*,
                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                               int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverRoute0

    .method privatescope instance void  DeliverOK0$PST0600033A() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverOK0

    .method privatescope instance void  MarshallDeliverOK0$PST0600033B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverOK0$PST0600033A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.RoutingContract/OK NetStack.Contracts.RoutingContract/Imp::OKPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.RoutingContract/OK::MarshallAll(uint8*,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                            int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverOK0

    .method privatescope instance void  DeliverReady0$PST0600033C() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   15
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   15
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST0600033D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverReady0$PST0600033C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.RoutingContract/Ready NetStack.Contracts.RoutingContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.RoutingContract/Ready::MarshallAll(uint8*,
                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                               int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverContractNotSupported0$PST0600033E() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST0600033F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverContractNotSupported0$PST0600033E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.RoutingContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.RoutingContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype NetStack.Contracts.RoutingContract/GetRoutingTable GetRoutingTablePod0
    .field family valuetype NetStack.Contracts.RoutingContract/AddRoute AddRoutePod0
    .field family valuetype NetStack.Contracts.RoutingContract/DeleteRoute DeleteRoutePod0
    .field family valuetype NetStack.Contracts.RoutingContract/FindHostRoute FindHostRoutePod0
    .field family valuetype NetStack.Contracts.RoutingContract/FindNetRoute FindNetRoutePod0
    .field family valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute FindSpecificHostRoutePod0
    .field family valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute FindSpecificNetRoutePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.RoutingContract::CanonicalState$PST06000048(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.RoutingContract::CanonicalState$PST06000048(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       329 (0x149)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_008a

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   16
      IL_0017:  beq        IL_0095

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   15
      IL_001f:  beq        IL_00a0

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   14
      IL_0027:  beq        IL_00ab

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_00b6

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   12
      IL_0037:  beq        IL_00c1

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   11
      IL_003f:  beq        IL_00cc

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   10
      IL_0047:  beq        IL_00d7

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   9
      IL_004f:  beq        IL_00e2

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.8
      IL_0056:  beq        IL_00ed

      IL_005b:  ldloc.0
      IL_005c:  ldc.i4.7
      IL_005d:  beq        IL_00f8

      IL_0062:  ldloc.0
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0103

      IL_0069:  ldloc.0
      IL_006a:  ldc.i4.5
      IL_006b:  beq        IL_010e

      IL_0070:  ldloc.0
      IL_0071:  ldc.i4.4
      IL_0072:  beq        IL_0119

      IL_0077:  ldloc.0
      IL_0078:  ldc.i4.3
      IL_0079:  beq        IL_0124

      IL_007e:  ldloc.0
      IL_007f:  ldc.i4.2
      IL_0080:  beq        IL_012f

      IL_0085:  br         IL_013a

      IL_008a:  ldstr      "ReadyState"
      IL_008f:  stloc.1
      IL_0090:  br         IL_0145

      IL_0095:  ldstr      "ReadyState$0"
      IL_009a:  stloc.1
      IL_009b:  br         IL_0145

      IL_00a0:  ldstr      "ReadyState$1"
      IL_00a5:  stloc.1
      IL_00a6:  br         IL_0145

      IL_00ab:  ldstr      "ReadyState$2"
      IL_00b0:  stloc.1
      IL_00b1:  br         IL_0145

      IL_00b6:  ldstr      "ReadyState$3"
      IL_00bb:  stloc.1
      IL_00bc:  br         IL_0145

      IL_00c1:  ldstr      "ReadyState$4"
      IL_00c6:  stloc.1
      IL_00c7:  br         IL_0145

      IL_00cc:  ldstr      "ReadyState$5"
      IL_00d1:  stloc.1
      IL_00d2:  br         IL_0145

      IL_00d7:  ldstr      "ReadyState$6"
      IL_00dc:  stloc.1
      IL_00dd:  br         IL_0145

      IL_00e2:  ldstr      "ReadyState$7"
      IL_00e7:  stloc.1
      IL_00e8:  br         IL_0145

      IL_00ed:  ldstr      "ReadyState$8"
      IL_00f2:  stloc.1
      IL_00f3:  br         IL_0145

      IL_00f8:  ldstr      "ReadyState$9"
      IL_00fd:  stloc.1
      IL_00fe:  br         IL_0145

      IL_0103:  ldstr      "ReadyState$10"
      IL_0108:  stloc.1
      IL_0109:  br         IL_0145

      IL_010e:  ldstr      "ReadyState$11"
      IL_0113:  stloc.1
      IL_0114:  br         IL_0145

      IL_0119:  ldstr      "ReadyState$12"
      IL_011e:  stloc.1
      IL_011f:  br         IL_0145

      IL_0124:  ldstr      "Start"
      IL_0129:  stloc.1
      IL_012a:  br         IL_0145

      IL_012f:  ldstr      "DoneState"
      IL_0134:  stloc.1
      IL_0135:  br         IL_0145

      IL_013a:  ldstr      "<protocol terminated>"
      IL_013f:  stloc.1
      IL_0140:  br         IL_0145

      IL_0145:  ldloc.1
      IL_0146:  stloc.2
      IL_0147:  ldloc.1
      IL_0148:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendRoutingTable(valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) routes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       135 (0x87)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   16
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0070

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004b

      IL_0032:  ldloc.s    V_4
      IL_0034:  ldarg.1
      IL_0035:  call       void NetStack.Contracts.RouteEntry::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                       valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0040:  ldarg.1
      IL_0041:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverRoutingTable0$PST06000332(valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0046:  br         IL_0058

      IL_004b:  ldloc.3
      IL_004c:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverRoutingTable0$PST06000333(valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0058:  ldarg.0
      IL_0059:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005e:  ldarg.0
      IL_005f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0064:  ldc.i4.s   17
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006b:  br         IL_0086

      IL_0070:  ldstr      "can't send RoutingTable in state "
      IL_0075:  ldarg.0
      IL_0076:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_007b:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0080:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ret
    } // end of method Exp::SendRoutingTable

    .method public instance void  SendErr() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0038:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverErr0$PST06000334()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverErr0$PST06000335(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   14
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send Err in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendErr

    .method public instance void  SendNoRouteFound() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       488 (0x1e8)
      .maxstack  30
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0037

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.5
      IL_0016:  beq        IL_0084

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   13
      IL_001e:  beq        IL_00d7

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_012b

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.s   9
      IL_002d:  beq        IL_017e

      IL_0032:  br         IL_01d1

      IL_0037:  ldarg.0
      IL_0038:  ldloca.s   V_1
      IL_003a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_003f:  stloc.2
      IL_0040:  ldloc.2
      IL_0041:  stloc.3
      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0048:  stloc.s    V_4
      IL_004a:  ldloc.1
      IL_004b:  brtrue     IL_0060

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0056:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverNoRouteFound0$PST06000336()
      IL_005b:  br         IL_006c

      IL_0060:  ldloc.3
      IL_0061:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0066:  ldarg.0
      IL_0067:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverNoRouteFound0$PST06000337(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   10
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_01e7

      IL_0084:  ldarg.0
      IL_0085:  ldloca.s   V_5
      IL_0087:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  stloc.s    V_7
      IL_0092:  ldloc.s    V_7
      IL_0094:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0099:  stloc.s    V_8
      IL_009b:  ldloc.s    V_5
      IL_009d:  brtrue     IL_00b3

      IL_00a2:  ldloc.s    V_7
      IL_00a4:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_00a9:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverNoRouteFound0$PST06000336()
      IL_00ae:  br         IL_00c0

      IL_00b3:  ldloc.s    V_7
      IL_00b5:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_00ba:  ldarg.0
      IL_00bb:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverNoRouteFound0$PST06000337(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c6:  ldarg.0
      IL_00c7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cc:  ldc.i4.4
      IL_00cd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d2:  br         IL_01e7

      IL_00d7:  ldarg.0
      IL_00d8:  ldloca.s   V_9
      IL_00da:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00df:  stloc.s    V_10
      IL_00e1:  ldloc.s    V_10
      IL_00e3:  stloc.s    V_11
      IL_00e5:  ldloc.s    V_11
      IL_00e7:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_00ec:  stloc.s    V_12
      IL_00ee:  ldloc.s    V_9
      IL_00f0:  brtrue     IL_0106

      IL_00f5:  ldloc.s    V_11
      IL_00f7:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_00fc:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverNoRouteFound0$PST06000336()
      IL_0101:  br         IL_0113

      IL_0106:  ldloc.s    V_11
      IL_0108:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_010d:  ldarg.0
      IL_010e:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverNoRouteFound0$PST06000337(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0113:  ldarg.0
      IL_0114:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0119:  ldarg.0
      IL_011a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_011f:  ldc.i4.s   12
      IL_0121:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0126:  br         IL_01e7

      IL_012b:  ldarg.0
      IL_012c:  ldloca.s   V_13
      IL_012e:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0133:  stloc.s    V_14
      IL_0135:  ldloc.s    V_14
      IL_0137:  stloc.s    V_15
      IL_0139:  ldloc.s    V_15
      IL_013b:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0140:  stloc.s    V_16
      IL_0142:  ldloc.s    V_13
      IL_0144:  brtrue     IL_015a

      IL_0149:  ldloc.s    V_15
      IL_014b:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0150:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverNoRouteFound0$PST06000336()
      IL_0155:  br         IL_0167

      IL_015a:  ldloc.s    V_15
      IL_015c:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0161:  ldarg.0
      IL_0162:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverNoRouteFound0$PST06000337(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0167:  ldarg.0
      IL_0168:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_016d:  ldarg.0
      IL_016e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0173:  ldc.i4.6
      IL_0174:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0179:  br         IL_01e7

      IL_017e:  ldarg.0
      IL_017f:  ldloca.s   V_17
      IL_0181:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0186:  stloc.s    V_18
      IL_0188:  ldloc.s    V_18
      IL_018a:  stloc.s    V_19
      IL_018c:  ldloc.s    V_19
      IL_018e:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0193:  stloc.s    V_20
      IL_0195:  ldloc.s    V_17
      IL_0197:  brtrue     IL_01ad

      IL_019c:  ldloc.s    V_19
      IL_019e:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_01a3:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverNoRouteFound0$PST06000336()
      IL_01a8:  br         IL_01ba

      IL_01ad:  ldloc.s    V_19
      IL_01af:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_01b4:  ldarg.0
      IL_01b5:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverNoRouteFound0$PST06000337(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01ba:  ldarg.0
      IL_01bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01c0:  ldarg.0
      IL_01c1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01c6:  ldc.i4.8
      IL_01c7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01cc:  br         IL_01e7

      IL_01d1:  ldstr      "can't send NoRouteFound in state "
      IL_01d6:  ldarg.0
      IL_01d7:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_01dc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_01e1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_01e6:  throw

      IL_01e7:  ret
    } // end of method Exp::SendNoRouteFound

    .method public instance void  SendRoute(valuetype NetStack.Contracts.RouteEntry route) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       440 (0x1b8)
      .maxstack  30
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_002f

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.5
      IL_0016:  beq        IL_0087

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.7
      IL_001d:  beq        IL_00e5

      IL_0022:  ldloc.0
      IL_0023:  ldc.i4.s   9
      IL_0025:  beq        IL_0143

      IL_002a:  br         IL_01a1

      IL_002f:  ldarg.0
      IL_0030:  ldloca.s   V_1
      IL_0032:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0037:  stloc.2
      IL_0038:  ldloc.2
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0040:  stloc.s    V_4
      IL_0042:  ldloc.1
      IL_0043:  brtrue     IL_0062

      IL_0048:  ldarga.s   route
      IL_004a:  ldloc.s    V_4
      IL_004c:  call       instance void NetStack.Contracts.RouteEntry::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0051:  ldloc.3
      IL_0052:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0057:  ldarg.1
      IL_0058:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverRoute0$PST06000338(valuetype NetStack.Contracts.RouteEntry)
      IL_005d:  br         IL_006f

      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0068:  ldarg.1
      IL_0069:  ldarg.0
      IL_006a:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverRoute0$PST06000339(valuetype NetStack.Contracts.RouteEntry,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006f:  ldarg.0
      IL_0070:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0075:  ldarg.0
      IL_0076:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_007b:  ldc.i4.s   10
      IL_007d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0082:  br         IL_01b7

      IL_0087:  ldarg.0
      IL_0088:  ldloca.s   V_5
      IL_008a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_008f:  stloc.s    V_6
      IL_0091:  ldloc.s    V_6
      IL_0093:  stloc.s    V_7
      IL_0095:  ldloc.s    V_7
      IL_0097:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_009c:  stloc.s    V_8
      IL_009e:  ldloc.s    V_5
      IL_00a0:  brtrue     IL_00c0

      IL_00a5:  ldarga.s   route
      IL_00a7:  ldloc.s    V_8
      IL_00a9:  call       instance void NetStack.Contracts.RouteEntry::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ae:  ldloc.s    V_7
      IL_00b0:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_00b5:  ldarg.1
      IL_00b6:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverRoute0$PST06000338(valuetype NetStack.Contracts.RouteEntry)
      IL_00bb:  br         IL_00ce

      IL_00c0:  ldloc.s    V_7
      IL_00c2:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_00c7:  ldarg.1
      IL_00c8:  ldarg.0
      IL_00c9:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverRoute0$PST06000339(valuetype NetStack.Contracts.RouteEntry,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ce:  ldarg.0
      IL_00cf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00d4:  ldarg.0
      IL_00d5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00da:  ldc.i4.4
      IL_00db:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e0:  br         IL_01b7

      IL_00e5:  ldarg.0
      IL_00e6:  ldloca.s   V_9
      IL_00e8:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00ed:  stloc.s    V_10
      IL_00ef:  ldloc.s    V_10
      IL_00f1:  stloc.s    V_11
      IL_00f3:  ldloc.s    V_11
      IL_00f5:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_00fa:  stloc.s    V_12
      IL_00fc:  ldloc.s    V_9
      IL_00fe:  brtrue     IL_011e

      IL_0103:  ldarga.s   route
      IL_0105:  ldloc.s    V_12
      IL_0107:  call       instance void NetStack.Contracts.RouteEntry::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_010c:  ldloc.s    V_11
      IL_010e:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0113:  ldarg.1
      IL_0114:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverRoute0$PST06000338(valuetype NetStack.Contracts.RouteEntry)
      IL_0119:  br         IL_012c

      IL_011e:  ldloc.s    V_11
      IL_0120:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0125:  ldarg.1
      IL_0126:  ldarg.0
      IL_0127:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverRoute0$PST06000339(valuetype NetStack.Contracts.RouteEntry,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_012c:  ldarg.0
      IL_012d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0132:  ldarg.0
      IL_0133:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0138:  ldc.i4.6
      IL_0139:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_013e:  br         IL_01b7

      IL_0143:  ldarg.0
      IL_0144:  ldloca.s   V_13
      IL_0146:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_014b:  stloc.s    V_14
      IL_014d:  ldloc.s    V_14
      IL_014f:  stloc.s    V_15
      IL_0151:  ldloc.s    V_15
      IL_0153:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0158:  stloc.s    V_16
      IL_015a:  ldloc.s    V_13
      IL_015c:  brtrue     IL_017c

      IL_0161:  ldarga.s   route
      IL_0163:  ldloc.s    V_16
      IL_0165:  call       instance void NetStack.Contracts.RouteEntry::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_016a:  ldloc.s    V_15
      IL_016c:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0171:  ldarg.1
      IL_0172:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverRoute0$PST06000338(valuetype NetStack.Contracts.RouteEntry)
      IL_0177:  br         IL_018a

      IL_017c:  ldloc.s    V_15
      IL_017e:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0183:  ldarg.1
      IL_0184:  ldarg.0
      IL_0185:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverRoute0$PST06000339(valuetype NetStack.Contracts.RouteEntry,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_018a:  ldarg.0
      IL_018b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0190:  ldarg.0
      IL_0191:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0196:  ldc.i4.8
      IL_0197:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_019c:  br         IL_01b7

      IL_01a1:  ldstr      "can't send Route in state "
      IL_01a6:  ldarg.0
      IL_01a7:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_01ac:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_01b1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_01b6:  throw

      IL_01b7:  ret
    } // end of method Exp::SendRoute

    .method public instance void  SendOK() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c2

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0040:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverOK0$PST0600033A()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverOK0$PST0600033B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   12
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d8

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0093:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverOK0$PST0600033A()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverOK0$PST0600033B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.s   14
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send OK in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_00cd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Exp::SendOK

    .method public instance void  RecvGetRoutingTable() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetRoutingTable when next message has t"
      + "ag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype NetStack.Contracts.RoutingContract/GetRoutingTable NetStack.Contracts.RoutingContract/Exp::GetRoutingTablePod0
      IL_0096:  initobj    NetStack.Contracts.RoutingContract/GetRoutingTable
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   16
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetRoutingTable in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_00b9:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetRoutingTable

    .method public instance void  RecvAddRoute([out] valuetype NetStack.Contracts.Network& dest,
                                               [out] uint32& gateway,
                                               [out] uint32& ifaddr) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AddRoute when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.RoutingContract/AddRoute NetStack.Contracts.RoutingContract/Exp::AddRoutePod0
      IL_0090:  ldfld      valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/AddRoute::dest
      IL_0095:  stobj      NetStack.Contracts.Network
      IL_009a:  ldarg.2
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype NetStack.Contracts.RoutingContract/AddRoute NetStack.Contracts.RoutingContract/Exp::AddRoutePod0
      IL_00a1:  ldfld      uint32 NetStack.Contracts.RoutingContract/AddRoute::gateway
      IL_00a6:  stind.i4
      IL_00a7:  ldarg.3
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype NetStack.Contracts.RoutingContract/AddRoute NetStack.Contracts.RoutingContract/Exp::AddRoutePod0
      IL_00ae:  ldfld      uint32 NetStack.Contracts.RoutingContract/AddRoute::ifaddr
      IL_00b3:  stind.i4
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype NetStack.Contracts.RoutingContract/AddRoute NetStack.Contracts.RoutingContract/Exp::AddRoutePod0
      IL_00c3:  initobj    NetStack.Contracts.RoutingContract/AddRoute
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   15
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv AddRoute in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_00e6:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Exp::RecvAddRoute

    .method public instance void  RecvDeleteRoute([out] valuetype NetStack.Contracts.Network& dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   10
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   10
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv DeleteRoute when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.RoutingContract/DeleteRoute NetStack.Contracts.RoutingContract/Exp::DeleteRoutePod0
      IL_0090:  ldfld      valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/DeleteRoute::dest
      IL_0095:  stobj      NetStack.Contracts.Network
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype NetStack.Contracts.RoutingContract/DeleteRoute NetStack.Contracts.RoutingContract/Exp::DeleteRoutePod0
      IL_00a9:  initobj    NetStack.Contracts.RoutingContract/DeleteRoute
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   13
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv DeleteRoute in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Exp::RecvDeleteRoute

    .method public instance void  RecvFindHostRoute([out] uint32& dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   11
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv FindHostRoute when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindHostRoute NetStack.Contracts.RoutingContract/Exp::FindHostRoutePod0
      IL_0090:  ldfld      uint32 NetStack.Contracts.RoutingContract/FindHostRoute::dest
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindHostRoute NetStack.Contracts.RoutingContract/Exp::FindHostRoutePod0
      IL_00a5:  initobj    NetStack.Contracts.RoutingContract/FindHostRoute
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   11
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv FindHostRoute in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvFindHostRoute

    .method public instance void  RecvFindNetRoute([out] valuetype NetStack.Contracts.Network& dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv FindNetRoute when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindNetRoute NetStack.Contracts.RoutingContract/Exp::FindNetRoutePod0
      IL_0090:  ldfld      valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/FindNetRoute::dest
      IL_0095:  stobj      NetStack.Contracts.Network
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindNetRoute NetStack.Contracts.RoutingContract/Exp::FindNetRoutePod0
      IL_00a9:  initobj    NetStack.Contracts.RoutingContract/FindNetRoute
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   9
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv FindNetRoute in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Exp::RecvFindNetRoute

    .method public instance void  RecvFindSpecificHostRoute([out] uint32& dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv FindSpecificHostRoute when next message"
      + " has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute NetStack.Contracts.RoutingContract/Exp::FindSpecificHostRoutePod0
      IL_0090:  ldfld      uint32 NetStack.Contracts.RoutingContract/FindSpecificHostRoute::dest
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute NetStack.Contracts.RoutingContract/Exp::FindSpecificHostRoutePod0
      IL_00a5:  initobj    NetStack.Contracts.RoutingContract/FindSpecificHostRoute
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.7
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv FindSpecificHostRoute in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_00c7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Exp::RecvFindSpecificHostRoute

    .method public instance void  RecvFindSpecificNetRoute([out] valuetype NetStack.Contracts.Network& dest) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       215 (0xd7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   14
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv FindSpecificNetRoute when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute NetStack.Contracts.RoutingContract/Exp::FindSpecificNetRoutePod0
      IL_0090:  ldfld      valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/FindSpecificNetRoute::dest
      IL_0095:  stobj      NetStack.Contracts.Network
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute NetStack.Contracts.RoutingContract/Exp::FindSpecificNetRoutePod0
      IL_00a9:  initobj    NetStack.Contracts.RoutingContract/FindSpecificNetRoute
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.5
      IL_00b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bb:  br         IL_00d6

      IL_00c0:  ldstr      "can't recv FindSpecificNetRoute in state "
      IL_00c5:  ldarg.0
      IL_00c6:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_00cb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d5:  throw

      IL_00d6:  ret
    } // end of method Exp::RecvFindSpecificNetRoute

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverReady0$PST0600033C()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverReady0$PST0600033D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   17
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Ready in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_0070:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendReady

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.RoutingContract/Imp::DeliverContractNotSupported0$PST0600033E()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.RoutingContract/Imp::MarshallDeliverContractNotSupported0$PST0600033F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.RoutingContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.RoutingContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.RoutingContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.RoutingContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.RoutingContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.RoutingContract/Exp
      IL_0022:  call       instance void NetStack.Contracts.RoutingContract/Exp::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       743 (0x2e7)
      .maxstack  12
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               int32 V_21)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0058

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_0098

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_00e0

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0128

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_0170

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   15
      IL_0037:  beq        IL_01b8

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.s   16
      IL_003f:  beq        IL_0200

      IL_0044:  ldloc.1
      IL_0045:  ldc.i4.s   17
      IL_0047:  beq        IL_0248

      IL_004c:  ldloc.1
      IL_004d:  ldc.i4.3
      IL_004e:  beq        IL_0290

      IL_0053:  br         IL_02d8

      IL_0058:  ldc.i4.0
      IL_0059:  stloc.2
      IL_005a:  ldarg.0
      IL_005b:  volatile.
      IL_005d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0062:  stloc.3
      IL_0063:  ldloc.3
      IL_0064:  brtrue     IL_0079

      IL_0069:  ldarg.0
      IL_006a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_006f:  stloc.2
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0078:  stloc.3
      IL_0079:  ldloc.3
      IL_007a:  ldc.i4.0
      IL_007b:  ceq
      IL_007d:  brfalse    IL_0090

      IL_0082:  ldloc.2
      IL_0083:  brfalse    IL_0090

      IL_0088:  ldc.i4.m1
      IL_0089:  stloc.s    V_4
      IL_008b:  br         IL_02e0

      IL_0090:  ldloc.3
      IL_0091:  stloc.s    V_4
      IL_0093:  br         IL_02e0

      IL_0098:  ldc.i4.0
      IL_0099:  stloc.s    V_5
      IL_009b:  ldarg.0
      IL_009c:  volatile.
      IL_009e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a3:  stloc.s    V_6
      IL_00a5:  ldloc.s    V_6
      IL_00a7:  brtrue     IL_00be

      IL_00ac:  ldarg.0
      IL_00ad:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00b2:  stloc.s    V_5
      IL_00b4:  ldarg.0
      IL_00b5:  volatile.
      IL_00b7:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00bc:  stloc.s    V_6
      IL_00be:  ldloc.s    V_6
      IL_00c0:  ldc.i4.0
      IL_00c1:  ceq
      IL_00c3:  brfalse    IL_00d7

      IL_00c8:  ldloc.s    V_5
      IL_00ca:  brfalse    IL_00d7

      IL_00cf:  ldc.i4.m1
      IL_00d0:  stloc.s    V_4
      IL_00d2:  br         IL_02e0

      IL_00d7:  ldloc.s    V_6
      IL_00d9:  stloc.s    V_4
      IL_00db:  br         IL_02e0

      IL_00e0:  ldc.i4.0
      IL_00e1:  stloc.s    V_7
      IL_00e3:  ldarg.0
      IL_00e4:  volatile.
      IL_00e6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00eb:  stloc.s    V_8
      IL_00ed:  ldloc.s    V_8
      IL_00ef:  brtrue     IL_0106

      IL_00f4:  ldarg.0
      IL_00f5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00fa:  stloc.s    V_7
      IL_00fc:  ldarg.0
      IL_00fd:  volatile.
      IL_00ff:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0104:  stloc.s    V_8
      IL_0106:  ldloc.s    V_8
      IL_0108:  ldc.i4.0
      IL_0109:  ceq
      IL_010b:  brfalse    IL_011f

      IL_0110:  ldloc.s    V_7
      IL_0112:  brfalse    IL_011f

      IL_0117:  ldc.i4.m1
      IL_0118:  stloc.s    V_4
      IL_011a:  br         IL_02e0

      IL_011f:  ldloc.s    V_8
      IL_0121:  stloc.s    V_4
      IL_0123:  br         IL_02e0

      IL_0128:  ldc.i4.0
      IL_0129:  stloc.s    V_9
      IL_012b:  ldarg.0
      IL_012c:  volatile.
      IL_012e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0133:  stloc.s    V_10
      IL_0135:  ldloc.s    V_10
      IL_0137:  brtrue     IL_014e

      IL_013c:  ldarg.0
      IL_013d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0142:  stloc.s    V_9
      IL_0144:  ldarg.0
      IL_0145:  volatile.
      IL_0147:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_014c:  stloc.s    V_10
      IL_014e:  ldloc.s    V_10
      IL_0150:  ldc.i4.0
      IL_0151:  ceq
      IL_0153:  brfalse    IL_0167

      IL_0158:  ldloc.s    V_9
      IL_015a:  brfalse    IL_0167

      IL_015f:  ldc.i4.m1
      IL_0160:  stloc.s    V_4
      IL_0162:  br         IL_02e0

      IL_0167:  ldloc.s    V_10
      IL_0169:  stloc.s    V_4
      IL_016b:  br         IL_02e0

      IL_0170:  ldc.i4.0
      IL_0171:  stloc.s    V_11
      IL_0173:  ldarg.0
      IL_0174:  volatile.
      IL_0176:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_017b:  stloc.s    V_12
      IL_017d:  ldloc.s    V_12
      IL_017f:  brtrue     IL_0196

      IL_0184:  ldarg.0
      IL_0185:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_018a:  stloc.s    V_11
      IL_018c:  ldarg.0
      IL_018d:  volatile.
      IL_018f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0194:  stloc.s    V_12
      IL_0196:  ldloc.s    V_12
      IL_0198:  ldc.i4.0
      IL_0199:  ceq
      IL_019b:  brfalse    IL_01af

      IL_01a0:  ldloc.s    V_11
      IL_01a2:  brfalse    IL_01af

      IL_01a7:  ldc.i4.m1
      IL_01a8:  stloc.s    V_4
      IL_01aa:  br         IL_02e0

      IL_01af:  ldloc.s    V_12
      IL_01b1:  stloc.s    V_4
      IL_01b3:  br         IL_02e0

      IL_01b8:  ldc.i4.0
      IL_01b9:  stloc.s    V_13
      IL_01bb:  ldarg.0
      IL_01bc:  volatile.
      IL_01be:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01c3:  stloc.s    V_14
      IL_01c5:  ldloc.s    V_14
      IL_01c7:  brtrue     IL_01de

      IL_01cc:  ldarg.0
      IL_01cd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01d2:  stloc.s    V_13
      IL_01d4:  ldarg.0
      IL_01d5:  volatile.
      IL_01d7:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01dc:  stloc.s    V_14
      IL_01de:  ldloc.s    V_14
      IL_01e0:  ldc.i4.0
      IL_01e1:  ceq
      IL_01e3:  brfalse    IL_01f7

      IL_01e8:  ldloc.s    V_13
      IL_01ea:  brfalse    IL_01f7

      IL_01ef:  ldc.i4.m1
      IL_01f0:  stloc.s    V_4
      IL_01f2:  br         IL_02e0

      IL_01f7:  ldloc.s    V_14
      IL_01f9:  stloc.s    V_4
      IL_01fb:  br         IL_02e0

      IL_0200:  ldc.i4.0
      IL_0201:  stloc.s    V_15
      IL_0203:  ldarg.0
      IL_0204:  volatile.
      IL_0206:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_020b:  stloc.s    V_16
      IL_020d:  ldloc.s    V_16
      IL_020f:  brtrue     IL_0226

      IL_0214:  ldarg.0
      IL_0215:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_021a:  stloc.s    V_15
      IL_021c:  ldarg.0
      IL_021d:  volatile.
      IL_021f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0224:  stloc.s    V_16
      IL_0226:  ldloc.s    V_16
      IL_0228:  ldc.i4.0
      IL_0229:  ceq
      IL_022b:  brfalse    IL_023f

      IL_0230:  ldloc.s    V_15
      IL_0232:  brfalse    IL_023f

      IL_0237:  ldc.i4.m1
      IL_0238:  stloc.s    V_4
      IL_023a:  br         IL_02e0

      IL_023f:  ldloc.s    V_16
      IL_0241:  stloc.s    V_4
      IL_0243:  br         IL_02e0

      IL_0248:  ldc.i4.0
      IL_0249:  stloc.s    V_17
      IL_024b:  ldarg.0
      IL_024c:  volatile.
      IL_024e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0253:  stloc.s    V_18
      IL_0255:  ldloc.s    V_18
      IL_0257:  brtrue     IL_026e

      IL_025c:  ldarg.0
      IL_025d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0262:  stloc.s    V_17
      IL_0264:  ldarg.0
      IL_0265:  volatile.
      IL_0267:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_026c:  stloc.s    V_18
      IL_026e:  ldloc.s    V_18
      IL_0270:  ldc.i4.0
      IL_0271:  ceq
      IL_0273:  brfalse    IL_0287

      IL_0278:  ldloc.s    V_17
      IL_027a:  brfalse    IL_0287

      IL_027f:  ldc.i4.m1
      IL_0280:  stloc.s    V_4
      IL_0282:  br         IL_02e0

      IL_0287:  ldloc.s    V_18
      IL_0289:  stloc.s    V_4
      IL_028b:  br         IL_02e0

      IL_0290:  ldc.i4.0
      IL_0291:  stloc.s    V_19
      IL_0293:  ldarg.0
      IL_0294:  volatile.
      IL_0296:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_029b:  stloc.s    V_20
      IL_029d:  ldloc.s    V_20
      IL_029f:  brtrue     IL_02b6

      IL_02a4:  ldarg.0
      IL_02a5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02aa:  stloc.s    V_19
      IL_02ac:  ldarg.0
      IL_02ad:  volatile.
      IL_02af:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02b4:  stloc.s    V_20
      IL_02b6:  ldloc.s    V_20
      IL_02b8:  ldc.i4.0
      IL_02b9:  ceq
      IL_02bb:  brfalse    IL_02cf

      IL_02c0:  ldloc.s    V_19
      IL_02c2:  brfalse    IL_02cf

      IL_02c7:  ldc.i4.m1
      IL_02c8:  stloc.s    V_4
      IL_02ca:  br         IL_02e0

      IL_02cf:  ldloc.s    V_20
      IL_02d1:  stloc.s    V_4
      IL_02d3:  br         IL_02e0

      IL_02d8:  ldc.i4.m1
      IL_02d9:  stloc.s    V_4
      IL_02db:  br         IL_02e0

      IL_02e0:  ldloc.s    V_4
      IL_02e2:  stloc.s    V_21
      IL_02e4:  ldloc.s    V_4
      IL_02e6:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.RoutingContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetRoutingTable0$PST0600035E() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetRoutingTable0

    .method privatescope instance void  MarshallDeliverGetRoutingTable0$PST0600035F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverGetRoutingTable0$PST0600035E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.RoutingContract/GetRoutingTable NetStack.Contracts.RoutingContract/Exp::GetRoutingTablePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.RoutingContract/GetRoutingTable::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetRoutingTable0

    .method privatescope instance void  DeliverAddRoute0$PST06000360(valuetype NetStack.Contracts.Network dest,
                                                                     uint32 gateway,
                                                                     uint32 ifaddr) cil managed
    {
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RoutingContract/AddRoute NetStack.Contracts.RoutingContract/Exp::AddRoutePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/AddRoute::dest
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.RoutingContract/AddRoute NetStack.Contracts.RoutingContract/Exp::AddRoutePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint32 NetStack.Contracts.RoutingContract/AddRoute::gateway
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype NetStack.Contracts.RoutingContract/AddRoute NetStack.Contracts.RoutingContract/Exp::AddRoutePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint32 NetStack.Contracts.RoutingContract/AddRoute::ifaddr
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   9
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   9
      IL_002f:  volatile.
      IL_0031:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0036:  ret
    } // end of method Exp::DeliverAddRoute0

    .method privatescope instance void  MarshallDeliverAddRoute0$PST06000361(valuetype NetStack.Contracts.Network dest,
                                                                             uint32 gateway,
                                                                             uint32 ifaddr,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverAddRoute0$PST06000360(valuetype NetStack.Contracts.Network,
                                                                                                              uint32,
                                                                                                              uint32)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype NetStack.Contracts.RoutingContract/AddRoute NetStack.Contracts.RoutingContract/Exp::AddRoutePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/AddRoute::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverAddRoute0

    .method privatescope instance void  DeliverDeleteRoute0$PST06000362(valuetype NetStack.Contracts.Network dest) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RoutingContract/DeleteRoute NetStack.Contracts.RoutingContract/Exp::DeleteRoutePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/DeleteRoute::dest
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverDeleteRoute0

    .method privatescope instance void  MarshallDeliverDeleteRoute0$PST06000363(valuetype NetStack.Contracts.Network dest,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverDeleteRoute0$PST06000362(valuetype NetStack.Contracts.Network)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.RoutingContract/DeleteRoute NetStack.Contracts.RoutingContract/Exp::DeleteRoutePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.RoutingContract/DeleteRoute::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverDeleteRoute0

    .method privatescope instance void  DeliverFindHostRoute0$PST06000364(uint32 dest) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindHostRoute NetStack.Contracts.RoutingContract/Exp::FindHostRoutePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.RoutingContract/FindHostRoute::dest
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   11
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverFindHostRoute0

    .method privatescope instance void  MarshallDeliverFindHostRoute0$PST06000365(uint32 dest,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverFindHostRoute0$PST06000364(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindHostRoute NetStack.Contracts.RoutingContract/Exp::FindHostRoutePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.RoutingContract/FindHostRoute::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverFindHostRoute0

    .method privatescope instance void  DeliverFindNetRoute0$PST06000366(valuetype NetStack.Contracts.Network dest) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindNetRoute NetStack.Contracts.RoutingContract/Exp::FindNetRoutePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/FindNetRoute::dest
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   12
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverFindNetRoute0

    .method privatescope instance void  MarshallDeliverFindNetRoute0$PST06000367(valuetype NetStack.Contracts.Network dest,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverFindNetRoute0$PST06000366(valuetype NetStack.Contracts.Network)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindNetRoute NetStack.Contracts.RoutingContract/Exp::FindNetRoutePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.RoutingContract/FindNetRoute::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverFindNetRoute0

    .method privatescope instance void  DeliverFindSpecificHostRoute0$PST06000368(uint32 dest) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute NetStack.Contracts.RoutingContract/Exp::FindSpecificHostRoutePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.RoutingContract/FindSpecificHostRoute::dest
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverFindSpecificHostRoute0

    .method privatescope instance void  MarshallDeliverFindSpecificHostRoute0$PST06000369(uint32 dest,
                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverFindSpecificHostRoute0$PST06000368(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute NetStack.Contracts.RoutingContract/Exp::FindSpecificHostRoutePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.RoutingContract/FindSpecificHostRoute::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverFindSpecificHostRoute0

    .method privatescope instance void  DeliverFindSpecificNetRoute0$PST0600036A(valuetype NetStack.Contracts.Network dest) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute NetStack.Contracts.RoutingContract/Exp::FindSpecificNetRoutePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/FindSpecificNetRoute::dest
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverFindSpecificNetRoute0

    .method privatescope instance void  MarshallDeliverFindSpecificNetRoute0$PST0600036B(valuetype NetStack.Contracts.Network dest,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.RoutingContract/Exp::DeliverFindSpecificNetRoute0$PST0600036A(valuetype NetStack.Contracts.Network)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute NetStack.Contracts.RoutingContract/Exp::FindSpecificNetRoutePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.RoutingContract/FindSpecificNetRoute::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverFindSpecificNetRoute0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname RoutingTable
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) routes
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.RoutingContract/RoutingTable::routes
      IL_0007:  call       void NetStack.Contracts.RouteEntry::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                       valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_000c:  ret
    } // end of method RoutingTable::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/RoutingTable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RoutingTable::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/RoutingTable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RoutingTable::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/RoutingTable
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/RoutingTable::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method RoutingTable::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/RoutingTable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method RoutingTable::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.RoutingContract/RoutingTable::routes
      IL_0008:  ldtoken    NetStack.Contracts.RouteEntry
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.RoutingContract/RoutingTable::routes
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.1
      IL_0023:  ldarg.2
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldfld      valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.RoutingContract/RoutingTable::routes
      IL_002b:  call       void NetStack.Contracts.RouteEntry::MarshallVector(uint8*,
                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                              uint8*,
                                                                              valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0030:  ret
    } // end of method RoutingTable::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.RoutingContract/RoutingTable::routes
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      valuetype NetStack.Contracts.RouteEntry* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.RoutingContract/RoutingTable::routes
      IL_001a:  ret
    } // end of method RoutingTable::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RoutingTable::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RoutingTable::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RoutingTable::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RoutingTable::Release

  } // end of class RoutingTable

  .class sequential ansi sealed nested public specialname Err
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/Err* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Err::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/Err* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Err::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/Err
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/Err::MarshallContent(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 int32&)
      IL_001d:  ret
    } // end of method Err::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/Err* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Err::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Err::Release

  } // end of class Err

  .class sequential ansi sealed nested public specialname NoRouteFound
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoRouteFound::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/NoRouteFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoRouteFound::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/NoRouteFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoRouteFound::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/NoRouteFound
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/NoRouteFound::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method NoRouteFound::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/NoRouteFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NoRouteFound::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoRouteFound::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoRouteFound::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoRouteFound::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoRouteFound::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoRouteFound::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoRouteFound::Release

  } // end of class NoRouteFound

  .class sequential ansi sealed nested public specialname Route
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.RouteEntry route
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Route::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/Route* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Route::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/Route* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Route::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/Route
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/Route::MarshallContent(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   uint8*,
                                                                                                   int32&)
      IL_001d:  ret
    } // end of method Route::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/Route* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Route::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.RouteEntry NetStack.Contracts.RoutingContract/Route::route
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void NetStack.Contracts.RouteEntry::MarshallContent(uint8*,
                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                        uint8*)
      IL_000e:  ret
    } // end of method Route::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Route::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Route::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Route::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Route::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Route::Release

  } // end of class Route

  .class sequential ansi sealed nested public specialname OK
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method OK::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method OK::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/OK
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/OK::MarshallContent(uint8*,
                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                uint8*,
                                                                                                int32&)
      IL_001d:  ret
    } // end of method OK::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method OK::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Release

  } // end of class OK

  .class sequential ansi sealed nested public specialname GetRoutingTable
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRoutingTable::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/GetRoutingTable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRoutingTable::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/GetRoutingTable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRoutingTable::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/GetRoutingTable
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/GetRoutingTable::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method GetRoutingTable::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/GetRoutingTable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetRoutingTable::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRoutingTable::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRoutingTable::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRoutingTable::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRoutingTable::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRoutingTable::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRoutingTable::Release

  } // end of class GetRoutingTable

  .class sequential ansi sealed nested public specialname AddRoute
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.Network dest
    .field public uint32 gateway
    .field public uint32 ifaddr
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddRoute::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/AddRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AddRoute::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/AddRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AddRoute::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/AddRoute
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/AddRoute::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*,
                                                                                                      int32&)
      IL_001d:  ret
    } // end of method AddRoute::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/AddRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AddRoute::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/AddRoute::dest
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void NetStack.Contracts.Network::MarshallContent(uint8*,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                     uint8*)
      IL_000e:  ret
    } // end of method AddRoute::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddRoute::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddRoute::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddRoute::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddRoute::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AddRoute::Release

  } // end of class AddRoute

  .class sequential ansi sealed nested public specialname DeleteRoute
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.Network dest
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteRoute::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/DeleteRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteRoute::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/DeleteRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteRoute::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/DeleteRoute
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/DeleteRoute::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method DeleteRoute::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/DeleteRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DeleteRoute::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/DeleteRoute::dest
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void NetStack.Contracts.Network::MarshallContent(uint8*,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                     uint8*)
      IL_000e:  ret
    } // end of method DeleteRoute::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteRoute::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteRoute::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteRoute::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteRoute::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteRoute::Release

  } // end of class DeleteRoute

  .class sequential ansi sealed nested public specialname FindHostRoute
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 dest
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindHostRoute::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/FindHostRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FindHostRoute::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/FindHostRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FindHostRoute::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/FindHostRoute
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/FindHostRoute::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method FindHostRoute::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/FindHostRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method FindHostRoute::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindHostRoute::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindHostRoute::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindHostRoute::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindHostRoute::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindHostRoute::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindHostRoute::Release

  } // end of class FindHostRoute

  .class sequential ansi sealed nested public specialname FindNetRoute
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.Network dest
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindNetRoute::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/FindNetRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FindNetRoute::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/FindNetRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FindNetRoute::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/FindNetRoute
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/FindNetRoute::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method FindNetRoute::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/FindNetRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method FindNetRoute::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/FindNetRoute::dest
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void NetStack.Contracts.Network::MarshallContent(uint8*,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                     uint8*)
      IL_000e:  ret
    } // end of method FindNetRoute::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindNetRoute::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindNetRoute::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindNetRoute::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindNetRoute::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindNetRoute::Release

  } // end of class FindNetRoute

  .class sequential ansi sealed nested public specialname FindSpecificHostRoute
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 dest
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificHostRoute::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FindSpecificHostRoute::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FindSpecificHostRoute::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/FindSpecificHostRoute
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/FindSpecificHostRoute::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method FindSpecificHostRoute::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method FindSpecificHostRoute::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificHostRoute::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificHostRoute::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificHostRoute::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificHostRoute::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificHostRoute::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificHostRoute::Release

  } // end of class FindSpecificHostRoute

  .class sequential ansi sealed nested public specialname FindSpecificNetRoute
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.Network dest
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificNetRoute::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FindSpecificNetRoute::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FindSpecificNetRoute::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/FindSpecificNetRoute
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/FindSpecificNetRoute::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method FindSpecificNetRoute::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method FindSpecificNetRoute::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.Network NetStack.Contracts.RoutingContract/FindSpecificNetRoute::dest
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void NetStack.Contracts.Network::MarshallContent(uint8*,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                     uint8*)
      IL_000e:  ret
    } // end of method FindSpecificNetRoute::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificNetRoute::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificNetRoute::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificNetRoute::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificNetRoute::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FindSpecificNetRoute::Release

  } // end of class FindSpecificNetRoute

  .class sequential ansi sealed nested public specialname Ready
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.RoutingContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.RoutingContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.RoutingContract/Ready
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.RoutingContract/Ready::MarshallContent(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   uint8*,
                                                                                                   int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.RoutingContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState 
            Send(valuetype NetStack.Contracts.RoutingContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000011)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$0 
            Recv(valuetype NetStack.Contracts.RoutingContract/GetRoutingTable msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$1 
            Recv(valuetype NetStack.Contracts.RoutingContract/AddRoute msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$3 
            Recv(valuetype NetStack.Contracts.RoutingContract/DeleteRoute msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$5 
            Recv(valuetype NetStack.Contracts.RoutingContract/FindHostRoute msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$7 
            Recv(valuetype NetStack.Contracts.RoutingContract/FindNetRoute msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$9 
            Recv(valuetype NetStack.Contracts.RoutingContract/FindSpecificHostRoute msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$11 
            Recv(valuetype NetStack.Contracts.RoutingContract/FindSpecificNetRoute msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000010)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState 
            Send(valuetype NetStack.Contracts.RoutingContract/RoutingTable msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .class abstract auto ansi nested public specialname ReadyState$1
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000F)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$2 
            Send(valuetype NetStack.Contracts.RoutingContract/Err msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$2 
            Send(valuetype NetStack.Contracts.RoutingContract/OK msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$1::.ctor

  } // end of class ReadyState$1

  .class abstract auto ansi nested public specialname ReadyState$2
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$2::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$2::.ctor

  } // end of class ReadyState$2

  .class abstract auto ansi nested public specialname ReadyState$3
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$4 
            Send(valuetype NetStack.Contracts.RoutingContract/NoRouteFound msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$4 
            Send(valuetype NetStack.Contracts.RoutingContract/OK msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$3::.ctor

  } // end of class ReadyState$3

  .class abstract auto ansi nested public specialname ReadyState$4
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$4::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$4::.ctor

  } // end of class ReadyState$4

  .class abstract auto ansi nested public specialname ReadyState$5
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$6 
            Send(valuetype NetStack.Contracts.RoutingContract/Route msg) cil managed
    {
    } // end of method ReadyState$5::Send

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$6 
            Send(valuetype NetStack.Contracts.RoutingContract/NoRouteFound msg) cil managed
    {
    } // end of method ReadyState$5::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$5::.ctor

  } // end of class ReadyState$5

  .class abstract auto ansi nested public specialname ReadyState$6
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$6::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$6::.ctor

  } // end of class ReadyState$6

  .class abstract auto ansi nested public specialname ReadyState$7
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$8 
            Send(valuetype NetStack.Contracts.RoutingContract/Route msg) cil managed
    {
    } // end of method ReadyState$7::Send

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$8 
            Send(valuetype NetStack.Contracts.RoutingContract/NoRouteFound msg) cil managed
    {
    } // end of method ReadyState$7::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$7::.ctor

  } // end of class ReadyState$7

  .class abstract auto ansi nested public specialname ReadyState$8
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$8::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$8::.ctor

  } // end of class ReadyState$8

  .class abstract auto ansi nested public specialname ReadyState$9
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$10 
            Send(valuetype NetStack.Contracts.RoutingContract/Route msg) cil managed
    {
    } // end of method ReadyState$9::Send

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$10 
            Send(valuetype NetStack.Contracts.RoutingContract/NoRouteFound msg) cil managed
    {
    } // end of method ReadyState$9::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$9::.ctor

  } // end of class ReadyState$9

  .class abstract auto ansi nested public specialname ReadyState$10
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$10::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$10::.ctor

  } // end of class ReadyState$10

  .class abstract auto ansi nested public specialname ReadyState$11
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$12 
            Send(valuetype NetStack.Contracts.RoutingContract/Route msg) cil managed
    {
    } // end of method ReadyState$11::Send

    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState$12 
            Send(valuetype NetStack.Contracts.RoutingContract/NoRouteFound msg) cil managed
    {
    } // end of method ReadyState$11::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$11::.ctor

  } // end of class ReadyState$11

  .class abstract auto ansi nested public specialname ReadyState$12
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class NetStack.Contracts.RoutingContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$12::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$12::.ctor

  } // end of class ReadyState$12

  .field public static literal string ModuleName = "/service/routing"
  .method public static void  NewChannel([out] valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.RoutingContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void NetStack.Contracts.RoutingContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.RoutingContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void NetStack.Contracts.RoutingContract/Imp::'.ctor$PST06000314'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method RoutingContract::NewChannel

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.RoutingContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.RoutingContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.RoutingContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.RoutingContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void NetStack.Contracts.RoutingContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.RoutingContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.RoutingContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void NetStack.Contracts.RoutingContract/Imp::'.ctor$PST06000314'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method RoutingContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method RoutingContract::.ctor

  .method privatescope static int32  StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       216 (0xd8)
    .maxstack  12
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.8
    IL_000b:  beq        IL_0042

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.s   12
    IL_0013:  beq        IL_0056

    IL_0018:  ldloc.1
    IL_0019:  ldc.i4.4
    IL_001a:  beq        IL_006a

    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.s   14
    IL_0022:  beq        IL_007e

    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.6
    IL_0029:  beq        IL_0092

    IL_002e:  ldloc.1
    IL_002f:  ldc.i4.s   10
    IL_0031:  beq        IL_00a6

    IL_0036:  ldloc.1
    IL_0037:  ldc.i4.2
    IL_0038:  beq        IL_00ba

    IL_003d:  br         IL_00cd

    IL_0042:  ldarg.0
    IL_0043:  ldc.i4.s   17
    IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_004a:  ldarg.0
    IL_004b:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0050:  stloc.2
    IL_0051:  br         IL_00d4

    IL_0056:  ldarg.0
    IL_0057:  ldc.i4.s   17
    IL_0059:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_005e:  ldarg.0
    IL_005f:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0064:  stloc.2
    IL_0065:  br         IL_00d4

    IL_006a:  ldarg.0
    IL_006b:  ldc.i4.s   17
    IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0072:  ldarg.0
    IL_0073:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0078:  stloc.2
    IL_0079:  br         IL_00d4

    IL_007e:  ldarg.0
    IL_007f:  ldc.i4.s   17
    IL_0081:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0086:  ldarg.0
    IL_0087:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_008c:  stloc.2
    IL_008d:  br         IL_00d4

    IL_0092:  ldarg.0
    IL_0093:  ldc.i4.s   17
    IL_0095:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_009a:  ldarg.0
    IL_009b:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00a0:  stloc.2
    IL_00a1:  br         IL_00d4

    IL_00a6:  ldarg.0
    IL_00a7:  ldc.i4.s   17
    IL_00a9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00ae:  ldarg.0
    IL_00af:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00b4:  stloc.2
    IL_00b5:  br         IL_00d4

    IL_00ba:  ldarg.0
    IL_00bb:  ldc.i4.1
    IL_00bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00c1:  ldarg.0
    IL_00c2:  call       int32 NetStack.Contracts.RoutingContract::StableState$PST06000047(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00c7:  stloc.2
    IL_00c8:  br         IL_00d4

    IL_00cd:  ldloc.0
    IL_00ce:  stloc.2
    IL_00cf:  br         IL_00d4

    IL_00d4:  ldloc.2
    IL_00d5:  stloc.3
    IL_00d6:  ldloc.2
    IL_00d7:  ret
  } // end of method RoutingContract::StableState

  .method privatescope static int32  CanonicalState$PST06000048(int32 state) cil managed
  {
    // Code size       125 (0x7d)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.8
    IL_0004:  beq        IL_003b

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.s   12
    IL_000c:  beq        IL_0043

    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.4
    IL_0013:  beq        IL_004b

    IL_0018:  ldloc.0
    IL_0019:  ldc.i4.s   14
    IL_001b:  beq        IL_0053

    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.6
    IL_0022:  beq        IL_005b

    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.s   10
    IL_002a:  beq        IL_0063

    IL_002f:  ldloc.0
    IL_0030:  ldc.i4.2
    IL_0031:  beq        IL_006b

    IL_0036:  br         IL_0072

    IL_003b:  ldc.i4.s   17
    IL_003d:  stloc.1
    IL_003e:  br         IL_0079

    IL_0043:  ldc.i4.s   17
    IL_0045:  stloc.1
    IL_0046:  br         IL_0079

    IL_004b:  ldc.i4.s   17
    IL_004d:  stloc.1
    IL_004e:  br         IL_0079

    IL_0053:  ldc.i4.s   17
    IL_0055:  stloc.1
    IL_0056:  br         IL_0079

    IL_005b:  ldc.i4.s   17
    IL_005d:  stloc.1
    IL_005e:  br         IL_0079

    IL_0063:  ldc.i4.s   17
    IL_0065:  stloc.1
    IL_0066:  br         IL_0079

    IL_006b:  ldc.i4.1
    IL_006c:  stloc.1
    IL_006d:  br         IL_0079

    IL_0072:  ldarg.0
    IL_0073:  stloc.1
    IL_0074:  br         IL_0079

    IL_0079:  ldloc.1
    IL_007a:  stloc.2
    IL_007b:  ldloc.1
    IL_007c:  ret
  } // end of method RoutingContract::CanonicalState

} // end of class NetStack.Contracts.RoutingContract

.class public auto ansi sealed NetStack.Contracts.TcpError
       extends [kernel]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype NetStack.Contracts.TcpError AlreadyConnected = int32(0x00000002)
  .field public static literal valuetype NetStack.Contracts.TcpError Refused = int32(0x00000003)
  .field public static literal valuetype NetStack.Contracts.TcpError Reset = int32(0x00000004)
  .field public static literal valuetype NetStack.Contracts.TcpError Timeout = int32(0x00000005)
  .field public static literal valuetype NetStack.Contracts.TcpError ProtocolViolation = int32(0x00000006)
  .field public static literal valuetype NetStack.Contracts.TcpError ResourcesExhausted = int32(0x00000007)
  .field public static literal valuetype NetStack.Contracts.TcpError Closed = int32(0x00000008)
  .field public static literal valuetype NetStack.Contracts.TcpError Unknown = int32(0x00000001)
} // end of class NetStack.Contracts.TcpError

.class public abstract auto ansi beforefieldinit NetStack.Contracts.TcpConnectionContract
       extends [kernel]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [kernel]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x00000021)
    .field public static literal specialname int32 Connect = int32(0x00000002)
    .field public static literal specialname int32 BindLocalEndPoint = int32(0x00000003)
    .field public static literal specialname int32 Ready = int32(0x00000004)
    .field public static literal specialname int32 Listen = int32(0x00000005)
    .field public static literal specialname int32 OK = int32(0x00000006)
    .field public static literal specialname int32 CouldNotConnect = int32(0x00000007)
    .field public static literal specialname int32 CouldNotListen = int32(0x00000008)
    .field public static literal specialname int32 InvalidEndPoint = int32(0x00000009)
    .field public static literal specialname int32 GetLocalAddress = int32(0x0000000A)
    .field public static literal specialname int32 GetLocalPort = int32(0x0000000B)
    .field public static literal specialname int32 Accept = int32(0x0000000C)
    .field public static literal specialname int32 IsSessionAvailable = int32(0x0000000D)
    .field public static literal specialname int32 IPAddress = int32(0x0000000E)
    .field public static literal specialname int32 Port = int32(0x0000000F)
    .field public static literal specialname int32 SessionIsAvailable = int32(0x00000010)
    .field public static literal specialname int32 Read = int32(0x00000011)
    .field public static literal specialname int32 PollRead = int32(0x00000012)
    .field public static literal specialname int32 IsDataAvailable = int32(0x00000013)
    .field public static literal specialname int32 Write = int32(0x00000014)
    .field public static literal specialname int32 Close = int32(0x00000015)
    .field public static literal specialname int32 Abort = int32(0x00000016)
    .field public static literal specialname int32 GetRemoteAddress = int32(0x00000017)
    .field public static literal specialname int32 GetRemotePort = int32(0x00000018)
    .field public static literal specialname int32 DoneSending = int32(0x00000019)
    .field public static literal specialname int32 DoneReceiving = int32(0x0000001A)
    .field public static literal specialname int32 ConnectionClosed = int32(0x0000001B)
    .field public static literal specialname int32 NoData = int32(0x0000001C)
    .field public static literal specialname int32 NoMoreData = int32(0x0000001D)
    .field public static literal specialname int32 CantSend = int32(0x0000001E)
    .field public static literal specialname int32 Data = int32(0x0000001F)
    .field public static literal specialname int32 DataIsAvailable = int32(0x00000020)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Ready ReadyPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/OK OKPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect CouldNotConnectPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/CouldNotListen CouldNotListenPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/InvalidEndPoint InvalidEndPointPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/IPAddress IPAddressPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Port PortPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable SessionIsAvailablePod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed ConnectionClosedPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/NoData NoDataPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData NoMoreDataPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/CantSend CantSendPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Data DataPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable DataIsAvailablePod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000425'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.TcpConnectionContract::CanonicalState$PST0600004D(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.TcpConnectionContract::CanonicalState$PST0600004D(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       766 (0x2fe)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   40
      IL_000f:  beq        IL_0142

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   39
      IL_0017:  beq        IL_014d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   38
      IL_001f:  beq        IL_0158

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   37
      IL_0027:  beq        IL_0163

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   36
      IL_002f:  beq        IL_016e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   35
      IL_0037:  beq        IL_0179

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   34
      IL_003f:  beq        IL_0184

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   33
      IL_0047:  beq        IL_018f

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   32
      IL_004f:  beq        IL_019a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   31
      IL_0057:  beq        IL_01a5

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   30
      IL_005f:  beq        IL_01b0

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   29
      IL_0067:  beq        IL_01bb

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   28
      IL_006f:  beq        IL_01c6

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   27
      IL_0077:  beq        IL_01d1

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   26
      IL_007f:  beq        IL_01dc

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   25
      IL_0087:  beq        IL_01e7

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.s   24
      IL_008f:  beq        IL_01f2

      IL_0094:  ldloc.0
      IL_0095:  ldc.i4.s   23
      IL_0097:  beq        IL_01fd

      IL_009c:  ldloc.0
      IL_009d:  ldc.i4.s   22
      IL_009f:  beq        IL_0208

      IL_00a4:  ldloc.0
      IL_00a5:  ldc.i4.s   21
      IL_00a7:  beq        IL_0213

      IL_00ac:  ldloc.0
      IL_00ad:  ldc.i4.s   20
      IL_00af:  beq        IL_021e

      IL_00b4:  ldloc.0
      IL_00b5:  ldc.i4.s   19
      IL_00b7:  beq        IL_0229

      IL_00bc:  ldloc.0
      IL_00bd:  ldc.i4.s   18
      IL_00bf:  beq        IL_0234

      IL_00c4:  ldloc.0
      IL_00c5:  ldc.i4.s   17
      IL_00c7:  beq        IL_023f

      IL_00cc:  ldloc.0
      IL_00cd:  ldc.i4.s   16
      IL_00cf:  beq        IL_024a

      IL_00d4:  ldloc.0
      IL_00d5:  ldc.i4.s   15
      IL_00d7:  beq        IL_0255

      IL_00dc:  ldloc.0
      IL_00dd:  ldc.i4.s   14
      IL_00df:  beq        IL_0260

      IL_00e4:  ldloc.0
      IL_00e5:  ldc.i4.s   13
      IL_00e7:  beq        IL_026b

      IL_00ec:  ldloc.0
      IL_00ed:  ldc.i4.s   12
      IL_00ef:  beq        IL_0276

      IL_00f4:  ldloc.0
      IL_00f5:  ldc.i4.s   11
      IL_00f7:  beq        IL_0281

      IL_00fc:  ldloc.0
      IL_00fd:  ldc.i4.s   10
      IL_00ff:  beq        IL_028c

      IL_0104:  ldloc.0
      IL_0105:  ldc.i4.s   9
      IL_0107:  beq        IL_0297

      IL_010c:  ldloc.0
      IL_010d:  ldc.i4.8
      IL_010e:  beq        IL_02a2

      IL_0113:  ldloc.0
      IL_0114:  ldc.i4.7
      IL_0115:  beq        IL_02ad

      IL_011a:  ldloc.0
      IL_011b:  ldc.i4.6
      IL_011c:  beq        IL_02b8

      IL_0121:  ldloc.0
      IL_0122:  ldc.i4.5
      IL_0123:  beq        IL_02c3

      IL_0128:  ldloc.0
      IL_0129:  ldc.i4.4
      IL_012a:  beq        IL_02ce

      IL_012f:  ldloc.0
      IL_0130:  ldc.i4.3
      IL_0131:  beq        IL_02d9

      IL_0136:  ldloc.0
      IL_0137:  ldc.i4.2
      IL_0138:  beq        IL_02e4

      IL_013d:  br         IL_02ef

      IL_0142:  ldstr      "Start"
      IL_0147:  stloc.1
      IL_0148:  br         IL_02fa

      IL_014d:  ldstr      "ReadyState"
      IL_0152:  stloc.1
      IL_0153:  br         IL_02fa

      IL_0158:  ldstr      "BindResult"
      IL_015d:  stloc.1
      IL_015e:  br         IL_02fa

      IL_0163:  ldstr      "Bound"
      IL_0168:  stloc.1
      IL_0169:  br         IL_02fa

      IL_016e:  ldstr      "ConnectResult"
      IL_0173:  stloc.1
      IL_0174:  br         IL_02fa

      IL_0179:  ldstr      "ListenResult"
      IL_017e:  stloc.1
      IL_017f:  br         IL_02fa

      IL_0184:  ldstr      "Listening"
      IL_0189:  stloc.1
      IL_018a:  br         IL_02fa

      IL_018f:  ldstr      "Listening$0"
      IL_0194:  stloc.1
      IL_0195:  br         IL_02fa

      IL_019a:  ldstr      "Listening$1"
      IL_019f:  stloc.1
      IL_01a0:  br         IL_02fa

      IL_01a5:  ldstr      "Listening$2"
      IL_01aa:  stloc.1
      IL_01ab:  br         IL_02fa

      IL_01b0:  ldstr      "Listening$3"
      IL_01b5:  stloc.1
      IL_01b6:  br         IL_02fa

      IL_01bb:  ldstr      "PreConnected"
      IL_01c0:  stloc.1
      IL_01c1:  br         IL_02fa

      IL_01c6:  ldstr      "Connected"
      IL_01cb:  stloc.1
      IL_01cc:  br         IL_02fa

      IL_01d1:  ldstr      "Connected$4"
      IL_01d6:  stloc.1
      IL_01d7:  br         IL_02fa

      IL_01dc:  ldstr      "Connected$5"
      IL_01e1:  stloc.1
      IL_01e2:  br         IL_02fa

      IL_01e7:  ldstr      "Connected$6"
      IL_01ec:  stloc.1
      IL_01ed:  br         IL_02fa

      IL_01f2:  ldstr      "Connected$7"
      IL_01f7:  stloc.1
      IL_01f8:  br         IL_02fa

      IL_01fd:  ldstr      "Connected$8"
      IL_0202:  stloc.1
      IL_0203:  br         IL_02fa

      IL_0208:  ldstr      "Connected$9"
      IL_020d:  stloc.1
      IL_020e:  br         IL_02fa

      IL_0213:  ldstr      "ReadResult"
      IL_0218:  stloc.1
      IL_0219:  br         IL_02fa

      IL_021e:  ldstr      "PollReadResult"
      IL_0223:  stloc.1
      IL_0224:  br         IL_02fa

      IL_0229:  ldstr      "WriteResult"
      IL_022e:  stloc.1
      IL_022f:  br         IL_02fa

      IL_0234:  ldstr      "ReceiveOnly"
      IL_0239:  stloc.1
      IL_023a:  br         IL_02fa

      IL_023f:  ldstr      "ReceiveOnly$10"
      IL_0244:  stloc.1
      IL_0245:  br         IL_02fa

      IL_024a:  ldstr      "ReceiveOnly$11"
      IL_024f:  stloc.1
      IL_0250:  br         IL_02fa

      IL_0255:  ldstr      "ReceiveOnly$12"
      IL_025a:  stloc.1
      IL_025b:  br         IL_02fa

      IL_0260:  ldstr      "ReceiveOnly$13"
      IL_0265:  stloc.1
      IL_0266:  br         IL_02fa

      IL_026b:  ldstr      "ReceiveOnly$14"
      IL_0270:  stloc.1
      IL_0271:  br         IL_02fa

      IL_0276:  ldstr      "ReceiveOnly$15"
      IL_027b:  stloc.1
      IL_027c:  br         IL_02fa

      IL_0281:  ldstr      "ROReadResult"
      IL_0286:  stloc.1
      IL_0287:  br         IL_02fa

      IL_028c:  ldstr      "ROPollReadResult"
      IL_0291:  stloc.1
      IL_0292:  br         IL_02fa

      IL_0297:  ldstr      "SendOnly"
      IL_029c:  stloc.1
      IL_029d:  br         IL_02fa

      IL_02a2:  ldstr      "SendOnly$16"
      IL_02a7:  stloc.1
      IL_02a8:  br         IL_02fa

      IL_02ad:  ldstr      "SendOnly$17"
      IL_02b2:  stloc.1
      IL_02b3:  br         IL_02fa

      IL_02b8:  ldstr      "SendOnly$18"
      IL_02bd:  stloc.1
      IL_02be:  br         IL_02fa

      IL_02c3:  ldstr      "SendOnly$19"
      IL_02c8:  stloc.1
      IL_02c9:  br         IL_02fa

      IL_02ce:  ldstr      "SOWriteResult"
      IL_02d3:  stloc.1
      IL_02d4:  br         IL_02fa

      IL_02d9:  ldstr      "Zombie"
      IL_02de:  stloc.1
      IL_02df:  br         IL_02fa

      IL_02e4:  ldstr      "Closed"
      IL_02e9:  stloc.1
      IL_02ea:  br         IL_02fa

      IL_02ef:  ldstr      "<protocol terminated>"
      IL_02f4:  stloc.1
      IL_02f5:  br         IL_02fa

      IL_02fa:  ldloc.1
      IL_02fb:  stloc.2
      IL_02fc:  ldloc.1
      IL_02fd:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendConnect(uint32 dstIP,
                                              uint16 dstPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       225 (0xe1)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   39
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   37
      IL_0017:  beq        IL_0072

      IL_001c:  br         IL_00ca

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004c

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0040:  ldarg.1
      IL_0041:  ldarg.2
      IL_0042:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverConnect0$PST0600049F(uint32,
                                                                                                                   uint16)
      IL_0047:  br         IL_005a

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.2
      IL_0054:  ldarg.0
      IL_0055:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverConnect0$PST060004A0(uint32,
                                                                                                                           uint16,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0060:  ldarg.0
      IL_0061:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0066:  ldc.i4.s   36
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_00e0

      IL_0072:  ldarg.0
      IL_0073:  ldloca.s   V_5
      IL_0075:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_007a:  stloc.s    V_6
      IL_007c:  ldloc.s    V_6
      IL_007e:  stloc.s    V_7
      IL_0080:  ldloc.s    V_7
      IL_0082:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0087:  stloc.s    V_8
      IL_0089:  ldloc.s    V_5
      IL_008b:  brtrue     IL_00a3

      IL_0090:  ldloc.s    V_7
      IL_0092:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0097:  ldarg.1
      IL_0098:  ldarg.2
      IL_0099:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverConnect0$PST0600049F(uint32,
                                                                                                                   uint16)
      IL_009e:  br         IL_00b2

      IL_00a3:  ldloc.s    V_7
      IL_00a5:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00aa:  ldarg.1
      IL_00ab:  ldarg.2
      IL_00ac:  ldarg.0
      IL_00ad:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverConnect0$PST060004A0(uint32,
                                                                                                                           uint16,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.s   36
      IL_00c0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c5:  br         IL_00e0

      IL_00ca:  ldstr      "can't send Connect in state "
      IL_00cf:  ldarg.0
      IL_00d0:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00d5:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00da:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00df:  throw

      IL_00e0:  ret
    } // end of method Imp::SendConnect

    .method public instance void  SendBindLocalEndPoint(uint32 dstIP,
                                                        uint16 dstPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       129 (0x81)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   39
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006a

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0044

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverBindLocalEndPoint0$PST060004A1(uint32,
                                                                                                                             uint16)
      IL_003f:  br         IL_0052

      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.0
      IL_004d:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverBindLocalEndPoint0$PST060004A2(uint32,
                                                                                                                                     uint16,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0052:  ldarg.0
      IL_0053:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0058:  ldarg.0
      IL_0059:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005e:  ldc.i4.s   38
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0065:  br         IL_0080

      IL_006a:  ldstr      "can't send BindLocalEndPoint in state "
      IL_006f:  ldarg.0
      IL_0070:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0075:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_007a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007f:  throw

      IL_0080:  ret
    } // end of method Imp::SendBindLocalEndPoint

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       359 (0x167)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   40
      IL_0017:  beq        IL_00b6

      IL_001c:  br         IL_0150

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.4
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006b:  ldloc.2
      IL_006c:  ldc.i4.4
      IL_006d:  beq        IL_008f

      IL_0072:  ldstr      "can't recv Ready when next message has tag "
      IL_0077:  ldarg.0
      IL_0078:  volatile.
      IL_007a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_007f:  box        [kernel]System.Int32
      IL_0084:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0089:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ldarg.0
      IL_0090:  ldc.i4.0
      IL_0091:  volatile.
      IL_0093:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0098:  ldarg.0
      IL_0099:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Ready NetStack.Contracts.TcpConnectionContract/Imp::ReadyPod0
      IL_009e:  initobj    NetStack.Contracts.TcpConnectionContract/Ready
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00aa:  ldc.i4.s   28
      IL_00ac:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b1:  br         IL_0166

      IL_00b6:  ldc.i4.0
      IL_00b7:  stloc.3
      IL_00b8:  ldarg.0
      IL_00b9:  volatile.
      IL_00bb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00c0:  stloc.s    V_4
      IL_00c2:  ldloc.s    V_4
      IL_00c4:  brtrue     IL_00da

      IL_00c9:  ldarg.0
      IL_00ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00cf:  stloc.3
      IL_00d0:  ldarg.0
      IL_00d1:  volatile.
      IL_00d3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00d8:  stloc.s    V_4
      IL_00da:  ldloc.s    V_4
      IL_00dc:  ldc.i4.0
      IL_00dd:  ceq
      IL_00df:  brfalse    IL_00fd

      IL_00e4:  ldloc.3
      IL_00e5:  brfalse    IL_00f5

      IL_00ea:  ldstr      "Peer is closed"
      IL_00ef:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f4:  throw

      IL_00f5:  ldarg.0
      IL_00f6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fb:  br.s       IL_00b6

      IL_00fd:  ldarg.0
      IL_00fe:  ldc.i4.4
      IL_00ff:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0104:  ldloc.s    V_4
      IL_0106:  ldc.i4.4
      IL_0107:  beq        IL_0129

      IL_010c:  ldstr      "can't recv Ready when next message has tag "
      IL_0111:  ldarg.0
      IL_0112:  volatile.
      IL_0114:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0119:  box        [kernel]System.Int32
      IL_011e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0123:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0128:  throw

      IL_0129:  ldarg.0
      IL_012a:  ldc.i4.0
      IL_012b:  volatile.
      IL_012d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0132:  ldarg.0
      IL_0133:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Ready NetStack.Contracts.TcpConnectionContract/Imp::ReadyPod0
      IL_0138:  initobj    NetStack.Contracts.TcpConnectionContract/Ready
      IL_013e:  ldarg.0
      IL_013f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0144:  ldc.i4.s   39
      IL_0146:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014b:  br         IL_0166

      IL_0150:  ldstr      "can't recv Ready in state "
      IL_0155:  ldarg.0
      IL_0156:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_015b:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0160:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0165:  throw

      IL_0166:  ret
    } // end of method Imp::RecvReady

    .method public instance void  SendListen(int32 backlog) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   37
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverListen0$PST060004A3(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverListen0$PST060004A4(int32,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   35
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send Listen in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendListen

    .method public instance void  RecvOK() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       1018 (0x3fa)
      .maxstack  29
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0040

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.4
      IL_0016:  beq        IL_00d5

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   38
      IL_001e:  beq        IL_016f

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.s   35
      IL_0026:  beq        IL_020c

      IL_002b:  ldloc.0
      IL_002c:  ldc.i4.s   19
      IL_002e:  beq        IL_02a9

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.s   30
      IL_0036:  beq        IL_0346

      IL_003b:  br         IL_03e3

      IL_0040:  ldc.i4.0
      IL_0041:  stloc.1
      IL_0042:  ldarg.0
      IL_0043:  volatile.
      IL_0045:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_004a:  stloc.2
      IL_004b:  ldloc.2
      IL_004c:  brtrue     IL_0061

      IL_0051:  ldarg.0
      IL_0052:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0057:  stloc.1
      IL_0058:  ldarg.0
      IL_0059:  volatile.
      IL_005b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0060:  stloc.2
      IL_0061:  ldloc.2
      IL_0062:  ldc.i4.0
      IL_0063:  ceq
      IL_0065:  brfalse    IL_0083

      IL_006a:  ldloc.1
      IL_006b:  brfalse    IL_007b

      IL_0070:  ldstr      "Peer is closed"
      IL_0075:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ldarg.0
      IL_007c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0081:  br.s       IL_0040

      IL_0083:  ldarg.0
      IL_0084:  ldc.i4.6
      IL_0085:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_008a:  ldloc.2
      IL_008b:  ldc.i4.6
      IL_008c:  beq        IL_00ae

      IL_0091:  ldstr      "can't recv OK when next message has tag "
      IL_0096:  ldarg.0
      IL_0097:  volatile.
      IL_0099:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_009e:  box        [kernel]System.Int32
      IL_00a3:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00a8:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00ad:  throw

      IL_00ae:  ldarg.0
      IL_00af:  ldc.i4.0
      IL_00b0:  volatile.
      IL_00b2:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/OK NetStack.Contracts.TcpConnectionContract/Imp::OKPod0
      IL_00bd:  initobj    NetStack.Contracts.TcpConnectionContract/OK
      IL_00c3:  ldarg.0
      IL_00c4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c9:  ldc.i4.s   28
      IL_00cb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d0:  br         IL_03f9

      IL_00d5:  ldc.i4.0
      IL_00d6:  stloc.3
      IL_00d7:  ldarg.0
      IL_00d8:  volatile.
      IL_00da:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00df:  stloc.s    V_4
      IL_00e1:  ldloc.s    V_4
      IL_00e3:  brtrue     IL_00f9

      IL_00e8:  ldarg.0
      IL_00e9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ee:  stloc.3
      IL_00ef:  ldarg.0
      IL_00f0:  volatile.
      IL_00f2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00f7:  stloc.s    V_4
      IL_00f9:  ldloc.s    V_4
      IL_00fb:  ldc.i4.0
      IL_00fc:  ceq
      IL_00fe:  brfalse    IL_011c

      IL_0103:  ldloc.3
      IL_0104:  brfalse    IL_0114

      IL_0109:  ldstr      "Peer is closed"
      IL_010e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0113:  throw

      IL_0114:  ldarg.0
      IL_0115:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_011a:  br.s       IL_00d5

      IL_011c:  ldarg.0
      IL_011d:  ldc.i4.6
      IL_011e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0123:  ldloc.s    V_4
      IL_0125:  ldc.i4.6
      IL_0126:  beq        IL_0148

      IL_012b:  ldstr      "can't recv OK when next message has tag "
      IL_0130:  ldarg.0
      IL_0131:  volatile.
      IL_0133:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0138:  box        [kernel]System.Int32
      IL_013d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0142:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0147:  throw

      IL_0148:  ldarg.0
      IL_0149:  ldc.i4.0
      IL_014a:  volatile.
      IL_014c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0151:  ldarg.0
      IL_0152:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/OK NetStack.Contracts.TcpConnectionContract/Imp::OKPod0
      IL_0157:  initobj    NetStack.Contracts.TcpConnectionContract/OK
      IL_015d:  ldarg.0
      IL_015e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0163:  ldc.i4.s   9
      IL_0165:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_016a:  br         IL_03f9

      IL_016f:  ldc.i4.0
      IL_0170:  stloc.s    V_5
      IL_0172:  ldarg.0
      IL_0173:  volatile.
      IL_0175:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_017a:  stloc.s    V_6
      IL_017c:  ldloc.s    V_6
      IL_017e:  brtrue     IL_0195

      IL_0183:  ldarg.0
      IL_0184:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0189:  stloc.s    V_5
      IL_018b:  ldarg.0
      IL_018c:  volatile.
      IL_018e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0193:  stloc.s    V_6
      IL_0195:  ldloc.s    V_6
      IL_0197:  ldc.i4.0
      IL_0198:  ceq
      IL_019a:  brfalse    IL_01b9

      IL_019f:  ldloc.s    V_5
      IL_01a1:  brfalse    IL_01b1

      IL_01a6:  ldstr      "Peer is closed"
      IL_01ab:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01b0:  throw

      IL_01b1:  ldarg.0
      IL_01b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01b7:  br.s       IL_016f

      IL_01b9:  ldarg.0
      IL_01ba:  ldc.i4.6
      IL_01bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01c0:  ldloc.s    V_6
      IL_01c2:  ldc.i4.6
      IL_01c3:  beq        IL_01e5

      IL_01c8:  ldstr      "can't recv OK when next message has tag "
      IL_01cd:  ldarg.0
      IL_01ce:  volatile.
      IL_01d0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01d5:  box        [kernel]System.Int32
      IL_01da:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01df:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01e4:  throw

      IL_01e5:  ldarg.0
      IL_01e6:  ldc.i4.0
      IL_01e7:  volatile.
      IL_01e9:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01ee:  ldarg.0
      IL_01ef:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/OK NetStack.Contracts.TcpConnectionContract/Imp::OKPod0
      IL_01f4:  initobj    NetStack.Contracts.TcpConnectionContract/OK
      IL_01fa:  ldarg.0
      IL_01fb:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0200:  ldc.i4.s   37
      IL_0202:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0207:  br         IL_03f9

      IL_020c:  ldc.i4.0
      IL_020d:  stloc.s    V_7
      IL_020f:  ldarg.0
      IL_0210:  volatile.
      IL_0212:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0217:  stloc.s    V_8
      IL_0219:  ldloc.s    V_8
      IL_021b:  brtrue     IL_0232

      IL_0220:  ldarg.0
      IL_0221:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0226:  stloc.s    V_7
      IL_0228:  ldarg.0
      IL_0229:  volatile.
      IL_022b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0230:  stloc.s    V_8
      IL_0232:  ldloc.s    V_8
      IL_0234:  ldc.i4.0
      IL_0235:  ceq
      IL_0237:  brfalse    IL_0256

      IL_023c:  ldloc.s    V_7
      IL_023e:  brfalse    IL_024e

      IL_0243:  ldstr      "Peer is closed"
      IL_0248:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_024d:  throw

      IL_024e:  ldarg.0
      IL_024f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0254:  br.s       IL_020c

      IL_0256:  ldarg.0
      IL_0257:  ldc.i4.6
      IL_0258:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_025d:  ldloc.s    V_8
      IL_025f:  ldc.i4.6
      IL_0260:  beq        IL_0282

      IL_0265:  ldstr      "can't recv OK when next message has tag "
      IL_026a:  ldarg.0
      IL_026b:  volatile.
      IL_026d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0272:  box        [kernel]System.Int32
      IL_0277:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_027c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0281:  throw

      IL_0282:  ldarg.0
      IL_0283:  ldc.i4.0
      IL_0284:  volatile.
      IL_0286:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_028b:  ldarg.0
      IL_028c:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/OK NetStack.Contracts.TcpConnectionContract/Imp::OKPod0
      IL_0291:  initobj    NetStack.Contracts.TcpConnectionContract/OK
      IL_0297:  ldarg.0
      IL_0298:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_029d:  ldc.i4.s   34
      IL_029f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02a4:  br         IL_03f9

      IL_02a9:  ldc.i4.0
      IL_02aa:  stloc.s    V_9
      IL_02ac:  ldarg.0
      IL_02ad:  volatile.
      IL_02af:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02b4:  stloc.s    V_10
      IL_02b6:  ldloc.s    V_10
      IL_02b8:  brtrue     IL_02cf

      IL_02bd:  ldarg.0
      IL_02be:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02c3:  stloc.s    V_9
      IL_02c5:  ldarg.0
      IL_02c6:  volatile.
      IL_02c8:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02cd:  stloc.s    V_10
      IL_02cf:  ldloc.s    V_10
      IL_02d1:  ldc.i4.0
      IL_02d2:  ceq
      IL_02d4:  brfalse    IL_02f3

      IL_02d9:  ldloc.s    V_9
      IL_02db:  brfalse    IL_02eb

      IL_02e0:  ldstr      "Peer is closed"
      IL_02e5:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02ea:  throw

      IL_02eb:  ldarg.0
      IL_02ec:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02f1:  br.s       IL_02a9

      IL_02f3:  ldarg.0
      IL_02f4:  ldc.i4.6
      IL_02f5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_02fa:  ldloc.s    V_10
      IL_02fc:  ldc.i4.6
      IL_02fd:  beq        IL_031f

      IL_0302:  ldstr      "can't recv OK when next message has tag "
      IL_0307:  ldarg.0
      IL_0308:  volatile.
      IL_030a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_030f:  box        [kernel]System.Int32
      IL_0314:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0319:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_031e:  throw

      IL_031f:  ldarg.0
      IL_0320:  ldc.i4.0
      IL_0321:  volatile.
      IL_0323:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0328:  ldarg.0
      IL_0329:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/OK NetStack.Contracts.TcpConnectionContract/Imp::OKPod0
      IL_032e:  initobj    NetStack.Contracts.TcpConnectionContract/OK
      IL_0334:  ldarg.0
      IL_0335:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_033a:  ldc.i4.s   28
      IL_033c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0341:  br         IL_03f9

      IL_0346:  ldc.i4.0
      IL_0347:  stloc.s    V_11
      IL_0349:  ldarg.0
      IL_034a:  volatile.
      IL_034c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0351:  stloc.s    V_12
      IL_0353:  ldloc.s    V_12
      IL_0355:  brtrue     IL_036c

      IL_035a:  ldarg.0
      IL_035b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0360:  stloc.s    V_11
      IL_0362:  ldarg.0
      IL_0363:  volatile.
      IL_0365:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_036a:  stloc.s    V_12
      IL_036c:  ldloc.s    V_12
      IL_036e:  ldc.i4.0
      IL_036f:  ceq
      IL_0371:  brfalse    IL_0390

      IL_0376:  ldloc.s    V_11
      IL_0378:  brfalse    IL_0388

      IL_037d:  ldstr      "Peer is closed"
      IL_0382:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0387:  throw

      IL_0388:  ldarg.0
      IL_0389:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_038e:  br.s       IL_0346

      IL_0390:  ldarg.0
      IL_0391:  ldc.i4.6
      IL_0392:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0397:  ldloc.s    V_12
      IL_0399:  ldc.i4.6
      IL_039a:  beq        IL_03bc

      IL_039f:  ldstr      "can't recv OK when next message has tag "
      IL_03a4:  ldarg.0
      IL_03a5:  volatile.
      IL_03a7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_03ac:  box        [kernel]System.Int32
      IL_03b1:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_03b6:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_03bb:  throw

      IL_03bc:  ldarg.0
      IL_03bd:  ldc.i4.0
      IL_03be:  volatile.
      IL_03c0:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_03c5:  ldarg.0
      IL_03c6:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/OK NetStack.Contracts.TcpConnectionContract/Imp::OKPod0
      IL_03cb:  initobj    NetStack.Contracts.TcpConnectionContract/OK
      IL_03d1:  ldarg.0
      IL_03d2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_03d7:  ldc.i4.s   34
      IL_03d9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_03de:  br         IL_03f9

      IL_03e3:  ldstr      "can't recv OK in state "
      IL_03e8:  ldarg.0
      IL_03e9:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_03ee:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_03f3:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_03f8:  throw

      IL_03f9:  ret
    } // end of method Imp::RecvOK

    .method public instance void  RecvCouldNotConnect([out] valuetype NetStack.Contracts.TcpError& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       214 (0xd6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bf

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.7
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.7
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv CouldNotConnect when next message has t"
      + "ag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect NetStack.Contracts.TcpConnectionContract/Imp::CouldNotConnectPod0
      IL_008e:  ldfld      valuetype NetStack.Contracts.TcpError NetStack.Contracts.TcpConnectionContract/CouldNotConnect::'error'
      IL_0093:  stobj      NetStack.Contracts.TcpError
      IL_0098:  ldarg.0
      IL_0099:  ldc.i4.0
      IL_009a:  volatile.
      IL_009c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect NetStack.Contracts.TcpConnectionContract/Imp::CouldNotConnectPod0
      IL_00a7:  initobj    NetStack.Contracts.TcpConnectionContract/CouldNotConnect
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b3:  ldc.i4.s   39
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ba:  br         IL_00d5

      IL_00bf:  ldstr      "can't recv CouldNotConnect in state "
      IL_00c4:  ldarg.0
      IL_00c5:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00ca:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d4:  throw

      IL_00d5:  ret
    } // end of method Imp::RecvCouldNotConnect

    .method public instance void  RecvCouldNotListen() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   35
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv CouldNotListen when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CouldNotListen NetStack.Contracts.TcpConnectionContract/Imp::CouldNotListenPod0
      IL_0096:  initobj    NetStack.Contracts.TcpConnectionContract/CouldNotListen
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   39
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv CouldNotListen in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00b9:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvCouldNotListen

    .method public instance void  RecvInvalidEndPoint() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   38
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv InvalidEndPoint when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/InvalidEndPoint NetStack.Contracts.TcpConnectionContract/Imp::InvalidEndPointPod0
      IL_0098:  initobj    NetStack.Contracts.TcpConnectionContract/InvalidEndPoint
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   39
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv InvalidEndPoint in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00bb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvInvalidEndPoint

    .method public instance void  SendGetLocalAddress() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       400 (0x190)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_007e

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   34
      IL_001f:  beq        IL_00d2

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   9
      IL_0027:  beq        IL_0126

      IL_002c:  br         IL_0179

      IL_0031:  ldarg.0
      IL_0032:  ldloca.s   V_1
      IL_0034:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  stloc.3
      IL_003c:  ldloc.3
      IL_003d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0042:  stloc.s    V_4
      IL_0044:  ldloc.1
      IL_0045:  brtrue     IL_005a

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0050:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalAddress1$PST060004A5()
      IL_0055:  br         IL_0066

      IL_005a:  ldloc.3
      IL_005b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0060:  ldarg.0
      IL_0061:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetLocalAddress1$PST060004A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0066:  ldarg.0
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006c:  ldarg.0
      IL_006d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0072:  ldc.i4.s   15
      IL_0074:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0079:  br         IL_018f

      IL_007e:  ldarg.0
      IL_007f:  ldloca.s   V_5
      IL_0081:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0086:  stloc.s    V_6
      IL_0088:  ldloc.s    V_6
      IL_008a:  stloc.s    V_7
      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0093:  stloc.s    V_8
      IL_0095:  ldloc.s    V_5
      IL_0097:  brtrue     IL_00ad

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a3:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalAddress2$PST060004A7()
      IL_00a8:  br         IL_00ba

      IL_00ad:  ldloc.s    V_7
      IL_00af:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetLocalAddress2$PST060004A8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ba:  ldarg.0
      IL_00bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c0:  ldarg.0
      IL_00c1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c6:  ldc.i4.s   25
      IL_00c8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cd:  br         IL_018f

      IL_00d2:  ldarg.0
      IL_00d3:  ldloca.s   V_9
      IL_00d5:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00da:  stloc.s    V_10
      IL_00dc:  ldloc.s    V_10
      IL_00de:  stloc.s    V_11
      IL_00e0:  ldloc.s    V_11
      IL_00e2:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00e7:  stloc.s    V_12
      IL_00e9:  ldloc.s    V_9
      IL_00eb:  brtrue     IL_0101

      IL_00f0:  ldloc.s    V_11
      IL_00f2:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00f7:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalAddress0$PST060004A9()
      IL_00fc:  br         IL_010e

      IL_0101:  ldloc.s    V_11
      IL_0103:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0108:  ldarg.0
      IL_0109:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetLocalAddress0$PST060004AA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_010e:  ldarg.0
      IL_010f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0114:  ldarg.0
      IL_0115:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_011a:  ldc.i4.s   33
      IL_011c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0121:  br         IL_018f

      IL_0126:  ldarg.0
      IL_0127:  ldloca.s   V_13
      IL_0129:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_012e:  stloc.s    V_14
      IL_0130:  ldloc.s    V_14
      IL_0132:  stloc.s    V_15
      IL_0134:  ldloc.s    V_15
      IL_0136:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_013b:  stloc.s    V_16
      IL_013d:  ldloc.s    V_13
      IL_013f:  brtrue     IL_0155

      IL_0144:  ldloc.s    V_15
      IL_0146:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_014b:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalAddress1$PST060004A5()
      IL_0150:  br         IL_0162

      IL_0155:  ldloc.s    V_15
      IL_0157:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_015c:  ldarg.0
      IL_015d:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetLocalAddress1$PST060004A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0162:  ldarg.0
      IL_0163:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0168:  ldarg.0
      IL_0169:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_016e:  ldc.i4.8
      IL_016f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0174:  br         IL_018f

      IL_0179:  ldstr      "can't send GetLocalAddress in state "
      IL_017e:  ldarg.0
      IL_017f:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0184:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0189:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_018e:  throw

      IL_018f:  ret
    } // end of method Imp::SendGetLocalAddress

    .method public instance void  SendGetLocalPort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       400 (0x190)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  beq        IL_007e

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   18
      IL_001f:  beq        IL_00d1

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   28
      IL_0027:  beq        IL_0125

      IL_002c:  br         IL_0179

      IL_0031:  ldarg.0
      IL_0032:  ldloca.s   V_1
      IL_0034:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  stloc.3
      IL_003c:  ldloc.3
      IL_003d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0042:  stloc.s    V_4
      IL_0044:  ldloc.1
      IL_0045:  brtrue     IL_005a

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0050:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalPort0$PST060004AB()
      IL_0055:  br         IL_0066

      IL_005a:  ldloc.3
      IL_005b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0060:  ldarg.0
      IL_0061:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetLocalPort0$PST060004AC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0066:  ldarg.0
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006c:  ldarg.0
      IL_006d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0072:  ldc.i4.s   32
      IL_0074:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0079:  br         IL_018f

      IL_007e:  ldarg.0
      IL_007f:  ldloca.s   V_5
      IL_0081:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0086:  stloc.s    V_6
      IL_0088:  ldloc.s    V_6
      IL_008a:  stloc.s    V_7
      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0093:  stloc.s    V_8
      IL_0095:  ldloc.s    V_5
      IL_0097:  brtrue     IL_00ad

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a3:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalPort1$PST060004AD()
      IL_00a8:  br         IL_00ba

      IL_00ad:  ldloc.s    V_7
      IL_00af:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetLocalPort1$PST060004AE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ba:  ldarg.0
      IL_00bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c0:  ldarg.0
      IL_00c1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c6:  ldc.i4.7
      IL_00c7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cc:  br         IL_018f

      IL_00d1:  ldarg.0
      IL_00d2:  ldloca.s   V_9
      IL_00d4:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d9:  stloc.s    V_10
      IL_00db:  ldloc.s    V_10
      IL_00dd:  stloc.s    V_11
      IL_00df:  ldloc.s    V_11
      IL_00e1:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00e6:  stloc.s    V_12
      IL_00e8:  ldloc.s    V_9
      IL_00ea:  brtrue     IL_0100

      IL_00ef:  ldloc.s    V_11
      IL_00f1:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00f6:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalPort1$PST060004AD()
      IL_00fb:  br         IL_010d

      IL_0100:  ldloc.s    V_11
      IL_0102:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0107:  ldarg.0
      IL_0108:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetLocalPort1$PST060004AE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_010d:  ldarg.0
      IL_010e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0113:  ldarg.0
      IL_0114:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0119:  ldc.i4.s   14
      IL_011b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0120:  br         IL_018f

      IL_0125:  ldarg.0
      IL_0126:  ldloca.s   V_13
      IL_0128:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_012d:  stloc.s    V_14
      IL_012f:  ldloc.s    V_14
      IL_0131:  stloc.s    V_15
      IL_0133:  ldloc.s    V_15
      IL_0135:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_013a:  stloc.s    V_16
      IL_013c:  ldloc.s    V_13
      IL_013e:  brtrue     IL_0154

      IL_0143:  ldloc.s    V_15
      IL_0145:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_014a:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalPort2$PST060004AF()
      IL_014f:  br         IL_0161

      IL_0154:  ldloc.s    V_15
      IL_0156:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_015b:  ldarg.0
      IL_015c:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetLocalPort2$PST060004B0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0161:  ldarg.0
      IL_0162:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0167:  ldarg.0
      IL_0168:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_016d:  ldc.i4.s   24
      IL_016f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0174:  br         IL_018f

      IL_0179:  ldstr      "can't send GetLocalPort in state "
      IL_017e:  ldarg.0
      IL_017f:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0184:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0189:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_018e:  throw

      IL_018f:  ret
    } // end of method Imp::SendGetLocalPort

    .method public instance void  SendAccept(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newConnection) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003f

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0012:  ldc.i4.s   29
      IL_0014:  call       instance bool NetStack.Contracts.TcpConnectionContract/Exp::InState(int32)
      IL_0019:  brtrue     IL_003f

      IL_001e:  ldstr      "can't move endpoint newConnection in state "
      IL_0023:  ldarg.1
      IL_0024:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0029:  ldarg.1
      IL_002a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_002f:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0034:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0039:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_003e:  throw

      IL_003f:  ldarg.0
      IL_0040:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0045:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_004a:  stloc.0
      IL_004b:  ldloc.0
      IL_004c:  ldc.i4.s   34
      IL_004e:  beq        IL_0058

      IL_0053:  br         IL_00af

      IL_0058:  ldarg.0
      IL_0059:  ldloca.s   V_1
      IL_005b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0060:  stloc.2
      IL_0061:  ldloc.2
      IL_0062:  stloc.3
      IL_0063:  ldloc.3
      IL_0064:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0069:  stloc.s    V_4
      IL_006b:  ldloc.1
      IL_006c:  brtrue     IL_008a

      IL_0071:  ldloc.s    V_4
      IL_0073:  ldarg.1
      IL_0074:  call       void NetStack.Contracts.TcpConnectionContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0079:  ldloc.3
      IL_007a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_007f:  ldarg.1
      IL_0080:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAccept0$PST060004B1(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0085:  br         IL_0097

      IL_008a:  ldloc.3
      IL_008b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0090:  ldarg.1
      IL_0091:  ldarg.0
      IL_0092:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverAccept0$PST060004B2(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0097:  ldarg.0
      IL_0098:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   30
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't send Accept in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00ba:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::SendAccept

    .method public instance void  SendIsSessionAvailable() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0038:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverIsSessionAvailable0$PST060004B3()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverIsSessionAvailable0$PST060004B4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   31
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send IsSessionAvailable in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendIsSessionAvailable

    .method public instance void  RecvIPAddress([out] uint32& ip) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       1287 (0x507)
      .maxstack  33
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0047

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  beq        IL_00eb

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   23
      IL_001f:  beq        IL_0194

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   33
      IL_0027:  beq        IL_0240

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.8
      IL_002e:  beq        IL_02ec

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.s   13
      IL_0036:  beq        IL_0398

      IL_003b:  ldloc.0
      IL_003c:  ldc.i4.6
      IL_003d:  beq        IL_0444

      IL_0042:  br         IL_04f0

      IL_0047:  ldc.i4.0
      IL_0048:  stloc.1
      IL_0049:  ldarg.0
      IL_004a:  volatile.
      IL_004c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  brtrue     IL_0068

      IL_0058:  ldarg.0
      IL_0059:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_005e:  stloc.1
      IL_005f:  ldarg.0
      IL_0060:  volatile.
      IL_0062:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0067:  stloc.2
      IL_0068:  ldloc.2
      IL_0069:  ldc.i4.0
      IL_006a:  ceq
      IL_006c:  brfalse    IL_008a

      IL_0071:  ldloc.1
      IL_0072:  brfalse    IL_0082

      IL_0077:  ldstr      "Peer is closed"
      IL_007c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0081:  throw

      IL_0082:  ldarg.0
      IL_0083:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0088:  br.s       IL_0047

      IL_008a:  ldarg.0
      IL_008b:  ldc.i4.s   14
      IL_008d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0092:  ldloc.2
      IL_0093:  ldc.i4.s   14
      IL_0095:  beq        IL_00b7

      IL_009a:  ldstr      "can't recv IPAddress when next message has tag "
      IL_009f:  ldarg.0
      IL_00a0:  volatile.
      IL_00a2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00a7:  box        [kernel]System.Int32
      IL_00ac:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00b1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00b6:  throw

      IL_00b7:  ldarg.1
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_00be:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/IPAddress::ip
      IL_00c3:  stind.i4
      IL_00c4:  ldarg.0
      IL_00c5:  ldc.i4.0
      IL_00c6:  volatile.
      IL_00c8:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00cd:  ldarg.0
      IL_00ce:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_00d3:  initobj    NetStack.Contracts.TcpConnectionContract/IPAddress
      IL_00d9:  ldarg.0
      IL_00da:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00df:  ldc.i4.s   28
      IL_00e1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e6:  br         IL_0506

      IL_00eb:  ldc.i4.0
      IL_00ec:  stloc.3
      IL_00ed:  ldarg.0
      IL_00ee:  volatile.
      IL_00f0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00f5:  stloc.s    V_4
      IL_00f7:  ldloc.s    V_4
      IL_00f9:  brtrue     IL_010f

      IL_00fe:  ldarg.0
      IL_00ff:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0104:  stloc.3
      IL_0105:  ldarg.0
      IL_0106:  volatile.
      IL_0108:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_010d:  stloc.s    V_4
      IL_010f:  ldloc.s    V_4
      IL_0111:  ldc.i4.0
      IL_0112:  ceq
      IL_0114:  brfalse    IL_0132

      IL_0119:  ldloc.3
      IL_011a:  brfalse    IL_012a

      IL_011f:  ldstr      "Peer is closed"
      IL_0124:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0129:  throw

      IL_012a:  ldarg.0
      IL_012b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0130:  br.s       IL_00eb

      IL_0132:  ldarg.0
      IL_0133:  ldc.i4.s   14
      IL_0135:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_013a:  ldloc.s    V_4
      IL_013c:  ldc.i4.s   14
      IL_013e:  beq        IL_0160

      IL_0143:  ldstr      "can't recv IPAddress when next message has tag "
      IL_0148:  ldarg.0
      IL_0149:  volatile.
      IL_014b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0150:  box        [kernel]System.Int32
      IL_0155:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_015a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_015f:  throw

      IL_0160:  ldarg.1
      IL_0161:  ldarg.0
      IL_0162:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_0167:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/IPAddress::ip
      IL_016c:  stind.i4
      IL_016d:  ldarg.0
      IL_016e:  ldc.i4.0
      IL_016f:  volatile.
      IL_0171:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0176:  ldarg.0
      IL_0177:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_017c:  initobj    NetStack.Contracts.TcpConnectionContract/IPAddress
      IL_0182:  ldarg.0
      IL_0183:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0188:  ldc.i4.s   18
      IL_018a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_018f:  br         IL_0506

      IL_0194:  ldc.i4.0
      IL_0195:  stloc.s    V_5
      IL_0197:  ldarg.0
      IL_0198:  volatile.
      IL_019a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_019f:  stloc.s    V_6
      IL_01a1:  ldloc.s    V_6
      IL_01a3:  brtrue     IL_01ba

      IL_01a8:  ldarg.0
      IL_01a9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01ae:  stloc.s    V_5
      IL_01b0:  ldarg.0
      IL_01b1:  volatile.
      IL_01b3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01b8:  stloc.s    V_6
      IL_01ba:  ldloc.s    V_6
      IL_01bc:  ldc.i4.0
      IL_01bd:  ceq
      IL_01bf:  brfalse    IL_01de

      IL_01c4:  ldloc.s    V_5
      IL_01c6:  brfalse    IL_01d6

      IL_01cb:  ldstr      "Peer is closed"
      IL_01d0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d5:  throw

      IL_01d6:  ldarg.0
      IL_01d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01dc:  br.s       IL_0194

      IL_01de:  ldarg.0
      IL_01df:  ldc.i4.s   14
      IL_01e1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01e6:  ldloc.s    V_6
      IL_01e8:  ldc.i4.s   14
      IL_01ea:  beq        IL_020c

      IL_01ef:  ldstr      "can't recv IPAddress when next message has tag "
      IL_01f4:  ldarg.0
      IL_01f5:  volatile.
      IL_01f7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01fc:  box        [kernel]System.Int32
      IL_0201:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0206:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_020b:  throw

      IL_020c:  ldarg.1
      IL_020d:  ldarg.0
      IL_020e:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_0213:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/IPAddress::ip
      IL_0218:  stind.i4
      IL_0219:  ldarg.0
      IL_021a:  ldc.i4.0
      IL_021b:  volatile.
      IL_021d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0222:  ldarg.0
      IL_0223:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_0228:  initobj    NetStack.Contracts.TcpConnectionContract/IPAddress
      IL_022e:  ldarg.0
      IL_022f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0234:  ldc.i4.s   28
      IL_0236:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_023b:  br         IL_0506

      IL_0240:  ldc.i4.0
      IL_0241:  stloc.s    V_7
      IL_0243:  ldarg.0
      IL_0244:  volatile.
      IL_0246:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_024b:  stloc.s    V_8
      IL_024d:  ldloc.s    V_8
      IL_024f:  brtrue     IL_0266

      IL_0254:  ldarg.0
      IL_0255:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_025a:  stloc.s    V_7
      IL_025c:  ldarg.0
      IL_025d:  volatile.
      IL_025f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0264:  stloc.s    V_8
      IL_0266:  ldloc.s    V_8
      IL_0268:  ldc.i4.0
      IL_0269:  ceq
      IL_026b:  brfalse    IL_028a

      IL_0270:  ldloc.s    V_7
      IL_0272:  brfalse    IL_0282

      IL_0277:  ldstr      "Peer is closed"
      IL_027c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0281:  throw

      IL_0282:  ldarg.0
      IL_0283:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0288:  br.s       IL_0240

      IL_028a:  ldarg.0
      IL_028b:  ldc.i4.s   14
      IL_028d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0292:  ldloc.s    V_8
      IL_0294:  ldc.i4.s   14
      IL_0296:  beq        IL_02b8

      IL_029b:  ldstr      "can't recv IPAddress when next message has tag "
      IL_02a0:  ldarg.0
      IL_02a1:  volatile.
      IL_02a3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02a8:  box        [kernel]System.Int32
      IL_02ad:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_02b2:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02b7:  throw

      IL_02b8:  ldarg.1
      IL_02b9:  ldarg.0
      IL_02ba:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_02bf:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/IPAddress::ip
      IL_02c4:  stind.i4
      IL_02c5:  ldarg.0
      IL_02c6:  ldc.i4.0
      IL_02c7:  volatile.
      IL_02c9:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02ce:  ldarg.0
      IL_02cf:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_02d4:  initobj    NetStack.Contracts.TcpConnectionContract/IPAddress
      IL_02da:  ldarg.0
      IL_02db:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02e0:  ldc.i4.s   34
      IL_02e2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02e7:  br         IL_0506

      IL_02ec:  ldc.i4.0
      IL_02ed:  stloc.s    V_9
      IL_02ef:  ldarg.0
      IL_02f0:  volatile.
      IL_02f2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02f7:  stloc.s    V_10
      IL_02f9:  ldloc.s    V_10
      IL_02fb:  brtrue     IL_0312

      IL_0300:  ldarg.0
      IL_0301:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0306:  stloc.s    V_9
      IL_0308:  ldarg.0
      IL_0309:  volatile.
      IL_030b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0310:  stloc.s    V_10
      IL_0312:  ldloc.s    V_10
      IL_0314:  ldc.i4.0
      IL_0315:  ceq
      IL_0317:  brfalse    IL_0336

      IL_031c:  ldloc.s    V_9
      IL_031e:  brfalse    IL_032e

      IL_0323:  ldstr      "Peer is closed"
      IL_0328:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_032d:  throw

      IL_032e:  ldarg.0
      IL_032f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0334:  br.s       IL_02ec

      IL_0336:  ldarg.0
      IL_0337:  ldc.i4.s   14
      IL_0339:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_033e:  ldloc.s    V_10
      IL_0340:  ldc.i4.s   14
      IL_0342:  beq        IL_0364

      IL_0347:  ldstr      "can't recv IPAddress when next message has tag "
      IL_034c:  ldarg.0
      IL_034d:  volatile.
      IL_034f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0354:  box        [kernel]System.Int32
      IL_0359:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_035e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0363:  throw

      IL_0364:  ldarg.1
      IL_0365:  ldarg.0
      IL_0366:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_036b:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/IPAddress::ip
      IL_0370:  stind.i4
      IL_0371:  ldarg.0
      IL_0372:  ldc.i4.0
      IL_0373:  volatile.
      IL_0375:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_037a:  ldarg.0
      IL_037b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_0380:  initobj    NetStack.Contracts.TcpConnectionContract/IPAddress
      IL_0386:  ldarg.0
      IL_0387:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_038c:  ldc.i4.s   9
      IL_038e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0393:  br         IL_0506

      IL_0398:  ldc.i4.0
      IL_0399:  stloc.s    V_11
      IL_039b:  ldarg.0
      IL_039c:  volatile.
      IL_039e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_03a3:  stloc.s    V_12
      IL_03a5:  ldloc.s    V_12
      IL_03a7:  brtrue     IL_03be

      IL_03ac:  ldarg.0
      IL_03ad:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03b2:  stloc.s    V_11
      IL_03b4:  ldarg.0
      IL_03b5:  volatile.
      IL_03b7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_03bc:  stloc.s    V_12
      IL_03be:  ldloc.s    V_12
      IL_03c0:  ldc.i4.0
      IL_03c1:  ceq
      IL_03c3:  brfalse    IL_03e2

      IL_03c8:  ldloc.s    V_11
      IL_03ca:  brfalse    IL_03da

      IL_03cf:  ldstr      "Peer is closed"
      IL_03d4:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_03d9:  throw

      IL_03da:  ldarg.0
      IL_03db:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_03e0:  br.s       IL_0398

      IL_03e2:  ldarg.0
      IL_03e3:  ldc.i4.s   14
      IL_03e5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_03ea:  ldloc.s    V_12
      IL_03ec:  ldc.i4.s   14
      IL_03ee:  beq        IL_0410

      IL_03f3:  ldstr      "can't recv IPAddress when next message has tag "
      IL_03f8:  ldarg.0
      IL_03f9:  volatile.
      IL_03fb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0400:  box        [kernel]System.Int32
      IL_0405:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_040a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_040f:  throw

      IL_0410:  ldarg.1
      IL_0411:  ldarg.0
      IL_0412:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_0417:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/IPAddress::ip
      IL_041c:  stind.i4
      IL_041d:  ldarg.0
      IL_041e:  ldc.i4.0
      IL_041f:  volatile.
      IL_0421:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0426:  ldarg.0
      IL_0427:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_042c:  initobj    NetStack.Contracts.TcpConnectionContract/IPAddress
      IL_0432:  ldarg.0
      IL_0433:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0438:  ldc.i4.s   18
      IL_043a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_043f:  br         IL_0506

      IL_0444:  ldc.i4.0
      IL_0445:  stloc.s    V_13
      IL_0447:  ldarg.0
      IL_0448:  volatile.
      IL_044a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_044f:  stloc.s    V_14
      IL_0451:  ldloc.s    V_14
      IL_0453:  brtrue     IL_046a

      IL_0458:  ldarg.0
      IL_0459:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_045e:  stloc.s    V_13
      IL_0460:  ldarg.0
      IL_0461:  volatile.
      IL_0463:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0468:  stloc.s    V_14
      IL_046a:  ldloc.s    V_14
      IL_046c:  ldc.i4.0
      IL_046d:  ceq
      IL_046f:  brfalse    IL_048e

      IL_0474:  ldloc.s    V_13
      IL_0476:  brfalse    IL_0486

      IL_047b:  ldstr      "Peer is closed"
      IL_0480:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0485:  throw

      IL_0486:  ldarg.0
      IL_0487:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_048c:  br.s       IL_0444

      IL_048e:  ldarg.0
      IL_048f:  ldc.i4.s   14
      IL_0491:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0496:  ldloc.s    V_14
      IL_0498:  ldc.i4.s   14
      IL_049a:  beq        IL_04bc

      IL_049f:  ldstr      "can't recv IPAddress when next message has tag "
      IL_04a4:  ldarg.0
      IL_04a5:  volatile.
      IL_04a7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_04ac:  box        [kernel]System.Int32
      IL_04b1:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_04b6:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_04bb:  throw

      IL_04bc:  ldarg.1
      IL_04bd:  ldarg.0
      IL_04be:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_04c3:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/IPAddress::ip
      IL_04c8:  stind.i4
      IL_04c9:  ldarg.0
      IL_04ca:  ldc.i4.0
      IL_04cb:  volatile.
      IL_04cd:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_04d2:  ldarg.0
      IL_04d3:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_04d8:  initobj    NetStack.Contracts.TcpConnectionContract/IPAddress
      IL_04de:  ldarg.0
      IL_04df:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_04e4:  ldc.i4.s   9
      IL_04e6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_04eb:  br         IL_0506

      IL_04f0:  ldstr      "can't recv IPAddress in state "
      IL_04f5:  ldarg.0
      IL_04f6:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_04fb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0500:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0505:  throw

      IL_0506:  ret
    } // end of method Imp::RecvIPAddress

    .method public instance void  RecvPort([out] uint16& port) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       1287 (0x507)
      .maxstack  33
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0047

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   24
      IL_0016:  beq        IL_00eb

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   14
      IL_001e:  beq        IL_0194

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.s   22
      IL_0026:  beq        IL_0240

      IL_002b:  ldloc.0
      IL_002c:  ldc.i4.s   32
      IL_002e:  beq        IL_02ec

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.7
      IL_0035:  beq        IL_0398

      IL_003a:  ldloc.0
      IL_003b:  ldc.i4.s   12
      IL_003d:  beq        IL_0444

      IL_0042:  br         IL_04f0

      IL_0047:  ldc.i4.0
      IL_0048:  stloc.1
      IL_0049:  ldarg.0
      IL_004a:  volatile.
      IL_004c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  brtrue     IL_0068

      IL_0058:  ldarg.0
      IL_0059:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_005e:  stloc.1
      IL_005f:  ldarg.0
      IL_0060:  volatile.
      IL_0062:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0067:  stloc.2
      IL_0068:  ldloc.2
      IL_0069:  ldc.i4.0
      IL_006a:  ceq
      IL_006c:  brfalse    IL_008a

      IL_0071:  ldloc.1
      IL_0072:  brfalse    IL_0082

      IL_0077:  ldstr      "Peer is closed"
      IL_007c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0081:  throw

      IL_0082:  ldarg.0
      IL_0083:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0088:  br.s       IL_0047

      IL_008a:  ldarg.0
      IL_008b:  ldc.i4.s   15
      IL_008d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0092:  ldloc.2
      IL_0093:  ldc.i4.s   15
      IL_0095:  beq        IL_00b7

      IL_009a:  ldstr      "can't recv Port when next message has tag "
      IL_009f:  ldarg.0
      IL_00a0:  volatile.
      IL_00a2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00a7:  box        [kernel]System.Int32
      IL_00ac:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00b1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00b6:  throw

      IL_00b7:  ldarg.1
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_00be:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Port::port
      IL_00c3:  stind.i2
      IL_00c4:  ldarg.0
      IL_00c5:  ldc.i4.0
      IL_00c6:  volatile.
      IL_00c8:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00cd:  ldarg.0
      IL_00ce:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_00d3:  initobj    NetStack.Contracts.TcpConnectionContract/Port
      IL_00d9:  ldarg.0
      IL_00da:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00df:  ldc.i4.s   9
      IL_00e1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e6:  br         IL_0506

      IL_00eb:  ldc.i4.0
      IL_00ec:  stloc.3
      IL_00ed:  ldarg.0
      IL_00ee:  volatile.
      IL_00f0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00f5:  stloc.s    V_4
      IL_00f7:  ldloc.s    V_4
      IL_00f9:  brtrue     IL_010f

      IL_00fe:  ldarg.0
      IL_00ff:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0104:  stloc.3
      IL_0105:  ldarg.0
      IL_0106:  volatile.
      IL_0108:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_010d:  stloc.s    V_4
      IL_010f:  ldloc.s    V_4
      IL_0111:  ldc.i4.0
      IL_0112:  ceq
      IL_0114:  brfalse    IL_0132

      IL_0119:  ldloc.3
      IL_011a:  brfalse    IL_012a

      IL_011f:  ldstr      "Peer is closed"
      IL_0124:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0129:  throw

      IL_012a:  ldarg.0
      IL_012b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0130:  br.s       IL_00eb

      IL_0132:  ldarg.0
      IL_0133:  ldc.i4.s   15
      IL_0135:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_013a:  ldloc.s    V_4
      IL_013c:  ldc.i4.s   15
      IL_013e:  beq        IL_0160

      IL_0143:  ldstr      "can't recv Port when next message has tag "
      IL_0148:  ldarg.0
      IL_0149:  volatile.
      IL_014b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0150:  box        [kernel]System.Int32
      IL_0155:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_015a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_015f:  throw

      IL_0160:  ldarg.1
      IL_0161:  ldarg.0
      IL_0162:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_0167:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Port::port
      IL_016c:  stind.i2
      IL_016d:  ldarg.0
      IL_016e:  ldc.i4.0
      IL_016f:  volatile.
      IL_0171:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0176:  ldarg.0
      IL_0177:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_017c:  initobj    NetStack.Contracts.TcpConnectionContract/Port
      IL_0182:  ldarg.0
      IL_0183:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0188:  ldc.i4.s   28
      IL_018a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_018f:  br         IL_0506

      IL_0194:  ldc.i4.0
      IL_0195:  stloc.s    V_5
      IL_0197:  ldarg.0
      IL_0198:  volatile.
      IL_019a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_019f:  stloc.s    V_6
      IL_01a1:  ldloc.s    V_6
      IL_01a3:  brtrue     IL_01ba

      IL_01a8:  ldarg.0
      IL_01a9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01ae:  stloc.s    V_5
      IL_01b0:  ldarg.0
      IL_01b1:  volatile.
      IL_01b3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01b8:  stloc.s    V_6
      IL_01ba:  ldloc.s    V_6
      IL_01bc:  ldc.i4.0
      IL_01bd:  ceq
      IL_01bf:  brfalse    IL_01de

      IL_01c4:  ldloc.s    V_5
      IL_01c6:  brfalse    IL_01d6

      IL_01cb:  ldstr      "Peer is closed"
      IL_01d0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d5:  throw

      IL_01d6:  ldarg.0
      IL_01d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01dc:  br.s       IL_0194

      IL_01de:  ldarg.0
      IL_01df:  ldc.i4.s   15
      IL_01e1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01e6:  ldloc.s    V_6
      IL_01e8:  ldc.i4.s   15
      IL_01ea:  beq        IL_020c

      IL_01ef:  ldstr      "can't recv Port when next message has tag "
      IL_01f4:  ldarg.0
      IL_01f5:  volatile.
      IL_01f7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01fc:  box        [kernel]System.Int32
      IL_0201:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0206:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_020b:  throw

      IL_020c:  ldarg.1
      IL_020d:  ldarg.0
      IL_020e:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_0213:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Port::port
      IL_0218:  stind.i2
      IL_0219:  ldarg.0
      IL_021a:  ldc.i4.0
      IL_021b:  volatile.
      IL_021d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0222:  ldarg.0
      IL_0223:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_0228:  initobj    NetStack.Contracts.TcpConnectionContract/Port
      IL_022e:  ldarg.0
      IL_022f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0234:  ldc.i4.s   18
      IL_0236:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_023b:  br         IL_0506

      IL_0240:  ldc.i4.0
      IL_0241:  stloc.s    V_7
      IL_0243:  ldarg.0
      IL_0244:  volatile.
      IL_0246:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_024b:  stloc.s    V_8
      IL_024d:  ldloc.s    V_8
      IL_024f:  brtrue     IL_0266

      IL_0254:  ldarg.0
      IL_0255:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_025a:  stloc.s    V_7
      IL_025c:  ldarg.0
      IL_025d:  volatile.
      IL_025f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0264:  stloc.s    V_8
      IL_0266:  ldloc.s    V_8
      IL_0268:  ldc.i4.0
      IL_0269:  ceq
      IL_026b:  brfalse    IL_028a

      IL_0270:  ldloc.s    V_7
      IL_0272:  brfalse    IL_0282

      IL_0277:  ldstr      "Peer is closed"
      IL_027c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0281:  throw

      IL_0282:  ldarg.0
      IL_0283:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0288:  br.s       IL_0240

      IL_028a:  ldarg.0
      IL_028b:  ldc.i4.s   15
      IL_028d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0292:  ldloc.s    V_8
      IL_0294:  ldc.i4.s   15
      IL_0296:  beq        IL_02b8

      IL_029b:  ldstr      "can't recv Port when next message has tag "
      IL_02a0:  ldarg.0
      IL_02a1:  volatile.
      IL_02a3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02a8:  box        [kernel]System.Int32
      IL_02ad:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_02b2:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02b7:  throw

      IL_02b8:  ldarg.1
      IL_02b9:  ldarg.0
      IL_02ba:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_02bf:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Port::port
      IL_02c4:  stind.i2
      IL_02c5:  ldarg.0
      IL_02c6:  ldc.i4.0
      IL_02c7:  volatile.
      IL_02c9:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02ce:  ldarg.0
      IL_02cf:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_02d4:  initobj    NetStack.Contracts.TcpConnectionContract/Port
      IL_02da:  ldarg.0
      IL_02db:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02e0:  ldc.i4.s   28
      IL_02e2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02e7:  br         IL_0506

      IL_02ec:  ldc.i4.0
      IL_02ed:  stloc.s    V_9
      IL_02ef:  ldarg.0
      IL_02f0:  volatile.
      IL_02f2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02f7:  stloc.s    V_10
      IL_02f9:  ldloc.s    V_10
      IL_02fb:  brtrue     IL_0312

      IL_0300:  ldarg.0
      IL_0301:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0306:  stloc.s    V_9
      IL_0308:  ldarg.0
      IL_0309:  volatile.
      IL_030b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0310:  stloc.s    V_10
      IL_0312:  ldloc.s    V_10
      IL_0314:  ldc.i4.0
      IL_0315:  ceq
      IL_0317:  brfalse    IL_0336

      IL_031c:  ldloc.s    V_9
      IL_031e:  brfalse    IL_032e

      IL_0323:  ldstr      "Peer is closed"
      IL_0328:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_032d:  throw

      IL_032e:  ldarg.0
      IL_032f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0334:  br.s       IL_02ec

      IL_0336:  ldarg.0
      IL_0337:  ldc.i4.s   15
      IL_0339:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_033e:  ldloc.s    V_10
      IL_0340:  ldc.i4.s   15
      IL_0342:  beq        IL_0364

      IL_0347:  ldstr      "can't recv Port when next message has tag "
      IL_034c:  ldarg.0
      IL_034d:  volatile.
      IL_034f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0354:  box        [kernel]System.Int32
      IL_0359:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_035e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0363:  throw

      IL_0364:  ldarg.1
      IL_0365:  ldarg.0
      IL_0366:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_036b:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Port::port
      IL_0370:  stind.i2
      IL_0371:  ldarg.0
      IL_0372:  ldc.i4.0
      IL_0373:  volatile.
      IL_0375:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_037a:  ldarg.0
      IL_037b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_0380:  initobj    NetStack.Contracts.TcpConnectionContract/Port
      IL_0386:  ldarg.0
      IL_0387:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_038c:  ldc.i4.s   34
      IL_038e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0393:  br         IL_0506

      IL_0398:  ldc.i4.0
      IL_0399:  stloc.s    V_11
      IL_039b:  ldarg.0
      IL_039c:  volatile.
      IL_039e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_03a3:  stloc.s    V_12
      IL_03a5:  ldloc.s    V_12
      IL_03a7:  brtrue     IL_03be

      IL_03ac:  ldarg.0
      IL_03ad:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03b2:  stloc.s    V_11
      IL_03b4:  ldarg.0
      IL_03b5:  volatile.
      IL_03b7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_03bc:  stloc.s    V_12
      IL_03be:  ldloc.s    V_12
      IL_03c0:  ldc.i4.0
      IL_03c1:  ceq
      IL_03c3:  brfalse    IL_03e2

      IL_03c8:  ldloc.s    V_11
      IL_03ca:  brfalse    IL_03da

      IL_03cf:  ldstr      "Peer is closed"
      IL_03d4:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_03d9:  throw

      IL_03da:  ldarg.0
      IL_03db:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_03e0:  br.s       IL_0398

      IL_03e2:  ldarg.0
      IL_03e3:  ldc.i4.s   15
      IL_03e5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_03ea:  ldloc.s    V_12
      IL_03ec:  ldc.i4.s   15
      IL_03ee:  beq        IL_0410

      IL_03f3:  ldstr      "can't recv Port when next message has tag "
      IL_03f8:  ldarg.0
      IL_03f9:  volatile.
      IL_03fb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0400:  box        [kernel]System.Int32
      IL_0405:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_040a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_040f:  throw

      IL_0410:  ldarg.1
      IL_0411:  ldarg.0
      IL_0412:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_0417:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Port::port
      IL_041c:  stind.i2
      IL_041d:  ldarg.0
      IL_041e:  ldc.i4.0
      IL_041f:  volatile.
      IL_0421:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0426:  ldarg.0
      IL_0427:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_042c:  initobj    NetStack.Contracts.TcpConnectionContract/Port
      IL_0432:  ldarg.0
      IL_0433:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0438:  ldc.i4.s   9
      IL_043a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_043f:  br         IL_0506

      IL_0444:  ldc.i4.0
      IL_0445:  stloc.s    V_13
      IL_0447:  ldarg.0
      IL_0448:  volatile.
      IL_044a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_044f:  stloc.s    V_14
      IL_0451:  ldloc.s    V_14
      IL_0453:  brtrue     IL_046a

      IL_0458:  ldarg.0
      IL_0459:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_045e:  stloc.s    V_13
      IL_0460:  ldarg.0
      IL_0461:  volatile.
      IL_0463:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0468:  stloc.s    V_14
      IL_046a:  ldloc.s    V_14
      IL_046c:  ldc.i4.0
      IL_046d:  ceq
      IL_046f:  brfalse    IL_048e

      IL_0474:  ldloc.s    V_13
      IL_0476:  brfalse    IL_0486

      IL_047b:  ldstr      "Peer is closed"
      IL_0480:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0485:  throw

      IL_0486:  ldarg.0
      IL_0487:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_048c:  br.s       IL_0444

      IL_048e:  ldarg.0
      IL_048f:  ldc.i4.s   15
      IL_0491:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0496:  ldloc.s    V_14
      IL_0498:  ldc.i4.s   15
      IL_049a:  beq        IL_04bc

      IL_049f:  ldstr      "can't recv Port when next message has tag "
      IL_04a4:  ldarg.0
      IL_04a5:  volatile.
      IL_04a7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_04ac:  box        [kernel]System.Int32
      IL_04b1:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_04b6:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_04bb:  throw

      IL_04bc:  ldarg.1
      IL_04bd:  ldarg.0
      IL_04be:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_04c3:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Port::port
      IL_04c8:  stind.i2
      IL_04c9:  ldarg.0
      IL_04ca:  ldc.i4.0
      IL_04cb:  volatile.
      IL_04cd:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_04d2:  ldarg.0
      IL_04d3:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_04d8:  initobj    NetStack.Contracts.TcpConnectionContract/Port
      IL_04de:  ldarg.0
      IL_04df:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_04e4:  ldc.i4.s   18
      IL_04e6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_04eb:  br         IL_0506

      IL_04f0:  ldstr      "can't recv Port in state "
      IL_04f5:  ldarg.0
      IL_04f6:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_04fb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0500:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0505:  throw

      IL_0506:  ret
    } // end of method Imp::RecvPort

    .method public instance void  RecvSessionIsAvailable([out] bool& isAvailable) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   16
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   16
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv SessionIsAvailable when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::SessionIsAvailablePod0
      IL_0090:  ldfld      bool NetStack.Contracts.TcpConnectionContract/SessionIsAvailable::isAvailable
      IL_0095:  stobj      [kernel]System.Boolean
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::SessionIsAvailablePod0
      IL_00a9:  initobj    NetStack.Contracts.TcpConnectionContract/SessionIsAvailable
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   34
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv SessionIsAvailable in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvSessionIsAvailable

    .method public instance void  SendRead() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c2

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverRead1$PST060004B5()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverRead1$PST060004B6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   11
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d8

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0093:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverRead2$PST060004B7()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverRead2$PST060004B8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.s   21
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send Read in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00cd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Imp::SendRead

    .method public instance void  SendPollRead(int32 timeout) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       221 (0xdd)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_0070

      IL_001c:  br         IL_00c6

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004b

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0040:  ldarg.1
      IL_0041:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverPollRead1$PST060004B9(int32)
      IL_0046:  br         IL_0058

      IL_004b:  ldloc.3
      IL_004c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverPollRead1$PST060004BA(int32,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0058:  ldarg.0
      IL_0059:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005e:  ldarg.0
      IL_005f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0064:  ldc.i4.s   10
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006b:  br         IL_00dc

      IL_0070:  ldarg.0
      IL_0071:  ldloca.s   V_5
      IL_0073:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0078:  stloc.s    V_6
      IL_007a:  ldloc.s    V_6
      IL_007c:  stloc.s    V_7
      IL_007e:  ldloc.s    V_7
      IL_0080:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0085:  stloc.s    V_8
      IL_0087:  ldloc.s    V_5
      IL_0089:  brtrue     IL_00a0

      IL_008e:  ldloc.s    V_7
      IL_0090:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0095:  ldarg.1
      IL_0096:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverPollRead2$PST060004BB(int32)
      IL_009b:  br         IL_00ae

      IL_00a0:  ldloc.s    V_7
      IL_00a2:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a7:  ldarg.1
      IL_00a8:  ldarg.0
      IL_00a9:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverPollRead2$PST060004BC(int32,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ae:  ldarg.0
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b4:  ldarg.0
      IL_00b5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ba:  ldc.i4.s   20
      IL_00bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c1:  br         IL_00dc

      IL_00c6:  ldstr      "can't send PollRead in state "
      IL_00cb:  ldarg.0
      IL_00cc:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00d1:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d6:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00db:  throw

      IL_00dc:  ret
    } // end of method Imp::SendPollRead

    .method public instance void  SendIsDataAvailable() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   18
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c2

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverIsDataAvailable2$PST060004BD()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverIsDataAvailable2$PST060004BE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   27
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d8

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0093:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverIsDataAvailable1$PST060004BF()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverIsDataAvailable1$PST060004C0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.s   17
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send IsDataAvailable in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00cd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Imp::SendIsDataAvailable

    .method public instance void  SendWrite(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       244 (0xf4)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               bool V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_8,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_9,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_10)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_007b

      IL_001c:  br         IL_00dd

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_0057

      IL_003a:  ldarg.1
      IL_003b:  stloc.s    V_5
      IL_003d:  ldloc.s    V_4
      IL_003f:  ldloc.s    V_5
      IL_0041:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0046:  ldloc.3
      IL_0047:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_004c:  ldarg.1
      IL_004d:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverWrite1$PST060004C1(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0052:  br         IL_0064

      IL_0057:  ldloc.3
      IL_0058:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_005d:  ldarg.1
      IL_005e:  ldarg.0
      IL_005f:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverWrite1$PST060004C2(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006a:  ldarg.0
      IL_006b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0070:  ldc.i4.4
      IL_0071:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0076:  br         IL_00f3

      IL_007b:  ldarg.0
      IL_007c:  ldloca.s   V_6
      IL_007e:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0083:  stloc.s    V_7
      IL_0085:  ldloc.s    V_7
      IL_0087:  stloc.s    V_8
      IL_0089:  ldloc.s    V_8
      IL_008b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0090:  stloc.s    V_9
      IL_0092:  ldloc.s    V_6
      IL_0094:  brtrue     IL_00b7

      IL_0099:  ldarg.1
      IL_009a:  stloc.s    V_10
      IL_009c:  ldloc.s    V_9
      IL_009e:  ldloc.s    V_10
      IL_00a0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_00a5:  ldloc.s    V_8
      IL_00a7:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00ac:  ldarg.1
      IL_00ad:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverWrite2$PST060004C3(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_00b2:  br         IL_00c5

      IL_00b7:  ldloc.s    V_8
      IL_00b9:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00be:  ldarg.1
      IL_00bf:  ldarg.0
      IL_00c0:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverWrite2$PST060004C4(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00c5:  ldarg.0
      IL_00c6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00cb:  ldarg.0
      IL_00cc:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d1:  ldc.i4.s   19
      IL_00d3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d8:  br         IL_00f3

      IL_00dd:  ldstr      "can't send Write in state "
      IL_00e2:  ldarg.0
      IL_00e3:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00e8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00ed:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00f2:  throw

      IL_00f3:  ret
    } // end of method Imp::SendWrite

    .method public instance void  SendClose() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       669 (0x29d)
      .maxstack  40
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24,
               bool V_25,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_26,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_27,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_28)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   37
      IL_000f:  beq        IL_0048

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_0094

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   34
      IL_001f:  beq        IL_00e7

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.3
      IL_0026:  beq        IL_013a

      IL_002b:  ldloc.0
      IL_002c:  ldc.i4.s   9
      IL_002e:  beq        IL_018d

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.s   18
      IL_0036:  beq        IL_01e0

      IL_003b:  ldloc.0
      IL_003c:  ldc.i4.s   39
      IL_003e:  beq        IL_0233

      IL_0043:  br         IL_0286

      IL_0048:  ldarg.0
      IL_0049:  ldloca.s   V_1
      IL_004b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0050:  stloc.2
      IL_0051:  ldloc.2
      IL_0052:  stloc.3
      IL_0053:  ldloc.3
      IL_0054:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0059:  stloc.s    V_4
      IL_005b:  ldloc.1
      IL_005c:  brtrue     IL_0071

      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0067:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose0$PST060004C5()
      IL_006c:  br         IL_007d

      IL_0071:  ldloc.3
      IL_0072:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0077:  ldarg.0
      IL_0078:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverClose0$PST060004C6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_007d:  ldarg.0
      IL_007e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0083:  ldarg.0
      IL_0084:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0089:  ldc.i4.2
      IL_008a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_008f:  br         IL_029c

      IL_0094:  ldarg.0
      IL_0095:  ldloca.s   V_5
      IL_0097:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_009c:  stloc.s    V_6
      IL_009e:  ldloc.s    V_6
      IL_00a0:  stloc.s    V_7
      IL_00a2:  ldloc.s    V_7
      IL_00a4:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a9:  stloc.s    V_8
      IL_00ab:  ldloc.s    V_5
      IL_00ad:  brtrue     IL_00c3

      IL_00b2:  ldloc.s    V_7
      IL_00b4:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00b9:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose2$PST060004C7()
      IL_00be:  br         IL_00d0

      IL_00c3:  ldloc.s    V_7
      IL_00c5:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00ca:  ldarg.0
      IL_00cb:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverClose2$PST060004C8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00d0:  ldarg.0
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00d6:  ldarg.0
      IL_00d7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00dc:  ldc.i4.2
      IL_00dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e2:  br         IL_029c

      IL_00e7:  ldarg.0
      IL_00e8:  ldloca.s   V_9
      IL_00ea:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00ef:  stloc.s    V_10
      IL_00f1:  ldloc.s    V_10
      IL_00f3:  stloc.s    V_11
      IL_00f5:  ldloc.s    V_11
      IL_00f7:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00fc:  stloc.s    V_12
      IL_00fe:  ldloc.s    V_9
      IL_0100:  brtrue     IL_0116

      IL_0105:  ldloc.s    V_11
      IL_0107:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_010c:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose0$PST060004C5()
      IL_0111:  br         IL_0123

      IL_0116:  ldloc.s    V_11
      IL_0118:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_011d:  ldarg.0
      IL_011e:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverClose0$PST060004C6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0123:  ldarg.0
      IL_0124:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0129:  ldarg.0
      IL_012a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_012f:  ldc.i4.2
      IL_0130:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0135:  br         IL_029c

      IL_013a:  ldarg.0
      IL_013b:  ldloca.s   V_13
      IL_013d:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0142:  stloc.s    V_14
      IL_0144:  ldloc.s    V_14
      IL_0146:  stloc.s    V_15
      IL_0148:  ldloc.s    V_15
      IL_014a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_014f:  stloc.s    V_16
      IL_0151:  ldloc.s    V_13
      IL_0153:  brtrue     IL_0169

      IL_0158:  ldloc.s    V_15
      IL_015a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_015f:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose0$PST060004C5()
      IL_0164:  br         IL_0176

      IL_0169:  ldloc.s    V_15
      IL_016b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0170:  ldarg.0
      IL_0171:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverClose0$PST060004C6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0176:  ldarg.0
      IL_0177:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_017c:  ldarg.0
      IL_017d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0182:  ldc.i4.2
      IL_0183:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0188:  br         IL_029c

      IL_018d:  ldarg.0
      IL_018e:  ldloca.s   V_17
      IL_0190:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0195:  stloc.s    V_18
      IL_0197:  ldloc.s    V_18
      IL_0199:  stloc.s    V_19
      IL_019b:  ldloc.s    V_19
      IL_019d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_01a2:  stloc.s    V_20
      IL_01a4:  ldloc.s    V_17
      IL_01a6:  brtrue     IL_01bc

      IL_01ab:  ldloc.s    V_19
      IL_01ad:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_01b2:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose1$PST060004C9()
      IL_01b7:  br         IL_01c9

      IL_01bc:  ldloc.s    V_19
      IL_01be:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_01c3:  ldarg.0
      IL_01c4:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverClose1$PST060004CA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01c9:  ldarg.0
      IL_01ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01cf:  ldarg.0
      IL_01d0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01d5:  ldc.i4.2
      IL_01d6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01db:  br         IL_029c

      IL_01e0:  ldarg.0
      IL_01e1:  ldloca.s   V_21
      IL_01e3:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01e8:  stloc.s    V_22
      IL_01ea:  ldloc.s    V_22
      IL_01ec:  stloc.s    V_23
      IL_01ee:  ldloc.s    V_23
      IL_01f0:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_01f5:  stloc.s    V_24
      IL_01f7:  ldloc.s    V_21
      IL_01f9:  brtrue     IL_020f

      IL_01fe:  ldloc.s    V_23
      IL_0200:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0205:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose1$PST060004C9()
      IL_020a:  br         IL_021c

      IL_020f:  ldloc.s    V_23
      IL_0211:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0216:  ldarg.0
      IL_0217:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverClose1$PST060004CA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_021c:  ldarg.0
      IL_021d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0222:  ldarg.0
      IL_0223:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0228:  ldc.i4.2
      IL_0229:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_022e:  br         IL_029c

      IL_0233:  ldarg.0
      IL_0234:  ldloca.s   V_25
      IL_0236:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_023b:  stloc.s    V_26
      IL_023d:  ldloc.s    V_26
      IL_023f:  stloc.s    V_27
      IL_0241:  ldloc.s    V_27
      IL_0243:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0248:  stloc.s    V_28
      IL_024a:  ldloc.s    V_25
      IL_024c:  brtrue     IL_0262

      IL_0251:  ldloc.s    V_27
      IL_0253:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0258:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose0$PST060004C5()
      IL_025d:  br         IL_026f

      IL_0262:  ldloc.s    V_27
      IL_0264:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0269:  ldarg.0
      IL_026a:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverClose0$PST060004C6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_026f:  ldarg.0
      IL_0270:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0275:  ldarg.0
      IL_0276:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_027b:  ldc.i4.2
      IL_027c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0281:  br         IL_029c

      IL_0286:  ldstr      "can't send Close in state "
      IL_028b:  ldarg.0
      IL_028c:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0291:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0296:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_029b:  throw

      IL_029c:  ret
    } // end of method Imp::SendClose

    .method public instance void  SendAbort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       396 (0x18c)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0030

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   9
      IL_0016:  beq        IL_007c

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   18
      IL_001e:  beq        IL_00cf

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.s   28
      IL_0026:  beq        IL_0122

      IL_002b:  br         IL_0175

      IL_0030:  ldarg.0
      IL_0031:  ldloca.s   V_1
      IL_0033:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  stloc.3
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0041:  stloc.s    V_4
      IL_0043:  ldloc.1
      IL_0044:  brtrue     IL_0059

      IL_0049:  ldloc.3
      IL_004a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_004f:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAbort0$PST060004CB()
      IL_0054:  br         IL_0065

      IL_0059:  ldloc.3
      IL_005a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_005f:  ldarg.0
      IL_0060:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverAbort0$PST060004CC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0065:  ldarg.0
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006b:  ldarg.0
      IL_006c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0071:  ldc.i4.2
      IL_0072:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0077:  br         IL_018b

      IL_007c:  ldarg.0
      IL_007d:  ldloca.s   V_5
      IL_007f:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0084:  stloc.s    V_6
      IL_0086:  ldloc.s    V_6
      IL_0088:  stloc.s    V_7
      IL_008a:  ldloc.s    V_7
      IL_008c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0091:  stloc.s    V_8
      IL_0093:  ldloc.s    V_5
      IL_0095:  brtrue     IL_00ab

      IL_009a:  ldloc.s    V_7
      IL_009c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a1:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAbort1$PST060004CD()
      IL_00a6:  br         IL_00b8

      IL_00ab:  ldloc.s    V_7
      IL_00ad:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverAbort1$PST060004CE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b8:  ldarg.0
      IL_00b9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00be:  ldarg.0
      IL_00bf:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c4:  ldc.i4.2
      IL_00c5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ca:  br         IL_018b

      IL_00cf:  ldarg.0
      IL_00d0:  ldloca.s   V_9
      IL_00d2:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d7:  stloc.s    V_10
      IL_00d9:  ldloc.s    V_10
      IL_00db:  stloc.s    V_11
      IL_00dd:  ldloc.s    V_11
      IL_00df:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00e4:  stloc.s    V_12
      IL_00e6:  ldloc.s    V_9
      IL_00e8:  brtrue     IL_00fe

      IL_00ed:  ldloc.s    V_11
      IL_00ef:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00f4:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAbort1$PST060004CD()
      IL_00f9:  br         IL_010b

      IL_00fe:  ldloc.s    V_11
      IL_0100:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0105:  ldarg.0
      IL_0106:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverAbort1$PST060004CE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_010b:  ldarg.0
      IL_010c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0111:  ldarg.0
      IL_0112:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0117:  ldc.i4.2
      IL_0118:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_011d:  br         IL_018b

      IL_0122:  ldarg.0
      IL_0123:  ldloca.s   V_13
      IL_0125:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_012a:  stloc.s    V_14
      IL_012c:  ldloc.s    V_14
      IL_012e:  stloc.s    V_15
      IL_0130:  ldloc.s    V_15
      IL_0132:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0137:  stloc.s    V_16
      IL_0139:  ldloc.s    V_13
      IL_013b:  brtrue     IL_0151

      IL_0140:  ldloc.s    V_15
      IL_0142:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0147:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAbort2$PST060004CF()
      IL_014c:  br         IL_015e

      IL_0151:  ldloc.s    V_15
      IL_0153:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0158:  ldarg.0
      IL_0159:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverAbort2$PST060004D0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_015e:  ldarg.0
      IL_015f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0164:  ldarg.0
      IL_0165:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_016a:  ldc.i4.2
      IL_016b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0170:  br         IL_018b

      IL_0175:  ldstr      "can't send Abort in state "
      IL_017a:  ldarg.0
      IL_017b:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0180:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0185:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_018a:  throw

      IL_018b:  ret
    } // end of method Imp::SendAbort

    .method public instance void  SendGetRemoteAddress() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       308 (0x134)
      .maxstack  20
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   18
      IL_001f:  beq        IL_00c9

      IL_0024:  br         IL_011d

      IL_0029:  ldarg.0
      IL_002a:  ldloca.s   V_1
      IL_002c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0031:  stloc.2
      IL_0032:  ldloc.2
      IL_0033:  stloc.3
      IL_0034:  ldloc.3
      IL_0035:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_003a:  stloc.s    V_4
      IL_003c:  ldloc.1
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0048:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemoteAddress2$PST060004D1()
      IL_004d:  br         IL_005e

      IL_0052:  ldloc.3
      IL_0053:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0058:  ldarg.0
      IL_0059:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetRemoteAddress2$PST060004D2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005e:  ldarg.0
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006a:  ldc.i4.s   23
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_0133

      IL_0076:  ldarg.0
      IL_0077:  ldloca.s   V_5
      IL_0079:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_007e:  stloc.s    V_6
      IL_0080:  ldloc.s    V_6
      IL_0082:  stloc.s    V_7
      IL_0084:  ldloc.s    V_7
      IL_0086:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_008b:  stloc.s    V_8
      IL_008d:  ldloc.s    V_5
      IL_008f:  brtrue     IL_00a5

      IL_0094:  ldloc.s    V_7
      IL_0096:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_009b:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemoteAddress1$PST060004D3()
      IL_00a0:  br         IL_00b2

      IL_00a5:  ldloc.s    V_7
      IL_00a7:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00ac:  ldarg.0
      IL_00ad:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetRemoteAddress1$PST060004D4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.6
      IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c4:  br         IL_0133

      IL_00c9:  ldarg.0
      IL_00ca:  ldloca.s   V_9
      IL_00cc:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d1:  stloc.s    V_10
      IL_00d3:  ldloc.s    V_10
      IL_00d5:  stloc.s    V_11
      IL_00d7:  ldloc.s    V_11
      IL_00d9:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00de:  stloc.s    V_12
      IL_00e0:  ldloc.s    V_9
      IL_00e2:  brtrue     IL_00f8

      IL_00e7:  ldloc.s    V_11
      IL_00e9:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00ee:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemoteAddress1$PST060004D3()
      IL_00f3:  br         IL_0105

      IL_00f8:  ldloc.s    V_11
      IL_00fa:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00ff:  ldarg.0
      IL_0100:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetRemoteAddress1$PST060004D4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0105:  ldarg.0
      IL_0106:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_010b:  ldarg.0
      IL_010c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0111:  ldc.i4.s   13
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0118:  br         IL_0133

      IL_011d:  ldstr      "can't send GetRemoteAddress in state "
      IL_0122:  ldarg.0
      IL_0123:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0128:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_012d:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0132:  throw

      IL_0133:  ret
    } // end of method Imp::SendGetRemoteAddress

    .method public instance void  SendGetRemotePort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       308 (0x134)
      .maxstack  20
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_00ca

      IL_0024:  br         IL_011d

      IL_0029:  ldarg.0
      IL_002a:  ldloca.s   V_1
      IL_002c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0031:  stloc.2
      IL_0032:  ldloc.2
      IL_0033:  stloc.3
      IL_0034:  ldloc.3
      IL_0035:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_003a:  stloc.s    V_4
      IL_003c:  ldloc.1
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0048:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemotePort1$PST060004D5()
      IL_004d:  br         IL_005e

      IL_0052:  ldloc.3
      IL_0053:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0058:  ldarg.0
      IL_0059:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetRemotePort1$PST060004D6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005e:  ldarg.0
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006a:  ldc.i4.s   12
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_0133

      IL_0076:  ldarg.0
      IL_0077:  ldloca.s   V_5
      IL_0079:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_007e:  stloc.s    V_6
      IL_0080:  ldloc.s    V_6
      IL_0082:  stloc.s    V_7
      IL_0084:  ldloc.s    V_7
      IL_0086:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_008b:  stloc.s    V_8
      IL_008d:  ldloc.s    V_5
      IL_008f:  brtrue     IL_00a5

      IL_0094:  ldloc.s    V_7
      IL_0096:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_009b:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemotePort2$PST060004D7()
      IL_00a0:  br         IL_00b2

      IL_00a5:  ldloc.s    V_7
      IL_00a7:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00ac:  ldarg.0
      IL_00ad:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetRemotePort2$PST060004D8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.s   22
      IL_00c0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c5:  br         IL_0133

      IL_00ca:  ldarg.0
      IL_00cb:  ldloca.s   V_9
      IL_00cd:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d2:  stloc.s    V_10
      IL_00d4:  ldloc.s    V_10
      IL_00d6:  stloc.s    V_11
      IL_00d8:  ldloc.s    V_11
      IL_00da:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00df:  stloc.s    V_12
      IL_00e1:  ldloc.s    V_9
      IL_00e3:  brtrue     IL_00f9

      IL_00e8:  ldloc.s    V_11
      IL_00ea:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00ef:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemotePort1$PST060004D5()
      IL_00f4:  br         IL_0106

      IL_00f9:  ldloc.s    V_11
      IL_00fb:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0100:  ldarg.0
      IL_0101:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverGetRemotePort1$PST060004D6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0106:  ldarg.0
      IL_0107:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_010c:  ldarg.0
      IL_010d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0112:  ldc.i4.5
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0118:  br         IL_0133

      IL_011d:  ldstr      "can't send GetRemotePort in state "
      IL_0122:  ldarg.0
      IL_0123:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0128:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_012d:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0132:  throw

      IL_0133:  ret
    } // end of method Imp::SendGetRemotePort

    .method public instance void  SendDoneSending() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 19 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_006d

      IL_001c:  br         IL_00c1

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverDoneSending1$PST060004D9()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverDoneSending1$PST060004DA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.3
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0068:  br         IL_00d7

      IL_006d:  ldarg.0
      IL_006e:  ldloca.s   V_5
      IL_0070:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0075:  stloc.s    V_6
      IL_0077:  ldloc.s    V_6
      IL_0079:  stloc.s    V_7
      IL_007b:  ldloc.s    V_7
      IL_007d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0082:  stloc.s    V_8
      IL_0084:  ldloc.s    V_5
      IL_0086:  brtrue     IL_009c

      IL_008b:  ldloc.s    V_7
      IL_008d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0092:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverDoneSending2$PST060004DB()
      IL_0097:  br         IL_00a9

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a3:  ldarg.0
      IL_00a4:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverDoneSending2$PST060004DC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a9:  ldarg.0
      IL_00aa:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   18
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't send DoneSending in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::SendDoneSending

    .method public instance void  SendDoneReceiving() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1A 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_006d

      IL_001c:  br         IL_00c1

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverDoneReceiving1$PST060004DD()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverDoneReceiving1$PST060004DE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.3
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0068:  br         IL_00d7

      IL_006d:  ldarg.0
      IL_006e:  ldloca.s   V_5
      IL_0070:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0075:  stloc.s    V_6
      IL_0077:  ldloc.s    V_6
      IL_0079:  stloc.s    V_7
      IL_007b:  ldloc.s    V_7
      IL_007d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0082:  stloc.s    V_8
      IL_0084:  ldloc.s    V_5
      IL_0086:  brtrue     IL_009c

      IL_008b:  ldloc.s    V_7
      IL_008d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0092:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverDoneReceiving2$PST060004DF()
      IL_0097:  br         IL_00a9

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_00a3:  ldarg.0
      IL_00a4:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallDeliverDoneReceiving2$PST060004E0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a9:  ldarg.0
      IL_00aa:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   9
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't send DoneReceiving in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::SendDoneReceiving

    .method public instance void  RecvConnectionClosed() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1B 00 00 00 00 00 ) 
      // Code size       361 (0x169)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   20
      IL_0017:  beq        IL_00b7

      IL_001c:  br         IL_0152

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   27
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   27
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv ConnectionClosed when next message has "
      + "tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed NetStack.Contracts.TcpConnectionContract/Imp::ConnectionClosedPod0
      IL_00a0:  initobj    NetStack.Contracts.TcpConnectionContract/ConnectionClosed
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.3
      IL_00ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b2:  br         IL_0168

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.3
      IL_00b9:  ldarg.0
      IL_00ba:  volatile.
      IL_00bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00c1:  stloc.s    V_4
      IL_00c3:  ldloc.s    V_4
      IL_00c5:  brtrue     IL_00db

      IL_00ca:  ldarg.0
      IL_00cb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d0:  stloc.3
      IL_00d1:  ldarg.0
      IL_00d2:  volatile.
      IL_00d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00d9:  stloc.s    V_4
      IL_00db:  ldloc.s    V_4
      IL_00dd:  ldc.i4.0
      IL_00de:  ceq
      IL_00e0:  brfalse    IL_00fe

      IL_00e5:  ldloc.3
      IL_00e6:  brfalse    IL_00f6

      IL_00eb:  ldstr      "Peer is closed"
      IL_00f0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f5:  throw

      IL_00f6:  ldarg.0
      IL_00f7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fc:  br.s       IL_00b7

      IL_00fe:  ldarg.0
      IL_00ff:  ldc.i4.s   27
      IL_0101:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0106:  ldloc.s    V_4
      IL_0108:  ldc.i4.s   27
      IL_010a:  beq        IL_012c

      IL_010f:  ldstr      "can't recv ConnectionClosed when next message has "
      + "tag "
      IL_0114:  ldarg.0
      IL_0115:  volatile.
      IL_0117:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_011c:  box        [kernel]System.Int32
      IL_0121:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0126:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012b:  throw

      IL_012c:  ldarg.0
      IL_012d:  ldc.i4.0
      IL_012e:  volatile.
      IL_0130:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0135:  ldarg.0
      IL_0136:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed NetStack.Contracts.TcpConnectionContract/Imp::ConnectionClosedPod0
      IL_013b:  initobj    NetStack.Contracts.TcpConnectionContract/ConnectionClosed
      IL_0141:  ldarg.0
      IL_0142:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0147:  ldc.i4.3
      IL_0148:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014d:  br         IL_0168

      IL_0152:  ldstr      "can't recv ConnectionClosed in state "
      IL_0157:  ldarg.0
      IL_0158:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_015d:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0162:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0167:  throw

      IL_0168:  ret
    } // end of method Imp::RecvConnectionClosed

    .method public instance void  RecvNoData() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1C 00 00 00 00 00 ) 
      // Code size       363 (0x16b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   20
      IL_0017:  beq        IL_00b8

      IL_001c:  br         IL_0154

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   28
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   28
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv NoData when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/NoData NetStack.Contracts.TcpConnectionContract/Imp::NoDataPod0
      IL_00a0:  initobj    NetStack.Contracts.TcpConnectionContract/NoData
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.s   18
      IL_00ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b3:  br         IL_016a

      IL_00b8:  ldc.i4.0
      IL_00b9:  stloc.3
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00c2:  stloc.s    V_4
      IL_00c4:  ldloc.s    V_4
      IL_00c6:  brtrue     IL_00dc

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  ldc.i4.0
      IL_00df:  ceq
      IL_00e1:  brfalse    IL_00ff

      IL_00e6:  ldloc.3
      IL_00e7:  brfalse    IL_00f7

      IL_00ec:  ldstr      "Peer is closed"
      IL_00f1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ldarg.0
      IL_00f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fd:  br.s       IL_00b8

      IL_00ff:  ldarg.0
      IL_0100:  ldc.i4.s   28
      IL_0102:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0107:  ldloc.s    V_4
      IL_0109:  ldc.i4.s   28
      IL_010b:  beq        IL_012d

      IL_0110:  ldstr      "can't recv NoData when next message has tag "
      IL_0115:  ldarg.0
      IL_0116:  volatile.
      IL_0118:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_011d:  box        [kernel]System.Int32
      IL_0122:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0127:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ldarg.0
      IL_012e:  ldc.i4.0
      IL_012f:  volatile.
      IL_0131:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0136:  ldarg.0
      IL_0137:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/NoData NetStack.Contracts.TcpConnectionContract/Imp::NoDataPod0
      IL_013c:  initobj    NetStack.Contracts.TcpConnectionContract/NoData
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.s   28
      IL_014a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014f:  br         IL_016a

      IL_0154:  ldstr      "can't recv NoData in state "
      IL_0159:  ldarg.0
      IL_015a:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_015f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0164:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0169:  throw

      IL_016a:  ret
    } // end of method Imp::RecvNoData

    .method public instance void  RecvNoMoreData() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1D 00 00 00 00 00 ) 
      // Code size       695 (0x2b7)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  beq        IL_00c7

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   21
      IL_001f:  beq        IL_0162

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   20
      IL_0027:  beq        IL_0201

      IL_002c:  br         IL_02a0

      IL_0031:  ldc.i4.0
      IL_0032:  stloc.1
      IL_0033:  ldarg.0
      IL_0034:  volatile.
      IL_0036:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_003b:  stloc.2
      IL_003c:  ldloc.2
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldarg.0
      IL_0043:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0048:  stloc.1
      IL_0049:  ldarg.0
      IL_004a:  volatile.
      IL_004c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  ldc.i4.0
      IL_0054:  ceq
      IL_0056:  brfalse    IL_0074

      IL_005b:  ldloc.1
      IL_005c:  brfalse    IL_006c

      IL_0061:  ldstr      "Peer is closed"
      IL_0066:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_006b:  throw

      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0072:  br.s       IL_0031

      IL_0074:  ldarg.0
      IL_0075:  ldc.i4.s   29
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007c:  ldloc.2
      IL_007d:  ldc.i4.s   29
      IL_007f:  beq        IL_00a1

      IL_0084:  ldstr      "can't recv NoMoreData when next message has tag "
      IL_0089:  ldarg.0
      IL_008a:  volatile.
      IL_008c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0091:  box        [kernel]System.Int32
      IL_0096:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_009b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a0:  throw

      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData NetStack.Contracts.TcpConnectionContract/Imp::NoMoreDataPod0
      IL_00b0:  initobj    NetStack.Contracts.TcpConnectionContract/NoMoreData
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.3
      IL_00bd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c2:  br         IL_02b6

      IL_00c7:  ldc.i4.0
      IL_00c8:  stloc.3
      IL_00c9:  ldarg.0
      IL_00ca:  volatile.
      IL_00cc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00d1:  stloc.s    V_4
      IL_00d3:  ldloc.s    V_4
      IL_00d5:  brtrue     IL_00eb

      IL_00da:  ldarg.0
      IL_00db:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e0:  stloc.3
      IL_00e1:  ldarg.0
      IL_00e2:  volatile.
      IL_00e4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00e9:  stloc.s    V_4
      IL_00eb:  ldloc.s    V_4
      IL_00ed:  ldc.i4.0
      IL_00ee:  ceq
      IL_00f0:  brfalse    IL_010e

      IL_00f5:  ldloc.3
      IL_00f6:  brfalse    IL_0106

      IL_00fb:  ldstr      "Peer is closed"
      IL_0100:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0105:  throw

      IL_0106:  ldarg.0
      IL_0107:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_010c:  br.s       IL_00c7

      IL_010e:  ldarg.0
      IL_010f:  ldc.i4.s   29
      IL_0111:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0116:  ldloc.s    V_4
      IL_0118:  ldc.i4.s   29
      IL_011a:  beq        IL_013c

      IL_011f:  ldstr      "can't recv NoMoreData when next message has tag "
      IL_0124:  ldarg.0
      IL_0125:  volatile.
      IL_0127:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_012c:  box        [kernel]System.Int32
      IL_0131:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0136:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_013b:  throw

      IL_013c:  ldarg.0
      IL_013d:  ldc.i4.0
      IL_013e:  volatile.
      IL_0140:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0145:  ldarg.0
      IL_0146:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData NetStack.Contracts.TcpConnectionContract/Imp::NoMoreDataPod0
      IL_014b:  initobj    NetStack.Contracts.TcpConnectionContract/NoMoreData
      IL_0151:  ldarg.0
      IL_0152:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0157:  ldc.i4.3
      IL_0158:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_015d:  br         IL_02b6

      IL_0162:  ldc.i4.0
      IL_0163:  stloc.s    V_5
      IL_0165:  ldarg.0
      IL_0166:  volatile.
      IL_0168:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_016d:  stloc.s    V_6
      IL_016f:  ldloc.s    V_6
      IL_0171:  brtrue     IL_0188

      IL_0176:  ldarg.0
      IL_0177:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_017c:  stloc.s    V_5
      IL_017e:  ldarg.0
      IL_017f:  volatile.
      IL_0181:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0186:  stloc.s    V_6
      IL_0188:  ldloc.s    V_6
      IL_018a:  ldc.i4.0
      IL_018b:  ceq
      IL_018d:  brfalse    IL_01ac

      IL_0192:  ldloc.s    V_5
      IL_0194:  brfalse    IL_01a4

      IL_0199:  ldstr      "Peer is closed"
      IL_019e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01a3:  throw

      IL_01a4:  ldarg.0
      IL_01a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01aa:  br.s       IL_0162

      IL_01ac:  ldarg.0
      IL_01ad:  ldc.i4.s   29
      IL_01af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01b4:  ldloc.s    V_6
      IL_01b6:  ldc.i4.s   29
      IL_01b8:  beq        IL_01da

      IL_01bd:  ldstr      "can't recv NoMoreData when next message has tag "
      IL_01c2:  ldarg.0
      IL_01c3:  volatile.
      IL_01c5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01ca:  box        [kernel]System.Int32
      IL_01cf:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01d4:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d9:  throw

      IL_01da:  ldarg.0
      IL_01db:  ldc.i4.0
      IL_01dc:  volatile.
      IL_01de:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01e3:  ldarg.0
      IL_01e4:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData NetStack.Contracts.TcpConnectionContract/Imp::NoMoreDataPod0
      IL_01e9:  initobj    NetStack.Contracts.TcpConnectionContract/NoMoreData
      IL_01ef:  ldarg.0
      IL_01f0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01f5:  ldc.i4.s   9
      IL_01f7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01fc:  br         IL_02b6

      IL_0201:  ldc.i4.0
      IL_0202:  stloc.s    V_7
      IL_0204:  ldarg.0
      IL_0205:  volatile.
      IL_0207:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_020c:  stloc.s    V_8
      IL_020e:  ldloc.s    V_8
      IL_0210:  brtrue     IL_0227

      IL_0215:  ldarg.0
      IL_0216:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_021b:  stloc.s    V_7
      IL_021d:  ldarg.0
      IL_021e:  volatile.
      IL_0220:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0225:  stloc.s    V_8
      IL_0227:  ldloc.s    V_8
      IL_0229:  ldc.i4.0
      IL_022a:  ceq
      IL_022c:  brfalse    IL_024b

      IL_0231:  ldloc.s    V_7
      IL_0233:  brfalse    IL_0243

      IL_0238:  ldstr      "Peer is closed"
      IL_023d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0242:  throw

      IL_0243:  ldarg.0
      IL_0244:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0249:  br.s       IL_0201

      IL_024b:  ldarg.0
      IL_024c:  ldc.i4.s   29
      IL_024e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0253:  ldloc.s    V_8
      IL_0255:  ldc.i4.s   29
      IL_0257:  beq        IL_0279

      IL_025c:  ldstr      "can't recv NoMoreData when next message has tag "
      IL_0261:  ldarg.0
      IL_0262:  volatile.
      IL_0264:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0269:  box        [kernel]System.Int32
      IL_026e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0273:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0278:  throw

      IL_0279:  ldarg.0
      IL_027a:  ldc.i4.0
      IL_027b:  volatile.
      IL_027d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0282:  ldarg.0
      IL_0283:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData NetStack.Contracts.TcpConnectionContract/Imp::NoMoreDataPod0
      IL_0288:  initobj    NetStack.Contracts.TcpConnectionContract/NoMoreData
      IL_028e:  ldarg.0
      IL_028f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0294:  ldc.i4.s   9
      IL_0296:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_029b:  br         IL_02b6

      IL_02a0:  ldstr      "can't recv NoMoreData in state "
      IL_02a5:  ldarg.0
      IL_02a6:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_02ab:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02b0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02b5:  throw

      IL_02b6:  ret
    } // end of method Imp::RecvNoMoreData

    .method public instance void  RecvCantSend() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1E 00 00 00 00 00 ) 
      // Code size       361 (0x169)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0020

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.4
      IL_0016:  beq        IL_00b7

      IL_001b:  br         IL_0152

      IL_0020:  ldc.i4.0
      IL_0021:  stloc.1
      IL_0022:  ldarg.0
      IL_0023:  volatile.
      IL_0025:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_002a:  stloc.2
      IL_002b:  ldloc.2
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldarg.0
      IL_0032:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0037:  stloc.1
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0040:  stloc.2
      IL_0041:  ldloc.2
      IL_0042:  ldc.i4.0
      IL_0043:  ceq
      IL_0045:  brfalse    IL_0063

      IL_004a:  ldloc.1
      IL_004b:  brfalse    IL_005b

      IL_0050:  ldstr      "Peer is closed"
      IL_0055:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005a:  throw

      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0061:  br.s       IL_0020

      IL_0063:  ldarg.0
      IL_0064:  ldc.i4.s   30
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006b:  ldloc.2
      IL_006c:  ldc.i4.s   30
      IL_006e:  beq        IL_0090

      IL_0073:  ldstr      "can't recv CantSend when next message has tag "
      IL_0078:  ldarg.0
      IL_0079:  volatile.
      IL_007b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0080:  box        [kernel]System.Int32
      IL_0085:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_008f:  throw

      IL_0090:  ldarg.0
      IL_0091:  ldc.i4.0
      IL_0092:  volatile.
      IL_0094:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0099:  ldarg.0
      IL_009a:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CantSend NetStack.Contracts.TcpConnectionContract/Imp::CantSendPod0
      IL_009f:  initobj    NetStack.Contracts.TcpConnectionContract/CantSend
      IL_00a5:  ldarg.0
      IL_00a6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ab:  ldc.i4.s   18
      IL_00ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b2:  br         IL_0168

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.3
      IL_00b9:  ldarg.0
      IL_00ba:  volatile.
      IL_00bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00c1:  stloc.s    V_4
      IL_00c3:  ldloc.s    V_4
      IL_00c5:  brtrue     IL_00db

      IL_00ca:  ldarg.0
      IL_00cb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d0:  stloc.3
      IL_00d1:  ldarg.0
      IL_00d2:  volatile.
      IL_00d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00d9:  stloc.s    V_4
      IL_00db:  ldloc.s    V_4
      IL_00dd:  ldc.i4.0
      IL_00de:  ceq
      IL_00e0:  brfalse    IL_00fe

      IL_00e5:  ldloc.3
      IL_00e6:  brfalse    IL_00f6

      IL_00eb:  ldstr      "Peer is closed"
      IL_00f0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f5:  throw

      IL_00f6:  ldarg.0
      IL_00f7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fc:  br.s       IL_00b7

      IL_00fe:  ldarg.0
      IL_00ff:  ldc.i4.s   30
      IL_0101:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0106:  ldloc.s    V_4
      IL_0108:  ldc.i4.s   30
      IL_010a:  beq        IL_012c

      IL_010f:  ldstr      "can't recv CantSend when next message has tag "
      IL_0114:  ldarg.0
      IL_0115:  volatile.
      IL_0117:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_011c:  box        [kernel]System.Int32
      IL_0121:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0126:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012b:  throw

      IL_012c:  ldarg.0
      IL_012d:  ldc.i4.0
      IL_012e:  volatile.
      IL_0130:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0135:  ldarg.0
      IL_0136:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CantSend NetStack.Contracts.TcpConnectionContract/Imp::CantSendPod0
      IL_013b:  initobj    NetStack.Contracts.TcpConnectionContract/CantSend
      IL_0141:  ldarg.0
      IL_0142:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0147:  ldc.i4.3
      IL_0148:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014d:  br         IL_0168

      IL_0152:  ldstr      "can't recv CantSend in state "
      IL_0157:  ldarg.0
      IL_0158:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_015d:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0162:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0167:  throw

      IL_0168:  ret
    } // end of method Imp::RecvCantSend

    .method public instance void  RecvData([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1F 00 00 00 00 00 ) 
      // Code size       749 (0x2ed)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  beq        IL_00d5

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   21
      IL_001f:  beq        IL_017e

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   20
      IL_0027:  beq        IL_022a

      IL_002c:  br         IL_02d6

      IL_0031:  ldc.i4.0
      IL_0032:  stloc.1
      IL_0033:  ldarg.0
      IL_0034:  volatile.
      IL_0036:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_003b:  stloc.2
      IL_003c:  ldloc.2
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldarg.0
      IL_0043:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0048:  stloc.1
      IL_0049:  ldarg.0
      IL_004a:  volatile.
      IL_004c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  ldc.i4.0
      IL_0054:  ceq
      IL_0056:  brfalse    IL_0074

      IL_005b:  ldloc.1
      IL_005c:  brfalse    IL_006c

      IL_0061:  ldstr      "Peer is closed"
      IL_0066:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_006b:  throw

      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0072:  br.s       IL_0031

      IL_0074:  ldarg.0
      IL_0075:  ldc.i4.s   31
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007c:  ldloc.2
      IL_007d:  ldc.i4.s   31
      IL_007f:  beq        IL_00a1

      IL_0084:  ldstr      "can't recv Data when next message has tag "
      IL_0089:  ldarg.0
      IL_008a:  volatile.
      IL_008c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0091:  box        [kernel]System.Int32
      IL_0096:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_009b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a0:  throw

      IL_00a1:  ldarg.1
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_00a8:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_00ad:  stind.i
      IL_00ae:  ldarg.0
      IL_00af:  ldc.i4.0
      IL_00b0:  volatile.
      IL_00b2:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_00bd:  initobj    NetStack.Contracts.TcpConnectionContract/Data
      IL_00c3:  ldarg.0
      IL_00c4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c9:  ldc.i4.s   18
      IL_00cb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d0:  br         IL_02ec

      IL_00d5:  ldc.i4.0
      IL_00d6:  stloc.3
      IL_00d7:  ldarg.0
      IL_00d8:  volatile.
      IL_00da:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00df:  stloc.s    V_4
      IL_00e1:  ldloc.s    V_4
      IL_00e3:  brtrue     IL_00f9

      IL_00e8:  ldarg.0
      IL_00e9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ee:  stloc.3
      IL_00ef:  ldarg.0
      IL_00f0:  volatile.
      IL_00f2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00f7:  stloc.s    V_4
      IL_00f9:  ldloc.s    V_4
      IL_00fb:  ldc.i4.0
      IL_00fc:  ceq
      IL_00fe:  brfalse    IL_011c

      IL_0103:  ldloc.3
      IL_0104:  brfalse    IL_0114

      IL_0109:  ldstr      "Peer is closed"
      IL_010e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0113:  throw

      IL_0114:  ldarg.0
      IL_0115:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_011a:  br.s       IL_00d5

      IL_011c:  ldarg.0
      IL_011d:  ldc.i4.s   31
      IL_011f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0124:  ldloc.s    V_4
      IL_0126:  ldc.i4.s   31
      IL_0128:  beq        IL_014a

      IL_012d:  ldstr      "can't recv Data when next message has tag "
      IL_0132:  ldarg.0
      IL_0133:  volatile.
      IL_0135:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_013a:  box        [kernel]System.Int32
      IL_013f:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0144:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0149:  throw

      IL_014a:  ldarg.1
      IL_014b:  ldarg.0
      IL_014c:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_0151:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_0156:  stind.i
      IL_0157:  ldarg.0
      IL_0158:  ldc.i4.0
      IL_0159:  volatile.
      IL_015b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0160:  ldarg.0
      IL_0161:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_0166:  initobj    NetStack.Contracts.TcpConnectionContract/Data
      IL_016c:  ldarg.0
      IL_016d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0172:  ldc.i4.s   18
      IL_0174:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0179:  br         IL_02ec

      IL_017e:  ldc.i4.0
      IL_017f:  stloc.s    V_5
      IL_0181:  ldarg.0
      IL_0182:  volatile.
      IL_0184:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0189:  stloc.s    V_6
      IL_018b:  ldloc.s    V_6
      IL_018d:  brtrue     IL_01a4

      IL_0192:  ldarg.0
      IL_0193:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0198:  stloc.s    V_5
      IL_019a:  ldarg.0
      IL_019b:  volatile.
      IL_019d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01a2:  stloc.s    V_6
      IL_01a4:  ldloc.s    V_6
      IL_01a6:  ldc.i4.0
      IL_01a7:  ceq
      IL_01a9:  brfalse    IL_01c8

      IL_01ae:  ldloc.s    V_5
      IL_01b0:  brfalse    IL_01c0

      IL_01b5:  ldstr      "Peer is closed"
      IL_01ba:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01bf:  throw

      IL_01c0:  ldarg.0
      IL_01c1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01c6:  br.s       IL_017e

      IL_01c8:  ldarg.0
      IL_01c9:  ldc.i4.s   31
      IL_01cb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01d0:  ldloc.s    V_6
      IL_01d2:  ldc.i4.s   31
      IL_01d4:  beq        IL_01f6

      IL_01d9:  ldstr      "can't recv Data when next message has tag "
      IL_01de:  ldarg.0
      IL_01df:  volatile.
      IL_01e1:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01e6:  box        [kernel]System.Int32
      IL_01eb:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01f0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01f5:  throw

      IL_01f6:  ldarg.1
      IL_01f7:  ldarg.0
      IL_01f8:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_01fd:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_0202:  stind.i
      IL_0203:  ldarg.0
      IL_0204:  ldc.i4.0
      IL_0205:  volatile.
      IL_0207:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_020c:  ldarg.0
      IL_020d:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_0212:  initobj    NetStack.Contracts.TcpConnectionContract/Data
      IL_0218:  ldarg.0
      IL_0219:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_021e:  ldc.i4.s   28
      IL_0220:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0225:  br         IL_02ec

      IL_022a:  ldc.i4.0
      IL_022b:  stloc.s    V_7
      IL_022d:  ldarg.0
      IL_022e:  volatile.
      IL_0230:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0235:  stloc.s    V_8
      IL_0237:  ldloc.s    V_8
      IL_0239:  brtrue     IL_0250

      IL_023e:  ldarg.0
      IL_023f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0244:  stloc.s    V_7
      IL_0246:  ldarg.0
      IL_0247:  volatile.
      IL_0249:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_024e:  stloc.s    V_8
      IL_0250:  ldloc.s    V_8
      IL_0252:  ldc.i4.0
      IL_0253:  ceq
      IL_0255:  brfalse    IL_0274

      IL_025a:  ldloc.s    V_7
      IL_025c:  brfalse    IL_026c

      IL_0261:  ldstr      "Peer is closed"
      IL_0266:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_026b:  throw

      IL_026c:  ldarg.0
      IL_026d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0272:  br.s       IL_022a

      IL_0274:  ldarg.0
      IL_0275:  ldc.i4.s   31
      IL_0277:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_027c:  ldloc.s    V_8
      IL_027e:  ldc.i4.s   31
      IL_0280:  beq        IL_02a2

      IL_0285:  ldstr      "can't recv Data when next message has tag "
      IL_028a:  ldarg.0
      IL_028b:  volatile.
      IL_028d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0292:  box        [kernel]System.Int32
      IL_0297:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_029c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02a1:  throw

      IL_02a2:  ldarg.1
      IL_02a3:  ldarg.0
      IL_02a4:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_02a9:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_02ae:  stind.i
      IL_02af:  ldarg.0
      IL_02b0:  ldc.i4.0
      IL_02b1:  volatile.
      IL_02b3:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02b8:  ldarg.0
      IL_02b9:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_02be:  initobj    NetStack.Contracts.TcpConnectionContract/Data
      IL_02c4:  ldarg.0
      IL_02c5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02ca:  ldc.i4.s   28
      IL_02cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02d1:  br         IL_02ec

      IL_02d6:  ldstr      "can't recv Data in state "
      IL_02db:  ldarg.0
      IL_02dc:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_02e1:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02e6:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02eb:  throw

      IL_02ec:  ret
    } // end of method Imp::RecvData

    .method public instance void  RecvDataIsAvailable([out] bool& isAvailable) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 20 00 00 00 00 00 )                         // .. .....
      // Code size       397 (0x18d)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   27
      IL_0017:  beq        IL_00c9

      IL_001c:  br         IL_0176

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   32
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   32
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv DataIsAvailable when next message has t"
      + "ag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::DataIsAvailablePod0
      IL_0098:  ldfld      bool NetStack.Contracts.TcpConnectionContract/DataIsAvailable::isAvailable
      IL_009d:  stobj      [kernel]System.Boolean
      IL_00a2:  ldarg.0
      IL_00a3:  ldc.i4.0
      IL_00a4:  volatile.
      IL_00a6:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::DataIsAvailablePod0
      IL_00b1:  initobj    NetStack.Contracts.TcpConnectionContract/DataIsAvailable
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bd:  ldc.i4.s   16
      IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c4:  br         IL_018c

      IL_00c9:  ldc.i4.0
      IL_00ca:  stloc.3
      IL_00cb:  ldarg.0
      IL_00cc:  volatile.
      IL_00ce:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00d3:  stloc.s    V_4
      IL_00d5:  ldloc.s    V_4
      IL_00d7:  brtrue     IL_00ed

      IL_00dc:  ldarg.0
      IL_00dd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e2:  stloc.3
      IL_00e3:  ldarg.0
      IL_00e4:  volatile.
      IL_00e6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_00eb:  stloc.s    V_4
      IL_00ed:  ldloc.s    V_4
      IL_00ef:  ldc.i4.0
      IL_00f0:  ceq
      IL_00f2:  brfalse    IL_0110

      IL_00f7:  ldloc.3
      IL_00f8:  brfalse    IL_0108

      IL_00fd:  ldstr      "Peer is closed"
      IL_0102:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0107:  throw

      IL_0108:  ldarg.0
      IL_0109:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_010e:  br.s       IL_00c9

      IL_0110:  ldarg.0
      IL_0111:  ldc.i4.s   32
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0118:  ldloc.s    V_4
      IL_011a:  ldc.i4.s   32
      IL_011c:  beq        IL_013e

      IL_0121:  ldstr      "can't recv DataIsAvailable when next message has t"
      + "ag "
      IL_0126:  ldarg.0
      IL_0127:  volatile.
      IL_0129:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_012e:  box        [kernel]System.Int32
      IL_0133:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0138:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_013d:  throw

      IL_013e:  ldarg.1
      IL_013f:  ldarg.0
      IL_0140:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::DataIsAvailablePod0
      IL_0145:  ldfld      bool NetStack.Contracts.TcpConnectionContract/DataIsAvailable::isAvailable
      IL_014a:  stobj      [kernel]System.Boolean
      IL_014f:  ldarg.0
      IL_0150:  ldc.i4.0
      IL_0151:  volatile.
      IL_0153:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0158:  ldarg.0
      IL_0159:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::DataIsAvailablePod0
      IL_015e:  initobj    NetStack.Contracts.TcpConnectionContract/DataIsAvailable
      IL_0164:  ldarg.0
      IL_0165:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_016a:  ldc.i4.s   26
      IL_016c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0171:  br         IL_018c

      IL_0176:  ldstr      "can't recv DataIsAvailable in state "
      IL_017b:  ldarg.0
      IL_017c:  call       instance string NetStack.Contracts.TcpConnectionContract/Imp::CurrentState()
      IL_0181:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0186:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_018b:  throw

      IL_018c:  ret
    } // end of method Imp::RecvDataIsAvailable

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.TcpConnectionContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.TcpConnectionContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.TcpConnectionContract/Imp
      IL_0022:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       2900 (0xb54)
      .maxstack  39
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               bool V_31,
               int32 V_32,
               bool V_33,
               int32 V_34,
               bool V_35,
               int32 V_36,
               bool V_37,
               int32 V_38,
               bool V_39,
               int32 V_40,
               bool V_41,
               int32 V_42,
               bool V_43,
               int32 V_44,
               bool V_45,
               int32 V_46,
               bool V_47,
               int32 V_48,
               bool V_49,
               int32 V_50,
               bool V_51,
               int32 V_52,
               bool V_53,
               int32 V_54,
               bool V_55,
               int32 V_56,
               bool V_57,
               int32 V_58,
               bool V_59,
               int32 V_60,
               bool V_61,
               int32 V_62,
               bool V_63,
               int32 V_64,
               bool V_65,
               int32 V_66,
               bool V_67,
               int32 V_68,
               bool V_69,
               int32 V_70,
               bool V_71,
               int32 V_72,
               bool V_73,
               int32 V_74,
               int32 V_75)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_012d

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.4
      IL_0017:  beq        IL_016d

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.5
      IL_001e:  beq        IL_01b5

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.6
      IL_0025:  beq        IL_01fd

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_0245

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.8
      IL_0033:  beq        IL_028d

      IL_0038:  ldloc.1
      IL_0039:  ldc.i4.s   9
      IL_003b:  beq        IL_02d5

      IL_0040:  ldloc.1
      IL_0041:  ldc.i4.s   10
      IL_0043:  beq        IL_031d

      IL_0048:  ldloc.1
      IL_0049:  ldc.i4.s   11
      IL_004b:  beq        IL_0365

      IL_0050:  ldloc.1
      IL_0051:  ldc.i4.s   12
      IL_0053:  beq        IL_03ad

      IL_0058:  ldloc.1
      IL_0059:  ldc.i4.s   13
      IL_005b:  beq        IL_03f5

      IL_0060:  ldloc.1
      IL_0061:  ldc.i4.s   14
      IL_0063:  beq        IL_043d

      IL_0068:  ldloc.1
      IL_0069:  ldc.i4.s   15
      IL_006b:  beq        IL_0485

      IL_0070:  ldloc.1
      IL_0071:  ldc.i4.s   17
      IL_0073:  beq        IL_04cd

      IL_0078:  ldloc.1
      IL_0079:  ldc.i4.s   18
      IL_007b:  beq        IL_0515

      IL_0080:  ldloc.1
      IL_0081:  ldc.i4.s   19
      IL_0083:  beq        IL_055d

      IL_0088:  ldloc.1
      IL_0089:  ldc.i4.s   20
      IL_008b:  beq        IL_05a5

      IL_0090:  ldloc.1
      IL_0091:  ldc.i4.s   21
      IL_0093:  beq        IL_05ed

      IL_0098:  ldloc.1
      IL_0099:  ldc.i4.s   22
      IL_009b:  beq        IL_0635

      IL_00a0:  ldloc.1
      IL_00a1:  ldc.i4.s   23
      IL_00a3:  beq        IL_067d

      IL_00a8:  ldloc.1
      IL_00a9:  ldc.i4.s   24
      IL_00ab:  beq        IL_06c5

      IL_00b0:  ldloc.1
      IL_00b1:  ldc.i4.s   25
      IL_00b3:  beq        IL_070d

      IL_00b8:  ldloc.1
      IL_00b9:  ldc.i4.s   27
      IL_00bb:  beq        IL_0755

      IL_00c0:  ldloc.1
      IL_00c1:  ldc.i4.s   28
      IL_00c3:  beq        IL_079d

      IL_00c8:  ldloc.1
      IL_00c9:  ldc.i4.s   29
      IL_00cb:  beq        IL_07e5

      IL_00d0:  ldloc.1
      IL_00d1:  ldc.i4.s   30
      IL_00d3:  beq        IL_082d

      IL_00d8:  ldloc.1
      IL_00d9:  ldc.i4.s   31
      IL_00db:  beq        IL_0875

      IL_00e0:  ldloc.1
      IL_00e1:  ldc.i4.s   32
      IL_00e3:  beq        IL_08bd

      IL_00e8:  ldloc.1
      IL_00e9:  ldc.i4.s   33
      IL_00eb:  beq        IL_0905

      IL_00f0:  ldloc.1
      IL_00f1:  ldc.i4.s   34
      IL_00f3:  beq        IL_094d

      IL_00f8:  ldloc.1
      IL_00f9:  ldc.i4.s   35
      IL_00fb:  beq        IL_0995

      IL_0100:  ldloc.1
      IL_0101:  ldc.i4.s   36
      IL_0103:  beq        IL_09dd

      IL_0108:  ldloc.1
      IL_0109:  ldc.i4.s   37
      IL_010b:  beq        IL_0a25

      IL_0110:  ldloc.1
      IL_0111:  ldc.i4.s   38
      IL_0113:  beq        IL_0a6d

      IL_0118:  ldloc.1
      IL_0119:  ldc.i4.s   39
      IL_011b:  beq        IL_0ab5

      IL_0120:  ldloc.1
      IL_0121:  ldc.i4.s   40
      IL_0123:  beq        IL_0afd

      IL_0128:  br         IL_0b45

      IL_012d:  ldc.i4.0
      IL_012e:  stloc.2
      IL_012f:  ldarg.0
      IL_0130:  volatile.
      IL_0132:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0137:  stloc.3
      IL_0138:  ldloc.3
      IL_0139:  brtrue     IL_014e

      IL_013e:  ldarg.0
      IL_013f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0144:  stloc.2
      IL_0145:  ldarg.0
      IL_0146:  volatile.
      IL_0148:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_014d:  stloc.3
      IL_014e:  ldloc.3
      IL_014f:  ldc.i4.0
      IL_0150:  ceq
      IL_0152:  brfalse    IL_0165

      IL_0157:  ldloc.2
      IL_0158:  brfalse    IL_0165

      IL_015d:  ldc.i4.m1
      IL_015e:  stloc.s    V_4
      IL_0160:  br         IL_0b4d

      IL_0165:  ldloc.3
      IL_0166:  stloc.s    V_4
      IL_0168:  br         IL_0b4d

      IL_016d:  ldc.i4.0
      IL_016e:  stloc.s    V_5
      IL_0170:  ldarg.0
      IL_0171:  volatile.
      IL_0173:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0178:  stloc.s    V_6
      IL_017a:  ldloc.s    V_6
      IL_017c:  brtrue     IL_0193

      IL_0181:  ldarg.0
      IL_0182:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0187:  stloc.s    V_5
      IL_0189:  ldarg.0
      IL_018a:  volatile.
      IL_018c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0191:  stloc.s    V_6
      IL_0193:  ldloc.s    V_6
      IL_0195:  ldc.i4.0
      IL_0196:  ceq
      IL_0198:  brfalse    IL_01ac

      IL_019d:  ldloc.s    V_5
      IL_019f:  brfalse    IL_01ac

      IL_01a4:  ldc.i4.m1
      IL_01a5:  stloc.s    V_4
      IL_01a7:  br         IL_0b4d

      IL_01ac:  ldloc.s    V_6
      IL_01ae:  stloc.s    V_4
      IL_01b0:  br         IL_0b4d

      IL_01b5:  ldc.i4.0
      IL_01b6:  stloc.s    V_7
      IL_01b8:  ldarg.0
      IL_01b9:  volatile.
      IL_01bb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01c0:  stloc.s    V_8
      IL_01c2:  ldloc.s    V_8
      IL_01c4:  brtrue     IL_01db

      IL_01c9:  ldarg.0
      IL_01ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01cf:  stloc.s    V_7
      IL_01d1:  ldarg.0
      IL_01d2:  volatile.
      IL_01d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_01d9:  stloc.s    V_8
      IL_01db:  ldloc.s    V_8
      IL_01dd:  ldc.i4.0
      IL_01de:  ceq
      IL_01e0:  brfalse    IL_01f4

      IL_01e5:  ldloc.s    V_7
      IL_01e7:  brfalse    IL_01f4

      IL_01ec:  ldc.i4.m1
      IL_01ed:  stloc.s    V_4
      IL_01ef:  br         IL_0b4d

      IL_01f4:  ldloc.s    V_8
      IL_01f6:  stloc.s    V_4
      IL_01f8:  br         IL_0b4d

      IL_01fd:  ldc.i4.0
      IL_01fe:  stloc.s    V_9
      IL_0200:  ldarg.0
      IL_0201:  volatile.
      IL_0203:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0208:  stloc.s    V_10
      IL_020a:  ldloc.s    V_10
      IL_020c:  brtrue     IL_0223

      IL_0211:  ldarg.0
      IL_0212:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0217:  stloc.s    V_9
      IL_0219:  ldarg.0
      IL_021a:  volatile.
      IL_021c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0221:  stloc.s    V_10
      IL_0223:  ldloc.s    V_10
      IL_0225:  ldc.i4.0
      IL_0226:  ceq
      IL_0228:  brfalse    IL_023c

      IL_022d:  ldloc.s    V_9
      IL_022f:  brfalse    IL_023c

      IL_0234:  ldc.i4.m1
      IL_0235:  stloc.s    V_4
      IL_0237:  br         IL_0b4d

      IL_023c:  ldloc.s    V_10
      IL_023e:  stloc.s    V_4
      IL_0240:  br         IL_0b4d

      IL_0245:  ldc.i4.0
      IL_0246:  stloc.s    V_11
      IL_0248:  ldarg.0
      IL_0249:  volatile.
      IL_024b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0250:  stloc.s    V_12
      IL_0252:  ldloc.s    V_12
      IL_0254:  brtrue     IL_026b

      IL_0259:  ldarg.0
      IL_025a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_025f:  stloc.s    V_11
      IL_0261:  ldarg.0
      IL_0262:  volatile.
      IL_0264:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0269:  stloc.s    V_12
      IL_026b:  ldloc.s    V_12
      IL_026d:  ldc.i4.0
      IL_026e:  ceq
      IL_0270:  brfalse    IL_0284

      IL_0275:  ldloc.s    V_11
      IL_0277:  brfalse    IL_0284

      IL_027c:  ldc.i4.m1
      IL_027d:  stloc.s    V_4
      IL_027f:  br         IL_0b4d

      IL_0284:  ldloc.s    V_12
      IL_0286:  stloc.s    V_4
      IL_0288:  br         IL_0b4d

      IL_028d:  ldc.i4.0
      IL_028e:  stloc.s    V_13
      IL_0290:  ldarg.0
      IL_0291:  volatile.
      IL_0293:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0298:  stloc.s    V_14
      IL_029a:  ldloc.s    V_14
      IL_029c:  brtrue     IL_02b3

      IL_02a1:  ldarg.0
      IL_02a2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02a7:  stloc.s    V_13
      IL_02a9:  ldarg.0
      IL_02aa:  volatile.
      IL_02ac:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02b1:  stloc.s    V_14
      IL_02b3:  ldloc.s    V_14
      IL_02b5:  ldc.i4.0
      IL_02b6:  ceq
      IL_02b8:  brfalse    IL_02cc

      IL_02bd:  ldloc.s    V_13
      IL_02bf:  brfalse    IL_02cc

      IL_02c4:  ldc.i4.m1
      IL_02c5:  stloc.s    V_4
      IL_02c7:  br         IL_0b4d

      IL_02cc:  ldloc.s    V_14
      IL_02ce:  stloc.s    V_4
      IL_02d0:  br         IL_0b4d

      IL_02d5:  ldc.i4.0
      IL_02d6:  stloc.s    V_15
      IL_02d8:  ldarg.0
      IL_02d9:  volatile.
      IL_02db:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02e0:  stloc.s    V_16
      IL_02e2:  ldloc.s    V_16
      IL_02e4:  brtrue     IL_02fb

      IL_02e9:  ldarg.0
      IL_02ea:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02ef:  stloc.s    V_15
      IL_02f1:  ldarg.0
      IL_02f2:  volatile.
      IL_02f4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_02f9:  stloc.s    V_16
      IL_02fb:  ldloc.s    V_16
      IL_02fd:  ldc.i4.0
      IL_02fe:  ceq
      IL_0300:  brfalse    IL_0314

      IL_0305:  ldloc.s    V_15
      IL_0307:  brfalse    IL_0314

      IL_030c:  ldc.i4.m1
      IL_030d:  stloc.s    V_4
      IL_030f:  br         IL_0b4d

      IL_0314:  ldloc.s    V_16
      IL_0316:  stloc.s    V_4
      IL_0318:  br         IL_0b4d

      IL_031d:  ldc.i4.0
      IL_031e:  stloc.s    V_17
      IL_0320:  ldarg.0
      IL_0321:  volatile.
      IL_0323:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0328:  stloc.s    V_18
      IL_032a:  ldloc.s    V_18
      IL_032c:  brtrue     IL_0343

      IL_0331:  ldarg.0
      IL_0332:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0337:  stloc.s    V_17
      IL_0339:  ldarg.0
      IL_033a:  volatile.
      IL_033c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0341:  stloc.s    V_18
      IL_0343:  ldloc.s    V_18
      IL_0345:  ldc.i4.0
      IL_0346:  ceq
      IL_0348:  brfalse    IL_035c

      IL_034d:  ldloc.s    V_17
      IL_034f:  brfalse    IL_035c

      IL_0354:  ldc.i4.m1
      IL_0355:  stloc.s    V_4
      IL_0357:  br         IL_0b4d

      IL_035c:  ldloc.s    V_18
      IL_035e:  stloc.s    V_4
      IL_0360:  br         IL_0b4d

      IL_0365:  ldc.i4.0
      IL_0366:  stloc.s    V_19
      IL_0368:  ldarg.0
      IL_0369:  volatile.
      IL_036b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0370:  stloc.s    V_20
      IL_0372:  ldloc.s    V_20
      IL_0374:  brtrue     IL_038b

      IL_0379:  ldarg.0
      IL_037a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_037f:  stloc.s    V_19
      IL_0381:  ldarg.0
      IL_0382:  volatile.
      IL_0384:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0389:  stloc.s    V_20
      IL_038b:  ldloc.s    V_20
      IL_038d:  ldc.i4.0
      IL_038e:  ceq
      IL_0390:  brfalse    IL_03a4

      IL_0395:  ldloc.s    V_19
      IL_0397:  brfalse    IL_03a4

      IL_039c:  ldc.i4.m1
      IL_039d:  stloc.s    V_4
      IL_039f:  br         IL_0b4d

      IL_03a4:  ldloc.s    V_20
      IL_03a6:  stloc.s    V_4
      IL_03a8:  br         IL_0b4d

      IL_03ad:  ldc.i4.0
      IL_03ae:  stloc.s    V_21
      IL_03b0:  ldarg.0
      IL_03b1:  volatile.
      IL_03b3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_03b8:  stloc.s    V_22
      IL_03ba:  ldloc.s    V_22
      IL_03bc:  brtrue     IL_03d3

      IL_03c1:  ldarg.0
      IL_03c2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03c7:  stloc.s    V_21
      IL_03c9:  ldarg.0
      IL_03ca:  volatile.
      IL_03cc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_03d1:  stloc.s    V_22
      IL_03d3:  ldloc.s    V_22
      IL_03d5:  ldc.i4.0
      IL_03d6:  ceq
      IL_03d8:  brfalse    IL_03ec

      IL_03dd:  ldloc.s    V_21
      IL_03df:  brfalse    IL_03ec

      IL_03e4:  ldc.i4.m1
      IL_03e5:  stloc.s    V_4
      IL_03e7:  br         IL_0b4d

      IL_03ec:  ldloc.s    V_22
      IL_03ee:  stloc.s    V_4
      IL_03f0:  br         IL_0b4d

      IL_03f5:  ldc.i4.0
      IL_03f6:  stloc.s    V_23
      IL_03f8:  ldarg.0
      IL_03f9:  volatile.
      IL_03fb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0400:  stloc.s    V_24
      IL_0402:  ldloc.s    V_24
      IL_0404:  brtrue     IL_041b

      IL_0409:  ldarg.0
      IL_040a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_040f:  stloc.s    V_23
      IL_0411:  ldarg.0
      IL_0412:  volatile.
      IL_0414:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0419:  stloc.s    V_24
      IL_041b:  ldloc.s    V_24
      IL_041d:  ldc.i4.0
      IL_041e:  ceq
      IL_0420:  brfalse    IL_0434

      IL_0425:  ldloc.s    V_23
      IL_0427:  brfalse    IL_0434

      IL_042c:  ldc.i4.m1
      IL_042d:  stloc.s    V_4
      IL_042f:  br         IL_0b4d

      IL_0434:  ldloc.s    V_24
      IL_0436:  stloc.s    V_4
      IL_0438:  br         IL_0b4d

      IL_043d:  ldc.i4.0
      IL_043e:  stloc.s    V_25
      IL_0440:  ldarg.0
      IL_0441:  volatile.
      IL_0443:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0448:  stloc.s    V_26
      IL_044a:  ldloc.s    V_26
      IL_044c:  brtrue     IL_0463

      IL_0451:  ldarg.0
      IL_0452:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0457:  stloc.s    V_25
      IL_0459:  ldarg.0
      IL_045a:  volatile.
      IL_045c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0461:  stloc.s    V_26
      IL_0463:  ldloc.s    V_26
      IL_0465:  ldc.i4.0
      IL_0466:  ceq
      IL_0468:  brfalse    IL_047c

      IL_046d:  ldloc.s    V_25
      IL_046f:  brfalse    IL_047c

      IL_0474:  ldc.i4.m1
      IL_0475:  stloc.s    V_4
      IL_0477:  br         IL_0b4d

      IL_047c:  ldloc.s    V_26
      IL_047e:  stloc.s    V_4
      IL_0480:  br         IL_0b4d

      IL_0485:  ldc.i4.0
      IL_0486:  stloc.s    V_27
      IL_0488:  ldarg.0
      IL_0489:  volatile.
      IL_048b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0490:  stloc.s    V_28
      IL_0492:  ldloc.s    V_28
      IL_0494:  brtrue     IL_04ab

      IL_0499:  ldarg.0
      IL_049a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_049f:  stloc.s    V_27
      IL_04a1:  ldarg.0
      IL_04a2:  volatile.
      IL_04a4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_04a9:  stloc.s    V_28
      IL_04ab:  ldloc.s    V_28
      IL_04ad:  ldc.i4.0
      IL_04ae:  ceq
      IL_04b0:  brfalse    IL_04c4

      IL_04b5:  ldloc.s    V_27
      IL_04b7:  brfalse    IL_04c4

      IL_04bc:  ldc.i4.m1
      IL_04bd:  stloc.s    V_4
      IL_04bf:  br         IL_0b4d

      IL_04c4:  ldloc.s    V_28
      IL_04c6:  stloc.s    V_4
      IL_04c8:  br         IL_0b4d

      IL_04cd:  ldc.i4.0
      IL_04ce:  stloc.s    V_29
      IL_04d0:  ldarg.0
      IL_04d1:  volatile.
      IL_04d3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_04d8:  stloc.s    V_30
      IL_04da:  ldloc.s    V_30
      IL_04dc:  brtrue     IL_04f3

      IL_04e1:  ldarg.0
      IL_04e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04e7:  stloc.s    V_29
      IL_04e9:  ldarg.0
      IL_04ea:  volatile.
      IL_04ec:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_04f1:  stloc.s    V_30
      IL_04f3:  ldloc.s    V_30
      IL_04f5:  ldc.i4.0
      IL_04f6:  ceq
      IL_04f8:  brfalse    IL_050c

      IL_04fd:  ldloc.s    V_29
      IL_04ff:  brfalse    IL_050c

      IL_0504:  ldc.i4.m1
      IL_0505:  stloc.s    V_4
      IL_0507:  br         IL_0b4d

      IL_050c:  ldloc.s    V_30
      IL_050e:  stloc.s    V_4
      IL_0510:  br         IL_0b4d

      IL_0515:  ldc.i4.0
      IL_0516:  stloc.s    V_31
      IL_0518:  ldarg.0
      IL_0519:  volatile.
      IL_051b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0520:  stloc.s    V_32
      IL_0522:  ldloc.s    V_32
      IL_0524:  brtrue     IL_053b

      IL_0529:  ldarg.0
      IL_052a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_052f:  stloc.s    V_31
      IL_0531:  ldarg.0
      IL_0532:  volatile.
      IL_0534:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0539:  stloc.s    V_32
      IL_053b:  ldloc.s    V_32
      IL_053d:  ldc.i4.0
      IL_053e:  ceq
      IL_0540:  brfalse    IL_0554

      IL_0545:  ldloc.s    V_31
      IL_0547:  brfalse    IL_0554

      IL_054c:  ldc.i4.m1
      IL_054d:  stloc.s    V_4
      IL_054f:  br         IL_0b4d

      IL_0554:  ldloc.s    V_32
      IL_0556:  stloc.s    V_4
      IL_0558:  br         IL_0b4d

      IL_055d:  ldc.i4.0
      IL_055e:  stloc.s    V_33
      IL_0560:  ldarg.0
      IL_0561:  volatile.
      IL_0563:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0568:  stloc.s    V_34
      IL_056a:  ldloc.s    V_34
      IL_056c:  brtrue     IL_0583

      IL_0571:  ldarg.0
      IL_0572:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0577:  stloc.s    V_33
      IL_0579:  ldarg.0
      IL_057a:  volatile.
      IL_057c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0581:  stloc.s    V_34
      IL_0583:  ldloc.s    V_34
      IL_0585:  ldc.i4.0
      IL_0586:  ceq
      IL_0588:  brfalse    IL_059c

      IL_058d:  ldloc.s    V_33
      IL_058f:  brfalse    IL_059c

      IL_0594:  ldc.i4.m1
      IL_0595:  stloc.s    V_4
      IL_0597:  br         IL_0b4d

      IL_059c:  ldloc.s    V_34
      IL_059e:  stloc.s    V_4
      IL_05a0:  br         IL_0b4d

      IL_05a5:  ldc.i4.0
      IL_05a6:  stloc.s    V_35
      IL_05a8:  ldarg.0
      IL_05a9:  volatile.
      IL_05ab:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_05b0:  stloc.s    V_36
      IL_05b2:  ldloc.s    V_36
      IL_05b4:  brtrue     IL_05cb

      IL_05b9:  ldarg.0
      IL_05ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_05bf:  stloc.s    V_35
      IL_05c1:  ldarg.0
      IL_05c2:  volatile.
      IL_05c4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_05c9:  stloc.s    V_36
      IL_05cb:  ldloc.s    V_36
      IL_05cd:  ldc.i4.0
      IL_05ce:  ceq
      IL_05d0:  brfalse    IL_05e4

      IL_05d5:  ldloc.s    V_35
      IL_05d7:  brfalse    IL_05e4

      IL_05dc:  ldc.i4.m1
      IL_05dd:  stloc.s    V_4
      IL_05df:  br         IL_0b4d

      IL_05e4:  ldloc.s    V_36
      IL_05e6:  stloc.s    V_4
      IL_05e8:  br         IL_0b4d

      IL_05ed:  ldc.i4.0
      IL_05ee:  stloc.s    V_37
      IL_05f0:  ldarg.0
      IL_05f1:  volatile.
      IL_05f3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_05f8:  stloc.s    V_38
      IL_05fa:  ldloc.s    V_38
      IL_05fc:  brtrue     IL_0613

      IL_0601:  ldarg.0
      IL_0602:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0607:  stloc.s    V_37
      IL_0609:  ldarg.0
      IL_060a:  volatile.
      IL_060c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0611:  stloc.s    V_38
      IL_0613:  ldloc.s    V_38
      IL_0615:  ldc.i4.0
      IL_0616:  ceq
      IL_0618:  brfalse    IL_062c

      IL_061d:  ldloc.s    V_37
      IL_061f:  brfalse    IL_062c

      IL_0624:  ldc.i4.m1
      IL_0625:  stloc.s    V_4
      IL_0627:  br         IL_0b4d

      IL_062c:  ldloc.s    V_38
      IL_062e:  stloc.s    V_4
      IL_0630:  br         IL_0b4d

      IL_0635:  ldc.i4.0
      IL_0636:  stloc.s    V_39
      IL_0638:  ldarg.0
      IL_0639:  volatile.
      IL_063b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0640:  stloc.s    V_40
      IL_0642:  ldloc.s    V_40
      IL_0644:  brtrue     IL_065b

      IL_0649:  ldarg.0
      IL_064a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_064f:  stloc.s    V_39
      IL_0651:  ldarg.0
      IL_0652:  volatile.
      IL_0654:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0659:  stloc.s    V_40
      IL_065b:  ldloc.s    V_40
      IL_065d:  ldc.i4.0
      IL_065e:  ceq
      IL_0660:  brfalse    IL_0674

      IL_0665:  ldloc.s    V_39
      IL_0667:  brfalse    IL_0674

      IL_066c:  ldc.i4.m1
      IL_066d:  stloc.s    V_4
      IL_066f:  br         IL_0b4d

      IL_0674:  ldloc.s    V_40
      IL_0676:  stloc.s    V_4
      IL_0678:  br         IL_0b4d

      IL_067d:  ldc.i4.0
      IL_067e:  stloc.s    V_41
      IL_0680:  ldarg.0
      IL_0681:  volatile.
      IL_0683:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0688:  stloc.s    V_42
      IL_068a:  ldloc.s    V_42
      IL_068c:  brtrue     IL_06a3

      IL_0691:  ldarg.0
      IL_0692:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0697:  stloc.s    V_41
      IL_0699:  ldarg.0
      IL_069a:  volatile.
      IL_069c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_06a1:  stloc.s    V_42
      IL_06a3:  ldloc.s    V_42
      IL_06a5:  ldc.i4.0
      IL_06a6:  ceq
      IL_06a8:  brfalse    IL_06bc

      IL_06ad:  ldloc.s    V_41
      IL_06af:  brfalse    IL_06bc

      IL_06b4:  ldc.i4.m1
      IL_06b5:  stloc.s    V_4
      IL_06b7:  br         IL_0b4d

      IL_06bc:  ldloc.s    V_42
      IL_06be:  stloc.s    V_4
      IL_06c0:  br         IL_0b4d

      IL_06c5:  ldc.i4.0
      IL_06c6:  stloc.s    V_43
      IL_06c8:  ldarg.0
      IL_06c9:  volatile.
      IL_06cb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_06d0:  stloc.s    V_44
      IL_06d2:  ldloc.s    V_44
      IL_06d4:  brtrue     IL_06eb

      IL_06d9:  ldarg.0
      IL_06da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06df:  stloc.s    V_43
      IL_06e1:  ldarg.0
      IL_06e2:  volatile.
      IL_06e4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_06e9:  stloc.s    V_44
      IL_06eb:  ldloc.s    V_44
      IL_06ed:  ldc.i4.0
      IL_06ee:  ceq
      IL_06f0:  brfalse    IL_0704

      IL_06f5:  ldloc.s    V_43
      IL_06f7:  brfalse    IL_0704

      IL_06fc:  ldc.i4.m1
      IL_06fd:  stloc.s    V_4
      IL_06ff:  br         IL_0b4d

      IL_0704:  ldloc.s    V_44
      IL_0706:  stloc.s    V_4
      IL_0708:  br         IL_0b4d

      IL_070d:  ldc.i4.0
      IL_070e:  stloc.s    V_45
      IL_0710:  ldarg.0
      IL_0711:  volatile.
      IL_0713:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0718:  stloc.s    V_46
      IL_071a:  ldloc.s    V_46
      IL_071c:  brtrue     IL_0733

      IL_0721:  ldarg.0
      IL_0722:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0727:  stloc.s    V_45
      IL_0729:  ldarg.0
      IL_072a:  volatile.
      IL_072c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0731:  stloc.s    V_46
      IL_0733:  ldloc.s    V_46
      IL_0735:  ldc.i4.0
      IL_0736:  ceq
      IL_0738:  brfalse    IL_074c

      IL_073d:  ldloc.s    V_45
      IL_073f:  brfalse    IL_074c

      IL_0744:  ldc.i4.m1
      IL_0745:  stloc.s    V_4
      IL_0747:  br         IL_0b4d

      IL_074c:  ldloc.s    V_46
      IL_074e:  stloc.s    V_4
      IL_0750:  br         IL_0b4d

      IL_0755:  ldc.i4.0
      IL_0756:  stloc.s    V_47
      IL_0758:  ldarg.0
      IL_0759:  volatile.
      IL_075b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0760:  stloc.s    V_48
      IL_0762:  ldloc.s    V_48
      IL_0764:  brtrue     IL_077b

      IL_0769:  ldarg.0
      IL_076a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_076f:  stloc.s    V_47
      IL_0771:  ldarg.0
      IL_0772:  volatile.
      IL_0774:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0779:  stloc.s    V_48
      IL_077b:  ldloc.s    V_48
      IL_077d:  ldc.i4.0
      IL_077e:  ceq
      IL_0780:  brfalse    IL_0794

      IL_0785:  ldloc.s    V_47
      IL_0787:  brfalse    IL_0794

      IL_078c:  ldc.i4.m1
      IL_078d:  stloc.s    V_4
      IL_078f:  br         IL_0b4d

      IL_0794:  ldloc.s    V_48
      IL_0796:  stloc.s    V_4
      IL_0798:  br         IL_0b4d

      IL_079d:  ldc.i4.0
      IL_079e:  stloc.s    V_49
      IL_07a0:  ldarg.0
      IL_07a1:  volatile.
      IL_07a3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_07a8:  stloc.s    V_50
      IL_07aa:  ldloc.s    V_50
      IL_07ac:  brtrue     IL_07c3

      IL_07b1:  ldarg.0
      IL_07b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_07b7:  stloc.s    V_49
      IL_07b9:  ldarg.0
      IL_07ba:  volatile.
      IL_07bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_07c1:  stloc.s    V_50
      IL_07c3:  ldloc.s    V_50
      IL_07c5:  ldc.i4.0
      IL_07c6:  ceq
      IL_07c8:  brfalse    IL_07dc

      IL_07cd:  ldloc.s    V_49
      IL_07cf:  brfalse    IL_07dc

      IL_07d4:  ldc.i4.m1
      IL_07d5:  stloc.s    V_4
      IL_07d7:  br         IL_0b4d

      IL_07dc:  ldloc.s    V_50
      IL_07de:  stloc.s    V_4
      IL_07e0:  br         IL_0b4d

      IL_07e5:  ldc.i4.0
      IL_07e6:  stloc.s    V_51
      IL_07e8:  ldarg.0
      IL_07e9:  volatile.
      IL_07eb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_07f0:  stloc.s    V_52
      IL_07f2:  ldloc.s    V_52
      IL_07f4:  brtrue     IL_080b

      IL_07f9:  ldarg.0
      IL_07fa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_07ff:  stloc.s    V_51
      IL_0801:  ldarg.0
      IL_0802:  volatile.
      IL_0804:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0809:  stloc.s    V_52
      IL_080b:  ldloc.s    V_52
      IL_080d:  ldc.i4.0
      IL_080e:  ceq
      IL_0810:  brfalse    IL_0824

      IL_0815:  ldloc.s    V_51
      IL_0817:  brfalse    IL_0824

      IL_081c:  ldc.i4.m1
      IL_081d:  stloc.s    V_4
      IL_081f:  br         IL_0b4d

      IL_0824:  ldloc.s    V_52
      IL_0826:  stloc.s    V_4
      IL_0828:  br         IL_0b4d

      IL_082d:  ldc.i4.0
      IL_082e:  stloc.s    V_53
      IL_0830:  ldarg.0
      IL_0831:  volatile.
      IL_0833:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0838:  stloc.s    V_54
      IL_083a:  ldloc.s    V_54
      IL_083c:  brtrue     IL_0853

      IL_0841:  ldarg.0
      IL_0842:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0847:  stloc.s    V_53
      IL_0849:  ldarg.0
      IL_084a:  volatile.
      IL_084c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0851:  stloc.s    V_54
      IL_0853:  ldloc.s    V_54
      IL_0855:  ldc.i4.0
      IL_0856:  ceq
      IL_0858:  brfalse    IL_086c

      IL_085d:  ldloc.s    V_53
      IL_085f:  brfalse    IL_086c

      IL_0864:  ldc.i4.m1
      IL_0865:  stloc.s    V_4
      IL_0867:  br         IL_0b4d

      IL_086c:  ldloc.s    V_54
      IL_086e:  stloc.s    V_4
      IL_0870:  br         IL_0b4d

      IL_0875:  ldc.i4.0
      IL_0876:  stloc.s    V_55
      IL_0878:  ldarg.0
      IL_0879:  volatile.
      IL_087b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0880:  stloc.s    V_56
      IL_0882:  ldloc.s    V_56
      IL_0884:  brtrue     IL_089b

      IL_0889:  ldarg.0
      IL_088a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_088f:  stloc.s    V_55
      IL_0891:  ldarg.0
      IL_0892:  volatile.
      IL_0894:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0899:  stloc.s    V_56
      IL_089b:  ldloc.s    V_56
      IL_089d:  ldc.i4.0
      IL_089e:  ceq
      IL_08a0:  brfalse    IL_08b4

      IL_08a5:  ldloc.s    V_55
      IL_08a7:  brfalse    IL_08b4

      IL_08ac:  ldc.i4.m1
      IL_08ad:  stloc.s    V_4
      IL_08af:  br         IL_0b4d

      IL_08b4:  ldloc.s    V_56
      IL_08b6:  stloc.s    V_4
      IL_08b8:  br         IL_0b4d

      IL_08bd:  ldc.i4.0
      IL_08be:  stloc.s    V_57
      IL_08c0:  ldarg.0
      IL_08c1:  volatile.
      IL_08c3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_08c8:  stloc.s    V_58
      IL_08ca:  ldloc.s    V_58
      IL_08cc:  brtrue     IL_08e3

      IL_08d1:  ldarg.0
      IL_08d2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_08d7:  stloc.s    V_57
      IL_08d9:  ldarg.0
      IL_08da:  volatile.
      IL_08dc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_08e1:  stloc.s    V_58
      IL_08e3:  ldloc.s    V_58
      IL_08e5:  ldc.i4.0
      IL_08e6:  ceq
      IL_08e8:  brfalse    IL_08fc

      IL_08ed:  ldloc.s    V_57
      IL_08ef:  brfalse    IL_08fc

      IL_08f4:  ldc.i4.m1
      IL_08f5:  stloc.s    V_4
      IL_08f7:  br         IL_0b4d

      IL_08fc:  ldloc.s    V_58
      IL_08fe:  stloc.s    V_4
      IL_0900:  br         IL_0b4d

      IL_0905:  ldc.i4.0
      IL_0906:  stloc.s    V_59
      IL_0908:  ldarg.0
      IL_0909:  volatile.
      IL_090b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0910:  stloc.s    V_60
      IL_0912:  ldloc.s    V_60
      IL_0914:  brtrue     IL_092b

      IL_0919:  ldarg.0
      IL_091a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_091f:  stloc.s    V_59
      IL_0921:  ldarg.0
      IL_0922:  volatile.
      IL_0924:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0929:  stloc.s    V_60
      IL_092b:  ldloc.s    V_60
      IL_092d:  ldc.i4.0
      IL_092e:  ceq
      IL_0930:  brfalse    IL_0944

      IL_0935:  ldloc.s    V_59
      IL_0937:  brfalse    IL_0944

      IL_093c:  ldc.i4.m1
      IL_093d:  stloc.s    V_4
      IL_093f:  br         IL_0b4d

      IL_0944:  ldloc.s    V_60
      IL_0946:  stloc.s    V_4
      IL_0948:  br         IL_0b4d

      IL_094d:  ldc.i4.0
      IL_094e:  stloc.s    V_61
      IL_0950:  ldarg.0
      IL_0951:  volatile.
      IL_0953:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0958:  stloc.s    V_62
      IL_095a:  ldloc.s    V_62
      IL_095c:  brtrue     IL_0973

      IL_0961:  ldarg.0
      IL_0962:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0967:  stloc.s    V_61
      IL_0969:  ldarg.0
      IL_096a:  volatile.
      IL_096c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0971:  stloc.s    V_62
      IL_0973:  ldloc.s    V_62
      IL_0975:  ldc.i4.0
      IL_0976:  ceq
      IL_0978:  brfalse    IL_098c

      IL_097d:  ldloc.s    V_61
      IL_097f:  brfalse    IL_098c

      IL_0984:  ldc.i4.m1
      IL_0985:  stloc.s    V_4
      IL_0987:  br         IL_0b4d

      IL_098c:  ldloc.s    V_62
      IL_098e:  stloc.s    V_4
      IL_0990:  br         IL_0b4d

      IL_0995:  ldc.i4.0
      IL_0996:  stloc.s    V_63
      IL_0998:  ldarg.0
      IL_0999:  volatile.
      IL_099b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_09a0:  stloc.s    V_64
      IL_09a2:  ldloc.s    V_64
      IL_09a4:  brtrue     IL_09bb

      IL_09a9:  ldarg.0
      IL_09aa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_09af:  stloc.s    V_63
      IL_09b1:  ldarg.0
      IL_09b2:  volatile.
      IL_09b4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_09b9:  stloc.s    V_64
      IL_09bb:  ldloc.s    V_64
      IL_09bd:  ldc.i4.0
      IL_09be:  ceq
      IL_09c0:  brfalse    IL_09d4

      IL_09c5:  ldloc.s    V_63
      IL_09c7:  brfalse    IL_09d4

      IL_09cc:  ldc.i4.m1
      IL_09cd:  stloc.s    V_4
      IL_09cf:  br         IL_0b4d

      IL_09d4:  ldloc.s    V_64
      IL_09d6:  stloc.s    V_4
      IL_09d8:  br         IL_0b4d

      IL_09dd:  ldc.i4.0
      IL_09de:  stloc.s    V_65
      IL_09e0:  ldarg.0
      IL_09e1:  volatile.
      IL_09e3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_09e8:  stloc.s    V_66
      IL_09ea:  ldloc.s    V_66
      IL_09ec:  brtrue     IL_0a03

      IL_09f1:  ldarg.0
      IL_09f2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_09f7:  stloc.s    V_65
      IL_09f9:  ldarg.0
      IL_09fa:  volatile.
      IL_09fc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0a01:  stloc.s    V_66
      IL_0a03:  ldloc.s    V_66
      IL_0a05:  ldc.i4.0
      IL_0a06:  ceq
      IL_0a08:  brfalse    IL_0a1c

      IL_0a0d:  ldloc.s    V_65
      IL_0a0f:  brfalse    IL_0a1c

      IL_0a14:  ldc.i4.m1
      IL_0a15:  stloc.s    V_4
      IL_0a17:  br         IL_0b4d

      IL_0a1c:  ldloc.s    V_66
      IL_0a1e:  stloc.s    V_4
      IL_0a20:  br         IL_0b4d

      IL_0a25:  ldc.i4.0
      IL_0a26:  stloc.s    V_67
      IL_0a28:  ldarg.0
      IL_0a29:  volatile.
      IL_0a2b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0a30:  stloc.s    V_68
      IL_0a32:  ldloc.s    V_68
      IL_0a34:  brtrue     IL_0a4b

      IL_0a39:  ldarg.0
      IL_0a3a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0a3f:  stloc.s    V_67
      IL_0a41:  ldarg.0
      IL_0a42:  volatile.
      IL_0a44:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0a49:  stloc.s    V_68
      IL_0a4b:  ldloc.s    V_68
      IL_0a4d:  ldc.i4.0
      IL_0a4e:  ceq
      IL_0a50:  brfalse    IL_0a64

      IL_0a55:  ldloc.s    V_67
      IL_0a57:  brfalse    IL_0a64

      IL_0a5c:  ldc.i4.m1
      IL_0a5d:  stloc.s    V_4
      IL_0a5f:  br         IL_0b4d

      IL_0a64:  ldloc.s    V_68
      IL_0a66:  stloc.s    V_4
      IL_0a68:  br         IL_0b4d

      IL_0a6d:  ldc.i4.0
      IL_0a6e:  stloc.s    V_69
      IL_0a70:  ldarg.0
      IL_0a71:  volatile.
      IL_0a73:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0a78:  stloc.s    V_70
      IL_0a7a:  ldloc.s    V_70
      IL_0a7c:  brtrue     IL_0a93

      IL_0a81:  ldarg.0
      IL_0a82:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0a87:  stloc.s    V_69
      IL_0a89:  ldarg.0
      IL_0a8a:  volatile.
      IL_0a8c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0a91:  stloc.s    V_70
      IL_0a93:  ldloc.s    V_70
      IL_0a95:  ldc.i4.0
      IL_0a96:  ceq
      IL_0a98:  brfalse    IL_0aac

      IL_0a9d:  ldloc.s    V_69
      IL_0a9f:  brfalse    IL_0aac

      IL_0aa4:  ldc.i4.m1
      IL_0aa5:  stloc.s    V_4
      IL_0aa7:  br         IL_0b4d

      IL_0aac:  ldloc.s    V_70
      IL_0aae:  stloc.s    V_4
      IL_0ab0:  br         IL_0b4d

      IL_0ab5:  ldc.i4.0
      IL_0ab6:  stloc.s    V_71
      IL_0ab8:  ldarg.0
      IL_0ab9:  volatile.
      IL_0abb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0ac0:  stloc.s    V_72
      IL_0ac2:  ldloc.s    V_72
      IL_0ac4:  brtrue     IL_0adb

      IL_0ac9:  ldarg.0
      IL_0aca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0acf:  stloc.s    V_71
      IL_0ad1:  ldarg.0
      IL_0ad2:  volatile.
      IL_0ad4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0ad9:  stloc.s    V_72
      IL_0adb:  ldloc.s    V_72
      IL_0add:  ldc.i4.0
      IL_0ade:  ceq
      IL_0ae0:  brfalse    IL_0af4

      IL_0ae5:  ldloc.s    V_71
      IL_0ae7:  brfalse    IL_0af4

      IL_0aec:  ldc.i4.m1
      IL_0aed:  stloc.s    V_4
      IL_0aef:  br         IL_0b4d

      IL_0af4:  ldloc.s    V_72
      IL_0af6:  stloc.s    V_4
      IL_0af8:  br         IL_0b4d

      IL_0afd:  ldc.i4.0
      IL_0afe:  stloc.s    V_73
      IL_0b00:  ldarg.0
      IL_0b01:  volatile.
      IL_0b03:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0b08:  stloc.s    V_74
      IL_0b0a:  ldloc.s    V_74
      IL_0b0c:  brtrue     IL_0b23

      IL_0b11:  ldarg.0
      IL_0b12:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0b17:  stloc.s    V_73
      IL_0b19:  ldarg.0
      IL_0b1a:  volatile.
      IL_0b1c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0b21:  stloc.s    V_74
      IL_0b23:  ldloc.s    V_74
      IL_0b25:  ldc.i4.0
      IL_0b26:  ceq
      IL_0b28:  brfalse    IL_0b3c

      IL_0b2d:  ldloc.s    V_73
      IL_0b2f:  brfalse    IL_0b3c

      IL_0b34:  ldc.i4.m1
      IL_0b35:  stloc.s    V_4
      IL_0b37:  br         IL_0b4d

      IL_0b3c:  ldloc.s    V_74
      IL_0b3e:  stloc.s    V_4
      IL_0b40:  br         IL_0b4d

      IL_0b45:  ldc.i4.m1
      IL_0b46:  stloc.s    V_4
      IL_0b48:  br         IL_0b4d

      IL_0b4d:  ldloc.s    V_4
      IL_0b4f:  stloc.s    V_75
      IL_0b51:  ldloc.s    V_4
      IL_0b53:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.TcpConnectionContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverReady0$PST06000454() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST06000455(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverReady0$PST06000454()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Ready NetStack.Contracts.TcpConnectionContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Ready::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverOK0$PST06000456() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverOK0

    .method privatescope instance void  MarshallDeliverOK0$PST06000457(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverOK0$PST06000456()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/OK NetStack.Contracts.TcpConnectionContract/Imp::OKPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/OK::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverOK0

    .method privatescope instance void  DeliverCouldNotConnect0$PST06000458(valuetype NetStack.Contracts.TcpError 'error') cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect NetStack.Contracts.TcpConnectionContract/Imp::CouldNotConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.TcpError NetStack.Contracts.TcpConnectionContract/CouldNotConnect::'error'
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.7
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.7
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverCouldNotConnect0

    .method privatescope instance void  MarshallDeliverCouldNotConnect0$PST06000459(valuetype NetStack.Contracts.TcpError 'error',
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverCouldNotConnect0$PST06000458(valuetype NetStack.Contracts.TcpError)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect NetStack.Contracts.TcpConnectionContract/Imp::CouldNotConnectPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/CouldNotConnect::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverCouldNotConnect0

    .method privatescope instance void  DeliverCouldNotListen0$PST0600045A() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverCouldNotListen0

    .method privatescope instance void  MarshallDeliverCouldNotListen0$PST0600045B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverCouldNotListen0$PST0600045A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CouldNotListen NetStack.Contracts.TcpConnectionContract/Imp::CouldNotListenPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/CouldNotListen::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverCouldNotListen0

    .method privatescope instance void  DeliverInvalidEndPoint0$PST0600045C() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   9
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   9
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverInvalidEndPoint0

    .method privatescope instance void  MarshallDeliverInvalidEndPoint0$PST0600045D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverInvalidEndPoint0$PST0600045C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/InvalidEndPoint NetStack.Contracts.TcpConnectionContract/Imp::InvalidEndPointPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/InvalidEndPoint::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverInvalidEndPoint0

    .method privatescope instance void  DeliverIPAddress0$PST0600045E(uint32 ip) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.TcpConnectionContract/IPAddress::ip
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverIPAddress0

    .method privatescope instance void  MarshallDeliverIPAddress0$PST0600045F(uint32 ip,
                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverIPAddress0$PST0600045E(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IPAddress NetStack.Contracts.TcpConnectionContract/Imp::IPAddressPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/IPAddress::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverIPAddress0

    .method privatescope instance void  DeliverPort0$PST06000460(uint16 port) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint16 NetStack.Contracts.TcpConnectionContract/Port::port
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverPort0

    .method privatescope instance void  MarshallDeliverPort0$PST06000461(uint16 port,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverPort0$PST06000460(uint16)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Port NetStack.Contracts.TcpConnectionContract/Imp::PortPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/Port::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverPort0

    .method privatescope instance void  DeliverSessionIsAvailable0$PST06000462(bool isAvailable) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::SessionIsAvailablePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      bool NetStack.Contracts.TcpConnectionContract/SessionIsAvailable::isAvailable
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   16
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   16
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverSessionIsAvailable0

    .method privatescope instance void  MarshallDeliverSessionIsAvailable0$PST06000463(bool isAvailable,
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverSessionIsAvailable0$PST06000462(bool)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::SessionIsAvailablePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/SessionIsAvailable::MarshallAll(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverSessionIsAvailable0

    .method privatescope instance void  DeliverConnectionClosed0$PST06000464() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   27
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   27
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverConnectionClosed0

    .method privatescope instance void  MarshallDeliverConnectionClosed0$PST06000465(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverConnectionClosed0$PST06000464()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed NetStack.Contracts.TcpConnectionContract/Imp::ConnectionClosedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/ConnectionClosed::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverConnectionClosed0

    .method privatescope instance void  DeliverNoData0$PST06000466() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   28
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   28
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNoData0

    .method privatescope instance void  MarshallDeliverNoData0$PST06000467(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverNoData0$PST06000466()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/NoData NetStack.Contracts.TcpConnectionContract/Imp::NoDataPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/NoData::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNoData0

    .method privatescope instance void  DeliverNoMoreData0$PST06000468() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   29
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   29
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNoMoreData0

    .method privatescope instance void  MarshallDeliverNoMoreData0$PST06000469(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverNoMoreData0$PST06000468()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData NetStack.Contracts.TcpConnectionContract/Imp::NoMoreDataPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/NoMoreData::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNoMoreData0

    .method privatescope instance void  DeliverCantSend0$PST0600046A() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   30
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   30
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverCantSend0

    .method privatescope instance void  MarshallDeliverCantSend0$PST0600046B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverCantSend0$PST0600046A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/CantSend NetStack.Contracts.TcpConnectionContract/Imp::CantSendPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/CantSend::MarshallAll(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverCantSend0

    .method privatescope instance void  DeliverData0$PST0600046C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   31
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverData0

    .method privatescope instance void  MarshallDeliverData0$PST0600046D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverData0$PST0600046C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Data NetStack.Contracts.TcpConnectionContract/Imp::DataPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/Data::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverData0

    .method privatescope instance void  DeliverDataIsAvailable0$PST0600046E(bool isAvailable) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::DataIsAvailablePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      bool NetStack.Contracts.TcpConnectionContract/DataIsAvailable::isAvailable
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   32
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   32
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverDataIsAvailable0

    .method privatescope instance void  MarshallDeliverDataIsAvailable0$PST0600046F(bool isAvailable,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverDataIsAvailable0$PST0600046E(bool)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable NetStack.Contracts.TcpConnectionContract/Imp::DataIsAvailablePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/DataIsAvailable::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverDataIsAvailable0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod1
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Connect ConnectPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint BindLocalEndPointPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Listen ListenPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress GetLocalAddressPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress GetLocalAddressPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress GetLocalAddressPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort GetLocalPortPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort GetLocalPortPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort GetLocalPortPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Accept AcceptPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/IsSessionAvailable IsSessionAvailablePod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Read ReadPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Read ReadPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/PollRead PollReadPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/PollRead PollReadPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable IsDataAvailablePod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable IsDataAvailablePod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Write WritePod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Write WritePod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Close ClosePod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Close ClosePod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Close ClosePod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Abort AbortPod0
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Abort AbortPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/Abort AbortPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress GetRemoteAddressPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress GetRemoteAddressPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort GetRemotePortPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort GetRemotePortPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/DoneSending DoneSendingPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/DoneSending DoneSendingPod2
    .field family valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving DoneReceivingPod1
    .field family valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving DoneReceivingPod2
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.TcpConnectionContract::CanonicalState$PST0600004D(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.TcpConnectionContract::CanonicalState$PST0600004D(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       766 (0x2fe)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   40
      IL_000f:  beq        IL_0142

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   39
      IL_0017:  beq        IL_014d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   38
      IL_001f:  beq        IL_0158

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   37
      IL_0027:  beq        IL_0163

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   36
      IL_002f:  beq        IL_016e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   35
      IL_0037:  beq        IL_0179

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   34
      IL_003f:  beq        IL_0184

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   33
      IL_0047:  beq        IL_018f

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   32
      IL_004f:  beq        IL_019a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   31
      IL_0057:  beq        IL_01a5

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   30
      IL_005f:  beq        IL_01b0

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   29
      IL_0067:  beq        IL_01bb

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   28
      IL_006f:  beq        IL_01c6

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   27
      IL_0077:  beq        IL_01d1

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   26
      IL_007f:  beq        IL_01dc

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   25
      IL_0087:  beq        IL_01e7

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.s   24
      IL_008f:  beq        IL_01f2

      IL_0094:  ldloc.0
      IL_0095:  ldc.i4.s   23
      IL_0097:  beq        IL_01fd

      IL_009c:  ldloc.0
      IL_009d:  ldc.i4.s   22
      IL_009f:  beq        IL_0208

      IL_00a4:  ldloc.0
      IL_00a5:  ldc.i4.s   21
      IL_00a7:  beq        IL_0213

      IL_00ac:  ldloc.0
      IL_00ad:  ldc.i4.s   20
      IL_00af:  beq        IL_021e

      IL_00b4:  ldloc.0
      IL_00b5:  ldc.i4.s   19
      IL_00b7:  beq        IL_0229

      IL_00bc:  ldloc.0
      IL_00bd:  ldc.i4.s   18
      IL_00bf:  beq        IL_0234

      IL_00c4:  ldloc.0
      IL_00c5:  ldc.i4.s   17
      IL_00c7:  beq        IL_023f

      IL_00cc:  ldloc.0
      IL_00cd:  ldc.i4.s   16
      IL_00cf:  beq        IL_024a

      IL_00d4:  ldloc.0
      IL_00d5:  ldc.i4.s   15
      IL_00d7:  beq        IL_0255

      IL_00dc:  ldloc.0
      IL_00dd:  ldc.i4.s   14
      IL_00df:  beq        IL_0260

      IL_00e4:  ldloc.0
      IL_00e5:  ldc.i4.s   13
      IL_00e7:  beq        IL_026b

      IL_00ec:  ldloc.0
      IL_00ed:  ldc.i4.s   12
      IL_00ef:  beq        IL_0276

      IL_00f4:  ldloc.0
      IL_00f5:  ldc.i4.s   11
      IL_00f7:  beq        IL_0281

      IL_00fc:  ldloc.0
      IL_00fd:  ldc.i4.s   10
      IL_00ff:  beq        IL_028c

      IL_0104:  ldloc.0
      IL_0105:  ldc.i4.s   9
      IL_0107:  beq        IL_0297

      IL_010c:  ldloc.0
      IL_010d:  ldc.i4.8
      IL_010e:  beq        IL_02a2

      IL_0113:  ldloc.0
      IL_0114:  ldc.i4.7
      IL_0115:  beq        IL_02ad

      IL_011a:  ldloc.0
      IL_011b:  ldc.i4.6
      IL_011c:  beq        IL_02b8

      IL_0121:  ldloc.0
      IL_0122:  ldc.i4.5
      IL_0123:  beq        IL_02c3

      IL_0128:  ldloc.0
      IL_0129:  ldc.i4.4
      IL_012a:  beq        IL_02ce

      IL_012f:  ldloc.0
      IL_0130:  ldc.i4.3
      IL_0131:  beq        IL_02d9

      IL_0136:  ldloc.0
      IL_0137:  ldc.i4.2
      IL_0138:  beq        IL_02e4

      IL_013d:  br         IL_02ef

      IL_0142:  ldstr      "Start"
      IL_0147:  stloc.1
      IL_0148:  br         IL_02fa

      IL_014d:  ldstr      "ReadyState"
      IL_0152:  stloc.1
      IL_0153:  br         IL_02fa

      IL_0158:  ldstr      "BindResult"
      IL_015d:  stloc.1
      IL_015e:  br         IL_02fa

      IL_0163:  ldstr      "Bound"
      IL_0168:  stloc.1
      IL_0169:  br         IL_02fa

      IL_016e:  ldstr      "ConnectResult"
      IL_0173:  stloc.1
      IL_0174:  br         IL_02fa

      IL_0179:  ldstr      "ListenResult"
      IL_017e:  stloc.1
      IL_017f:  br         IL_02fa

      IL_0184:  ldstr      "Listening"
      IL_0189:  stloc.1
      IL_018a:  br         IL_02fa

      IL_018f:  ldstr      "Listening$0"
      IL_0194:  stloc.1
      IL_0195:  br         IL_02fa

      IL_019a:  ldstr      "Listening$1"
      IL_019f:  stloc.1
      IL_01a0:  br         IL_02fa

      IL_01a5:  ldstr      "Listening$2"
      IL_01aa:  stloc.1
      IL_01ab:  br         IL_02fa

      IL_01b0:  ldstr      "Listening$3"
      IL_01b5:  stloc.1
      IL_01b6:  br         IL_02fa

      IL_01bb:  ldstr      "PreConnected"
      IL_01c0:  stloc.1
      IL_01c1:  br         IL_02fa

      IL_01c6:  ldstr      "Connected"
      IL_01cb:  stloc.1
      IL_01cc:  br         IL_02fa

      IL_01d1:  ldstr      "Connected$4"
      IL_01d6:  stloc.1
      IL_01d7:  br         IL_02fa

      IL_01dc:  ldstr      "Connected$5"
      IL_01e1:  stloc.1
      IL_01e2:  br         IL_02fa

      IL_01e7:  ldstr      "Connected$6"
      IL_01ec:  stloc.1
      IL_01ed:  br         IL_02fa

      IL_01f2:  ldstr      "Connected$7"
      IL_01f7:  stloc.1
      IL_01f8:  br         IL_02fa

      IL_01fd:  ldstr      "Connected$8"
      IL_0202:  stloc.1
      IL_0203:  br         IL_02fa

      IL_0208:  ldstr      "Connected$9"
      IL_020d:  stloc.1
      IL_020e:  br         IL_02fa

      IL_0213:  ldstr      "ReadResult"
      IL_0218:  stloc.1
      IL_0219:  br         IL_02fa

      IL_021e:  ldstr      "PollReadResult"
      IL_0223:  stloc.1
      IL_0224:  br         IL_02fa

      IL_0229:  ldstr      "WriteResult"
      IL_022e:  stloc.1
      IL_022f:  br         IL_02fa

      IL_0234:  ldstr      "ReceiveOnly"
      IL_0239:  stloc.1
      IL_023a:  br         IL_02fa

      IL_023f:  ldstr      "ReceiveOnly$10"
      IL_0244:  stloc.1
      IL_0245:  br         IL_02fa

      IL_024a:  ldstr      "ReceiveOnly$11"
      IL_024f:  stloc.1
      IL_0250:  br         IL_02fa

      IL_0255:  ldstr      "ReceiveOnly$12"
      IL_025a:  stloc.1
      IL_025b:  br         IL_02fa

      IL_0260:  ldstr      "ReceiveOnly$13"
      IL_0265:  stloc.1
      IL_0266:  br         IL_02fa

      IL_026b:  ldstr      "ReceiveOnly$14"
      IL_0270:  stloc.1
      IL_0271:  br         IL_02fa

      IL_0276:  ldstr      "ReceiveOnly$15"
      IL_027b:  stloc.1
      IL_027c:  br         IL_02fa

      IL_0281:  ldstr      "ROReadResult"
      IL_0286:  stloc.1
      IL_0287:  br         IL_02fa

      IL_028c:  ldstr      "ROPollReadResult"
      IL_0291:  stloc.1
      IL_0292:  br         IL_02fa

      IL_0297:  ldstr      "SendOnly"
      IL_029c:  stloc.1
      IL_029d:  br         IL_02fa

      IL_02a2:  ldstr      "SendOnly$16"
      IL_02a7:  stloc.1
      IL_02a8:  br         IL_02fa

      IL_02ad:  ldstr      "SendOnly$17"
      IL_02b2:  stloc.1
      IL_02b3:  br         IL_02fa

      IL_02b8:  ldstr      "SendOnly$18"
      IL_02bd:  stloc.1
      IL_02be:  br         IL_02fa

      IL_02c3:  ldstr      "SendOnly$19"
      IL_02c8:  stloc.1
      IL_02c9:  br         IL_02fa

      IL_02ce:  ldstr      "SOWriteResult"
      IL_02d3:  stloc.1
      IL_02d4:  br         IL_02fa

      IL_02d9:  ldstr      "Zombie"
      IL_02de:  stloc.1
      IL_02df:  br         IL_02fa

      IL_02e4:  ldstr      "Closed"
      IL_02e9:  stloc.1
      IL_02ea:  br         IL_02fa

      IL_02ef:  ldstr      "<protocol terminated>"
      IL_02f4:  stloc.1
      IL_02f5:  br         IL_02fa

      IL_02fa:  ldloc.1
      IL_02fb:  stloc.2
      IL_02fc:  ldloc.1
      IL_02fd:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvConnect([out] uint32& dstIP,
                                              [out] uint16& dstPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       411 (0x19b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   39
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   37
      IL_0017:  beq        IL_00d0

      IL_001c:  br         IL_0184

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.2
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006b:  ldloc.2
      IL_006c:  ldc.i4.2
      IL_006d:  beq        IL_008f

      IL_0072:  ldstr      "can't recv Connect when next message has tag "
      IL_0077:  ldarg.0
      IL_0078:  volatile.
      IL_007a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_007f:  box        [kernel]System.Int32
      IL_0084:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0089:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ldarg.1
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_0096:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/Connect::dstIP
      IL_009b:  stind.i4
      IL_009c:  ldarg.2
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_00a3:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Connect::dstPort
      IL_00a8:  stind.i2
      IL_00a9:  ldarg.0
      IL_00aa:  ldc.i4.0
      IL_00ab:  volatile.
      IL_00ad:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_00b2:  ldarg.0
      IL_00b3:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_00b8:  initobj    NetStack.Contracts.TcpConnectionContract/Connect
      IL_00be:  ldarg.0
      IL_00bf:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c4:  ldc.i4.s   36
      IL_00c6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cb:  br         IL_019a

      IL_00d0:  ldc.i4.0
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  brtrue     IL_00f4

      IL_00e3:  ldarg.0
      IL_00e4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e9:  stloc.3
      IL_00ea:  ldarg.0
      IL_00eb:  volatile.
      IL_00ed:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_00f2:  stloc.s    V_4
      IL_00f4:  ldloc.s    V_4
      IL_00f6:  ldc.i4.0
      IL_00f7:  ceq
      IL_00f9:  brfalse    IL_0117

      IL_00fe:  ldloc.3
      IL_00ff:  brfalse    IL_010f

      IL_0104:  ldstr      "Peer is closed"
      IL_0109:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_010e:  throw

      IL_010f:  ldarg.0
      IL_0110:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0115:  br.s       IL_00d0

      IL_0117:  ldarg.0
      IL_0118:  ldc.i4.2
      IL_0119:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_011e:  ldloc.s    V_4
      IL_0120:  ldc.i4.2
      IL_0121:  beq        IL_0143

      IL_0126:  ldstr      "can't recv Connect when next message has tag "
      IL_012b:  ldarg.0
      IL_012c:  volatile.
      IL_012e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0133:  box        [kernel]System.Int32
      IL_0138:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_013d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0142:  throw

      IL_0143:  ldarg.1
      IL_0144:  ldarg.0
      IL_0145:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_014a:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/Connect::dstIP
      IL_014f:  stind.i4
      IL_0150:  ldarg.2
      IL_0151:  ldarg.0
      IL_0152:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_0157:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/Connect::dstPort
      IL_015c:  stind.i2
      IL_015d:  ldarg.0
      IL_015e:  ldc.i4.0
      IL_015f:  volatile.
      IL_0161:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0166:  ldarg.0
      IL_0167:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_016c:  initobj    NetStack.Contracts.TcpConnectionContract/Connect
      IL_0172:  ldarg.0
      IL_0173:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0178:  ldc.i4.s   36
      IL_017a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_017f:  br         IL_019a

      IL_0184:  ldstr      "can't recv Connect in state "
      IL_0189:  ldarg.0
      IL_018a:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_018f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0194:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0199:  throw

      IL_019a:  ret
    } // end of method Exp::RecvConnect

    .method public instance void  RecvBindLocalEndPoint([out] uint32& dstIP,
                                                        [out] uint16& dstPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   39
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c8

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.3
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.3
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv BindLocalEndPoint when next message has"
      + " tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint NetStack.Contracts.TcpConnectionContract/Exp::BindLocalEndPointPod0
      IL_008e:  ldfld      uint32 NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint::dstIP
      IL_0093:  stind.i4
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint NetStack.Contracts.TcpConnectionContract/Exp::BindLocalEndPointPod0
      IL_009b:  ldfld      uint16 NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint::dstPort
      IL_00a0:  stind.i2
      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint NetStack.Contracts.TcpConnectionContract/Exp::BindLocalEndPointPod0
      IL_00b0:  initobj    NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   38
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv BindLocalEndPoint in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00d3:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Exp::RecvBindLocalEndPoint

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   40
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c2

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0040:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverReady0$PST06000454()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverReady0$PST06000455(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   28
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d8

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0093:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverReady0$PST06000454()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverReady0$PST06000455(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.s   39
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send Ready in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00cd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Exp::SendReady

    .method public instance void  RecvListen([out] int32& backlog) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   37
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Listen when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Listen NetStack.Contracts.TcpConnectionContract/Exp::ListenPod0
      IL_008e:  ldfld      int32 NetStack.Contracts.TcpConnectionContract/Listen::backlog
      IL_0093:  stind.i4
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Listen NetStack.Contracts.TcpConnectionContract/Exp::ListenPod0
      IL_00a3:  initobj    NetStack.Contracts.TcpConnectionContract/Listen
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   35
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv Listen in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00c6:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Exp::RecvListen

    .method public instance void  SendOK() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       584 (0x248)
      .maxstack  35
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0040

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.4
      IL_0016:  beq        IL_008d

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   38
      IL_001e:  beq        IL_00e1

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.s   35
      IL_0026:  beq        IL_0135

      IL_002b:  ldloc.0
      IL_002c:  ldc.i4.s   19
      IL_002e:  beq        IL_0189

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.s   30
      IL_0036:  beq        IL_01dd

      IL_003b:  br         IL_0231

      IL_0040:  ldarg.0
      IL_0041:  ldloca.s   V_1
      IL_0043:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0048:  stloc.2
      IL_0049:  ldloc.2
      IL_004a:  stloc.3
      IL_004b:  ldloc.3
      IL_004c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0051:  stloc.s    V_4
      IL_0053:  ldloc.1
      IL_0054:  brtrue     IL_0069

      IL_0059:  ldloc.3
      IL_005a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_005f:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverOK0$PST06000456()
      IL_0064:  br         IL_0075

      IL_0069:  ldloc.3
      IL_006a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_006f:  ldarg.0
      IL_0070:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverOK0$PST06000457(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0075:  ldarg.0
      IL_0076:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_007b:  ldarg.0
      IL_007c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0081:  ldc.i4.s   28
      IL_0083:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0088:  br         IL_0247

      IL_008d:  ldarg.0
      IL_008e:  ldloca.s   V_5
      IL_0090:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0095:  stloc.s    V_6
      IL_0097:  ldloc.s    V_6
      IL_0099:  stloc.s    V_7
      IL_009b:  ldloc.s    V_7
      IL_009d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00a2:  stloc.s    V_8
      IL_00a4:  ldloc.s    V_5
      IL_00a6:  brtrue     IL_00bc

      IL_00ab:  ldloc.s    V_7
      IL_00ad:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00b2:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverOK0$PST06000456()
      IL_00b7:  br         IL_00c9

      IL_00bc:  ldloc.s    V_7
      IL_00be:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00c3:  ldarg.0
      IL_00c4:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverOK0$PST06000457(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00c9:  ldarg.0
      IL_00ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00cf:  ldarg.0
      IL_00d0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d5:  ldc.i4.s   9
      IL_00d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00dc:  br         IL_0247

      IL_00e1:  ldarg.0
      IL_00e2:  ldloca.s   V_9
      IL_00e4:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00e9:  stloc.s    V_10
      IL_00eb:  ldloc.s    V_10
      IL_00ed:  stloc.s    V_11
      IL_00ef:  ldloc.s    V_11
      IL_00f1:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00f6:  stloc.s    V_12
      IL_00f8:  ldloc.s    V_9
      IL_00fa:  brtrue     IL_0110

      IL_00ff:  ldloc.s    V_11
      IL_0101:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0106:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverOK0$PST06000456()
      IL_010b:  br         IL_011d

      IL_0110:  ldloc.s    V_11
      IL_0112:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0117:  ldarg.0
      IL_0118:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverOK0$PST06000457(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_011d:  ldarg.0
      IL_011e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0123:  ldarg.0
      IL_0124:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0129:  ldc.i4.s   37
      IL_012b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0130:  br         IL_0247

      IL_0135:  ldarg.0
      IL_0136:  ldloca.s   V_13
      IL_0138:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_013d:  stloc.s    V_14
      IL_013f:  ldloc.s    V_14
      IL_0141:  stloc.s    V_15
      IL_0143:  ldloc.s    V_15
      IL_0145:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_014a:  stloc.s    V_16
      IL_014c:  ldloc.s    V_13
      IL_014e:  brtrue     IL_0164

      IL_0153:  ldloc.s    V_15
      IL_0155:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_015a:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverOK0$PST06000456()
      IL_015f:  br         IL_0171

      IL_0164:  ldloc.s    V_15
      IL_0166:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_016b:  ldarg.0
      IL_016c:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverOK0$PST06000457(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0171:  ldarg.0
      IL_0172:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0177:  ldarg.0
      IL_0178:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_017d:  ldc.i4.s   34
      IL_017f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0184:  br         IL_0247

      IL_0189:  ldarg.0
      IL_018a:  ldloca.s   V_17
      IL_018c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0191:  stloc.s    V_18
      IL_0193:  ldloc.s    V_18
      IL_0195:  stloc.s    V_19
      IL_0197:  ldloc.s    V_19
      IL_0199:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_019e:  stloc.s    V_20
      IL_01a0:  ldloc.s    V_17
      IL_01a2:  brtrue     IL_01b8

      IL_01a7:  ldloc.s    V_19
      IL_01a9:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01ae:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverOK0$PST06000456()
      IL_01b3:  br         IL_01c5

      IL_01b8:  ldloc.s    V_19
      IL_01ba:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01bf:  ldarg.0
      IL_01c0:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverOK0$PST06000457(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01c5:  ldarg.0
      IL_01c6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01cb:  ldarg.0
      IL_01cc:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01d1:  ldc.i4.s   28
      IL_01d3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01d8:  br         IL_0247

      IL_01dd:  ldarg.0
      IL_01de:  ldloca.s   V_21
      IL_01e0:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01e5:  stloc.s    V_22
      IL_01e7:  ldloc.s    V_22
      IL_01e9:  stloc.s    V_23
      IL_01eb:  ldloc.s    V_23
      IL_01ed:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01f2:  stloc.s    V_24
      IL_01f4:  ldloc.s    V_21
      IL_01f6:  brtrue     IL_020c

      IL_01fb:  ldloc.s    V_23
      IL_01fd:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0202:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverOK0$PST06000456()
      IL_0207:  br         IL_0219

      IL_020c:  ldloc.s    V_23
      IL_020e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0213:  ldarg.0
      IL_0214:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverOK0$PST06000457(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0219:  ldarg.0
      IL_021a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_021f:  ldarg.0
      IL_0220:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0225:  ldc.i4.s   34
      IL_0227:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_022c:  br         IL_0247

      IL_0231:  ldstr      "can't send OK in state "
      IL_0236:  ldarg.0
      IL_0237:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_023c:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0241:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0246:  throw

      IL_0247:  ret
    } // end of method Exp::SendOK

    .method public instance void  SendCouldNotConnect(valuetype NetStack.Contracts.TcpError 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverCouldNotConnect0$PST06000458(valuetype NetStack.Contracts.TcpError)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverCouldNotConnect0$PST06000459(valuetype NetStack.Contracts.TcpError,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   39
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send CouldNotConnect in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendCouldNotConnect

    .method public instance void  SendCouldNotListen() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   35
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0038:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverCouldNotListen0$PST0600045A()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverCouldNotListen0$PST0600045B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   39
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send CouldNotListen in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendCouldNotListen

    .method public instance void  SendInvalidEndPoint() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   38
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0038:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverInvalidEndPoint0$PST0600045C()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverInvalidEndPoint0$PST0600045D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   39
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send InvalidEndPoint in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendInvalidEndPoint

    .method public instance void  RecvGetLocalAddress() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       696 (0x2b8)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00c8

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   34
      IL_001f:  beq        IL_0164

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   9
      IL_0027:  beq        IL_0203

      IL_002c:  br         IL_02a1

      IL_0031:  ldc.i4.0
      IL_0032:  stloc.1
      IL_0033:  ldarg.0
      IL_0034:  volatile.
      IL_0036:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_003b:  stloc.2
      IL_003c:  ldloc.2
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldarg.0
      IL_0043:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0048:  stloc.1
      IL_0049:  ldarg.0
      IL_004a:  volatile.
      IL_004c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  ldc.i4.0
      IL_0054:  ceq
      IL_0056:  brfalse    IL_0074

      IL_005b:  ldloc.1
      IL_005c:  brfalse    IL_006c

      IL_0061:  ldstr      "Peer is closed"
      IL_0066:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_006b:  throw

      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0072:  br.s       IL_0031

      IL_0074:  ldarg.0
      IL_0075:  ldc.i4.s   10
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007c:  ldloc.2
      IL_007d:  ldc.i4.s   10
      IL_007f:  beq        IL_00a1

      IL_0084:  ldstr      "can't recv GetLocalAddress when next message has t"
      + "ag "
      IL_0089:  ldarg.0
      IL_008a:  volatile.
      IL_008c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0091:  box        [kernel]System.Int32
      IL_0096:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_009b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a0:  throw

      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress NetStack.Contracts.TcpConnectionContract/Exp::GetLocalAddressPod1
      IL_00b0:  initobj    NetStack.Contracts.TcpConnectionContract/GetLocalAddress
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   15
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_02b7

      IL_00c8:  ldc.i4.0
      IL_00c9:  stloc.3
      IL_00ca:  ldarg.0
      IL_00cb:  volatile.
      IL_00cd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00d2:  stloc.s    V_4
      IL_00d4:  ldloc.s    V_4
      IL_00d6:  brtrue     IL_00ec

      IL_00db:  ldarg.0
      IL_00dc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e1:  stloc.3
      IL_00e2:  ldarg.0
      IL_00e3:  volatile.
      IL_00e5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00ea:  stloc.s    V_4
      IL_00ec:  ldloc.s    V_4
      IL_00ee:  ldc.i4.0
      IL_00ef:  ceq
      IL_00f1:  brfalse    IL_010f

      IL_00f6:  ldloc.3
      IL_00f7:  brfalse    IL_0107

      IL_00fc:  ldstr      "Peer is closed"
      IL_0101:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0106:  throw

      IL_0107:  ldarg.0
      IL_0108:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_010d:  br.s       IL_00c8

      IL_010f:  ldarg.0
      IL_0110:  ldc.i4.s   10
      IL_0112:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0117:  ldloc.s    V_4
      IL_0119:  ldc.i4.s   10
      IL_011b:  beq        IL_013d

      IL_0120:  ldstr      "can't recv GetLocalAddress when next message has t"
      + "ag "
      IL_0125:  ldarg.0
      IL_0126:  volatile.
      IL_0128:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_012d:  box        [kernel]System.Int32
      IL_0132:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0137:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_013c:  throw

      IL_013d:  ldarg.0
      IL_013e:  ldc.i4.0
      IL_013f:  volatile.
      IL_0141:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0146:  ldarg.0
      IL_0147:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress NetStack.Contracts.TcpConnectionContract/Exp::GetLocalAddressPod2
      IL_014c:  initobj    NetStack.Contracts.TcpConnectionContract/GetLocalAddress
      IL_0152:  ldarg.0
      IL_0153:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0158:  ldc.i4.s   25
      IL_015a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_015f:  br         IL_02b7

      IL_0164:  ldc.i4.0
      IL_0165:  stloc.s    V_5
      IL_0167:  ldarg.0
      IL_0168:  volatile.
      IL_016a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_016f:  stloc.s    V_6
      IL_0171:  ldloc.s    V_6
      IL_0173:  brtrue     IL_018a

      IL_0178:  ldarg.0
      IL_0179:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_017e:  stloc.s    V_5
      IL_0180:  ldarg.0
      IL_0181:  volatile.
      IL_0183:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0188:  stloc.s    V_6
      IL_018a:  ldloc.s    V_6
      IL_018c:  ldc.i4.0
      IL_018d:  ceq
      IL_018f:  brfalse    IL_01ae

      IL_0194:  ldloc.s    V_5
      IL_0196:  brfalse    IL_01a6

      IL_019b:  ldstr      "Peer is closed"
      IL_01a0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01a5:  throw

      IL_01a6:  ldarg.0
      IL_01a7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01ac:  br.s       IL_0164

      IL_01ae:  ldarg.0
      IL_01af:  ldc.i4.s   10
      IL_01b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01b6:  ldloc.s    V_6
      IL_01b8:  ldc.i4.s   10
      IL_01ba:  beq        IL_01dc

      IL_01bf:  ldstr      "can't recv GetLocalAddress when next message has t"
      + "ag "
      IL_01c4:  ldarg.0
      IL_01c5:  volatile.
      IL_01c7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_01cc:  box        [kernel]System.Int32
      IL_01d1:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01d6:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01db:  throw

      IL_01dc:  ldarg.0
      IL_01dd:  ldc.i4.0
      IL_01de:  volatile.
      IL_01e0:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_01e5:  ldarg.0
      IL_01e6:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress NetStack.Contracts.TcpConnectionContract/Exp::GetLocalAddressPod0
      IL_01eb:  initobj    NetStack.Contracts.TcpConnectionContract/GetLocalAddress
      IL_01f1:  ldarg.0
      IL_01f2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01f7:  ldc.i4.s   33
      IL_01f9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01fe:  br         IL_02b7

      IL_0203:  ldc.i4.0
      IL_0204:  stloc.s    V_7
      IL_0206:  ldarg.0
      IL_0207:  volatile.
      IL_0209:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_020e:  stloc.s    V_8
      IL_0210:  ldloc.s    V_8
      IL_0212:  brtrue     IL_0229

      IL_0217:  ldarg.0
      IL_0218:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_021d:  stloc.s    V_7
      IL_021f:  ldarg.0
      IL_0220:  volatile.
      IL_0222:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0227:  stloc.s    V_8
      IL_0229:  ldloc.s    V_8
      IL_022b:  ldc.i4.0
      IL_022c:  ceq
      IL_022e:  brfalse    IL_024d

      IL_0233:  ldloc.s    V_7
      IL_0235:  brfalse    IL_0245

      IL_023a:  ldstr      "Peer is closed"
      IL_023f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0244:  throw

      IL_0245:  ldarg.0
      IL_0246:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_024b:  br.s       IL_0203

      IL_024d:  ldarg.0
      IL_024e:  ldc.i4.s   10
      IL_0250:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0255:  ldloc.s    V_8
      IL_0257:  ldc.i4.s   10
      IL_0259:  beq        IL_027b

      IL_025e:  ldstr      "can't recv GetLocalAddress when next message has t"
      + "ag "
      IL_0263:  ldarg.0
      IL_0264:  volatile.
      IL_0266:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_026b:  box        [kernel]System.Int32
      IL_0270:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0275:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_027a:  throw

      IL_027b:  ldarg.0
      IL_027c:  ldc.i4.0
      IL_027d:  volatile.
      IL_027f:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0284:  ldarg.0
      IL_0285:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress NetStack.Contracts.TcpConnectionContract/Exp::GetLocalAddressPod1
      IL_028a:  initobj    NetStack.Contracts.TcpConnectionContract/GetLocalAddress
      IL_0290:  ldarg.0
      IL_0291:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0296:  ldc.i4.8
      IL_0297:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_029c:  br         IL_02b7

      IL_02a1:  ldstr      "can't recv GetLocalAddress in state "
      IL_02a6:  ldarg.0
      IL_02a7:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_02ac:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02b1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02b6:  throw

      IL_02b7:  ret
    } // end of method Exp::RecvGetLocalAddress

    .method public instance void  RecvGetLocalPort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       696 (0x2b8)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  beq        IL_00c8

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   18
      IL_001f:  beq        IL_0163

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   28
      IL_0027:  beq        IL_0202

      IL_002c:  br         IL_02a1

      IL_0031:  ldc.i4.0
      IL_0032:  stloc.1
      IL_0033:  ldarg.0
      IL_0034:  volatile.
      IL_0036:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_003b:  stloc.2
      IL_003c:  ldloc.2
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldarg.0
      IL_0043:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0048:  stloc.1
      IL_0049:  ldarg.0
      IL_004a:  volatile.
      IL_004c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  ldc.i4.0
      IL_0054:  ceq
      IL_0056:  brfalse    IL_0074

      IL_005b:  ldloc.1
      IL_005c:  brfalse    IL_006c

      IL_0061:  ldstr      "Peer is closed"
      IL_0066:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_006b:  throw

      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0072:  br.s       IL_0031

      IL_0074:  ldarg.0
      IL_0075:  ldc.i4.s   11
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007c:  ldloc.2
      IL_007d:  ldc.i4.s   11
      IL_007f:  beq        IL_00a1

      IL_0084:  ldstr      "can't recv GetLocalPort when next message has tag "
      IL_0089:  ldarg.0
      IL_008a:  volatile.
      IL_008c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0091:  box        [kernel]System.Int32
      IL_0096:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_009b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a0:  throw

      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort NetStack.Contracts.TcpConnectionContract/Exp::GetLocalPortPod0
      IL_00b0:  initobj    NetStack.Contracts.TcpConnectionContract/GetLocalPort
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   32
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_02b7

      IL_00c8:  ldc.i4.0
      IL_00c9:  stloc.3
      IL_00ca:  ldarg.0
      IL_00cb:  volatile.
      IL_00cd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00d2:  stloc.s    V_4
      IL_00d4:  ldloc.s    V_4
      IL_00d6:  brtrue     IL_00ec

      IL_00db:  ldarg.0
      IL_00dc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e1:  stloc.3
      IL_00e2:  ldarg.0
      IL_00e3:  volatile.
      IL_00e5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00ea:  stloc.s    V_4
      IL_00ec:  ldloc.s    V_4
      IL_00ee:  ldc.i4.0
      IL_00ef:  ceq
      IL_00f1:  brfalse    IL_010f

      IL_00f6:  ldloc.3
      IL_00f7:  brfalse    IL_0107

      IL_00fc:  ldstr      "Peer is closed"
      IL_0101:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0106:  throw

      IL_0107:  ldarg.0
      IL_0108:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_010d:  br.s       IL_00c8

      IL_010f:  ldarg.0
      IL_0110:  ldc.i4.s   11
      IL_0112:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0117:  ldloc.s    V_4
      IL_0119:  ldc.i4.s   11
      IL_011b:  beq        IL_013d

      IL_0120:  ldstr      "can't recv GetLocalPort when next message has tag "
      IL_0125:  ldarg.0
      IL_0126:  volatile.
      IL_0128:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_012d:  box        [kernel]System.Int32
      IL_0132:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0137:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_013c:  throw

      IL_013d:  ldarg.0
      IL_013e:  ldc.i4.0
      IL_013f:  volatile.
      IL_0141:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0146:  ldarg.0
      IL_0147:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort NetStack.Contracts.TcpConnectionContract/Exp::GetLocalPortPod1
      IL_014c:  initobj    NetStack.Contracts.TcpConnectionContract/GetLocalPort
      IL_0152:  ldarg.0
      IL_0153:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0158:  ldc.i4.7
      IL_0159:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_015e:  br         IL_02b7

      IL_0163:  ldc.i4.0
      IL_0164:  stloc.s    V_5
      IL_0166:  ldarg.0
      IL_0167:  volatile.
      IL_0169:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_016e:  stloc.s    V_6
      IL_0170:  ldloc.s    V_6
      IL_0172:  brtrue     IL_0189

      IL_0177:  ldarg.0
      IL_0178:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_017d:  stloc.s    V_5
      IL_017f:  ldarg.0
      IL_0180:  volatile.
      IL_0182:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0187:  stloc.s    V_6
      IL_0189:  ldloc.s    V_6
      IL_018b:  ldc.i4.0
      IL_018c:  ceq
      IL_018e:  brfalse    IL_01ad

      IL_0193:  ldloc.s    V_5
      IL_0195:  brfalse    IL_01a5

      IL_019a:  ldstr      "Peer is closed"
      IL_019f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01a4:  throw

      IL_01a5:  ldarg.0
      IL_01a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01ab:  br.s       IL_0163

      IL_01ad:  ldarg.0
      IL_01ae:  ldc.i4.s   11
      IL_01b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01b5:  ldloc.s    V_6
      IL_01b7:  ldc.i4.s   11
      IL_01b9:  beq        IL_01db

      IL_01be:  ldstr      "can't recv GetLocalPort when next message has tag "
      IL_01c3:  ldarg.0
      IL_01c4:  volatile.
      IL_01c6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_01cb:  box        [kernel]System.Int32
      IL_01d0:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01d5:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01da:  throw

      IL_01db:  ldarg.0
      IL_01dc:  ldc.i4.0
      IL_01dd:  volatile.
      IL_01df:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_01e4:  ldarg.0
      IL_01e5:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort NetStack.Contracts.TcpConnectionContract/Exp::GetLocalPortPod1
      IL_01ea:  initobj    NetStack.Contracts.TcpConnectionContract/GetLocalPort
      IL_01f0:  ldarg.0
      IL_01f1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01f6:  ldc.i4.s   14
      IL_01f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01fd:  br         IL_02b7

      IL_0202:  ldc.i4.0
      IL_0203:  stloc.s    V_7
      IL_0205:  ldarg.0
      IL_0206:  volatile.
      IL_0208:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_020d:  stloc.s    V_8
      IL_020f:  ldloc.s    V_8
      IL_0211:  brtrue     IL_0228

      IL_0216:  ldarg.0
      IL_0217:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_021c:  stloc.s    V_7
      IL_021e:  ldarg.0
      IL_021f:  volatile.
      IL_0221:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0226:  stloc.s    V_8
      IL_0228:  ldloc.s    V_8
      IL_022a:  ldc.i4.0
      IL_022b:  ceq
      IL_022d:  brfalse    IL_024c

      IL_0232:  ldloc.s    V_7
      IL_0234:  brfalse    IL_0244

      IL_0239:  ldstr      "Peer is closed"
      IL_023e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0243:  throw

      IL_0244:  ldarg.0
      IL_0245:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_024a:  br.s       IL_0202

      IL_024c:  ldarg.0
      IL_024d:  ldc.i4.s   11
      IL_024f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0254:  ldloc.s    V_8
      IL_0256:  ldc.i4.s   11
      IL_0258:  beq        IL_027a

      IL_025d:  ldstr      "can't recv GetLocalPort when next message has tag "
      IL_0262:  ldarg.0
      IL_0263:  volatile.
      IL_0265:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_026a:  box        [kernel]System.Int32
      IL_026f:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0274:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0279:  throw

      IL_027a:  ldarg.0
      IL_027b:  ldc.i4.0
      IL_027c:  volatile.
      IL_027e:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0283:  ldarg.0
      IL_0284:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort NetStack.Contracts.TcpConnectionContract/Exp::GetLocalPortPod2
      IL_0289:  initobj    NetStack.Contracts.TcpConnectionContract/GetLocalPort
      IL_028f:  ldarg.0
      IL_0290:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0295:  ldc.i4.s   24
      IL_0297:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_029c:  br         IL_02b7

      IL_02a1:  ldstr      "can't recv GetLocalPort in state "
      IL_02a6:  ldarg.0
      IL_02a7:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_02ac:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02b1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02b6:  throw

      IL_02b7:  ret
    } // end of method Exp::RecvGetLocalPort

    .method public instance void  RecvAccept([out] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& newConnection) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Accept when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Accept NetStack.Contracts.TcpConnectionContract/Exp::AcceptPod0
      IL_0090:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Accept NetStack.Contracts.TcpConnectionContract/Exp::AcceptPod0
      IL_00a5:  initobj    NetStack.Contracts.TcpConnectionContract/Accept
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   30
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv Accept in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00c8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvAccept

    .method public instance void  RecvIsSessionAvailable() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv IsSessionAvailable when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IsSessionAvailable NetStack.Contracts.TcpConnectionContract/Exp::IsSessionAvailablePod0
      IL_0098:  initobj    NetStack.Contracts.TcpConnectionContract/IsSessionAvailable
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   31
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv IsSessionAvailable in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00bb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvIsSessionAvailable

    .method public instance void  SendIPAddress(uint32 ip) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       689 (0x2b1)
      .maxstack  40
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24,
               bool V_25,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_26,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_27,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_28)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0047

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  beq        IL_0096

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   23
      IL_001f:  beq        IL_00ec

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   33
      IL_0027:  beq        IL_0142

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.8
      IL_002e:  beq        IL_0198

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.s   13
      IL_0036:  beq        IL_01ee

      IL_003b:  ldloc.0
      IL_003c:  ldc.i4.6
      IL_003d:  beq        IL_0244

      IL_0042:  br         IL_029a

      IL_0047:  ldarg.0
      IL_0048:  ldloca.s   V_1
      IL_004a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_004f:  stloc.2
      IL_0050:  ldloc.2
      IL_0051:  stloc.3
      IL_0052:  ldloc.3
      IL_0053:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0058:  stloc.s    V_4
      IL_005a:  ldloc.1
      IL_005b:  brtrue     IL_0071

      IL_0060:  ldloc.3
      IL_0061:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0066:  ldarg.1
      IL_0067:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverIPAddress0$PST0600045E(uint32)
      IL_006c:  br         IL_007e

      IL_0071:  ldloc.3
      IL_0072:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0077:  ldarg.1
      IL_0078:  ldarg.0
      IL_0079:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverIPAddress0$PST0600045F(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_007e:  ldarg.0
      IL_007f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0084:  ldarg.0
      IL_0085:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_008a:  ldc.i4.s   28
      IL_008c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0091:  br         IL_02b0

      IL_0096:  ldarg.0
      IL_0097:  ldloca.s   V_5
      IL_0099:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_009e:  stloc.s    V_6
      IL_00a0:  ldloc.s    V_6
      IL_00a2:  stloc.s    V_7
      IL_00a4:  ldloc.s    V_7
      IL_00a6:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00ab:  stloc.s    V_8
      IL_00ad:  ldloc.s    V_5
      IL_00af:  brtrue     IL_00c6

      IL_00b4:  ldloc.s    V_7
      IL_00b6:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00bb:  ldarg.1
      IL_00bc:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverIPAddress0$PST0600045E(uint32)
      IL_00c1:  br         IL_00d4

      IL_00c6:  ldloc.s    V_7
      IL_00c8:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00cd:  ldarg.1
      IL_00ce:  ldarg.0
      IL_00cf:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverIPAddress0$PST0600045F(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00d4:  ldarg.0
      IL_00d5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00da:  ldarg.0
      IL_00db:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e0:  ldc.i4.s   18
      IL_00e2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e7:  br         IL_02b0

      IL_00ec:  ldarg.0
      IL_00ed:  ldloca.s   V_9
      IL_00ef:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00f4:  stloc.s    V_10
      IL_00f6:  ldloc.s    V_10
      IL_00f8:  stloc.s    V_11
      IL_00fa:  ldloc.s    V_11
      IL_00fc:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0101:  stloc.s    V_12
      IL_0103:  ldloc.s    V_9
      IL_0105:  brtrue     IL_011c

      IL_010a:  ldloc.s    V_11
      IL_010c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0111:  ldarg.1
      IL_0112:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverIPAddress0$PST0600045E(uint32)
      IL_0117:  br         IL_012a

      IL_011c:  ldloc.s    V_11
      IL_011e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0123:  ldarg.1
      IL_0124:  ldarg.0
      IL_0125:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverIPAddress0$PST0600045F(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_012a:  ldarg.0
      IL_012b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0130:  ldarg.0
      IL_0131:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0136:  ldc.i4.s   28
      IL_0138:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_013d:  br         IL_02b0

      IL_0142:  ldarg.0
      IL_0143:  ldloca.s   V_13
      IL_0145:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_014a:  stloc.s    V_14
      IL_014c:  ldloc.s    V_14
      IL_014e:  stloc.s    V_15
      IL_0150:  ldloc.s    V_15
      IL_0152:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0157:  stloc.s    V_16
      IL_0159:  ldloc.s    V_13
      IL_015b:  brtrue     IL_0172

      IL_0160:  ldloc.s    V_15
      IL_0162:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0167:  ldarg.1
      IL_0168:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverIPAddress0$PST0600045E(uint32)
      IL_016d:  br         IL_0180

      IL_0172:  ldloc.s    V_15
      IL_0174:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0179:  ldarg.1
      IL_017a:  ldarg.0
      IL_017b:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverIPAddress0$PST0600045F(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0180:  ldarg.0
      IL_0181:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0186:  ldarg.0
      IL_0187:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_018c:  ldc.i4.s   34
      IL_018e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0193:  br         IL_02b0

      IL_0198:  ldarg.0
      IL_0199:  ldloca.s   V_17
      IL_019b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01a0:  stloc.s    V_18
      IL_01a2:  ldloc.s    V_18
      IL_01a4:  stloc.s    V_19
      IL_01a6:  ldloc.s    V_19
      IL_01a8:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01ad:  stloc.s    V_20
      IL_01af:  ldloc.s    V_17
      IL_01b1:  brtrue     IL_01c8

      IL_01b6:  ldloc.s    V_19
      IL_01b8:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01bd:  ldarg.1
      IL_01be:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverIPAddress0$PST0600045E(uint32)
      IL_01c3:  br         IL_01d6

      IL_01c8:  ldloc.s    V_19
      IL_01ca:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01cf:  ldarg.1
      IL_01d0:  ldarg.0
      IL_01d1:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverIPAddress0$PST0600045F(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01d6:  ldarg.0
      IL_01d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01dc:  ldarg.0
      IL_01dd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01e2:  ldc.i4.s   9
      IL_01e4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01e9:  br         IL_02b0

      IL_01ee:  ldarg.0
      IL_01ef:  ldloca.s   V_21
      IL_01f1:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01f6:  stloc.s    V_22
      IL_01f8:  ldloc.s    V_22
      IL_01fa:  stloc.s    V_23
      IL_01fc:  ldloc.s    V_23
      IL_01fe:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0203:  stloc.s    V_24
      IL_0205:  ldloc.s    V_21
      IL_0207:  brtrue     IL_021e

      IL_020c:  ldloc.s    V_23
      IL_020e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0213:  ldarg.1
      IL_0214:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverIPAddress0$PST0600045E(uint32)
      IL_0219:  br         IL_022c

      IL_021e:  ldloc.s    V_23
      IL_0220:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0225:  ldarg.1
      IL_0226:  ldarg.0
      IL_0227:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverIPAddress0$PST0600045F(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_022c:  ldarg.0
      IL_022d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0232:  ldarg.0
      IL_0233:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0238:  ldc.i4.s   18
      IL_023a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_023f:  br         IL_02b0

      IL_0244:  ldarg.0
      IL_0245:  ldloca.s   V_25
      IL_0247:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_024c:  stloc.s    V_26
      IL_024e:  ldloc.s    V_26
      IL_0250:  stloc.s    V_27
      IL_0252:  ldloc.s    V_27
      IL_0254:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0259:  stloc.s    V_28
      IL_025b:  ldloc.s    V_25
      IL_025d:  brtrue     IL_0274

      IL_0262:  ldloc.s    V_27
      IL_0264:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0269:  ldarg.1
      IL_026a:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverIPAddress0$PST0600045E(uint32)
      IL_026f:  br         IL_0282

      IL_0274:  ldloc.s    V_27
      IL_0276:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_027b:  ldarg.1
      IL_027c:  ldarg.0
      IL_027d:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverIPAddress0$PST0600045F(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0282:  ldarg.0
      IL_0283:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0288:  ldarg.0
      IL_0289:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_028e:  ldc.i4.s   9
      IL_0290:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0295:  br         IL_02b0

      IL_029a:  ldstr      "can't send IPAddress in state "
      IL_029f:  ldarg.0
      IL_02a0:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_02a5:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02aa:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02af:  throw

      IL_02b0:  ret
    } // end of method Exp::SendIPAddress

    .method public instance void  SendPort(uint16 port) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       689 (0x2b1)
      .maxstack  40
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24,
               bool V_25,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_26,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_27,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_28)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0047

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   24
      IL_0016:  beq        IL_0096

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   14
      IL_001e:  beq        IL_00ec

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.s   22
      IL_0026:  beq        IL_0142

      IL_002b:  ldloc.0
      IL_002c:  ldc.i4.s   32
      IL_002e:  beq        IL_0198

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.7
      IL_0035:  beq        IL_01ee

      IL_003a:  ldloc.0
      IL_003b:  ldc.i4.s   12
      IL_003d:  beq        IL_0244

      IL_0042:  br         IL_029a

      IL_0047:  ldarg.0
      IL_0048:  ldloca.s   V_1
      IL_004a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_004f:  stloc.2
      IL_0050:  ldloc.2
      IL_0051:  stloc.3
      IL_0052:  ldloc.3
      IL_0053:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0058:  stloc.s    V_4
      IL_005a:  ldloc.1
      IL_005b:  brtrue     IL_0071

      IL_0060:  ldloc.3
      IL_0061:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0066:  ldarg.1
      IL_0067:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverPort0$PST06000460(uint16)
      IL_006c:  br         IL_007e

      IL_0071:  ldloc.3
      IL_0072:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0077:  ldarg.1
      IL_0078:  ldarg.0
      IL_0079:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverPort0$PST06000461(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_007e:  ldarg.0
      IL_007f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0084:  ldarg.0
      IL_0085:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_008a:  ldc.i4.s   9
      IL_008c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0091:  br         IL_02b0

      IL_0096:  ldarg.0
      IL_0097:  ldloca.s   V_5
      IL_0099:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_009e:  stloc.s    V_6
      IL_00a0:  ldloc.s    V_6
      IL_00a2:  stloc.s    V_7
      IL_00a4:  ldloc.s    V_7
      IL_00a6:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00ab:  stloc.s    V_8
      IL_00ad:  ldloc.s    V_5
      IL_00af:  brtrue     IL_00c6

      IL_00b4:  ldloc.s    V_7
      IL_00b6:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00bb:  ldarg.1
      IL_00bc:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverPort0$PST06000460(uint16)
      IL_00c1:  br         IL_00d4

      IL_00c6:  ldloc.s    V_7
      IL_00c8:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00cd:  ldarg.1
      IL_00ce:  ldarg.0
      IL_00cf:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverPort0$PST06000461(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00d4:  ldarg.0
      IL_00d5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00da:  ldarg.0
      IL_00db:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e0:  ldc.i4.s   28
      IL_00e2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e7:  br         IL_02b0

      IL_00ec:  ldarg.0
      IL_00ed:  ldloca.s   V_9
      IL_00ef:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00f4:  stloc.s    V_10
      IL_00f6:  ldloc.s    V_10
      IL_00f8:  stloc.s    V_11
      IL_00fa:  ldloc.s    V_11
      IL_00fc:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0101:  stloc.s    V_12
      IL_0103:  ldloc.s    V_9
      IL_0105:  brtrue     IL_011c

      IL_010a:  ldloc.s    V_11
      IL_010c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0111:  ldarg.1
      IL_0112:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverPort0$PST06000460(uint16)
      IL_0117:  br         IL_012a

      IL_011c:  ldloc.s    V_11
      IL_011e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0123:  ldarg.1
      IL_0124:  ldarg.0
      IL_0125:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverPort0$PST06000461(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_012a:  ldarg.0
      IL_012b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0130:  ldarg.0
      IL_0131:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0136:  ldc.i4.s   18
      IL_0138:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_013d:  br         IL_02b0

      IL_0142:  ldarg.0
      IL_0143:  ldloca.s   V_13
      IL_0145:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_014a:  stloc.s    V_14
      IL_014c:  ldloc.s    V_14
      IL_014e:  stloc.s    V_15
      IL_0150:  ldloc.s    V_15
      IL_0152:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0157:  stloc.s    V_16
      IL_0159:  ldloc.s    V_13
      IL_015b:  brtrue     IL_0172

      IL_0160:  ldloc.s    V_15
      IL_0162:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0167:  ldarg.1
      IL_0168:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverPort0$PST06000460(uint16)
      IL_016d:  br         IL_0180

      IL_0172:  ldloc.s    V_15
      IL_0174:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0179:  ldarg.1
      IL_017a:  ldarg.0
      IL_017b:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverPort0$PST06000461(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0180:  ldarg.0
      IL_0181:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0186:  ldarg.0
      IL_0187:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_018c:  ldc.i4.s   28
      IL_018e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0193:  br         IL_02b0

      IL_0198:  ldarg.0
      IL_0199:  ldloca.s   V_17
      IL_019b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01a0:  stloc.s    V_18
      IL_01a2:  ldloc.s    V_18
      IL_01a4:  stloc.s    V_19
      IL_01a6:  ldloc.s    V_19
      IL_01a8:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01ad:  stloc.s    V_20
      IL_01af:  ldloc.s    V_17
      IL_01b1:  brtrue     IL_01c8

      IL_01b6:  ldloc.s    V_19
      IL_01b8:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01bd:  ldarg.1
      IL_01be:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverPort0$PST06000460(uint16)
      IL_01c3:  br         IL_01d6

      IL_01c8:  ldloc.s    V_19
      IL_01ca:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_01cf:  ldarg.1
      IL_01d0:  ldarg.0
      IL_01d1:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverPort0$PST06000461(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01d6:  ldarg.0
      IL_01d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01dc:  ldarg.0
      IL_01dd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01e2:  ldc.i4.s   34
      IL_01e4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01e9:  br         IL_02b0

      IL_01ee:  ldarg.0
      IL_01ef:  ldloca.s   V_21
      IL_01f1:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01f6:  stloc.s    V_22
      IL_01f8:  ldloc.s    V_22
      IL_01fa:  stloc.s    V_23
      IL_01fc:  ldloc.s    V_23
      IL_01fe:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0203:  stloc.s    V_24
      IL_0205:  ldloc.s    V_21
      IL_0207:  brtrue     IL_021e

      IL_020c:  ldloc.s    V_23
      IL_020e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0213:  ldarg.1
      IL_0214:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverPort0$PST06000460(uint16)
      IL_0219:  br         IL_022c

      IL_021e:  ldloc.s    V_23
      IL_0220:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0225:  ldarg.1
      IL_0226:  ldarg.0
      IL_0227:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverPort0$PST06000461(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_022c:  ldarg.0
      IL_022d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0232:  ldarg.0
      IL_0233:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0238:  ldc.i4.s   9
      IL_023a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_023f:  br         IL_02b0

      IL_0244:  ldarg.0
      IL_0245:  ldloca.s   V_25
      IL_0247:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_024c:  stloc.s    V_26
      IL_024e:  ldloc.s    V_26
      IL_0250:  stloc.s    V_27
      IL_0252:  ldloc.s    V_27
      IL_0254:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0259:  stloc.s    V_28
      IL_025b:  ldloc.s    V_25
      IL_025d:  brtrue     IL_0274

      IL_0262:  ldloc.s    V_27
      IL_0264:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0269:  ldarg.1
      IL_026a:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverPort0$PST06000460(uint16)
      IL_026f:  br         IL_0282

      IL_0274:  ldloc.s    V_27
      IL_0276:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_027b:  ldarg.1
      IL_027c:  ldarg.0
      IL_027d:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverPort0$PST06000461(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0282:  ldarg.0
      IL_0283:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0288:  ldarg.0
      IL_0289:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_028e:  ldc.i4.s   18
      IL_0290:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0295:  br         IL_02b0

      IL_029a:  ldstr      "can't send Port in state "
      IL_029f:  ldarg.0
      IL_02a0:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_02a5:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02aa:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02af:  throw

      IL_02b0:  ret
    } // end of method Exp::SendPort

    .method public instance void  SendSessionIsAvailable(bool isAvailable) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverSessionIsAvailable0$PST06000462(bool)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverSessionIsAvailable0$PST06000463(bool,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   34
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send SessionIsAvailable in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0073:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendSessionIsAvailable

    .method public instance void  RecvRead() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       363 (0x16b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00b8

      IL_001c:  br         IL_0154

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   17
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   17
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv Read when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Read NetStack.Contracts.TcpConnectionContract/Exp::ReadPod1
      IL_00a0:  initobj    NetStack.Contracts.TcpConnectionContract/Read
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.s   11
      IL_00ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b3:  br         IL_016a

      IL_00b8:  ldc.i4.0
      IL_00b9:  stloc.3
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00c2:  stloc.s    V_4
      IL_00c4:  ldloc.s    V_4
      IL_00c6:  brtrue     IL_00dc

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  ldc.i4.0
      IL_00df:  ceq
      IL_00e1:  brfalse    IL_00ff

      IL_00e6:  ldloc.3
      IL_00e7:  brfalse    IL_00f7

      IL_00ec:  ldstr      "Peer is closed"
      IL_00f1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ldarg.0
      IL_00f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fd:  br.s       IL_00b8

      IL_00ff:  ldarg.0
      IL_0100:  ldc.i4.s   17
      IL_0102:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0107:  ldloc.s    V_4
      IL_0109:  ldc.i4.s   17
      IL_010b:  beq        IL_012d

      IL_0110:  ldstr      "can't recv Read when next message has tag "
      IL_0115:  ldarg.0
      IL_0116:  volatile.
      IL_0118:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_011d:  box        [kernel]System.Int32
      IL_0122:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0127:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ldarg.0
      IL_012e:  ldc.i4.0
      IL_012f:  volatile.
      IL_0131:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0136:  ldarg.0
      IL_0137:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Read NetStack.Contracts.TcpConnectionContract/Exp::ReadPod2
      IL_013c:  initobj    NetStack.Contracts.TcpConnectionContract/Read
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.s   21
      IL_014a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014f:  br         IL_016a

      IL_0154:  ldstr      "can't recv Read in state "
      IL_0159:  ldarg.0
      IL_015a:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_015f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0164:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0169:  throw

      IL_016a:  ret
    } // end of method Exp::RecvRead

    .method public instance void  RecvPollRead([out] int32& timeout) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       389 (0x185)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00c5

      IL_001c:  br         IL_016e

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   18
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   18
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv PollRead when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/PollRead NetStack.Contracts.TcpConnectionContract/Exp::PollReadPod1
      IL_0098:  ldfld      int32 NetStack.Contracts.TcpConnectionContract/PollRead::timeout
      IL_009d:  stind.i4
      IL_009e:  ldarg.0
      IL_009f:  ldc.i4.0
      IL_00a0:  volatile.
      IL_00a2:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00a7:  ldarg.0
      IL_00a8:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/PollRead NetStack.Contracts.TcpConnectionContract/Exp::PollReadPod1
      IL_00ad:  initobj    NetStack.Contracts.TcpConnectionContract/PollRead
      IL_00b3:  ldarg.0
      IL_00b4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b9:  ldc.i4.s   10
      IL_00bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c0:  br         IL_0184

      IL_00c5:  ldc.i4.0
      IL_00c6:  stloc.3
      IL_00c7:  ldarg.0
      IL_00c8:  volatile.
      IL_00ca:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00cf:  stloc.s    V_4
      IL_00d1:  ldloc.s    V_4
      IL_00d3:  brtrue     IL_00e9

      IL_00d8:  ldarg.0
      IL_00d9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00de:  stloc.3
      IL_00df:  ldarg.0
      IL_00e0:  volatile.
      IL_00e2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00e7:  stloc.s    V_4
      IL_00e9:  ldloc.s    V_4
      IL_00eb:  ldc.i4.0
      IL_00ec:  ceq
      IL_00ee:  brfalse    IL_010c

      IL_00f3:  ldloc.3
      IL_00f4:  brfalse    IL_0104

      IL_00f9:  ldstr      "Peer is closed"
      IL_00fe:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0103:  throw

      IL_0104:  ldarg.0
      IL_0105:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_010a:  br.s       IL_00c5

      IL_010c:  ldarg.0
      IL_010d:  ldc.i4.s   18
      IL_010f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0114:  ldloc.s    V_4
      IL_0116:  ldc.i4.s   18
      IL_0118:  beq        IL_013a

      IL_011d:  ldstr      "can't recv PollRead when next message has tag "
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_012a:  box        [kernel]System.Int32
      IL_012f:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0134:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0139:  throw

      IL_013a:  ldarg.1
      IL_013b:  ldarg.0
      IL_013c:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/PollRead NetStack.Contracts.TcpConnectionContract/Exp::PollReadPod2
      IL_0141:  ldfld      int32 NetStack.Contracts.TcpConnectionContract/PollRead::timeout
      IL_0146:  stind.i4
      IL_0147:  ldarg.0
      IL_0148:  ldc.i4.0
      IL_0149:  volatile.
      IL_014b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0150:  ldarg.0
      IL_0151:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/PollRead NetStack.Contracts.TcpConnectionContract/Exp::PollReadPod2
      IL_0156:  initobj    NetStack.Contracts.TcpConnectionContract/PollRead
      IL_015c:  ldarg.0
      IL_015d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0162:  ldc.i4.s   20
      IL_0164:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0169:  br         IL_0184

      IL_016e:  ldstr      "can't recv PollRead in state "
      IL_0173:  ldarg.0
      IL_0174:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0179:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_017e:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0183:  throw

      IL_0184:  ret
    } // end of method Exp::RecvPollRead

    .method public instance void  RecvIsDataAvailable() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       363 (0x16b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   18
      IL_0017:  beq        IL_00b8

      IL_001c:  br         IL_0154

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   19
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   19
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv IsDataAvailable when next message has t"
      + "ag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable NetStack.Contracts.TcpConnectionContract/Exp::IsDataAvailablePod2
      IL_00a0:  initobj    NetStack.Contracts.TcpConnectionContract/IsDataAvailable
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.s   27
      IL_00ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b3:  br         IL_016a

      IL_00b8:  ldc.i4.0
      IL_00b9:  stloc.3
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00c2:  stloc.s    V_4
      IL_00c4:  ldloc.s    V_4
      IL_00c6:  brtrue     IL_00dc

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  ldc.i4.0
      IL_00df:  ceq
      IL_00e1:  brfalse    IL_00ff

      IL_00e6:  ldloc.3
      IL_00e7:  brfalse    IL_00f7

      IL_00ec:  ldstr      "Peer is closed"
      IL_00f1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ldarg.0
      IL_00f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fd:  br.s       IL_00b8

      IL_00ff:  ldarg.0
      IL_0100:  ldc.i4.s   19
      IL_0102:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0107:  ldloc.s    V_4
      IL_0109:  ldc.i4.s   19
      IL_010b:  beq        IL_012d

      IL_0110:  ldstr      "can't recv IsDataAvailable when next message has t"
      + "ag "
      IL_0115:  ldarg.0
      IL_0116:  volatile.
      IL_0118:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_011d:  box        [kernel]System.Int32
      IL_0122:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0127:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ldarg.0
      IL_012e:  ldc.i4.0
      IL_012f:  volatile.
      IL_0131:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0136:  ldarg.0
      IL_0137:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable NetStack.Contracts.TcpConnectionContract/Exp::IsDataAvailablePod1
      IL_013c:  initobj    NetStack.Contracts.TcpConnectionContract/IsDataAvailable
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.s   17
      IL_014a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014f:  br         IL_016a

      IL_0154:  ldstr      "can't recv IsDataAvailable in state "
      IL_0159:  ldarg.0
      IL_015a:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_015f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0164:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0169:  throw

      IL_016a:  ret
    } // end of method Exp::RecvIsDataAvailable

    .method public instance void  RecvWrite([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       388 (0x184)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00c4

      IL_001c:  br         IL_016d

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   20
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   20
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv Write when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Write NetStack.Contracts.TcpConnectionContract/Exp::WritePod1
      IL_0098:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_009d:  stind.i
      IL_009e:  ldarg.0
      IL_009f:  ldc.i4.0
      IL_00a0:  volatile.
      IL_00a2:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00a7:  ldarg.0
      IL_00a8:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Write NetStack.Contracts.TcpConnectionContract/Exp::WritePod1
      IL_00ad:  initobj    NetStack.Contracts.TcpConnectionContract/Write
      IL_00b3:  ldarg.0
      IL_00b4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b9:  ldc.i4.4
      IL_00ba:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bf:  br         IL_0183

      IL_00c4:  ldc.i4.0
      IL_00c5:  stloc.3
      IL_00c6:  ldarg.0
      IL_00c7:  volatile.
      IL_00c9:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00ce:  stloc.s    V_4
      IL_00d0:  ldloc.s    V_4
      IL_00d2:  brtrue     IL_00e8

      IL_00d7:  ldarg.0
      IL_00d8:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00dd:  stloc.3
      IL_00de:  ldarg.0
      IL_00df:  volatile.
      IL_00e1:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00e6:  stloc.s    V_4
      IL_00e8:  ldloc.s    V_4
      IL_00ea:  ldc.i4.0
      IL_00eb:  ceq
      IL_00ed:  brfalse    IL_010b

      IL_00f2:  ldloc.3
      IL_00f3:  brfalse    IL_0103

      IL_00f8:  ldstr      "Peer is closed"
      IL_00fd:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0102:  throw

      IL_0103:  ldarg.0
      IL_0104:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0109:  br.s       IL_00c4

      IL_010b:  ldarg.0
      IL_010c:  ldc.i4.s   20
      IL_010e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0113:  ldloc.s    V_4
      IL_0115:  ldc.i4.s   20
      IL_0117:  beq        IL_0139

      IL_011c:  ldstr      "can't recv Write when next message has tag "
      IL_0121:  ldarg.0
      IL_0122:  volatile.
      IL_0124:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0129:  box        [kernel]System.Int32
      IL_012e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0133:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0138:  throw

      IL_0139:  ldarg.1
      IL_013a:  ldarg.0
      IL_013b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Write NetStack.Contracts.TcpConnectionContract/Exp::WritePod2
      IL_0140:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_0145:  stind.i
      IL_0146:  ldarg.0
      IL_0147:  ldc.i4.0
      IL_0148:  volatile.
      IL_014a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_014f:  ldarg.0
      IL_0150:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Write NetStack.Contracts.TcpConnectionContract/Exp::WritePod2
      IL_0155:  initobj    NetStack.Contracts.TcpConnectionContract/Write
      IL_015b:  ldarg.0
      IL_015c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0161:  ldc.i4.s   19
      IL_0163:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0168:  br         IL_0183

      IL_016d:  ldstr      "can't recv Write in state "
      IL_0172:  ldarg.0
      IL_0173:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0178:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_017d:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0182:  throw

      IL_0183:  ret
    } // end of method Exp::RecvWrite

    .method public instance void  RecvClose() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       1190 (0x4a6)
      .maxstack  33
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   37
      IL_000f:  beq        IL_0048

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00de

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   34
      IL_001f:  beq        IL_0179

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.3
      IL_0026:  beq        IL_0217

      IL_002b:  ldloc.0
      IL_002c:  ldc.i4.s   9
      IL_002e:  beq        IL_02b5

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.s   18
      IL_0036:  beq        IL_0353

      IL_003b:  ldloc.0
      IL_003c:  ldc.i4.s   39
      IL_003e:  beq        IL_03f1

      IL_0043:  br         IL_048f

      IL_0048:  ldc.i4.0
      IL_0049:  stloc.1
      IL_004a:  ldarg.0
      IL_004b:  volatile.
      IL_004d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0052:  stloc.2
      IL_0053:  ldloc.2
      IL_0054:  brtrue     IL_0069

      IL_0059:  ldarg.0
      IL_005a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_005f:  stloc.1
      IL_0060:  ldarg.0
      IL_0061:  volatile.
      IL_0063:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0068:  stloc.2
      IL_0069:  ldloc.2
      IL_006a:  ldc.i4.0
      IL_006b:  ceq
      IL_006d:  brfalse    IL_008b

      IL_0072:  ldloc.1
      IL_0073:  brfalse    IL_0083

      IL_0078:  ldstr      "Peer is closed"
      IL_007d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0082:  throw

      IL_0083:  ldarg.0
      IL_0084:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0089:  br.s       IL_0048

      IL_008b:  ldarg.0
      IL_008c:  ldc.i4.s   21
      IL_008e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0093:  ldloc.2
      IL_0094:  ldc.i4.s   21
      IL_0096:  beq        IL_00b8

      IL_009b:  ldstr      "can't recv Close when next message has tag "
      IL_00a0:  ldarg.0
      IL_00a1:  volatile.
      IL_00a3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_00a8:  box        [kernel]System.Int32
      IL_00ad:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00b2:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00b7:  throw

      IL_00b8:  ldarg.0
      IL_00b9:  ldc.i4.0
      IL_00ba:  volatile.
      IL_00bc:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_00c1:  ldarg.0
      IL_00c2:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod0
      IL_00c7:  initobj    NetStack.Contracts.TcpConnectionContract/Close
      IL_00cd:  ldarg.0
      IL_00ce:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d3:  ldc.i4.2
      IL_00d4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d9:  br         IL_04a5

      IL_00de:  ldc.i4.0
      IL_00df:  stloc.3
      IL_00e0:  ldarg.0
      IL_00e1:  volatile.
      IL_00e3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00e8:  stloc.s    V_4
      IL_00ea:  ldloc.s    V_4
      IL_00ec:  brtrue     IL_0102

      IL_00f1:  ldarg.0
      IL_00f2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00f7:  stloc.3
      IL_00f8:  ldarg.0
      IL_00f9:  volatile.
      IL_00fb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0100:  stloc.s    V_4
      IL_0102:  ldloc.s    V_4
      IL_0104:  ldc.i4.0
      IL_0105:  ceq
      IL_0107:  brfalse    IL_0125

      IL_010c:  ldloc.3
      IL_010d:  brfalse    IL_011d

      IL_0112:  ldstr      "Peer is closed"
      IL_0117:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_011c:  throw

      IL_011d:  ldarg.0
      IL_011e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0123:  br.s       IL_00de

      IL_0125:  ldarg.0
      IL_0126:  ldc.i4.s   21
      IL_0128:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_012d:  ldloc.s    V_4
      IL_012f:  ldc.i4.s   21
      IL_0131:  beq        IL_0153

      IL_0136:  ldstr      "can't recv Close when next message has tag "
      IL_013b:  ldarg.0
      IL_013c:  volatile.
      IL_013e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0143:  box        [kernel]System.Int32
      IL_0148:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_014d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0152:  throw

      IL_0153:  ldarg.0
      IL_0154:  ldc.i4.0
      IL_0155:  volatile.
      IL_0157:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_015c:  ldarg.0
      IL_015d:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod2
      IL_0162:  initobj    NetStack.Contracts.TcpConnectionContract/Close
      IL_0168:  ldarg.0
      IL_0169:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_016e:  ldc.i4.2
      IL_016f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0174:  br         IL_04a5

      IL_0179:  ldc.i4.0
      IL_017a:  stloc.s    V_5
      IL_017c:  ldarg.0
      IL_017d:  volatile.
      IL_017f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0184:  stloc.s    V_6
      IL_0186:  ldloc.s    V_6
      IL_0188:  brtrue     IL_019f

      IL_018d:  ldarg.0
      IL_018e:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0193:  stloc.s    V_5
      IL_0195:  ldarg.0
      IL_0196:  volatile.
      IL_0198:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_019d:  stloc.s    V_6
      IL_019f:  ldloc.s    V_6
      IL_01a1:  ldc.i4.0
      IL_01a2:  ceq
      IL_01a4:  brfalse    IL_01c3

      IL_01a9:  ldloc.s    V_5
      IL_01ab:  brfalse    IL_01bb

      IL_01b0:  ldstr      "Peer is closed"
      IL_01b5:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01ba:  throw

      IL_01bb:  ldarg.0
      IL_01bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01c1:  br.s       IL_0179

      IL_01c3:  ldarg.0
      IL_01c4:  ldc.i4.s   21
      IL_01c6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01cb:  ldloc.s    V_6
      IL_01cd:  ldc.i4.s   21
      IL_01cf:  beq        IL_01f1

      IL_01d4:  ldstr      "can't recv Close when next message has tag "
      IL_01d9:  ldarg.0
      IL_01da:  volatile.
      IL_01dc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_01e1:  box        [kernel]System.Int32
      IL_01e6:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01eb:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01f0:  throw

      IL_01f1:  ldarg.0
      IL_01f2:  ldc.i4.0
      IL_01f3:  volatile.
      IL_01f5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_01fa:  ldarg.0
      IL_01fb:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod0
      IL_0200:  initobj    NetStack.Contracts.TcpConnectionContract/Close
      IL_0206:  ldarg.0
      IL_0207:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_020c:  ldc.i4.2
      IL_020d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0212:  br         IL_04a5

      IL_0217:  ldc.i4.0
      IL_0218:  stloc.s    V_7
      IL_021a:  ldarg.0
      IL_021b:  volatile.
      IL_021d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0222:  stloc.s    V_8
      IL_0224:  ldloc.s    V_8
      IL_0226:  brtrue     IL_023d

      IL_022b:  ldarg.0
      IL_022c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0231:  stloc.s    V_7
      IL_0233:  ldarg.0
      IL_0234:  volatile.
      IL_0236:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_023b:  stloc.s    V_8
      IL_023d:  ldloc.s    V_8
      IL_023f:  ldc.i4.0
      IL_0240:  ceq
      IL_0242:  brfalse    IL_0261

      IL_0247:  ldloc.s    V_7
      IL_0249:  brfalse    IL_0259

      IL_024e:  ldstr      "Peer is closed"
      IL_0253:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0258:  throw

      IL_0259:  ldarg.0
      IL_025a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_025f:  br.s       IL_0217

      IL_0261:  ldarg.0
      IL_0262:  ldc.i4.s   21
      IL_0264:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0269:  ldloc.s    V_8
      IL_026b:  ldc.i4.s   21
      IL_026d:  beq        IL_028f

      IL_0272:  ldstr      "can't recv Close when next message has tag "
      IL_0277:  ldarg.0
      IL_0278:  volatile.
      IL_027a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_027f:  box        [kernel]System.Int32
      IL_0284:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0289:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_028e:  throw

      IL_028f:  ldarg.0
      IL_0290:  ldc.i4.0
      IL_0291:  volatile.
      IL_0293:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0298:  ldarg.0
      IL_0299:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod0
      IL_029e:  initobj    NetStack.Contracts.TcpConnectionContract/Close
      IL_02a4:  ldarg.0
      IL_02a5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02aa:  ldc.i4.2
      IL_02ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02b0:  br         IL_04a5

      IL_02b5:  ldc.i4.0
      IL_02b6:  stloc.s    V_9
      IL_02b8:  ldarg.0
      IL_02b9:  volatile.
      IL_02bb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_02c0:  stloc.s    V_10
      IL_02c2:  ldloc.s    V_10
      IL_02c4:  brtrue     IL_02db

      IL_02c9:  ldarg.0
      IL_02ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02cf:  stloc.s    V_9
      IL_02d1:  ldarg.0
      IL_02d2:  volatile.
      IL_02d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_02d9:  stloc.s    V_10
      IL_02db:  ldloc.s    V_10
      IL_02dd:  ldc.i4.0
      IL_02de:  ceq
      IL_02e0:  brfalse    IL_02ff

      IL_02e5:  ldloc.s    V_9
      IL_02e7:  brfalse    IL_02f7

      IL_02ec:  ldstr      "Peer is closed"
      IL_02f1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02f6:  throw

      IL_02f7:  ldarg.0
      IL_02f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02fd:  br.s       IL_02b5

      IL_02ff:  ldarg.0
      IL_0300:  ldc.i4.s   21
      IL_0302:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0307:  ldloc.s    V_10
      IL_0309:  ldc.i4.s   21
      IL_030b:  beq        IL_032d

      IL_0310:  ldstr      "can't recv Close when next message has tag "
      IL_0315:  ldarg.0
      IL_0316:  volatile.
      IL_0318:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_031d:  box        [kernel]System.Int32
      IL_0322:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0327:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_032c:  throw

      IL_032d:  ldarg.0
      IL_032e:  ldc.i4.0
      IL_032f:  volatile.
      IL_0331:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0336:  ldarg.0
      IL_0337:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod1
      IL_033c:  initobj    NetStack.Contracts.TcpConnectionContract/Close
      IL_0342:  ldarg.0
      IL_0343:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0348:  ldc.i4.2
      IL_0349:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_034e:  br         IL_04a5

      IL_0353:  ldc.i4.0
      IL_0354:  stloc.s    V_11
      IL_0356:  ldarg.0
      IL_0357:  volatile.
      IL_0359:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_035e:  stloc.s    V_12
      IL_0360:  ldloc.s    V_12
      IL_0362:  brtrue     IL_0379

      IL_0367:  ldarg.0
      IL_0368:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_036d:  stloc.s    V_11
      IL_036f:  ldarg.0
      IL_0370:  volatile.
      IL_0372:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0377:  stloc.s    V_12
      IL_0379:  ldloc.s    V_12
      IL_037b:  ldc.i4.0
      IL_037c:  ceq
      IL_037e:  brfalse    IL_039d

      IL_0383:  ldloc.s    V_11
      IL_0385:  brfalse    IL_0395

      IL_038a:  ldstr      "Peer is closed"
      IL_038f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0394:  throw

      IL_0395:  ldarg.0
      IL_0396:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_039b:  br.s       IL_0353

      IL_039d:  ldarg.0
      IL_039e:  ldc.i4.s   21
      IL_03a0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_03a5:  ldloc.s    V_12
      IL_03a7:  ldc.i4.s   21
      IL_03a9:  beq        IL_03cb

      IL_03ae:  ldstr      "can't recv Close when next message has tag "
      IL_03b3:  ldarg.0
      IL_03b4:  volatile.
      IL_03b6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_03bb:  box        [kernel]System.Int32
      IL_03c0:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_03c5:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_03ca:  throw

      IL_03cb:  ldarg.0
      IL_03cc:  ldc.i4.0
      IL_03cd:  volatile.
      IL_03cf:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_03d4:  ldarg.0
      IL_03d5:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod1
      IL_03da:  initobj    NetStack.Contracts.TcpConnectionContract/Close
      IL_03e0:  ldarg.0
      IL_03e1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_03e6:  ldc.i4.2
      IL_03e7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_03ec:  br         IL_04a5

      IL_03f1:  ldc.i4.0
      IL_03f2:  stloc.s    V_13
      IL_03f4:  ldarg.0
      IL_03f5:  volatile.
      IL_03f7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_03fc:  stloc.s    V_14
      IL_03fe:  ldloc.s    V_14
      IL_0400:  brtrue     IL_0417

      IL_0405:  ldarg.0
      IL_0406:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_040b:  stloc.s    V_13
      IL_040d:  ldarg.0
      IL_040e:  volatile.
      IL_0410:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0415:  stloc.s    V_14
      IL_0417:  ldloc.s    V_14
      IL_0419:  ldc.i4.0
      IL_041a:  ceq
      IL_041c:  brfalse    IL_043b

      IL_0421:  ldloc.s    V_13
      IL_0423:  brfalse    IL_0433

      IL_0428:  ldstr      "Peer is closed"
      IL_042d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0432:  throw

      IL_0433:  ldarg.0
      IL_0434:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0439:  br.s       IL_03f1

      IL_043b:  ldarg.0
      IL_043c:  ldc.i4.s   21
      IL_043e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0443:  ldloc.s    V_14
      IL_0445:  ldc.i4.s   21
      IL_0447:  beq        IL_0469

      IL_044c:  ldstr      "can't recv Close when next message has tag "
      IL_0451:  ldarg.0
      IL_0452:  volatile.
      IL_0454:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0459:  box        [kernel]System.Int32
      IL_045e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0463:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0468:  throw

      IL_0469:  ldarg.0
      IL_046a:  ldc.i4.0
      IL_046b:  volatile.
      IL_046d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0472:  ldarg.0
      IL_0473:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod0
      IL_0478:  initobj    NetStack.Contracts.TcpConnectionContract/Close
      IL_047e:  ldarg.0
      IL_047f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0484:  ldc.i4.2
      IL_0485:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_048a:  br         IL_04a5

      IL_048f:  ldstr      "can't recv Close in state "
      IL_0494:  ldarg.0
      IL_0495:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_049a:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_049f:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_04a4:  throw

      IL_04a5:  ret
    } // end of method Exp::RecvClose

    .method public instance void  RecvAbort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       692 (0x2b4)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0030

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   9
      IL_0016:  beq        IL_00c6

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   18
      IL_001e:  beq        IL_0161

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.s   28
      IL_0026:  beq        IL_01ff

      IL_002b:  br         IL_029d

      IL_0030:  ldc.i4.0
      IL_0031:  stloc.1
      IL_0032:  ldarg.0
      IL_0033:  volatile.
      IL_0035:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_003a:  stloc.2
      IL_003b:  ldloc.2
      IL_003c:  brtrue     IL_0051

      IL_0041:  ldarg.0
      IL_0042:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0047:  stloc.1
      IL_0048:  ldarg.0
      IL_0049:  volatile.
      IL_004b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0050:  stloc.2
      IL_0051:  ldloc.2
      IL_0052:  ldc.i4.0
      IL_0053:  ceq
      IL_0055:  brfalse    IL_0073

      IL_005a:  ldloc.1
      IL_005b:  brfalse    IL_006b

      IL_0060:  ldstr      "Peer is closed"
      IL_0065:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_006a:  throw

      IL_006b:  ldarg.0
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0071:  br.s       IL_0030

      IL_0073:  ldarg.0
      IL_0074:  ldc.i4.s   22
      IL_0076:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007b:  ldloc.2
      IL_007c:  ldc.i4.s   22
      IL_007e:  beq        IL_00a0

      IL_0083:  ldstr      "can't recv Abort when next message has tag "
      IL_0088:  ldarg.0
      IL_0089:  volatile.
      IL_008b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0090:  box        [kernel]System.Int32
      IL_0095:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_009a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_009f:  throw

      IL_00a0:  ldarg.0
      IL_00a1:  ldc.i4.0
      IL_00a2:  volatile.
      IL_00a4:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Abort NetStack.Contracts.TcpConnectionContract/Exp::AbortPod0
      IL_00af:  initobj    NetStack.Contracts.TcpConnectionContract/Abort
      IL_00b5:  ldarg.0
      IL_00b6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bb:  ldc.i4.2
      IL_00bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c1:  br         IL_02b3

      IL_00c6:  ldc.i4.0
      IL_00c7:  stloc.3
      IL_00c8:  ldarg.0
      IL_00c9:  volatile.
      IL_00cb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00d0:  stloc.s    V_4
      IL_00d2:  ldloc.s    V_4
      IL_00d4:  brtrue     IL_00ea

      IL_00d9:  ldarg.0
      IL_00da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00df:  stloc.3
      IL_00e0:  ldarg.0
      IL_00e1:  volatile.
      IL_00e3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  ldloc.s    V_4
      IL_00ec:  ldc.i4.0
      IL_00ed:  ceq
      IL_00ef:  brfalse    IL_010d

      IL_00f4:  ldloc.3
      IL_00f5:  brfalse    IL_0105

      IL_00fa:  ldstr      "Peer is closed"
      IL_00ff:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0104:  throw

      IL_0105:  ldarg.0
      IL_0106:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_010b:  br.s       IL_00c6

      IL_010d:  ldarg.0
      IL_010e:  ldc.i4.s   22
      IL_0110:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0115:  ldloc.s    V_4
      IL_0117:  ldc.i4.s   22
      IL_0119:  beq        IL_013b

      IL_011e:  ldstr      "can't recv Abort when next message has tag "
      IL_0123:  ldarg.0
      IL_0124:  volatile.
      IL_0126:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_012b:  box        [kernel]System.Int32
      IL_0130:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0135:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_013a:  throw

      IL_013b:  ldarg.0
      IL_013c:  ldc.i4.0
      IL_013d:  volatile.
      IL_013f:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0144:  ldarg.0
      IL_0145:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Abort NetStack.Contracts.TcpConnectionContract/Exp::AbortPod1
      IL_014a:  initobj    NetStack.Contracts.TcpConnectionContract/Abort
      IL_0150:  ldarg.0
      IL_0151:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0156:  ldc.i4.2
      IL_0157:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_015c:  br         IL_02b3

      IL_0161:  ldc.i4.0
      IL_0162:  stloc.s    V_5
      IL_0164:  ldarg.0
      IL_0165:  volatile.
      IL_0167:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_016c:  stloc.s    V_6
      IL_016e:  ldloc.s    V_6
      IL_0170:  brtrue     IL_0187

      IL_0175:  ldarg.0
      IL_0176:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_017b:  stloc.s    V_5
      IL_017d:  ldarg.0
      IL_017e:  volatile.
      IL_0180:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0185:  stloc.s    V_6
      IL_0187:  ldloc.s    V_6
      IL_0189:  ldc.i4.0
      IL_018a:  ceq
      IL_018c:  brfalse    IL_01ab

      IL_0191:  ldloc.s    V_5
      IL_0193:  brfalse    IL_01a3

      IL_0198:  ldstr      "Peer is closed"
      IL_019d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01a2:  throw

      IL_01a3:  ldarg.0
      IL_01a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01a9:  br.s       IL_0161

      IL_01ab:  ldarg.0
      IL_01ac:  ldc.i4.s   22
      IL_01ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01b3:  ldloc.s    V_6
      IL_01b5:  ldc.i4.s   22
      IL_01b7:  beq        IL_01d9

      IL_01bc:  ldstr      "can't recv Abort when next message has tag "
      IL_01c1:  ldarg.0
      IL_01c2:  volatile.
      IL_01c4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_01c9:  box        [kernel]System.Int32
      IL_01ce:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01d3:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d8:  throw

      IL_01d9:  ldarg.0
      IL_01da:  ldc.i4.0
      IL_01db:  volatile.
      IL_01dd:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_01e2:  ldarg.0
      IL_01e3:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Abort NetStack.Contracts.TcpConnectionContract/Exp::AbortPod1
      IL_01e8:  initobj    NetStack.Contracts.TcpConnectionContract/Abort
      IL_01ee:  ldarg.0
      IL_01ef:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01f4:  ldc.i4.2
      IL_01f5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01fa:  br         IL_02b3

      IL_01ff:  ldc.i4.0
      IL_0200:  stloc.s    V_7
      IL_0202:  ldarg.0
      IL_0203:  volatile.
      IL_0205:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_020a:  stloc.s    V_8
      IL_020c:  ldloc.s    V_8
      IL_020e:  brtrue     IL_0225

      IL_0213:  ldarg.0
      IL_0214:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0219:  stloc.s    V_7
      IL_021b:  ldarg.0
      IL_021c:  volatile.
      IL_021e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0223:  stloc.s    V_8
      IL_0225:  ldloc.s    V_8
      IL_0227:  ldc.i4.0
      IL_0228:  ceq
      IL_022a:  brfalse    IL_0249

      IL_022f:  ldloc.s    V_7
      IL_0231:  brfalse    IL_0241

      IL_0236:  ldstr      "Peer is closed"
      IL_023b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0240:  throw

      IL_0241:  ldarg.0
      IL_0242:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0247:  br.s       IL_01ff

      IL_0249:  ldarg.0
      IL_024a:  ldc.i4.s   22
      IL_024c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0251:  ldloc.s    V_8
      IL_0253:  ldc.i4.s   22
      IL_0255:  beq        IL_0277

      IL_025a:  ldstr      "can't recv Abort when next message has tag "
      IL_025f:  ldarg.0
      IL_0260:  volatile.
      IL_0262:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0267:  box        [kernel]System.Int32
      IL_026c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0271:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0276:  throw

      IL_0277:  ldarg.0
      IL_0278:  ldc.i4.0
      IL_0279:  volatile.
      IL_027b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0280:  ldarg.0
      IL_0281:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Abort NetStack.Contracts.TcpConnectionContract/Exp::AbortPod2
      IL_0286:  initobj    NetStack.Contracts.TcpConnectionContract/Abort
      IL_028c:  ldarg.0
      IL_028d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0292:  ldc.i4.2
      IL_0293:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0298:  br         IL_02b3

      IL_029d:  ldstr      "can't recv Abort in state "
      IL_02a2:  ldarg.0
      IL_02a3:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_02a8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02ad:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02b2:  throw

      IL_02b3:  ret
    } // end of method Exp::RecvAbort

    .method public instance void  RecvGetRemoteAddress() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       529 (0x211)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  beq        IL_00c0

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   18
      IL_001f:  beq        IL_015b

      IL_0024:  br         IL_01fa

      IL_0029:  ldc.i4.0
      IL_002a:  stloc.1
      IL_002b:  ldarg.0
      IL_002c:  volatile.
      IL_002e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0033:  stloc.2
      IL_0034:  ldloc.2
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldarg.0
      IL_003b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  volatile.
      IL_0044:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  brfalse    IL_006c

      IL_0053:  ldloc.1
      IL_0054:  brfalse    IL_0064

      IL_0059:  ldstr      "Peer is closed"
      IL_005e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0063:  throw

      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_006a:  br.s       IL_0029

      IL_006c:  ldarg.0
      IL_006d:  ldc.i4.s   23
      IL_006f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0074:  ldloc.2
      IL_0075:  ldc.i4.s   23
      IL_0077:  beq        IL_0099

      IL_007c:  ldstr      "can't recv GetRemoteAddress when next message has "
      + "tag "
      IL_0081:  ldarg.0
      IL_0082:  volatile.
      IL_0084:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0089:  box        [kernel]System.Int32
      IL_008e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0093:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0098:  throw

      IL_0099:  ldarg.0
      IL_009a:  ldc.i4.0
      IL_009b:  volatile.
      IL_009d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress NetStack.Contracts.TcpConnectionContract/Exp::GetRemoteAddressPod2
      IL_00a8:  initobj    NetStack.Contracts.TcpConnectionContract/GetRemoteAddress
      IL_00ae:  ldarg.0
      IL_00af:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b4:  ldc.i4.s   23
      IL_00b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bb:  br         IL_0210

      IL_00c0:  ldc.i4.0
      IL_00c1:  stloc.3
      IL_00c2:  ldarg.0
      IL_00c3:  volatile.
      IL_00c5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00ca:  stloc.s    V_4
      IL_00cc:  ldloc.s    V_4
      IL_00ce:  brtrue     IL_00e4

      IL_00d3:  ldarg.0
      IL_00d4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d9:  stloc.3
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00e2:  stloc.s    V_4
      IL_00e4:  ldloc.s    V_4
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_0107

      IL_00ee:  ldloc.3
      IL_00ef:  brfalse    IL_00ff

      IL_00f4:  ldstr      "Peer is closed"
      IL_00f9:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00fe:  throw

      IL_00ff:  ldarg.0
      IL_0100:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0105:  br.s       IL_00c0

      IL_0107:  ldarg.0
      IL_0108:  ldc.i4.s   23
      IL_010a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_010f:  ldloc.s    V_4
      IL_0111:  ldc.i4.s   23
      IL_0113:  beq        IL_0135

      IL_0118:  ldstr      "can't recv GetRemoteAddress when next message has "
      + "tag "
      IL_011d:  ldarg.0
      IL_011e:  volatile.
      IL_0120:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0125:  box        [kernel]System.Int32
      IL_012a:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_012f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0134:  throw

      IL_0135:  ldarg.0
      IL_0136:  ldc.i4.0
      IL_0137:  volatile.
      IL_0139:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_013e:  ldarg.0
      IL_013f:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress NetStack.Contracts.TcpConnectionContract/Exp::GetRemoteAddressPod1
      IL_0144:  initobj    NetStack.Contracts.TcpConnectionContract/GetRemoteAddress
      IL_014a:  ldarg.0
      IL_014b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0150:  ldc.i4.6
      IL_0151:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0156:  br         IL_0210

      IL_015b:  ldc.i4.0
      IL_015c:  stloc.s    V_5
      IL_015e:  ldarg.0
      IL_015f:  volatile.
      IL_0161:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0166:  stloc.s    V_6
      IL_0168:  ldloc.s    V_6
      IL_016a:  brtrue     IL_0181

      IL_016f:  ldarg.0
      IL_0170:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0175:  stloc.s    V_5
      IL_0177:  ldarg.0
      IL_0178:  volatile.
      IL_017a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_017f:  stloc.s    V_6
      IL_0181:  ldloc.s    V_6
      IL_0183:  ldc.i4.0
      IL_0184:  ceq
      IL_0186:  brfalse    IL_01a5

      IL_018b:  ldloc.s    V_5
      IL_018d:  brfalse    IL_019d

      IL_0192:  ldstr      "Peer is closed"
      IL_0197:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_019c:  throw

      IL_019d:  ldarg.0
      IL_019e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01a3:  br.s       IL_015b

      IL_01a5:  ldarg.0
      IL_01a6:  ldc.i4.s   23
      IL_01a8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01ad:  ldloc.s    V_6
      IL_01af:  ldc.i4.s   23
      IL_01b1:  beq        IL_01d3

      IL_01b6:  ldstr      "can't recv GetRemoteAddress when next message has "
      + "tag "
      IL_01bb:  ldarg.0
      IL_01bc:  volatile.
      IL_01be:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_01c3:  box        [kernel]System.Int32
      IL_01c8:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01cd:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d2:  throw

      IL_01d3:  ldarg.0
      IL_01d4:  ldc.i4.0
      IL_01d5:  volatile.
      IL_01d7:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_01dc:  ldarg.0
      IL_01dd:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress NetStack.Contracts.TcpConnectionContract/Exp::GetRemoteAddressPod1
      IL_01e2:  initobj    NetStack.Contracts.TcpConnectionContract/GetRemoteAddress
      IL_01e8:  ldarg.0
      IL_01e9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01ee:  ldc.i4.s   13
      IL_01f0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01f5:  br         IL_0210

      IL_01fa:  ldstr      "can't recv GetRemoteAddress in state "
      IL_01ff:  ldarg.0
      IL_0200:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0205:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_020a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_020f:  throw

      IL_0210:  ret
    } // end of method Exp::RecvGetRemoteAddress

    .method public instance void  RecvGetRemotePort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       529 (0x211)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00c0

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_015c

      IL_0024:  br         IL_01fa

      IL_0029:  ldc.i4.0
      IL_002a:  stloc.1
      IL_002b:  ldarg.0
      IL_002c:  volatile.
      IL_002e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0033:  stloc.2
      IL_0034:  ldloc.2
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldarg.0
      IL_003b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  volatile.
      IL_0044:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  brfalse    IL_006c

      IL_0053:  ldloc.1
      IL_0054:  brfalse    IL_0064

      IL_0059:  ldstr      "Peer is closed"
      IL_005e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0063:  throw

      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_006a:  br.s       IL_0029

      IL_006c:  ldarg.0
      IL_006d:  ldc.i4.s   24
      IL_006f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0074:  ldloc.2
      IL_0075:  ldc.i4.s   24
      IL_0077:  beq        IL_0099

      IL_007c:  ldstr      "can't recv GetRemotePort when next message has tag "
      IL_0081:  ldarg.0
      IL_0082:  volatile.
      IL_0084:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0089:  box        [kernel]System.Int32
      IL_008e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0093:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0098:  throw

      IL_0099:  ldarg.0
      IL_009a:  ldc.i4.0
      IL_009b:  volatile.
      IL_009d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort NetStack.Contracts.TcpConnectionContract/Exp::GetRemotePortPod1
      IL_00a8:  initobj    NetStack.Contracts.TcpConnectionContract/GetRemotePort
      IL_00ae:  ldarg.0
      IL_00af:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b4:  ldc.i4.s   12
      IL_00b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bb:  br         IL_0210

      IL_00c0:  ldc.i4.0
      IL_00c1:  stloc.3
      IL_00c2:  ldarg.0
      IL_00c3:  volatile.
      IL_00c5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00ca:  stloc.s    V_4
      IL_00cc:  ldloc.s    V_4
      IL_00ce:  brtrue     IL_00e4

      IL_00d3:  ldarg.0
      IL_00d4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d9:  stloc.3
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00e2:  stloc.s    V_4
      IL_00e4:  ldloc.s    V_4
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_0107

      IL_00ee:  ldloc.3
      IL_00ef:  brfalse    IL_00ff

      IL_00f4:  ldstr      "Peer is closed"
      IL_00f9:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00fe:  throw

      IL_00ff:  ldarg.0
      IL_0100:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0105:  br.s       IL_00c0

      IL_0107:  ldarg.0
      IL_0108:  ldc.i4.s   24
      IL_010a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_010f:  ldloc.s    V_4
      IL_0111:  ldc.i4.s   24
      IL_0113:  beq        IL_0135

      IL_0118:  ldstr      "can't recv GetRemotePort when next message has tag "
      IL_011d:  ldarg.0
      IL_011e:  volatile.
      IL_0120:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0125:  box        [kernel]System.Int32
      IL_012a:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_012f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0134:  throw

      IL_0135:  ldarg.0
      IL_0136:  ldc.i4.0
      IL_0137:  volatile.
      IL_0139:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_013e:  ldarg.0
      IL_013f:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort NetStack.Contracts.TcpConnectionContract/Exp::GetRemotePortPod2
      IL_0144:  initobj    NetStack.Contracts.TcpConnectionContract/GetRemotePort
      IL_014a:  ldarg.0
      IL_014b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0150:  ldc.i4.s   22
      IL_0152:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0157:  br         IL_0210

      IL_015c:  ldc.i4.0
      IL_015d:  stloc.s    V_5
      IL_015f:  ldarg.0
      IL_0160:  volatile.
      IL_0162:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0167:  stloc.s    V_6
      IL_0169:  ldloc.s    V_6
      IL_016b:  brtrue     IL_0182

      IL_0170:  ldarg.0
      IL_0171:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0176:  stloc.s    V_5
      IL_0178:  ldarg.0
      IL_0179:  volatile.
      IL_017b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0180:  stloc.s    V_6
      IL_0182:  ldloc.s    V_6
      IL_0184:  ldc.i4.0
      IL_0185:  ceq
      IL_0187:  brfalse    IL_01a6

      IL_018c:  ldloc.s    V_5
      IL_018e:  brfalse    IL_019e

      IL_0193:  ldstr      "Peer is closed"
      IL_0198:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_019d:  throw

      IL_019e:  ldarg.0
      IL_019f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01a4:  br.s       IL_015c

      IL_01a6:  ldarg.0
      IL_01a7:  ldc.i4.s   24
      IL_01a9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01ae:  ldloc.s    V_6
      IL_01b0:  ldc.i4.s   24
      IL_01b2:  beq        IL_01d4

      IL_01b7:  ldstr      "can't recv GetRemotePort when next message has tag "
      IL_01bc:  ldarg.0
      IL_01bd:  volatile.
      IL_01bf:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_01c4:  box        [kernel]System.Int32
      IL_01c9:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01ce:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d3:  throw

      IL_01d4:  ldarg.0
      IL_01d5:  ldc.i4.0
      IL_01d6:  volatile.
      IL_01d8:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_01dd:  ldarg.0
      IL_01de:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort NetStack.Contracts.TcpConnectionContract/Exp::GetRemotePortPod1
      IL_01e3:  initobj    NetStack.Contracts.TcpConnectionContract/GetRemotePort
      IL_01e9:  ldarg.0
      IL_01ea:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01ef:  ldc.i4.5
      IL_01f0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01f5:  br         IL_0210

      IL_01fa:  ldstr      "can't recv GetRemotePort in state "
      IL_01ff:  ldarg.0
      IL_0200:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0205:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_020a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_020f:  throw

      IL_0210:  ret
    } // end of method Exp::RecvGetRemotePort

    .method public instance void  RecvDoneSending() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 19 00 00 00 00 00 ) 
      // Code size       362 (0x16a)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00b7

      IL_001c:  br         IL_0153

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   25
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   25
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv DoneSending when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DoneSending NetStack.Contracts.TcpConnectionContract/Exp::DoneSendingPod1
      IL_00a0:  initobj    NetStack.Contracts.TcpConnectionContract/DoneSending
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.3
      IL_00ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b2:  br         IL_0169

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.3
      IL_00b9:  ldarg.0
      IL_00ba:  volatile.
      IL_00bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00c1:  stloc.s    V_4
      IL_00c3:  ldloc.s    V_4
      IL_00c5:  brtrue     IL_00db

      IL_00ca:  ldarg.0
      IL_00cb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d0:  stloc.3
      IL_00d1:  ldarg.0
      IL_00d2:  volatile.
      IL_00d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00d9:  stloc.s    V_4
      IL_00db:  ldloc.s    V_4
      IL_00dd:  ldc.i4.0
      IL_00de:  ceq
      IL_00e0:  brfalse    IL_00fe

      IL_00e5:  ldloc.3
      IL_00e6:  brfalse    IL_00f6

      IL_00eb:  ldstr      "Peer is closed"
      IL_00f0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f5:  throw

      IL_00f6:  ldarg.0
      IL_00f7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fc:  br.s       IL_00b7

      IL_00fe:  ldarg.0
      IL_00ff:  ldc.i4.s   25
      IL_0101:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0106:  ldloc.s    V_4
      IL_0108:  ldc.i4.s   25
      IL_010a:  beq        IL_012c

      IL_010f:  ldstr      "can't recv DoneSending when next message has tag "
      IL_0114:  ldarg.0
      IL_0115:  volatile.
      IL_0117:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_011c:  box        [kernel]System.Int32
      IL_0121:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0126:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012b:  throw

      IL_012c:  ldarg.0
      IL_012d:  ldc.i4.0
      IL_012e:  volatile.
      IL_0130:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0135:  ldarg.0
      IL_0136:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DoneSending NetStack.Contracts.TcpConnectionContract/Exp::DoneSendingPod2
      IL_013b:  initobj    NetStack.Contracts.TcpConnectionContract/DoneSending
      IL_0141:  ldarg.0
      IL_0142:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0147:  ldc.i4.s   18
      IL_0149:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014e:  br         IL_0169

      IL_0153:  ldstr      "can't recv DoneSending in state "
      IL_0158:  ldarg.0
      IL_0159:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_015e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0163:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0168:  throw

      IL_0169:  ret
    } // end of method Exp::RecvDoneSending

    .method public instance void  RecvDoneReceiving() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1A 00 00 00 00 00 ) 
      // Code size       362 (0x16a)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00b7

      IL_001c:  br         IL_0153

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   26
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   26
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv DoneReceiving when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving NetStack.Contracts.TcpConnectionContract/Exp::DoneReceivingPod1
      IL_00a0:  initobj    NetStack.Contracts.TcpConnectionContract/DoneReceiving
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.3
      IL_00ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b2:  br         IL_0169

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.3
      IL_00b9:  ldarg.0
      IL_00ba:  volatile.
      IL_00bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00c1:  stloc.s    V_4
      IL_00c3:  ldloc.s    V_4
      IL_00c5:  brtrue     IL_00db

      IL_00ca:  ldarg.0
      IL_00cb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d0:  stloc.3
      IL_00d1:  ldarg.0
      IL_00d2:  volatile.
      IL_00d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_00d9:  stloc.s    V_4
      IL_00db:  ldloc.s    V_4
      IL_00dd:  ldc.i4.0
      IL_00de:  ceq
      IL_00e0:  brfalse    IL_00fe

      IL_00e5:  ldloc.3
      IL_00e6:  brfalse    IL_00f6

      IL_00eb:  ldstr      "Peer is closed"
      IL_00f0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f5:  throw

      IL_00f6:  ldarg.0
      IL_00f7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fc:  br.s       IL_00b7

      IL_00fe:  ldarg.0
      IL_00ff:  ldc.i4.s   26
      IL_0101:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0106:  ldloc.s    V_4
      IL_0108:  ldc.i4.s   26
      IL_010a:  beq        IL_012c

      IL_010f:  ldstr      "can't recv DoneReceiving when next message has tag "
      IL_0114:  ldarg.0
      IL_0115:  volatile.
      IL_0117:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_011c:  box        [kernel]System.Int32
      IL_0121:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0126:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012b:  throw

      IL_012c:  ldarg.0
      IL_012d:  ldc.i4.0
      IL_012e:  volatile.
      IL_0130:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0135:  ldarg.0
      IL_0136:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving NetStack.Contracts.TcpConnectionContract/Exp::DoneReceivingPod2
      IL_013b:  initobj    NetStack.Contracts.TcpConnectionContract/DoneReceiving
      IL_0141:  ldarg.0
      IL_0142:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0147:  ldc.i4.s   9
      IL_0149:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014e:  br         IL_0169

      IL_0153:  ldstr      "can't recv DoneReceiving in state "
      IL_0158:  ldarg.0
      IL_0159:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_015e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0163:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0168:  throw

      IL_0169:  ret
    } // end of method Exp::RecvDoneReceiving

    .method public instance void  SendConnectionClosed() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1B 00 00 00 00 00 ) 
      // Code size       215 (0xd7)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   20
      IL_0017:  beq        IL_006d

      IL_001c:  br         IL_00c0

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0040:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverConnectionClosed0$PST06000464()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverConnectionClosed0$PST06000465(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.3
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0068:  br         IL_00d6

      IL_006d:  ldarg.0
      IL_006e:  ldloca.s   V_5
      IL_0070:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0075:  stloc.s    V_6
      IL_0077:  ldloc.s    V_6
      IL_0079:  stloc.s    V_7
      IL_007b:  ldloc.s    V_7
      IL_007d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0082:  stloc.s    V_8
      IL_0084:  ldloc.s    V_5
      IL_0086:  brtrue     IL_009c

      IL_008b:  ldloc.s    V_7
      IL_008d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0092:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverConnectionClosed0$PST06000464()
      IL_0097:  br         IL_00a9

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00a3:  ldarg.0
      IL_00a4:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverConnectionClosed0$PST06000465(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a9:  ldarg.0
      IL_00aa:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.3
      IL_00b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bb:  br         IL_00d6

      IL_00c0:  ldstr      "can't send ConnectionClosed in state "
      IL_00c5:  ldarg.0
      IL_00c6:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00cb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d5:  throw

      IL_00d6:  ret
    } // end of method Exp::SendConnectionClosed

    .method public instance void  SendNoData() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1C 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   20
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c2

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0040:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverNoData0$PST06000466()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverNoData0$PST06000467(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   18
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d8

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0093:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverNoData0$PST06000466()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverNoData0$PST06000467(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.s   28
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send NoData in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00cd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Exp::SendNoData

    .method public instance void  SendNoMoreData() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1D 00 00 00 00 00 ) 
      // Code size       399 (0x18f)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   21
      IL_001f:  beq        IL_00d0

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   20
      IL_0027:  beq        IL_0124

      IL_002c:  br         IL_0178

      IL_0031:  ldarg.0
      IL_0032:  ldloca.s   V_1
      IL_0034:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  stloc.3
      IL_003c:  ldloc.3
      IL_003d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0042:  stloc.s    V_4
      IL_0044:  ldloc.1
      IL_0045:  brtrue     IL_005a

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0050:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverNoMoreData0$PST06000468()
      IL_0055:  br         IL_0066

      IL_005a:  ldloc.3
      IL_005b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0060:  ldarg.0
      IL_0061:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverNoMoreData0$PST06000469(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0066:  ldarg.0
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006c:  ldarg.0
      IL_006d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0072:  ldc.i4.3
      IL_0073:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0078:  br         IL_018e

      IL_007d:  ldarg.0
      IL_007e:  ldloca.s   V_5
      IL_0080:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0085:  stloc.s    V_6
      IL_0087:  ldloc.s    V_6
      IL_0089:  stloc.s    V_7
      IL_008b:  ldloc.s    V_7
      IL_008d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0092:  stloc.s    V_8
      IL_0094:  ldloc.s    V_5
      IL_0096:  brtrue     IL_00ac

      IL_009b:  ldloc.s    V_7
      IL_009d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00a2:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverNoMoreData0$PST06000468()
      IL_00a7:  br         IL_00b9

      IL_00ac:  ldloc.s    V_7
      IL_00ae:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverNoMoreData0$PST06000469(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b9:  ldarg.0
      IL_00ba:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00bf:  ldarg.0
      IL_00c0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c5:  ldc.i4.3
      IL_00c6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cb:  br         IL_018e

      IL_00d0:  ldarg.0
      IL_00d1:  ldloca.s   V_9
      IL_00d3:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d8:  stloc.s    V_10
      IL_00da:  ldloc.s    V_10
      IL_00dc:  stloc.s    V_11
      IL_00de:  ldloc.s    V_11
      IL_00e0:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00e5:  stloc.s    V_12
      IL_00e7:  ldloc.s    V_9
      IL_00e9:  brtrue     IL_00ff

      IL_00ee:  ldloc.s    V_11
      IL_00f0:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00f5:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverNoMoreData0$PST06000468()
      IL_00fa:  br         IL_010c

      IL_00ff:  ldloc.s    V_11
      IL_0101:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0106:  ldarg.0
      IL_0107:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverNoMoreData0$PST06000469(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_010c:  ldarg.0
      IL_010d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0112:  ldarg.0
      IL_0113:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0118:  ldc.i4.s   9
      IL_011a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_011f:  br         IL_018e

      IL_0124:  ldarg.0
      IL_0125:  ldloca.s   V_13
      IL_0127:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_012c:  stloc.s    V_14
      IL_012e:  ldloc.s    V_14
      IL_0130:  stloc.s    V_15
      IL_0132:  ldloc.s    V_15
      IL_0134:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0139:  stloc.s    V_16
      IL_013b:  ldloc.s    V_13
      IL_013d:  brtrue     IL_0153

      IL_0142:  ldloc.s    V_15
      IL_0144:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0149:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverNoMoreData0$PST06000468()
      IL_014e:  br         IL_0160

      IL_0153:  ldloc.s    V_15
      IL_0155:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_015a:  ldarg.0
      IL_015b:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverNoMoreData0$PST06000469(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0160:  ldarg.0
      IL_0161:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0166:  ldarg.0
      IL_0167:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_016c:  ldc.i4.s   9
      IL_016e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0173:  br         IL_018e

      IL_0178:  ldstr      "can't send NoMoreData in state "
      IL_017d:  ldarg.0
      IL_017e:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0183:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0188:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_018d:  throw

      IL_018e:  ret
    } // end of method Exp::SendNoMoreData

    .method public instance void  SendCantSend() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1E 00 00 00 00 00 ) 
      // Code size       215 (0xd7)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0020

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.4
      IL_0016:  beq        IL_006d

      IL_001b:  br         IL_00c0

      IL_0020:  ldarg.0
      IL_0021:  ldloca.s   V_1
      IL_0023:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0028:  stloc.2
      IL_0029:  ldloc.2
      IL_002a:  stloc.3
      IL_002b:  ldloc.3
      IL_002c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0031:  stloc.s    V_4
      IL_0033:  ldloc.1
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldloc.3
      IL_003a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_003f:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverCantSend0$PST0600046A()
      IL_0044:  br         IL_0055

      IL_0049:  ldloc.3
      IL_004a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_004f:  ldarg.0
      IL_0050:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverCantSend0$PST0600046B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0055:  ldarg.0
      IL_0056:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005b:  ldarg.0
      IL_005c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0061:  ldc.i4.s   18
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0068:  br         IL_00d6

      IL_006d:  ldarg.0
      IL_006e:  ldloca.s   V_5
      IL_0070:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0075:  stloc.s    V_6
      IL_0077:  ldloc.s    V_6
      IL_0079:  stloc.s    V_7
      IL_007b:  ldloc.s    V_7
      IL_007d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0082:  stloc.s    V_8
      IL_0084:  ldloc.s    V_5
      IL_0086:  brtrue     IL_009c

      IL_008b:  ldloc.s    V_7
      IL_008d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0092:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverCantSend0$PST0600046A()
      IL_0097:  br         IL_00a9

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00a3:  ldarg.0
      IL_00a4:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverCantSend0$PST0600046B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a9:  ldarg.0
      IL_00aa:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.3
      IL_00b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bb:  br         IL_00d6

      IL_00c0:  ldstr      "can't send CantSend in state "
      IL_00c5:  ldarg.0
      IL_00c6:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00cb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d5:  throw

      IL_00d6:  ret
    } // end of method Exp::SendCantSend

    .method public instance void  SendData(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1F 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       457 (0x1c9)
      .maxstack  29
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               bool V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_8,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_9,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_10,
               bool V_11,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_12,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_13,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_14,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_15,
               bool V_16,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_17,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_19,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_20)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  beq        IL_008c

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   21
      IL_001f:  beq        IL_00ee

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   20
      IL_0027:  beq        IL_0150

      IL_002c:  br         IL_01b2

      IL_0031:  ldarg.0
      IL_0032:  ldloca.s   V_1
      IL_0034:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  stloc.3
      IL_003c:  ldloc.3
      IL_003d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0042:  stloc.s    V_4
      IL_0044:  ldloc.1
      IL_0045:  brtrue     IL_0067

      IL_004a:  ldarg.1
      IL_004b:  stloc.s    V_5
      IL_004d:  ldloc.s    V_4
      IL_004f:  ldloc.s    V_5
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0056:  ldloc.3
      IL_0057:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_005c:  ldarg.1
      IL_005d:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverData0$PST0600046C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0062:  br         IL_0074

      IL_0067:  ldloc.3
      IL_0068:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_006d:  ldarg.1
      IL_006e:  ldarg.0
      IL_006f:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverData0$PST0600046D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0074:  ldarg.0
      IL_0075:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_007a:  ldarg.0
      IL_007b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0080:  ldc.i4.s   18
      IL_0082:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0087:  br         IL_01c8

      IL_008c:  ldarg.0
      IL_008d:  ldloca.s   V_6
      IL_008f:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0094:  stloc.s    V_7
      IL_0096:  ldloc.s    V_7
      IL_0098:  stloc.s    V_8
      IL_009a:  ldloc.s    V_8
      IL_009c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00a1:  stloc.s    V_9
      IL_00a3:  ldloc.s    V_6
      IL_00a5:  brtrue     IL_00c8

      IL_00aa:  ldarg.1
      IL_00ab:  stloc.s    V_10
      IL_00ad:  ldloc.s    V_9
      IL_00af:  ldloc.s    V_10
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_00b6:  ldloc.s    V_8
      IL_00b8:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00bd:  ldarg.1
      IL_00be:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverData0$PST0600046C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_00c3:  br         IL_00d6

      IL_00c8:  ldloc.s    V_8
      IL_00ca:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00cf:  ldarg.1
      IL_00d0:  ldarg.0
      IL_00d1:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverData0$PST0600046D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00d6:  ldarg.0
      IL_00d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00dc:  ldarg.0
      IL_00dd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e2:  ldc.i4.s   18
      IL_00e4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e9:  br         IL_01c8

      IL_00ee:  ldarg.0
      IL_00ef:  ldloca.s   V_11
      IL_00f1:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00f6:  stloc.s    V_12
      IL_00f8:  ldloc.s    V_12
      IL_00fa:  stloc.s    V_13
      IL_00fc:  ldloc.s    V_13
      IL_00fe:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0103:  stloc.s    V_14
      IL_0105:  ldloc.s    V_11
      IL_0107:  brtrue     IL_012a

      IL_010c:  ldarg.1
      IL_010d:  stloc.s    V_15
      IL_010f:  ldloc.s    V_14
      IL_0111:  ldloc.s    V_15
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0118:  ldloc.s    V_13
      IL_011a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_011f:  ldarg.1
      IL_0120:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverData0$PST0600046C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0125:  br         IL_0138

      IL_012a:  ldloc.s    V_13
      IL_012c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0131:  ldarg.1
      IL_0132:  ldarg.0
      IL_0133:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverData0$PST0600046D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0138:  ldarg.0
      IL_0139:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_013e:  ldarg.0
      IL_013f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0144:  ldc.i4.s   28
      IL_0146:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014b:  br         IL_01c8

      IL_0150:  ldarg.0
      IL_0151:  ldloca.s   V_16
      IL_0153:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0158:  stloc.s    V_17
      IL_015a:  ldloc.s    V_17
      IL_015c:  stloc.s    V_18
      IL_015e:  ldloc.s    V_18
      IL_0160:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0165:  stloc.s    V_19
      IL_0167:  ldloc.s    V_16
      IL_0169:  brtrue     IL_018c

      IL_016e:  ldarg.1
      IL_016f:  stloc.s    V_20
      IL_0171:  ldloc.s    V_19
      IL_0173:  ldloc.s    V_20
      IL_0175:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_017a:  ldloc.s    V_18
      IL_017c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0181:  ldarg.1
      IL_0182:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverData0$PST0600046C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0187:  br         IL_019a

      IL_018c:  ldloc.s    V_18
      IL_018e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0193:  ldarg.1
      IL_0194:  ldarg.0
      IL_0195:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverData0$PST0600046D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_019a:  ldarg.0
      IL_019b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01a0:  ldarg.0
      IL_01a1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01a6:  ldc.i4.s   28
      IL_01a8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01ad:  br         IL_01c8

      IL_01b2:  ldstr      "can't send Data in state "
      IL_01b7:  ldarg.0
      IL_01b8:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_01bd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_01c2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_01c7:  throw

      IL_01c8:  ret
    } // end of method Exp::SendData

    .method public instance void  SendDataIsAvailable(bool isAvailable) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 20 00 00 00 00 00 )                         // .. .....
      // Code size       221 (0xdd)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   27
      IL_0017:  beq        IL_0070

      IL_001c:  br         IL_00c6

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004b

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0040:  ldarg.1
      IL_0041:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverDataIsAvailable0$PST0600046E(bool)
      IL_0046:  br         IL_0058

      IL_004b:  ldloc.3
      IL_004c:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverDataIsAvailable0$PST0600046F(bool,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0058:  ldarg.0
      IL_0059:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005e:  ldarg.0
      IL_005f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0064:  ldc.i4.s   16
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006b:  br         IL_00dc

      IL_0070:  ldarg.0
      IL_0071:  ldloca.s   V_5
      IL_0073:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0078:  stloc.s    V_6
      IL_007a:  ldloc.s    V_6
      IL_007c:  stloc.s    V_7
      IL_007e:  ldloc.s    V_7
      IL_0080:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0085:  stloc.s    V_8
      IL_0087:  ldloc.s    V_5
      IL_0089:  brtrue     IL_00a0

      IL_008e:  ldloc.s    V_7
      IL_0090:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_0095:  ldarg.1
      IL_0096:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::DeliverDataIsAvailable0$PST0600046E(bool)
      IL_009b:  br         IL_00ae

      IL_00a0:  ldloc.s    V_7
      IL_00a2:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
      IL_00a7:  ldarg.1
      IL_00a8:  ldarg.0
      IL_00a9:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::MarshallDeliverDataIsAvailable0$PST0600046F(bool,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ae:  ldarg.0
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b4:  ldarg.0
      IL_00b5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ba:  ldc.i4.s   26
      IL_00bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c1:  br         IL_00dc

      IL_00c6:  ldstr      "can't send DataIsAvailable in state "
      IL_00cb:  ldarg.0
      IL_00cc:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_00d1:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d6:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00db:  throw

      IL_00dc:  ret
    } // end of method Exp::SendDataIsAvailable

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.TcpConnectionContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.TcpConnectionContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.TcpConnectionContract/Exp
      IL_0022:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       2900 (0xb54)
      .maxstack  39
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               bool V_31,
               int32 V_32,
               bool V_33,
               int32 V_34,
               bool V_35,
               int32 V_36,
               bool V_37,
               int32 V_38,
               bool V_39,
               int32 V_40,
               bool V_41,
               int32 V_42,
               bool V_43,
               int32 V_44,
               bool V_45,
               int32 V_46,
               bool V_47,
               int32 V_48,
               bool V_49,
               int32 V_50,
               bool V_51,
               int32 V_52,
               bool V_53,
               int32 V_54,
               bool V_55,
               int32 V_56,
               bool V_57,
               int32 V_58,
               bool V_59,
               int32 V_60,
               bool V_61,
               int32 V_62,
               bool V_63,
               int32 V_64,
               bool V_65,
               int32 V_66,
               bool V_67,
               int32 V_68,
               bool V_69,
               int32 V_70,
               bool V_71,
               int32 V_72,
               bool V_73,
               int32 V_74,
               int32 V_75)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_012d

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.4
      IL_0017:  beq        IL_016d

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.5
      IL_001e:  beq        IL_01b5

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.6
      IL_0025:  beq        IL_01fd

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_0245

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.8
      IL_0033:  beq        IL_028d

      IL_0038:  ldloc.1
      IL_0039:  ldc.i4.s   9
      IL_003b:  beq        IL_02d5

      IL_0040:  ldloc.1
      IL_0041:  ldc.i4.s   10
      IL_0043:  beq        IL_031d

      IL_0048:  ldloc.1
      IL_0049:  ldc.i4.s   11
      IL_004b:  beq        IL_0365

      IL_0050:  ldloc.1
      IL_0051:  ldc.i4.s   12
      IL_0053:  beq        IL_03ad

      IL_0058:  ldloc.1
      IL_0059:  ldc.i4.s   13
      IL_005b:  beq        IL_03f5

      IL_0060:  ldloc.1
      IL_0061:  ldc.i4.s   14
      IL_0063:  beq        IL_043d

      IL_0068:  ldloc.1
      IL_0069:  ldc.i4.s   15
      IL_006b:  beq        IL_0485

      IL_0070:  ldloc.1
      IL_0071:  ldc.i4.s   17
      IL_0073:  beq        IL_04cd

      IL_0078:  ldloc.1
      IL_0079:  ldc.i4.s   18
      IL_007b:  beq        IL_0515

      IL_0080:  ldloc.1
      IL_0081:  ldc.i4.s   19
      IL_0083:  beq        IL_055d

      IL_0088:  ldloc.1
      IL_0089:  ldc.i4.s   20
      IL_008b:  beq        IL_05a5

      IL_0090:  ldloc.1
      IL_0091:  ldc.i4.s   21
      IL_0093:  beq        IL_05ed

      IL_0098:  ldloc.1
      IL_0099:  ldc.i4.s   22
      IL_009b:  beq        IL_0635

      IL_00a0:  ldloc.1
      IL_00a1:  ldc.i4.s   23
      IL_00a3:  beq        IL_067d

      IL_00a8:  ldloc.1
      IL_00a9:  ldc.i4.s   24
      IL_00ab:  beq        IL_06c5

      IL_00b0:  ldloc.1
      IL_00b1:  ldc.i4.s   25
      IL_00b3:  beq        IL_070d

      IL_00b8:  ldloc.1
      IL_00b9:  ldc.i4.s   27
      IL_00bb:  beq        IL_0755

      IL_00c0:  ldloc.1
      IL_00c1:  ldc.i4.s   28
      IL_00c3:  beq        IL_079d

      IL_00c8:  ldloc.1
      IL_00c9:  ldc.i4.s   29
      IL_00cb:  beq        IL_07e5

      IL_00d0:  ldloc.1
      IL_00d1:  ldc.i4.s   30
      IL_00d3:  beq        IL_082d

      IL_00d8:  ldloc.1
      IL_00d9:  ldc.i4.s   31
      IL_00db:  beq        IL_0875

      IL_00e0:  ldloc.1
      IL_00e1:  ldc.i4.s   32
      IL_00e3:  beq        IL_08bd

      IL_00e8:  ldloc.1
      IL_00e9:  ldc.i4.s   33
      IL_00eb:  beq        IL_0905

      IL_00f0:  ldloc.1
      IL_00f1:  ldc.i4.s   34
      IL_00f3:  beq        IL_094d

      IL_00f8:  ldloc.1
      IL_00f9:  ldc.i4.s   35
      IL_00fb:  beq        IL_0995

      IL_0100:  ldloc.1
      IL_0101:  ldc.i4.s   36
      IL_0103:  beq        IL_09dd

      IL_0108:  ldloc.1
      IL_0109:  ldc.i4.s   37
      IL_010b:  beq        IL_0a25

      IL_0110:  ldloc.1
      IL_0111:  ldc.i4.s   38
      IL_0113:  beq        IL_0a6d

      IL_0118:  ldloc.1
      IL_0119:  ldc.i4.s   39
      IL_011b:  beq        IL_0ab5

      IL_0120:  ldloc.1
      IL_0121:  ldc.i4.s   40
      IL_0123:  beq        IL_0afd

      IL_0128:  br         IL_0b45

      IL_012d:  ldc.i4.0
      IL_012e:  stloc.2
      IL_012f:  ldarg.0
      IL_0130:  volatile.
      IL_0132:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0137:  stloc.3
      IL_0138:  ldloc.3
      IL_0139:  brtrue     IL_014e

      IL_013e:  ldarg.0
      IL_013f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0144:  stloc.2
      IL_0145:  ldarg.0
      IL_0146:  volatile.
      IL_0148:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_014d:  stloc.3
      IL_014e:  ldloc.3
      IL_014f:  ldc.i4.0
      IL_0150:  ceq
      IL_0152:  brfalse    IL_0165

      IL_0157:  ldloc.2
      IL_0158:  brfalse    IL_0165

      IL_015d:  ldc.i4.m1
      IL_015e:  stloc.s    V_4
      IL_0160:  br         IL_0b4d

      IL_0165:  ldloc.3
      IL_0166:  stloc.s    V_4
      IL_0168:  br         IL_0b4d

      IL_016d:  ldc.i4.0
      IL_016e:  stloc.s    V_5
      IL_0170:  ldarg.0
      IL_0171:  volatile.
      IL_0173:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0178:  stloc.s    V_6
      IL_017a:  ldloc.s    V_6
      IL_017c:  brtrue     IL_0193

      IL_0181:  ldarg.0
      IL_0182:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0187:  stloc.s    V_5
      IL_0189:  ldarg.0
      IL_018a:  volatile.
      IL_018c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0191:  stloc.s    V_6
      IL_0193:  ldloc.s    V_6
      IL_0195:  ldc.i4.0
      IL_0196:  ceq
      IL_0198:  brfalse    IL_01ac

      IL_019d:  ldloc.s    V_5
      IL_019f:  brfalse    IL_01ac

      IL_01a4:  ldc.i4.m1
      IL_01a5:  stloc.s    V_4
      IL_01a7:  br         IL_0b4d

      IL_01ac:  ldloc.s    V_6
      IL_01ae:  stloc.s    V_4
      IL_01b0:  br         IL_0b4d

      IL_01b5:  ldc.i4.0
      IL_01b6:  stloc.s    V_7
      IL_01b8:  ldarg.0
      IL_01b9:  volatile.
      IL_01bb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_01c0:  stloc.s    V_8
      IL_01c2:  ldloc.s    V_8
      IL_01c4:  brtrue     IL_01db

      IL_01c9:  ldarg.0
      IL_01ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01cf:  stloc.s    V_7
      IL_01d1:  ldarg.0
      IL_01d2:  volatile.
      IL_01d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_01d9:  stloc.s    V_8
      IL_01db:  ldloc.s    V_8
      IL_01dd:  ldc.i4.0
      IL_01de:  ceq
      IL_01e0:  brfalse    IL_01f4

      IL_01e5:  ldloc.s    V_7
      IL_01e7:  brfalse    IL_01f4

      IL_01ec:  ldc.i4.m1
      IL_01ed:  stloc.s    V_4
      IL_01ef:  br         IL_0b4d

      IL_01f4:  ldloc.s    V_8
      IL_01f6:  stloc.s    V_4
      IL_01f8:  br         IL_0b4d

      IL_01fd:  ldc.i4.0
      IL_01fe:  stloc.s    V_9
      IL_0200:  ldarg.0
      IL_0201:  volatile.
      IL_0203:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0208:  stloc.s    V_10
      IL_020a:  ldloc.s    V_10
      IL_020c:  brtrue     IL_0223

      IL_0211:  ldarg.0
      IL_0212:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0217:  stloc.s    V_9
      IL_0219:  ldarg.0
      IL_021a:  volatile.
      IL_021c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0221:  stloc.s    V_10
      IL_0223:  ldloc.s    V_10
      IL_0225:  ldc.i4.0
      IL_0226:  ceq
      IL_0228:  brfalse    IL_023c

      IL_022d:  ldloc.s    V_9
      IL_022f:  brfalse    IL_023c

      IL_0234:  ldc.i4.m1
      IL_0235:  stloc.s    V_4
      IL_0237:  br         IL_0b4d

      IL_023c:  ldloc.s    V_10
      IL_023e:  stloc.s    V_4
      IL_0240:  br         IL_0b4d

      IL_0245:  ldc.i4.0
      IL_0246:  stloc.s    V_11
      IL_0248:  ldarg.0
      IL_0249:  volatile.
      IL_024b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0250:  stloc.s    V_12
      IL_0252:  ldloc.s    V_12
      IL_0254:  brtrue     IL_026b

      IL_0259:  ldarg.0
      IL_025a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_025f:  stloc.s    V_11
      IL_0261:  ldarg.0
      IL_0262:  volatile.
      IL_0264:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0269:  stloc.s    V_12
      IL_026b:  ldloc.s    V_12
      IL_026d:  ldc.i4.0
      IL_026e:  ceq
      IL_0270:  brfalse    IL_0284

      IL_0275:  ldloc.s    V_11
      IL_0277:  brfalse    IL_0284

      IL_027c:  ldc.i4.m1
      IL_027d:  stloc.s    V_4
      IL_027f:  br         IL_0b4d

      IL_0284:  ldloc.s    V_12
      IL_0286:  stloc.s    V_4
      IL_0288:  br         IL_0b4d

      IL_028d:  ldc.i4.0
      IL_028e:  stloc.s    V_13
      IL_0290:  ldarg.0
      IL_0291:  volatile.
      IL_0293:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0298:  stloc.s    V_14
      IL_029a:  ldloc.s    V_14
      IL_029c:  brtrue     IL_02b3

      IL_02a1:  ldarg.0
      IL_02a2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02a7:  stloc.s    V_13
      IL_02a9:  ldarg.0
      IL_02aa:  volatile.
      IL_02ac:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_02b1:  stloc.s    V_14
      IL_02b3:  ldloc.s    V_14
      IL_02b5:  ldc.i4.0
      IL_02b6:  ceq
      IL_02b8:  brfalse    IL_02cc

      IL_02bd:  ldloc.s    V_13
      IL_02bf:  brfalse    IL_02cc

      IL_02c4:  ldc.i4.m1
      IL_02c5:  stloc.s    V_4
      IL_02c7:  br         IL_0b4d

      IL_02cc:  ldloc.s    V_14
      IL_02ce:  stloc.s    V_4
      IL_02d0:  br         IL_0b4d

      IL_02d5:  ldc.i4.0
      IL_02d6:  stloc.s    V_15
      IL_02d8:  ldarg.0
      IL_02d9:  volatile.
      IL_02db:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_02e0:  stloc.s    V_16
      IL_02e2:  ldloc.s    V_16
      IL_02e4:  brtrue     IL_02fb

      IL_02e9:  ldarg.0
      IL_02ea:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02ef:  stloc.s    V_15
      IL_02f1:  ldarg.0
      IL_02f2:  volatile.
      IL_02f4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_02f9:  stloc.s    V_16
      IL_02fb:  ldloc.s    V_16
      IL_02fd:  ldc.i4.0
      IL_02fe:  ceq
      IL_0300:  brfalse    IL_0314

      IL_0305:  ldloc.s    V_15
      IL_0307:  brfalse    IL_0314

      IL_030c:  ldc.i4.m1
      IL_030d:  stloc.s    V_4
      IL_030f:  br         IL_0b4d

      IL_0314:  ldloc.s    V_16
      IL_0316:  stloc.s    V_4
      IL_0318:  br         IL_0b4d

      IL_031d:  ldc.i4.0
      IL_031e:  stloc.s    V_17
      IL_0320:  ldarg.0
      IL_0321:  volatile.
      IL_0323:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0328:  stloc.s    V_18
      IL_032a:  ldloc.s    V_18
      IL_032c:  brtrue     IL_0343

      IL_0331:  ldarg.0
      IL_0332:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0337:  stloc.s    V_17
      IL_0339:  ldarg.0
      IL_033a:  volatile.
      IL_033c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0341:  stloc.s    V_18
      IL_0343:  ldloc.s    V_18
      IL_0345:  ldc.i4.0
      IL_0346:  ceq
      IL_0348:  brfalse    IL_035c

      IL_034d:  ldloc.s    V_17
      IL_034f:  brfalse    IL_035c

      IL_0354:  ldc.i4.m1
      IL_0355:  stloc.s    V_4
      IL_0357:  br         IL_0b4d

      IL_035c:  ldloc.s    V_18
      IL_035e:  stloc.s    V_4
      IL_0360:  br         IL_0b4d

      IL_0365:  ldc.i4.0
      IL_0366:  stloc.s    V_19
      IL_0368:  ldarg.0
      IL_0369:  volatile.
      IL_036b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0370:  stloc.s    V_20
      IL_0372:  ldloc.s    V_20
      IL_0374:  brtrue     IL_038b

      IL_0379:  ldarg.0
      IL_037a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_037f:  stloc.s    V_19
      IL_0381:  ldarg.0
      IL_0382:  volatile.
      IL_0384:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0389:  stloc.s    V_20
      IL_038b:  ldloc.s    V_20
      IL_038d:  ldc.i4.0
      IL_038e:  ceq
      IL_0390:  brfalse    IL_03a4

      IL_0395:  ldloc.s    V_19
      IL_0397:  brfalse    IL_03a4

      IL_039c:  ldc.i4.m1
      IL_039d:  stloc.s    V_4
      IL_039f:  br         IL_0b4d

      IL_03a4:  ldloc.s    V_20
      IL_03a6:  stloc.s    V_4
      IL_03a8:  br         IL_0b4d

      IL_03ad:  ldc.i4.0
      IL_03ae:  stloc.s    V_21
      IL_03b0:  ldarg.0
      IL_03b1:  volatile.
      IL_03b3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_03b8:  stloc.s    V_22
      IL_03ba:  ldloc.s    V_22
      IL_03bc:  brtrue     IL_03d3

      IL_03c1:  ldarg.0
      IL_03c2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03c7:  stloc.s    V_21
      IL_03c9:  ldarg.0
      IL_03ca:  volatile.
      IL_03cc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_03d1:  stloc.s    V_22
      IL_03d3:  ldloc.s    V_22
      IL_03d5:  ldc.i4.0
      IL_03d6:  ceq
      IL_03d8:  brfalse    IL_03ec

      IL_03dd:  ldloc.s    V_21
      IL_03df:  brfalse    IL_03ec

      IL_03e4:  ldc.i4.m1
      IL_03e5:  stloc.s    V_4
      IL_03e7:  br         IL_0b4d

      IL_03ec:  ldloc.s    V_22
      IL_03ee:  stloc.s    V_4
      IL_03f0:  br         IL_0b4d

      IL_03f5:  ldc.i4.0
      IL_03f6:  stloc.s    V_23
      IL_03f8:  ldarg.0
      IL_03f9:  volatile.
      IL_03fb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0400:  stloc.s    V_24
      IL_0402:  ldloc.s    V_24
      IL_0404:  brtrue     IL_041b

      IL_0409:  ldarg.0
      IL_040a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_040f:  stloc.s    V_23
      IL_0411:  ldarg.0
      IL_0412:  volatile.
      IL_0414:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0419:  stloc.s    V_24
      IL_041b:  ldloc.s    V_24
      IL_041d:  ldc.i4.0
      IL_041e:  ceq
      IL_0420:  brfalse    IL_0434

      IL_0425:  ldloc.s    V_23
      IL_0427:  brfalse    IL_0434

      IL_042c:  ldc.i4.m1
      IL_042d:  stloc.s    V_4
      IL_042f:  br         IL_0b4d

      IL_0434:  ldloc.s    V_24
      IL_0436:  stloc.s    V_4
      IL_0438:  br         IL_0b4d

      IL_043d:  ldc.i4.0
      IL_043e:  stloc.s    V_25
      IL_0440:  ldarg.0
      IL_0441:  volatile.
      IL_0443:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0448:  stloc.s    V_26
      IL_044a:  ldloc.s    V_26
      IL_044c:  brtrue     IL_0463

      IL_0451:  ldarg.0
      IL_0452:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0457:  stloc.s    V_25
      IL_0459:  ldarg.0
      IL_045a:  volatile.
      IL_045c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0461:  stloc.s    V_26
      IL_0463:  ldloc.s    V_26
      IL_0465:  ldc.i4.0
      IL_0466:  ceq
      IL_0468:  brfalse    IL_047c

      IL_046d:  ldloc.s    V_25
      IL_046f:  brfalse    IL_047c

      IL_0474:  ldc.i4.m1
      IL_0475:  stloc.s    V_4
      IL_0477:  br         IL_0b4d

      IL_047c:  ldloc.s    V_26
      IL_047e:  stloc.s    V_4
      IL_0480:  br         IL_0b4d

      IL_0485:  ldc.i4.0
      IL_0486:  stloc.s    V_27
      IL_0488:  ldarg.0
      IL_0489:  volatile.
      IL_048b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0490:  stloc.s    V_28
      IL_0492:  ldloc.s    V_28
      IL_0494:  brtrue     IL_04ab

      IL_0499:  ldarg.0
      IL_049a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_049f:  stloc.s    V_27
      IL_04a1:  ldarg.0
      IL_04a2:  volatile.
      IL_04a4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_04a9:  stloc.s    V_28
      IL_04ab:  ldloc.s    V_28
      IL_04ad:  ldc.i4.0
      IL_04ae:  ceq
      IL_04b0:  brfalse    IL_04c4

      IL_04b5:  ldloc.s    V_27
      IL_04b7:  brfalse    IL_04c4

      IL_04bc:  ldc.i4.m1
      IL_04bd:  stloc.s    V_4
      IL_04bf:  br         IL_0b4d

      IL_04c4:  ldloc.s    V_28
      IL_04c6:  stloc.s    V_4
      IL_04c8:  br         IL_0b4d

      IL_04cd:  ldc.i4.0
      IL_04ce:  stloc.s    V_29
      IL_04d0:  ldarg.0
      IL_04d1:  volatile.
      IL_04d3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_04d8:  stloc.s    V_30
      IL_04da:  ldloc.s    V_30
      IL_04dc:  brtrue     IL_04f3

      IL_04e1:  ldarg.0
      IL_04e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04e7:  stloc.s    V_29
      IL_04e9:  ldarg.0
      IL_04ea:  volatile.
      IL_04ec:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_04f1:  stloc.s    V_30
      IL_04f3:  ldloc.s    V_30
      IL_04f5:  ldc.i4.0
      IL_04f6:  ceq
      IL_04f8:  brfalse    IL_050c

      IL_04fd:  ldloc.s    V_29
      IL_04ff:  brfalse    IL_050c

      IL_0504:  ldc.i4.m1
      IL_0505:  stloc.s    V_4
      IL_0507:  br         IL_0b4d

      IL_050c:  ldloc.s    V_30
      IL_050e:  stloc.s    V_4
      IL_0510:  br         IL_0b4d

      IL_0515:  ldc.i4.0
      IL_0516:  stloc.s    V_31
      IL_0518:  ldarg.0
      IL_0519:  volatile.
      IL_051b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0520:  stloc.s    V_32
      IL_0522:  ldloc.s    V_32
      IL_0524:  brtrue     IL_053b

      IL_0529:  ldarg.0
      IL_052a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_052f:  stloc.s    V_31
      IL_0531:  ldarg.0
      IL_0532:  volatile.
      IL_0534:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0539:  stloc.s    V_32
      IL_053b:  ldloc.s    V_32
      IL_053d:  ldc.i4.0
      IL_053e:  ceq
      IL_0540:  brfalse    IL_0554

      IL_0545:  ldloc.s    V_31
      IL_0547:  brfalse    IL_0554

      IL_054c:  ldc.i4.m1
      IL_054d:  stloc.s    V_4
      IL_054f:  br         IL_0b4d

      IL_0554:  ldloc.s    V_32
      IL_0556:  stloc.s    V_4
      IL_0558:  br         IL_0b4d

      IL_055d:  ldc.i4.0
      IL_055e:  stloc.s    V_33
      IL_0560:  ldarg.0
      IL_0561:  volatile.
      IL_0563:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0568:  stloc.s    V_34
      IL_056a:  ldloc.s    V_34
      IL_056c:  brtrue     IL_0583

      IL_0571:  ldarg.0
      IL_0572:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0577:  stloc.s    V_33
      IL_0579:  ldarg.0
      IL_057a:  volatile.
      IL_057c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0581:  stloc.s    V_34
      IL_0583:  ldloc.s    V_34
      IL_0585:  ldc.i4.0
      IL_0586:  ceq
      IL_0588:  brfalse    IL_059c

      IL_058d:  ldloc.s    V_33
      IL_058f:  brfalse    IL_059c

      IL_0594:  ldc.i4.m1
      IL_0595:  stloc.s    V_4
      IL_0597:  br         IL_0b4d

      IL_059c:  ldloc.s    V_34
      IL_059e:  stloc.s    V_4
      IL_05a0:  br         IL_0b4d

      IL_05a5:  ldc.i4.0
      IL_05a6:  stloc.s    V_35
      IL_05a8:  ldarg.0
      IL_05a9:  volatile.
      IL_05ab:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_05b0:  stloc.s    V_36
      IL_05b2:  ldloc.s    V_36
      IL_05b4:  brtrue     IL_05cb

      IL_05b9:  ldarg.0
      IL_05ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_05bf:  stloc.s    V_35
      IL_05c1:  ldarg.0
      IL_05c2:  volatile.
      IL_05c4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_05c9:  stloc.s    V_36
      IL_05cb:  ldloc.s    V_36
      IL_05cd:  ldc.i4.0
      IL_05ce:  ceq
      IL_05d0:  brfalse    IL_05e4

      IL_05d5:  ldloc.s    V_35
      IL_05d7:  brfalse    IL_05e4

      IL_05dc:  ldc.i4.m1
      IL_05dd:  stloc.s    V_4
      IL_05df:  br         IL_0b4d

      IL_05e4:  ldloc.s    V_36
      IL_05e6:  stloc.s    V_4
      IL_05e8:  br         IL_0b4d

      IL_05ed:  ldc.i4.0
      IL_05ee:  stloc.s    V_37
      IL_05f0:  ldarg.0
      IL_05f1:  volatile.
      IL_05f3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_05f8:  stloc.s    V_38
      IL_05fa:  ldloc.s    V_38
      IL_05fc:  brtrue     IL_0613

      IL_0601:  ldarg.0
      IL_0602:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0607:  stloc.s    V_37
      IL_0609:  ldarg.0
      IL_060a:  volatile.
      IL_060c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0611:  stloc.s    V_38
      IL_0613:  ldloc.s    V_38
      IL_0615:  ldc.i4.0
      IL_0616:  ceq
      IL_0618:  brfalse    IL_062c

      IL_061d:  ldloc.s    V_37
      IL_061f:  brfalse    IL_062c

      IL_0624:  ldc.i4.m1
      IL_0625:  stloc.s    V_4
      IL_0627:  br         IL_0b4d

      IL_062c:  ldloc.s    V_38
      IL_062e:  stloc.s    V_4
      IL_0630:  br         IL_0b4d

      IL_0635:  ldc.i4.0
      IL_0636:  stloc.s    V_39
      IL_0638:  ldarg.0
      IL_0639:  volatile.
      IL_063b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0640:  stloc.s    V_40
      IL_0642:  ldloc.s    V_40
      IL_0644:  brtrue     IL_065b

      IL_0649:  ldarg.0
      IL_064a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_064f:  stloc.s    V_39
      IL_0651:  ldarg.0
      IL_0652:  volatile.
      IL_0654:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0659:  stloc.s    V_40
      IL_065b:  ldloc.s    V_40
      IL_065d:  ldc.i4.0
      IL_065e:  ceq
      IL_0660:  brfalse    IL_0674

      IL_0665:  ldloc.s    V_39
      IL_0667:  brfalse    IL_0674

      IL_066c:  ldc.i4.m1
      IL_066d:  stloc.s    V_4
      IL_066f:  br         IL_0b4d

      IL_0674:  ldloc.s    V_40
      IL_0676:  stloc.s    V_4
      IL_0678:  br         IL_0b4d

      IL_067d:  ldc.i4.0
      IL_067e:  stloc.s    V_41
      IL_0680:  ldarg.0
      IL_0681:  volatile.
      IL_0683:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0688:  stloc.s    V_42
      IL_068a:  ldloc.s    V_42
      IL_068c:  brtrue     IL_06a3

      IL_0691:  ldarg.0
      IL_0692:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0697:  stloc.s    V_41
      IL_0699:  ldarg.0
      IL_069a:  volatile.
      IL_069c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_06a1:  stloc.s    V_42
      IL_06a3:  ldloc.s    V_42
      IL_06a5:  ldc.i4.0
      IL_06a6:  ceq
      IL_06a8:  brfalse    IL_06bc

      IL_06ad:  ldloc.s    V_41
      IL_06af:  brfalse    IL_06bc

      IL_06b4:  ldc.i4.m1
      IL_06b5:  stloc.s    V_4
      IL_06b7:  br         IL_0b4d

      IL_06bc:  ldloc.s    V_42
      IL_06be:  stloc.s    V_4
      IL_06c0:  br         IL_0b4d

      IL_06c5:  ldc.i4.0
      IL_06c6:  stloc.s    V_43
      IL_06c8:  ldarg.0
      IL_06c9:  volatile.
      IL_06cb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_06d0:  stloc.s    V_44
      IL_06d2:  ldloc.s    V_44
      IL_06d4:  brtrue     IL_06eb

      IL_06d9:  ldarg.0
      IL_06da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06df:  stloc.s    V_43
      IL_06e1:  ldarg.0
      IL_06e2:  volatile.
      IL_06e4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_06e9:  stloc.s    V_44
      IL_06eb:  ldloc.s    V_44
      IL_06ed:  ldc.i4.0
      IL_06ee:  ceq
      IL_06f0:  brfalse    IL_0704

      IL_06f5:  ldloc.s    V_43
      IL_06f7:  brfalse    IL_0704

      IL_06fc:  ldc.i4.m1
      IL_06fd:  stloc.s    V_4
      IL_06ff:  br         IL_0b4d

      IL_0704:  ldloc.s    V_44
      IL_0706:  stloc.s    V_4
      IL_0708:  br         IL_0b4d

      IL_070d:  ldc.i4.0
      IL_070e:  stloc.s    V_45
      IL_0710:  ldarg.0
      IL_0711:  volatile.
      IL_0713:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0718:  stloc.s    V_46
      IL_071a:  ldloc.s    V_46
      IL_071c:  brtrue     IL_0733

      IL_0721:  ldarg.0
      IL_0722:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0727:  stloc.s    V_45
      IL_0729:  ldarg.0
      IL_072a:  volatile.
      IL_072c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0731:  stloc.s    V_46
      IL_0733:  ldloc.s    V_46
      IL_0735:  ldc.i4.0
      IL_0736:  ceq
      IL_0738:  brfalse    IL_074c

      IL_073d:  ldloc.s    V_45
      IL_073f:  brfalse    IL_074c

      IL_0744:  ldc.i4.m1
      IL_0745:  stloc.s    V_4
      IL_0747:  br         IL_0b4d

      IL_074c:  ldloc.s    V_46
      IL_074e:  stloc.s    V_4
      IL_0750:  br         IL_0b4d

      IL_0755:  ldc.i4.0
      IL_0756:  stloc.s    V_47
      IL_0758:  ldarg.0
      IL_0759:  volatile.
      IL_075b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0760:  stloc.s    V_48
      IL_0762:  ldloc.s    V_48
      IL_0764:  brtrue     IL_077b

      IL_0769:  ldarg.0
      IL_076a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_076f:  stloc.s    V_47
      IL_0771:  ldarg.0
      IL_0772:  volatile.
      IL_0774:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0779:  stloc.s    V_48
      IL_077b:  ldloc.s    V_48
      IL_077d:  ldc.i4.0
      IL_077e:  ceq
      IL_0780:  brfalse    IL_0794

      IL_0785:  ldloc.s    V_47
      IL_0787:  brfalse    IL_0794

      IL_078c:  ldc.i4.m1
      IL_078d:  stloc.s    V_4
      IL_078f:  br         IL_0b4d

      IL_0794:  ldloc.s    V_48
      IL_0796:  stloc.s    V_4
      IL_0798:  br         IL_0b4d

      IL_079d:  ldc.i4.0
      IL_079e:  stloc.s    V_49
      IL_07a0:  ldarg.0
      IL_07a1:  volatile.
      IL_07a3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_07a8:  stloc.s    V_50
      IL_07aa:  ldloc.s    V_50
      IL_07ac:  brtrue     IL_07c3

      IL_07b1:  ldarg.0
      IL_07b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_07b7:  stloc.s    V_49
      IL_07b9:  ldarg.0
      IL_07ba:  volatile.
      IL_07bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_07c1:  stloc.s    V_50
      IL_07c3:  ldloc.s    V_50
      IL_07c5:  ldc.i4.0
      IL_07c6:  ceq
      IL_07c8:  brfalse    IL_07dc

      IL_07cd:  ldloc.s    V_49
      IL_07cf:  brfalse    IL_07dc

      IL_07d4:  ldc.i4.m1
      IL_07d5:  stloc.s    V_4
      IL_07d7:  br         IL_0b4d

      IL_07dc:  ldloc.s    V_50
      IL_07de:  stloc.s    V_4
      IL_07e0:  br         IL_0b4d

      IL_07e5:  ldc.i4.0
      IL_07e6:  stloc.s    V_51
      IL_07e8:  ldarg.0
      IL_07e9:  volatile.
      IL_07eb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_07f0:  stloc.s    V_52
      IL_07f2:  ldloc.s    V_52
      IL_07f4:  brtrue     IL_080b

      IL_07f9:  ldarg.0
      IL_07fa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_07ff:  stloc.s    V_51
      IL_0801:  ldarg.0
      IL_0802:  volatile.
      IL_0804:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0809:  stloc.s    V_52
      IL_080b:  ldloc.s    V_52
      IL_080d:  ldc.i4.0
      IL_080e:  ceq
      IL_0810:  brfalse    IL_0824

      IL_0815:  ldloc.s    V_51
      IL_0817:  brfalse    IL_0824

      IL_081c:  ldc.i4.m1
      IL_081d:  stloc.s    V_4
      IL_081f:  br         IL_0b4d

      IL_0824:  ldloc.s    V_52
      IL_0826:  stloc.s    V_4
      IL_0828:  br         IL_0b4d

      IL_082d:  ldc.i4.0
      IL_082e:  stloc.s    V_53
      IL_0830:  ldarg.0
      IL_0831:  volatile.
      IL_0833:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0838:  stloc.s    V_54
      IL_083a:  ldloc.s    V_54
      IL_083c:  brtrue     IL_0853

      IL_0841:  ldarg.0
      IL_0842:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0847:  stloc.s    V_53
      IL_0849:  ldarg.0
      IL_084a:  volatile.
      IL_084c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0851:  stloc.s    V_54
      IL_0853:  ldloc.s    V_54
      IL_0855:  ldc.i4.0
      IL_0856:  ceq
      IL_0858:  brfalse    IL_086c

      IL_085d:  ldloc.s    V_53
      IL_085f:  brfalse    IL_086c

      IL_0864:  ldc.i4.m1
      IL_0865:  stloc.s    V_4
      IL_0867:  br         IL_0b4d

      IL_086c:  ldloc.s    V_54
      IL_086e:  stloc.s    V_4
      IL_0870:  br         IL_0b4d

      IL_0875:  ldc.i4.0
      IL_0876:  stloc.s    V_55
      IL_0878:  ldarg.0
      IL_0879:  volatile.
      IL_087b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0880:  stloc.s    V_56
      IL_0882:  ldloc.s    V_56
      IL_0884:  brtrue     IL_089b

      IL_0889:  ldarg.0
      IL_088a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_088f:  stloc.s    V_55
      IL_0891:  ldarg.0
      IL_0892:  volatile.
      IL_0894:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0899:  stloc.s    V_56
      IL_089b:  ldloc.s    V_56
      IL_089d:  ldc.i4.0
      IL_089e:  ceq
      IL_08a0:  brfalse    IL_08b4

      IL_08a5:  ldloc.s    V_55
      IL_08a7:  brfalse    IL_08b4

      IL_08ac:  ldc.i4.m1
      IL_08ad:  stloc.s    V_4
      IL_08af:  br         IL_0b4d

      IL_08b4:  ldloc.s    V_56
      IL_08b6:  stloc.s    V_4
      IL_08b8:  br         IL_0b4d

      IL_08bd:  ldc.i4.0
      IL_08be:  stloc.s    V_57
      IL_08c0:  ldarg.0
      IL_08c1:  volatile.
      IL_08c3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_08c8:  stloc.s    V_58
      IL_08ca:  ldloc.s    V_58
      IL_08cc:  brtrue     IL_08e3

      IL_08d1:  ldarg.0
      IL_08d2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_08d7:  stloc.s    V_57
      IL_08d9:  ldarg.0
      IL_08da:  volatile.
      IL_08dc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_08e1:  stloc.s    V_58
      IL_08e3:  ldloc.s    V_58
      IL_08e5:  ldc.i4.0
      IL_08e6:  ceq
      IL_08e8:  brfalse    IL_08fc

      IL_08ed:  ldloc.s    V_57
      IL_08ef:  brfalse    IL_08fc

      IL_08f4:  ldc.i4.m1
      IL_08f5:  stloc.s    V_4
      IL_08f7:  br         IL_0b4d

      IL_08fc:  ldloc.s    V_58
      IL_08fe:  stloc.s    V_4
      IL_0900:  br         IL_0b4d

      IL_0905:  ldc.i4.0
      IL_0906:  stloc.s    V_59
      IL_0908:  ldarg.0
      IL_0909:  volatile.
      IL_090b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0910:  stloc.s    V_60
      IL_0912:  ldloc.s    V_60
      IL_0914:  brtrue     IL_092b

      IL_0919:  ldarg.0
      IL_091a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_091f:  stloc.s    V_59
      IL_0921:  ldarg.0
      IL_0922:  volatile.
      IL_0924:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0929:  stloc.s    V_60
      IL_092b:  ldloc.s    V_60
      IL_092d:  ldc.i4.0
      IL_092e:  ceq
      IL_0930:  brfalse    IL_0944

      IL_0935:  ldloc.s    V_59
      IL_0937:  brfalse    IL_0944

      IL_093c:  ldc.i4.m1
      IL_093d:  stloc.s    V_4
      IL_093f:  br         IL_0b4d

      IL_0944:  ldloc.s    V_60
      IL_0946:  stloc.s    V_4
      IL_0948:  br         IL_0b4d

      IL_094d:  ldc.i4.0
      IL_094e:  stloc.s    V_61
      IL_0950:  ldarg.0
      IL_0951:  volatile.
      IL_0953:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0958:  stloc.s    V_62
      IL_095a:  ldloc.s    V_62
      IL_095c:  brtrue     IL_0973

      IL_0961:  ldarg.0
      IL_0962:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0967:  stloc.s    V_61
      IL_0969:  ldarg.0
      IL_096a:  volatile.
      IL_096c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0971:  stloc.s    V_62
      IL_0973:  ldloc.s    V_62
      IL_0975:  ldc.i4.0
      IL_0976:  ceq
      IL_0978:  brfalse    IL_098c

      IL_097d:  ldloc.s    V_61
      IL_097f:  brfalse    IL_098c

      IL_0984:  ldc.i4.m1
      IL_0985:  stloc.s    V_4
      IL_0987:  br         IL_0b4d

      IL_098c:  ldloc.s    V_62
      IL_098e:  stloc.s    V_4
      IL_0990:  br         IL_0b4d

      IL_0995:  ldc.i4.0
      IL_0996:  stloc.s    V_63
      IL_0998:  ldarg.0
      IL_0999:  volatile.
      IL_099b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_09a0:  stloc.s    V_64
      IL_09a2:  ldloc.s    V_64
      IL_09a4:  brtrue     IL_09bb

      IL_09a9:  ldarg.0
      IL_09aa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_09af:  stloc.s    V_63
      IL_09b1:  ldarg.0
      IL_09b2:  volatile.
      IL_09b4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_09b9:  stloc.s    V_64
      IL_09bb:  ldloc.s    V_64
      IL_09bd:  ldc.i4.0
      IL_09be:  ceq
      IL_09c0:  brfalse    IL_09d4

      IL_09c5:  ldloc.s    V_63
      IL_09c7:  brfalse    IL_09d4

      IL_09cc:  ldc.i4.m1
      IL_09cd:  stloc.s    V_4
      IL_09cf:  br         IL_0b4d

      IL_09d4:  ldloc.s    V_64
      IL_09d6:  stloc.s    V_4
      IL_09d8:  br         IL_0b4d

      IL_09dd:  ldc.i4.0
      IL_09de:  stloc.s    V_65
      IL_09e0:  ldarg.0
      IL_09e1:  volatile.
      IL_09e3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_09e8:  stloc.s    V_66
      IL_09ea:  ldloc.s    V_66
      IL_09ec:  brtrue     IL_0a03

      IL_09f1:  ldarg.0
      IL_09f2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_09f7:  stloc.s    V_65
      IL_09f9:  ldarg.0
      IL_09fa:  volatile.
      IL_09fc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0a01:  stloc.s    V_66
      IL_0a03:  ldloc.s    V_66
      IL_0a05:  ldc.i4.0
      IL_0a06:  ceq
      IL_0a08:  brfalse    IL_0a1c

      IL_0a0d:  ldloc.s    V_65
      IL_0a0f:  brfalse    IL_0a1c

      IL_0a14:  ldc.i4.m1
      IL_0a15:  stloc.s    V_4
      IL_0a17:  br         IL_0b4d

      IL_0a1c:  ldloc.s    V_66
      IL_0a1e:  stloc.s    V_4
      IL_0a20:  br         IL_0b4d

      IL_0a25:  ldc.i4.0
      IL_0a26:  stloc.s    V_67
      IL_0a28:  ldarg.0
      IL_0a29:  volatile.
      IL_0a2b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0a30:  stloc.s    V_68
      IL_0a32:  ldloc.s    V_68
      IL_0a34:  brtrue     IL_0a4b

      IL_0a39:  ldarg.0
      IL_0a3a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0a3f:  stloc.s    V_67
      IL_0a41:  ldarg.0
      IL_0a42:  volatile.
      IL_0a44:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0a49:  stloc.s    V_68
      IL_0a4b:  ldloc.s    V_68
      IL_0a4d:  ldc.i4.0
      IL_0a4e:  ceq
      IL_0a50:  brfalse    IL_0a64

      IL_0a55:  ldloc.s    V_67
      IL_0a57:  brfalse    IL_0a64

      IL_0a5c:  ldc.i4.m1
      IL_0a5d:  stloc.s    V_4
      IL_0a5f:  br         IL_0b4d

      IL_0a64:  ldloc.s    V_68
      IL_0a66:  stloc.s    V_4
      IL_0a68:  br         IL_0b4d

      IL_0a6d:  ldc.i4.0
      IL_0a6e:  stloc.s    V_69
      IL_0a70:  ldarg.0
      IL_0a71:  volatile.
      IL_0a73:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0a78:  stloc.s    V_70
      IL_0a7a:  ldloc.s    V_70
      IL_0a7c:  brtrue     IL_0a93

      IL_0a81:  ldarg.0
      IL_0a82:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0a87:  stloc.s    V_69
      IL_0a89:  ldarg.0
      IL_0a8a:  volatile.
      IL_0a8c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0a91:  stloc.s    V_70
      IL_0a93:  ldloc.s    V_70
      IL_0a95:  ldc.i4.0
      IL_0a96:  ceq
      IL_0a98:  brfalse    IL_0aac

      IL_0a9d:  ldloc.s    V_69
      IL_0a9f:  brfalse    IL_0aac

      IL_0aa4:  ldc.i4.m1
      IL_0aa5:  stloc.s    V_4
      IL_0aa7:  br         IL_0b4d

      IL_0aac:  ldloc.s    V_70
      IL_0aae:  stloc.s    V_4
      IL_0ab0:  br         IL_0b4d

      IL_0ab5:  ldc.i4.0
      IL_0ab6:  stloc.s    V_71
      IL_0ab8:  ldarg.0
      IL_0ab9:  volatile.
      IL_0abb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0ac0:  stloc.s    V_72
      IL_0ac2:  ldloc.s    V_72
      IL_0ac4:  brtrue     IL_0adb

      IL_0ac9:  ldarg.0
      IL_0aca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0acf:  stloc.s    V_71
      IL_0ad1:  ldarg.0
      IL_0ad2:  volatile.
      IL_0ad4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0ad9:  stloc.s    V_72
      IL_0adb:  ldloc.s    V_72
      IL_0add:  ldc.i4.0
      IL_0ade:  ceq
      IL_0ae0:  brfalse    IL_0af4

      IL_0ae5:  ldloc.s    V_71
      IL_0ae7:  brfalse    IL_0af4

      IL_0aec:  ldc.i4.m1
      IL_0aed:  stloc.s    V_4
      IL_0aef:  br         IL_0b4d

      IL_0af4:  ldloc.s    V_72
      IL_0af6:  stloc.s    V_4
      IL_0af8:  br         IL_0b4d

      IL_0afd:  ldc.i4.0
      IL_0afe:  stloc.s    V_73
      IL_0b00:  ldarg.0
      IL_0b01:  volatile.
      IL_0b03:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0b08:  stloc.s    V_74
      IL_0b0a:  ldloc.s    V_74
      IL_0b0c:  brtrue     IL_0b23

      IL_0b11:  ldarg.0
      IL_0b12:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0b17:  stloc.s    V_73
      IL_0b19:  ldarg.0
      IL_0b1a:  volatile.
      IL_0b1c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0b21:  stloc.s    V_74
      IL_0b23:  ldloc.s    V_74
      IL_0b25:  ldc.i4.0
      IL_0b26:  ceq
      IL_0b28:  brfalse    IL_0b3c

      IL_0b2d:  ldloc.s    V_73
      IL_0b2f:  brfalse    IL_0b3c

      IL_0b34:  ldc.i4.m1
      IL_0b35:  stloc.s    V_4
      IL_0b37:  br         IL_0b4d

      IL_0b3c:  ldloc.s    V_74
      IL_0b3e:  stloc.s    V_4
      IL_0b40:  br         IL_0b4d

      IL_0b45:  ldc.i4.m1
      IL_0b46:  stloc.s    V_4
      IL_0b48:  br         IL_0b4d

      IL_0b4d:  ldloc.s    V_4
      IL_0b4f:  stloc.s    V_75
      IL_0b51:  ldloc.s    V_4
      IL_0b53:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.TcpConnectionContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverConnect0$PST0600049F(uint32 dstIP,
                                                                    uint16 dstPort) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.TcpConnectionContract/Connect::dstIP
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.TcpConnectionContract/Connect::dstPort
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.2
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.2
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0028:  ret
    } // end of method Exp::DeliverConnect0

    .method privatescope instance void  MarshallDeliverConnect0$PST060004A0(uint32 dstIP,
                                                                            uint16 dstPort,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverConnect0$PST0600049F(uint32,
                                                                                                                   uint16)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Connect NetStack.Contracts.TcpConnectionContract/Exp::ConnectPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0016:  call       instance void NetStack.Contracts.TcpConnectionContract/Connect::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverConnect0

    .method privatescope instance void  DeliverBindLocalEndPoint0$PST060004A1(uint32 dstIP,
                                                                              uint16 dstPort) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint NetStack.Contracts.TcpConnectionContract/Exp::BindLocalEndPointPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint::dstIP
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint NetStack.Contracts.TcpConnectionContract/Exp::BindLocalEndPointPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint::dstPort
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.3
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.3
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0028:  ret
    } // end of method Exp::DeliverBindLocalEndPoint0

    .method privatescope instance void  MarshallDeliverBindLocalEndPoint0$PST060004A2(uint32 dstIP,
                                                                                      uint16 dstPort,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverBindLocalEndPoint0$PST060004A1(uint32,
                                                                                                                             uint16)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint NetStack.Contracts.TcpConnectionContract/Exp::BindLocalEndPointPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0016:  call       instance void NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint::MarshallAll(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverBindLocalEndPoint0

    .method privatescope instance void  DeliverListen0$PST060004A3(int32 backlog) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Listen NetStack.Contracts.TcpConnectionContract/Exp::ListenPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 NetStack.Contracts.TcpConnectionContract/Listen::backlog
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverListen0

    .method privatescope instance void  MarshallDeliverListen0$PST060004A4(int32 backlog,
                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverListen0$PST060004A3(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Listen NetStack.Contracts.TcpConnectionContract/Exp::ListenPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/Listen::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverListen0

    .method privatescope instance void  DeliverGetLocalAddress1$PST060004A5() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   10
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   10
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverGetLocalAddress1

    .method privatescope instance void  MarshallDeliverGetLocalAddress1$PST060004A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalAddress1$PST060004A5()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress NetStack.Contracts.TcpConnectionContract/Exp::GetLocalAddressPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetLocalAddress::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetLocalAddress1

    .method privatescope instance void  DeliverGetLocalAddress2$PST060004A7() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   10
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   10
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverGetLocalAddress2

    .method privatescope instance void  MarshallDeliverGetLocalAddress2$PST060004A8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalAddress2$PST060004A7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress NetStack.Contracts.TcpConnectionContract/Exp::GetLocalAddressPod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetLocalAddress::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetLocalAddress2

    .method privatescope instance void  DeliverGetLocalAddress0$PST060004A9() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   10
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   10
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetLocalAddress0

    .method privatescope instance void  MarshallDeliverGetLocalAddress0$PST060004AA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalAddress0$PST060004A9()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress NetStack.Contracts.TcpConnectionContract/Exp::GetLocalAddressPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetLocalAddress::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetLocalAddress0

    .method privatescope instance void  DeliverGetLocalPort0$PST060004AB() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetLocalPort0

    .method privatescope instance void  MarshallDeliverGetLocalPort0$PST060004AC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalPort0$PST060004AB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort NetStack.Contracts.TcpConnectionContract/Exp::GetLocalPortPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetLocalPort::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetLocalPort0

    .method privatescope instance void  DeliverGetLocalPort1$PST060004AD() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverGetLocalPort1

    .method privatescope instance void  MarshallDeliverGetLocalPort1$PST060004AE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalPort1$PST060004AD()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort NetStack.Contracts.TcpConnectionContract/Exp::GetLocalPortPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetLocalPort::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetLocalPort1

    .method privatescope instance void  DeliverGetLocalPort2$PST060004AF() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverGetLocalPort2

    .method privatescope instance void  MarshallDeliverGetLocalPort2$PST060004B0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetLocalPort2$PST060004AF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort NetStack.Contracts.TcpConnectionContract/Exp::GetLocalPortPod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetLocalPort::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetLocalPort2

    .method privatescope instance void  DeliverAccept0$PST060004B1(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newConnection) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Accept NetStack.Contracts.TcpConnectionContract/Exp::AcceptPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   12
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverAccept0

    .method privatescope instance void  MarshallDeliverAccept0$PST060004B2(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newConnection,
                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAccept0$PST060004B1(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Accept NetStack.Contracts.TcpConnectionContract/Exp::AcceptPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/Accept::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverAccept0

    .method privatescope instance void  DeliverIsSessionAvailable0$PST060004B3() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   13
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   13
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverIsSessionAvailable0

    .method privatescope instance void  MarshallDeliverIsSessionAvailable0$PST060004B4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverIsSessionAvailable0$PST060004B3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IsSessionAvailable NetStack.Contracts.TcpConnectionContract/Exp::IsSessionAvailablePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/IsSessionAvailable::MarshallAll(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverIsSessionAvailable0

    .method privatescope instance void  DeliverRead1$PST060004B5() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   17
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   17
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverRead1

    .method privatescope instance void  MarshallDeliverRead1$PST060004B6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverRead1$PST060004B5()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Read NetStack.Contracts.TcpConnectionContract/Exp::ReadPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Read::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverRead1

    .method privatescope instance void  DeliverRead2$PST060004B7() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   17
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   17
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverRead2

    .method privatescope instance void  MarshallDeliverRead2$PST060004B8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverRead2$PST060004B7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Read NetStack.Contracts.TcpConnectionContract/Exp::ReadPod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Read::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverRead2

    .method privatescope instance void  DeliverPollRead1$PST060004B9(int32 timeout) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/PollRead NetStack.Contracts.TcpConnectionContract/Exp::PollReadPod1
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 NetStack.Contracts.TcpConnectionContract/PollRead::timeout
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   18
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_001e:  ret
    } // end of method Exp::DeliverPollRead1

    .method privatescope instance void  MarshallDeliverPollRead1$PST060004BA(int32 timeout,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverPollRead1$PST060004B9(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/PollRead NetStack.Contracts.TcpConnectionContract/Exp::PollReadPod1
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/PollRead::MarshallAll(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverPollRead1

    .method privatescope instance void  DeliverPollRead2$PST060004BB(int32 timeout) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/PollRead NetStack.Contracts.TcpConnectionContract/Exp::PollReadPod2
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 NetStack.Contracts.TcpConnectionContract/PollRead::timeout
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   18
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_001e:  ret
    } // end of method Exp::DeliverPollRead2

    .method privatescope instance void  MarshallDeliverPollRead2$PST060004BC(int32 timeout,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverPollRead2$PST060004BB(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/PollRead NetStack.Contracts.TcpConnectionContract/Exp::PollReadPod2
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/PollRead::MarshallAll(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverPollRead2

    .method privatescope instance void  DeliverIsDataAvailable2$PST060004BD() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   19
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   19
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverIsDataAvailable2

    .method privatescope instance void  MarshallDeliverIsDataAvailable2$PST060004BE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverIsDataAvailable2$PST060004BD()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable NetStack.Contracts.TcpConnectionContract/Exp::IsDataAvailablePod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/IsDataAvailable::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverIsDataAvailable2

    .method privatescope instance void  DeliverIsDataAvailable1$PST060004BF() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   19
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   19
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverIsDataAvailable1

    .method privatescope instance void  MarshallDeliverIsDataAvailable1$PST060004C0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverIsDataAvailable1$PST060004BF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable NetStack.Contracts.TcpConnectionContract/Exp::IsDataAvailablePod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/IsDataAvailable::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverIsDataAvailable1

    .method privatescope instance void  DeliverWrite1$PST060004C1(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Write NetStack.Contracts.TcpConnectionContract/Exp::WritePod1
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   20
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   20
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_001e:  ret
    } // end of method Exp::DeliverWrite1

    .method privatescope instance void  MarshallDeliverWrite1$PST060004C2(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverWrite1$PST060004C1(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Write NetStack.Contracts.TcpConnectionContract/Exp::WritePod1
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/Write::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverWrite1

    .method privatescope instance void  DeliverWrite2$PST060004C3(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Write NetStack.Contracts.TcpConnectionContract/Exp::WritePod2
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   20
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   20
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_001e:  ret
    } // end of method Exp::DeliverWrite2

    .method privatescope instance void  MarshallDeliverWrite2$PST060004C4(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverWrite2$PST060004C3(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Write NetStack.Contracts.TcpConnectionContract/Exp::WritePod2
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0015:  call       instance void NetStack.Contracts.TcpConnectionContract/Write::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverWrite2

    .method privatescope instance void  DeliverClose0$PST060004C5() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   21
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   21
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverClose0

    .method privatescope instance void  MarshallDeliverClose0$PST060004C6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose0$PST060004C5()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Close::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverClose0

    .method privatescope instance void  DeliverClose2$PST060004C7() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   21
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   21
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverClose2

    .method privatescope instance void  MarshallDeliverClose2$PST060004C8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose2$PST060004C7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Close::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverClose2

    .method privatescope instance void  DeliverClose1$PST060004C9() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   21
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   21
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverClose1

    .method privatescope instance void  MarshallDeliverClose1$PST060004CA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverClose1$PST060004C9()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Close NetStack.Contracts.TcpConnectionContract/Exp::ClosePod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Close::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverClose1

    .method privatescope instance void  DeliverAbort0$PST060004CB() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   22
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   22
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverAbort0

    .method privatescope instance void  MarshallDeliverAbort0$PST060004CC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAbort0$PST060004CB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Abort NetStack.Contracts.TcpConnectionContract/Exp::AbortPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Abort::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverAbort0

    .method privatescope instance void  DeliverAbort1$PST060004CD() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   22
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   22
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverAbort1

    .method privatescope instance void  MarshallDeliverAbort1$PST060004CE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAbort1$PST060004CD()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Abort NetStack.Contracts.TcpConnectionContract/Exp::AbortPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Abort::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverAbort1

    .method privatescope instance void  DeliverAbort2$PST060004CF() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   22
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   22
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverAbort2

    .method privatescope instance void  MarshallDeliverAbort2$PST060004D0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverAbort2$PST060004CF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Abort NetStack.Contracts.TcpConnectionContract/Exp::AbortPod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/Abort::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverAbort2

    .method privatescope instance void  DeliverGetRemoteAddress2$PST060004D1() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   23
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   23
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverGetRemoteAddress2

    .method privatescope instance void  MarshallDeliverGetRemoteAddress2$PST060004D2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemoteAddress2$PST060004D1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress NetStack.Contracts.TcpConnectionContract/Exp::GetRemoteAddressPod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetRemoteAddress::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetRemoteAddress2

    .method privatescope instance void  DeliverGetRemoteAddress1$PST060004D3() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   23
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   23
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverGetRemoteAddress1

    .method privatescope instance void  MarshallDeliverGetRemoteAddress1$PST060004D4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemoteAddress1$PST060004D3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress NetStack.Contracts.TcpConnectionContract/Exp::GetRemoteAddressPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetRemoteAddress::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetRemoteAddress1

    .method privatescope instance void  DeliverGetRemotePort1$PST060004D5() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   24
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   24
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverGetRemotePort1

    .method privatescope instance void  MarshallDeliverGetRemotePort1$PST060004D6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemotePort1$PST060004D5()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort NetStack.Contracts.TcpConnectionContract/Exp::GetRemotePortPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetRemotePort::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetRemotePort1

    .method privatescope instance void  DeliverGetRemotePort2$PST060004D7() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   24
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   24
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverGetRemotePort2

    .method privatescope instance void  MarshallDeliverGetRemotePort2$PST060004D8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverGetRemotePort2$PST060004D7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort NetStack.Contracts.TcpConnectionContract/Exp::GetRemotePortPod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/GetRemotePort::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetRemotePort2

    .method privatescope instance void  DeliverDoneSending1$PST060004D9() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   25
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   25
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverDoneSending1

    .method privatescope instance void  MarshallDeliverDoneSending1$PST060004DA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverDoneSending1$PST060004D9()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DoneSending NetStack.Contracts.TcpConnectionContract/Exp::DoneSendingPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/DoneSending::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverDoneSending1

    .method privatescope instance void  DeliverDoneSending2$PST060004DB() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   25
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   25
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverDoneSending2

    .method privatescope instance void  MarshallDeliverDoneSending2$PST060004DC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverDoneSending2$PST060004DB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DoneSending NetStack.Contracts.TcpConnectionContract/Exp::DoneSendingPod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/DoneSending::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverDoneSending2

    .method privatescope instance void  DeliverDoneReceiving1$PST060004DD() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   26
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   26
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverDoneReceiving1

    .method privatescope instance void  MarshallDeliverDoneReceiving1$PST060004DE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverDoneReceiving1$PST060004DD()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving NetStack.Contracts.TcpConnectionContract/Exp::DoneReceivingPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/DoneReceiving::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverDoneReceiving1

    .method privatescope instance void  DeliverDoneReceiving2$PST060004DF() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   26
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   26
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0012:  ret
    } // end of method Exp::DeliverDoneReceiving2

    .method privatescope instance void  MarshallDeliverDoneReceiving2$PST060004E0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::DeliverDoneReceiving2$PST060004DF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving NetStack.Contracts.TcpConnectionContract/Exp::DoneReceivingPod2
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpConnectionContract/Exp::TagPod2
      IL_0014:  call       instance void NetStack.Contracts.TcpConnectionContract/DoneReceiving::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverDoneReceiving2

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Connect
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 dstIP
    .field public uint16 dstPort
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Connect
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Connect::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Connect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Connect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Release

  } // end of class Connect

  .class sequential ansi sealed nested public specialname BindLocalEndPoint
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 dstIP
    .field public uint16 dstPort
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BindLocalEndPoint::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BindLocalEndPoint::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint::MarshallContent(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     uint8*,
                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method BindLocalEndPoint::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method BindLocalEndPoint::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::Release

  } // end of class BindLocalEndPoint

  .class sequential ansi sealed nested public specialname Ready
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Ready
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Ready::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class abstract auto ansi nested public specialname Start
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000028)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReadyState 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000027)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ConnectResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Connect msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/BindResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/BindLocalEndPoint msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Close msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname BindResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000026)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Bound 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/OK msg) cil managed
    {
    } // end of method BindResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReadyState 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/InvalidEndPoint msg) cil managed
    {
    } // end of method BindResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method BindResult::.ctor

  } // end of class BindResult

  .class sequential ansi sealed nested public specialname Listen
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 backlog
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Listen::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Listen* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Listen::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Listen* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Listen::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Listen
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Listen::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method Listen::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Listen* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Listen::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Listen::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Listen::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Listen::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Listen::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Listen::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Listen::Release

  } // end of class Listen

  .class abstract auto ansi nested public specialname Bound
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000025)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ListenResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Listen msg) cil managed
    {
    } // end of method Bound::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ConnectResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Connect msg) cil managed
    {
    } // end of method Bound::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Close msg) cil managed
    {
    } // end of method Bound::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Bound::.ctor

  } // end of class Bound

  .class sequential ansi sealed nested public specialname OK
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method OK::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method OK::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/OK
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/OK::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*,
                                                                                                      int32&)
      IL_001d:  ret
    } // end of method OK::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method OK::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Release

  } // end of class OK

  .class sequential ansi sealed nested public specialname CouldNotConnect
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.TcpError 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CouldNotConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CouldNotConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/CouldNotConnect
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/CouldNotConnect::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method CouldNotConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CouldNotConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotConnect::Release

  } // end of class CouldNotConnect

  .class abstract auto ansi nested public specialname ConnectResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000024)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReadyState 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/CouldNotConnect msg) cil managed
    {
    } // end of method ConnectResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/OK msg) cil managed
    {
    } // end of method ConnectResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ConnectResult::.ctor

  } // end of class ConnectResult

  .class sequential ansi sealed nested public specialname CouldNotListen
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotListen::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/CouldNotListen* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CouldNotListen::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/CouldNotListen* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CouldNotListen::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/CouldNotListen
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/CouldNotListen::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method CouldNotListen::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/CouldNotListen* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CouldNotListen::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotListen::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotListen::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotListen::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotListen::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotListen::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CouldNotListen::Release

  } // end of class CouldNotListen

  .class abstract auto ansi nested public specialname ListenResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000023)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReadyState 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/CouldNotListen msg) cil managed
    {
    } // end of method ListenResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/OK msg) cil managed
    {
    } // end of method ListenResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ListenResult::.ctor

  } // end of class ListenResult

  .class sequential ansi sealed nested public specialname InvalidEndPoint
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/InvalidEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InvalidEndPoint::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/InvalidEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InvalidEndPoint::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/InvalidEndPoint
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/InvalidEndPoint::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method InvalidEndPoint::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/InvalidEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method InvalidEndPoint::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::Release

  } // end of class InvalidEndPoint

  .class sequential ansi sealed nested public specialname GetLocalAddress
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLocalAddress::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLocalAddress::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/GetLocalAddress
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/GetLocalAddress::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method GetLocalAddress::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetLocalAddress::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::Release

  } // end of class GetLocalAddress

  .class sequential ansi sealed nested public specialname GetLocalPort
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLocalPort::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLocalPort::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/GetLocalPort
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/GetLocalPort::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*,
                                                                                                                int32&)
      IL_001d:  ret
    } // end of method GetLocalPort::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetLocalPort::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::Release

  } // end of class GetLocalPort

  .class sequential ansi sealed nested public specialname Accept
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) newConnection
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_0007:  call       void NetStack.Contracts.TcpConnectionContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method Accept::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Accept* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Accept::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Accept* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Accept::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Accept
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Accept::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method Accept::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Accept* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Accept::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_001a:  ldtoken    valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected)
      IL_001f:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_003a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_0047:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_004c:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0051:  ret
    } // end of method Accept::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0013:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/PreConnected) NetStack.Contracts.TcpConnectionContract/Accept::newConnection
      IL_0025:  ret
    } // end of method Accept::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Accept::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Accept::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Accept::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Accept::Release

  } // end of class Accept

  .class sequential ansi sealed nested public specialname IsSessionAvailable
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsSessionAvailable::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/IsSessionAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsSessionAvailable::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/IsSessionAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsSessionAvailable::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/IsSessionAvailable
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/IsSessionAvailable::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*,
                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method IsSessionAvailable::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/IsSessionAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IsSessionAvailable::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsSessionAvailable::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsSessionAvailable::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsSessionAvailable::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsSessionAvailable::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsSessionAvailable::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsSessionAvailable::Release

  } // end of class IsSessionAvailable

  .class sequential ansi sealed nested public specialname IPAddress
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint32 ip
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/IPAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IPAddress::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/IPAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IPAddress::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/IPAddress
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/IPAddress::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method IPAddress::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/IPAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IPAddress::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::Release

  } // end of class IPAddress

  .class sequential ansi sealed nested public specialname Port
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint16 port
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Port* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Port::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Port* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Port::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Port
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Port::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Port::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Port* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Port::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::Release

  } // end of class Port

  .class sequential ansi sealed nested public specialname SessionIsAvailable
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public bool isAvailable
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SessionIsAvailable::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SessionIsAvailable::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SessionIsAvailable::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/SessionIsAvailable
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/SessionIsAvailable::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*,
                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method SessionIsAvailable::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method SessionIsAvailable::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SessionIsAvailable::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SessionIsAvailable::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SessionIsAvailable::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SessionIsAvailable::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SessionIsAvailable::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SessionIsAvailable::Release

  } // end of class SessionIsAvailable

  .class abstract auto ansi nested public specialname Listening
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000022)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening$0 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress msg) cil managed
    {
    } // end of method Listening::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening$1 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort msg) cil managed
    {
    } // end of method Listening::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening$2 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/IsSessionAvailable msg) cil managed
    {
    } // end of method Listening::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening$3 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Accept msg) cil managed
    {
    } // end of method Listening::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Close msg) cil managed
    {
    } // end of method Listening::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Listening::.ctor

  } // end of class Listening

  .class abstract auto ansi nested public specialname Listening$0
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000021)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method Listening$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Listening$0::.ctor

  } // end of class Listening$0

  .class abstract auto ansi nested public specialname Listening$1
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000020)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Port msg) cil managed
    {
    } // end of method Listening$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Listening$1::.ctor

  } // end of class Listening$1

  .class abstract auto ansi nested public specialname Listening$2
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001F)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/SessionIsAvailable msg) cil managed
    {
    } // end of method Listening$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Listening$2::.ctor

  } // end of class Listening$2

  .class abstract auto ansi nested public specialname Listening$3
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001E)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Listening 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/OK msg) cil managed
    {
    } // end of method Listening$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Listening$3::.ctor

  } // end of class Listening$3

  .class abstract auto ansi nested public specialname PreConnected
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001D)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Ready msg) cil managed
    {
    } // end of method PreConnected::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method PreConnected::.ctor

  } // end of class PreConnected

  .class sequential ansi sealed nested public specialname Read
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Read
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Read::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Read::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Read::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Release

  } // end of class Read

  .class sequential ansi sealed nested public specialname PollRead
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 timeout
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/PollRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollRead::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/PollRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollRead::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/PollRead
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/PollRead::MarshallContent(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            uint8*,
                                                                                                            int32&)
      IL_001d:  ret
    } // end of method PollRead::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/PollRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PollRead::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::Release

  } // end of class PollRead

  .class sequential ansi sealed nested public specialname IsDataAvailable
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsDataAvailable::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsDataAvailable::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IsDataAvailable::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/IsDataAvailable
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/IsDataAvailable::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method IsDataAvailable::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IsDataAvailable::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsDataAvailable::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsDataAvailable::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsDataAvailable::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsDataAvailable::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsDataAvailable::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IsDataAvailable::Release

  } // end of class IsDataAvailable

  .class sequential ansi sealed nested public specialname Write
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Write::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Write
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Write::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Write::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Write::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_0008:  ldtoken    [kernel]System.Byte
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Write::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Write::data
      IL_001a:  ret
    } // end of method Write::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Release

  } // end of class Write

  .class sequential ansi sealed nested public specialname Close
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Close::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Close::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Close
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Close::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Close::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Close::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Release

  } // end of class Close

  .class sequential ansi sealed nested public specialname Abort
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Abort::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Abort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Abort::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Abort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Abort::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Abort
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Abort::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Abort::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Abort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Abort::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Abort::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Abort::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Abort::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Abort::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Abort::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Abort::Release

  } // end of class Abort

  .class sequential ansi sealed nested public specialname GetRemoteAddress
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRemoteAddress::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRemoteAddress::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/GetRemoteAddress
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/GetRemoteAddress::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method GetRemoteAddress::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetRemoteAddress::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::Release

  } // end of class GetRemoteAddress

  .class sequential ansi sealed nested public specialname GetRemotePort
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRemotePort::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRemotePort::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/GetRemotePort
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/GetRemotePort::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method GetRemotePort::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetRemotePort::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::Release

  } // end of class GetRemotePort

  .class sequential ansi sealed nested public specialname DoneSending
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneSending::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/DoneSending* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DoneSending::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/DoneSending* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DoneSending::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/DoneSending
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/DoneSending::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method DoneSending::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/DoneSending* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DoneSending::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneSending::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneSending::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneSending::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneSending::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneSending::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneSending::Release

  } // end of class DoneSending

  .class sequential ansi sealed nested public specialname DoneReceiving
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneReceiving::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DoneReceiving::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DoneReceiving::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/DoneReceiving
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/DoneReceiving::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method DoneReceiving::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DoneReceiving::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneReceiving::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneReceiving::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneReceiving::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneReceiving::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneReceiving::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DoneReceiving::Release

  } // end of class DoneReceiving

  .class sequential ansi sealed nested public specialname ConnectionClosed
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectionClosed::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ConnectionClosed::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ConnectionClosed::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/ConnectionClosed
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/ConnectionClosed::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method ConnectionClosed::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ConnectionClosed::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectionClosed::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectionClosed::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectionClosed::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectionClosed::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectionClosed::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectionClosed::Release

  } // end of class ConnectionClosed

  .class sequential ansi sealed nested public specialname NoData
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/NoData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoData::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/NoData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoData::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/NoData
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/NoData::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method NoData::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/NoData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NoData::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::Release

  } // end of class NoData

  .class sequential ansi sealed nested public specialname NoMoreData
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoMoreData::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoMoreData::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoMoreData::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/NoMoreData
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/NoMoreData::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*,
                                                                                                              int32&)
      IL_001d:  ret
    } // end of method NoMoreData::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NoMoreData::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoMoreData::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoMoreData::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoMoreData::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoMoreData::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoMoreData::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoMoreData::Release

  } // end of class NoMoreData

  .class sequential ansi sealed nested public specialname CantSend
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CantSend::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/CantSend* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CantSend::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/CantSend* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CantSend::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/CantSend
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/CantSend::MarshallContent(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            uint8*,
                                                                                                            int32&)
      IL_001d:  ret
    } // end of method CantSend::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/CantSend* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CantSend::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CantSend::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CantSend::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CantSend::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CantSend::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CantSend::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CantSend::Release

  } // end of class CantSend

  .class sequential ansi sealed nested public specialname Data
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Data::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/Data* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Data::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/Data* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Data::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/Data
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Data::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Data::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/Data* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Data::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_0008:  ldtoken    [kernel]System.Byte
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Data::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.TcpConnectionContract/Data::data
      IL_001a:  ret
    } // end of method Data::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Data::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Data::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Data::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Data::Release

  } // end of class Data

  .class sequential ansi sealed nested public specialname DataIsAvailable
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public bool isAvailable
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataIsAvailable::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DataIsAvailable::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DataIsAvailable::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpConnectionContract/DataIsAvailable
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/DataIsAvailable::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method DataIsAvailable::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DataIsAvailable::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataIsAvailable::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataIsAvailable::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataIsAvailable::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataIsAvailable::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataIsAvailable::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataIsAvailable::Release

  } // end of class DataIsAvailable

  .class abstract auto ansi nested public specialname Connected
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001C)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReadResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Read msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/PollReadResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/PollRead msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/WriteResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Write msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected$4 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected$6 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected$7 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected$8 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected$9 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/DoneSending msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Close msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Abort msg) cil managed
    {
    } // end of method Connected::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected::.ctor

  } // end of class Connected

  .class abstract auto ansi nested public specialname Connected$4
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001B)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected$5 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable msg) cil managed
    {
    } // end of method Connected$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$4::.ctor

  } // end of class Connected$4

  .class abstract auto ansi nested public specialname Connected$5
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001A)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Epsilon() cil managed
    {
    } // end of method Connected$5::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$5::.ctor

  } // end of class Connected$5

  .class abstract auto ansi nested public specialname Connected$6
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000019)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method Connected$6::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$6::.ctor

  } // end of class Connected$6

  .class abstract auto ansi nested public specialname Connected$7
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000018)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Port msg) cil managed
    {
    } // end of method Connected$7::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$7::.ctor

  } // end of class Connected$7

  .class abstract auto ansi nested public specialname Connected$8
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000017)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method Connected$8::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$8::.ctor

  } // end of class Connected$8

  .class abstract auto ansi nested public specialname Connected$9
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000016)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Port msg) cil managed
    {
    } // end of method Connected$9::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$9::.ctor

  } // end of class Connected$9

  .class abstract auto ansi nested public specialname ReadResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000015)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Data msg) cil managed
    {
    } // end of method ReadResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData msg) cil managed
    {
    } // end of method ReadResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Zombie 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed msg) cil managed
    {
    } // end of method ReadResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadResult::.ctor

  } // end of class ReadResult

  .class abstract auto ansi nested public specialname PollReadResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000014)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Data msg) cil managed
    {
    } // end of method PollReadResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/NoData msg) cil managed
    {
    } // end of method PollReadResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData msg) cil managed
    {
    } // end of method PollReadResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Zombie 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/ConnectionClosed msg) cil managed
    {
    } // end of method PollReadResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method PollReadResult::.ctor

  } // end of class PollReadResult

  .class abstract auto ansi nested public specialname WriteResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000013)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/OK msg) cil managed
    {
    } // end of method WriteResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/CantSend msg) cil managed
    {
    } // end of method WriteResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method WriteResult::.ctor

  } // end of class WriteResult

  .class abstract auto ansi nested public specialname ReceiveOnly
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000012)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ROReadResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Read msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ROPollReadResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/PollRead msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly$10 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/IsDataAvailable msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly$12 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly$13 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly$14 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly$15 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Zombie 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/DoneReceiving msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Close msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Abort msg) cil managed
    {
    } // end of method ReceiveOnly::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReceiveOnly::.ctor

  } // end of class ReceiveOnly

  .class abstract auto ansi nested public specialname ReceiveOnly$10
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000011)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly$11 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/DataIsAvailable msg) cil managed
    {
    } // end of method ReceiveOnly$10::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReceiveOnly$10::.ctor

  } // end of class ReceiveOnly$10

  .class abstract auto ansi nested public specialname ReceiveOnly$11
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000010)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Epsilon() cil managed
    {
    } // end of method ReceiveOnly$11::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReceiveOnly$11::.ctor

  } // end of class ReceiveOnly$11

  .class abstract auto ansi nested public specialname ReceiveOnly$12
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000F)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method ReceiveOnly$12::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReceiveOnly$12::.ctor

  } // end of class ReceiveOnly$12

  .class abstract auto ansi nested public specialname ReceiveOnly$13
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Port msg) cil managed
    {
    } // end of method ReceiveOnly$13::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReceiveOnly$13::.ctor

  } // end of class ReceiveOnly$13

  .class abstract auto ansi nested public specialname ReceiveOnly$14
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method ReceiveOnly$14::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReceiveOnly$14::.ctor

  } // end of class ReceiveOnly$14

  .class abstract auto ansi nested public specialname ReceiveOnly$15
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Port msg) cil managed
    {
    } // end of method ReceiveOnly$15::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReceiveOnly$15::.ctor

  } // end of class ReceiveOnly$15

  .class abstract auto ansi nested public specialname ROReadResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Data msg) cil managed
    {
    } // end of method ROReadResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Zombie 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData msg) cil managed
    {
    } // end of method ROReadResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ROReadResult::.ctor

  } // end of class ROReadResult

  .class abstract auto ansi nested public specialname ROPollReadResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Data msg) cil managed
    {
    } // end of method ROPollReadResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/ReceiveOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/NoData msg) cil managed
    {
    } // end of method ROPollReadResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Zombie 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/NoMoreData msg) cil managed
    {
    } // end of method ROPollReadResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ROPollReadResult::.ctor

  } // end of class ROPollReadResult

  .class abstract auto ansi nested public specialname SendOnly
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SOWriteResult 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Write msg) cil managed
    {
    } // end of method SendOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly$16 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetLocalAddress msg) cil managed
    {
    } // end of method SendOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly$17 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetLocalPort msg) cil managed
    {
    } // end of method SendOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly$18 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetRemoteAddress msg) cil managed
    {
    } // end of method SendOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly$19 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/GetRemotePort msg) cil managed
    {
    } // end of method SendOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Zombie 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/DoneSending msg) cil managed
    {
    } // end of method SendOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Close msg) cil managed
    {
    } // end of method SendOnly::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Abort msg) cil managed
    {
    } // end of method SendOnly::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method SendOnly::.ctor

  } // end of class SendOnly

  .class abstract auto ansi nested public specialname SendOnly$16
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method SendOnly$16::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method SendOnly$16::.ctor

  } // end of class SendOnly$16

  .class abstract auto ansi nested public specialname SendOnly$17
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Port msg) cil managed
    {
    } // end of method SendOnly$17::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method SendOnly$17::.ctor

  } // end of class SendOnly$17

  .class abstract auto ansi nested public specialname SendOnly$18
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method SendOnly$18::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method SendOnly$18::.ctor

  } // end of class SendOnly$18

  .class abstract auto ansi nested public specialname SendOnly$19
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/Port msg) cil managed
    {
    } // end of method SendOnly$19::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method SendOnly$19::.ctor

  } // end of class SendOnly$19

  .class abstract auto ansi nested public specialname SOWriteResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/SendOnly 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/OK msg) cil managed
    {
    } // end of method SOWriteResult::Send

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Zombie 
            Send(valuetype NetStack.Contracts.TcpConnectionContract/CantSend msg) cil managed
    {
    } // end of method SOWriteResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method SOWriteResult::.ctor

  } // end of class SOWriteResult

  .class abstract auto ansi nested public specialname Zombie
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Close msg) cil managed
    {
    } // end of method Zombie::Recv

    .method family abstract virtual instance class NetStack.Contracts.TcpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.TcpConnectionContract/Abort msg) cil managed
    {
    } // end of method Zombie::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Zombie::.ctor

  } // end of class Zombie

  .class abstract auto ansi nested public specialname Closed
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Closed::.ctor

  } // end of class Closed

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       74 (0x4a)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.TcpConnectionContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
    IL_0017:  ldc.i4.s   40
    IL_0019:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::.ctor(int32)
    IL_001e:  ldloc.0
    IL_001f:  stind.i
    IL_0020:  ldarg.0
    IL_0021:  ldtoken    NetStack.Contracts.TcpConnectionContract/Imp
    IL_0026:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0030:  stloc.1
    IL_0031:  ldloc.1
    IL_0032:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
    IL_0037:  ldc.i4.s   40
    IL_0039:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::'.ctor$PST06000425'(int32)
    IL_003e:  ldloc.1
    IL_003f:  stind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  ldarg.0
    IL_0043:  ldind.i
    IL_0044:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0049:  ret
  } // end of method TcpConnectionContract::NewChannel

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.TcpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.TcpConnectionContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.TcpConnectionContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void NetStack.Contracts.TcpConnectionContract/Imp::'.ctor$PST06000425'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method TcpConnectionContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [kernel]System.Object::.ctor()
    IL_0006:  ret
  } // end of method TcpConnectionContract::.ctor

  .method privatescope static int32  StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       107 (0x6b)
    .maxstack  8
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.s   26
    IL_000c:  beq        IL_0025

    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.2
    IL_0013:  beq        IL_0039

    IL_0018:  ldloc.1
    IL_0019:  ldc.i4.s   16
    IL_001b:  beq        IL_004c

    IL_0020:  br         IL_0060

    IL_0025:  ldarg.0
    IL_0026:  ldc.i4.s   28
    IL_0028:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_002d:  ldarg.0
    IL_002e:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0033:  stloc.2
    IL_0034:  br         IL_0067

    IL_0039:  ldarg.0
    IL_003a:  ldc.i4.1
    IL_003b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0040:  ldarg.0
    IL_0041:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0046:  stloc.2
    IL_0047:  br         IL_0067

    IL_004c:  ldarg.0
    IL_004d:  ldc.i4.s   18
    IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0054:  ldarg.0
    IL_0055:  call       int32 NetStack.Contracts.TcpConnectionContract::StableState$PST0600004C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_005a:  stloc.2
    IL_005b:  br         IL_0067

    IL_0060:  ldloc.0
    IL_0061:  stloc.2
    IL_0062:  br         IL_0067

    IL_0067:  ldloc.2
    IL_0068:  stloc.3
    IL_0069:  ldloc.2
    IL_006a:  ret
  } // end of method TcpConnectionContract::StableState

  .method privatescope static int32  CanonicalState$PST0600004D(int32 state) cil managed
  {
    // Code size       64 (0x40)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.s   26
    IL_0005:  beq        IL_001e

    IL_000a:  ldloc.0
    IL_000b:  ldc.i4.2
    IL_000c:  beq        IL_0026

    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.s   16
    IL_0014:  beq        IL_002d

    IL_0019:  br         IL_0035

    IL_001e:  ldc.i4.s   28
    IL_0020:  stloc.1
    IL_0021:  br         IL_003c

    IL_0026:  ldc.i4.1
    IL_0027:  stloc.1
    IL_0028:  br         IL_003c

    IL_002d:  ldc.i4.s   18
    IL_002f:  stloc.1
    IL_0030:  br         IL_003c

    IL_0035:  ldarg.0
    IL_0036:  stloc.1
    IL_0037:  br         IL_003c

    IL_003c:  ldloc.1
    IL_003d:  stloc.2
    IL_003e:  ldloc.1
    IL_003f:  ret
  } // end of method TcpConnectionContract::CanonicalState

} // end of class NetStack.Contracts.TcpConnectionContract

.class public abstract auto ansi beforefieldinit NetStack.Contracts.TcpContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [kernel]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000006)
    .field public static literal specialname int32 Ready = int32(0x00000003)
    .field public static literal specialname int32 CreateTcpSession = int32(0x00000004)
    .field public static literal specialname int32 Ack = int32(0x00000005)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype NetStack.Contracts.TcpContract/Ready ReadyPod0
    .field family valuetype NetStack.Contracts.TcpContract/Ack AckPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST060006B4'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.TcpContract::CanonicalState$PST06000052(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.TcpContract::CanonicalState$PST06000052(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       104 (0x68)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_002d

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.4
      IL_0015:  beq        IL_0038

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.3
      IL_001c:  beq        IL_0043

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.2
      IL_0023:  beq        IL_004e

      IL_0028:  br         IL_0059

      IL_002d:  ldstr      "ReadyState"
      IL_0032:  stloc.1
      IL_0033:  br         IL_0064

      IL_0038:  ldstr      "ReadyState$0"
      IL_003d:  stloc.1
      IL_003e:  br         IL_0064

      IL_0043:  ldstr      "Start"
      IL_0048:  stloc.1
      IL_0049:  br         IL_0064

      IL_004e:  ldstr      "DoneState"
      IL_0053:  stloc.1
      IL_0054:  br         IL_0064

      IL_0059:  ldstr      "<protocol terminated>"
      IL_005e:  stloc.1
      IL_005f:  br         IL_0064

      IL_0064:  ldloc.1
      IL_0065:  stloc.2
      IL_0066:  ldloc.1
      IL_0067:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ready when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype NetStack.Contracts.TcpContract/Ready NetStack.Contracts.TcpContract/Imp::ReadyPod0
      IL_0095:  initobj    NetStack.Contracts.TcpContract/Ready
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Ready in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.TcpContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvReady

    .method public instance void  SendCreateTcpSession(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) endpoint) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       196 (0xc4)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003f

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0012:  ldc.i4.s   40
      IL_0014:  call       instance bool NetStack.Contracts.TcpConnectionContract/Exp::InState(int32)
      IL_0019:  brtrue     IL_003f

      IL_001e:  ldstr      "can't move endpoint endpoint in state "
      IL_0023:  ldarg.1
      IL_0024:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0029:  ldarg.1
      IL_002a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_002f:  call       instance string NetStack.Contracts.TcpConnectionContract/Exp::CurrentState()
      IL_0034:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0039:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_003e:  throw

      IL_003f:  ldarg.0
      IL_0040:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0045:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_004a:  stloc.0
      IL_004b:  ldloc.0
      IL_004c:  ldc.i4.5
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00ad

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype NetStack.Contracts.TcpContract/Exp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_0089

      IL_0070:  ldloc.s    V_4
      IL_0072:  ldarg.1
      IL_0073:  call       void NetStack.Contracts.TcpConnectionContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0078:  ldloc.3
      IL_0079:  castclass  valuetype NetStack.Contracts.TcpContract/Exp&
      IL_007e:  ldarg.1
      IL_007f:  call       instance void NetStack.Contracts.TcpContract/Exp::DeliverCreateTcpSession0$PST060006E2(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0084:  br         IL_0096

      IL_0089:  ldloc.3
      IL_008a:  castclass  valuetype NetStack.Contracts.TcpContract/Exp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.0
      IL_0091:  call       instance void NetStack.Contracts.TcpContract/Exp::MarshallDeliverCreateTcpSession0$PST060006E3(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0096:  ldarg.0
      IL_0097:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.4
      IL_00a3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a8:  br         IL_00c3

      IL_00ad:  ldstr      "can't send CreateTcpSession in state "
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance string NetStack.Contracts.TcpContract/Imp::CurrentState()
      IL_00b8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c2:  throw

      IL_00c3:  ret
    } // end of method Imp::SendCreateTcpSession

    .method public instance void  RecvAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ack when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype NetStack.Contracts.TcpContract/Ack NetStack.Contracts.TcpContract/Imp::AckPod0
      IL_0095:  initobj    NetStack.Contracts.TcpContract/Ack
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Ack in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.TcpContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAck

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.TcpContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.TcpContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.TcpContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.TcpContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.TcpContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.TcpContract/Imp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.TcpContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.TcpContract/Imp
      IL_0022:  call       instance void NetStack.Contracts.TcpContract/Imp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.3
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.TcpContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverReady0$PST060006C8() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST060006C9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpContract/Imp::DeliverReady0$PST060006C8()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpContract/Ready NetStack.Contracts.TcpContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpContract/Ready::MarshallAll(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverAck0$PST060006CA() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAck0

    .method privatescope instance void  MarshallDeliverAck0$PST060006CB(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpContract/Imp::DeliverAck0$PST060006CA()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.TcpContract/Ack NetStack.Contracts.TcpContract/Imp::AckPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.TcpContract/Ack::MarshallAll(uint8*,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                         int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAck0

    .method privatescope instance void  DeliverContractNotSupported0$PST060006CC() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST060006CD(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.TcpContract/Imp::DeliverContractNotSupported0$PST060006CC()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.TcpContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.TcpContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype NetStack.Contracts.TcpContract/CreateTcpSession CreateTcpSessionPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.TcpContract::CanonicalState$PST06000052(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.TcpContract::CanonicalState$PST06000052(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       104 (0x68)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_002d

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.4
      IL_0015:  beq        IL_0038

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.3
      IL_001c:  beq        IL_0043

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.2
      IL_0023:  beq        IL_004e

      IL_0028:  br         IL_0059

      IL_002d:  ldstr      "ReadyState"
      IL_0032:  stloc.1
      IL_0033:  br         IL_0064

      IL_0038:  ldstr      "ReadyState$0"
      IL_003d:  stloc.1
      IL_003e:  br         IL_0064

      IL_0043:  ldstr      "Start"
      IL_0048:  stloc.1
      IL_0049:  br         IL_0064

      IL_004e:  ldstr      "DoneState"
      IL_0053:  stloc.1
      IL_0054:  br         IL_0064

      IL_0059:  ldstr      "<protocol terminated>"
      IL_005e:  stloc.1
      IL_005f:  br         IL_0064

      IL_0064:  ldloc.1
      IL_0065:  stloc.2
      IL_0066:  ldloc.1
      IL_0067:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.TcpContract/Imp::DeliverReady0$PST060006C8()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.TcpContract/Imp::MarshallDeliverReady0$PST060006C9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Ready in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.TcpContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendReady

    .method public instance void  RecvCreateTcpSession([out] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& endpoint) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv CreateTcpSession when next message has "
      + "tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype NetStack.Contracts.TcpContract/CreateTcpSession NetStack.Contracts.TcpContract/Exp::CreateTcpSessionPod0
      IL_008d:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype NetStack.Contracts.TcpContract/CreateTcpSession NetStack.Contracts.TcpContract/Exp::CreateTcpSessionPod0
      IL_00a2:  initobj    NetStack.Contracts.TcpContract/CreateTcpSession
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.4
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv CreateTcpSession in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string NetStack.Contracts.TcpContract/Exp::CurrentState()
      IL_00c4:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Exp::RecvCreateTcpSession

    .method public instance void  SendAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.TcpContract/Imp::DeliverAck0$PST060006CA()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.TcpContract/Imp::MarshallDeliverAck0$PST060006CB(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Ack in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.TcpContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAck

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.TcpContract/Imp::DeliverContractNotSupported0$PST060006CC()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.TcpContract/Imp::MarshallDeliverContractNotSupported0$PST060006CD(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.TcpContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.TcpContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.TcpContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.TcpContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.TcpContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.TcpContract/Exp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.TcpContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.TcpContract/Exp
      IL_0022:  call       instance void NetStack.Contracts.TcpContract/Exp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.3
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.TcpContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverCreateTcpSession0$PST060006E2(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.TcpContract/CreateTcpSession NetStack.Contracts.TcpContract/Exp::CreateTcpSessionPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.4
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.4
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverCreateTcpSession0

    .method privatescope instance void  MarshallDeliverCreateTcpSession0$PST060006E3(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) endpoint,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.TcpContract/Exp::DeliverCreateTcpSession0$PST060006E2(valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.TcpContract/CreateTcpSession NetStack.Contracts.TcpContract/Exp::CreateTcpSessionPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.TcpContract/CreateTcpSession::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverCreateTcpSession0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Ready
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpContract/Ready
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpContract/Ready::MarshallContent(uint8*,
                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                               uint8*,
                                                                                               int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class sequential ansi sealed nested public specialname CreateTcpSession
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) endpoint
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_0007:  call       void NetStack.Contracts.TcpConnectionContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method CreateTcpSession::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpContract/CreateTcpSession* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateTcpSession::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpContract/CreateTcpSession* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateTcpSession::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpContract/CreateTcpSession
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpContract/CreateTcpSession::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method CreateTcpSession::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpContract/CreateTcpSession* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CreateTcpSession::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_001a:  ldtoken    valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start)
      IL_001f:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_003a:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_0047:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_004c:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0051:  ret
    } // end of method CreateTcpSession::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype NetStack.Contracts.TcpConnectionContract/Exp&
      IL_0013:  call       instance void NetStack.Contracts.TcpConnectionContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype NetStack.Contracts.TcpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.TcpConnectionContract/Start) NetStack.Contracts.TcpContract/CreateTcpSession::endpoint
      IL_0025:  ret
    } // end of method CreateTcpSession::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateTcpSession::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateTcpSession::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateTcpSession::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateTcpSession::Release

  } // end of class CreateTcpSession

  .class sequential ansi sealed nested public specialname Ack
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.TcpContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.TcpContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.TcpContract/Ack
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.TcpContract/Ack::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*,
                                                                                             int32&)
      IL_001d:  ret
    } // end of method Ack::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.TcpContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ack::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Release

  } // end of class Ack

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class NetStack.Contracts.TcpContract/ReadyState 
            Send(valuetype NetStack.Contracts.TcpContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class NetStack.Contracts.TcpContract/ReadyState$0 
            Recv(valuetype NetStack.Contracts.TcpContract/CreateTcpSession msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class NetStack.Contracts.TcpContract/ReadyState 
            Send(valuetype NetStack.Contracts.TcpContract/Ack msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .field public static literal string ModuleName = "/service/tcp"
  .method public static void  NewChannel([out] valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.TcpContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.TcpContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void NetStack.Contracts.TcpContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.TcpContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void NetStack.Contracts.TcpContract/Imp::'.ctor$PST060006B4'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method TcpContract::NewChannel

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.TcpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.TcpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.TcpContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.TcpContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void NetStack.Contracts.TcpContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.TcpContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.TcpContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void NetStack.Contracts.TcpContract/Imp::'.ctor$PST060006B4'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method TcpContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method TcpContract::.ctor

  .method privatescope static int32  StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 NetStack.Contracts.TcpContract::StableState$PST06000051(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method TcpContract::StableState

  .method privatescope static int32  CanonicalState$PST06000052(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method TcpContract::CanonicalState

} // end of class NetStack.Contracts.TcpContract

.class public abstract auto ansi beforefieldinit NetStack.Contracts.UdpConnectionContract
       extends [kernel]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [kernel]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x00000019)
    .field public static literal specialname int32 BindLocalEndPoint = int32(0x00000002)
    .field public static literal specialname int32 ConnectWithAnyLocalEndPoint = int32(0x00000003)
    .field public static literal specialname int32 Connect = int32(0x00000004)
    .field public static literal specialname int32 Write = int32(0x00000005)
    .field public static literal specialname int32 WriteTo = int32(0x00000006)
    .field public static literal specialname int32 Read = int32(0x00000007)
    .field public static literal specialname int32 PollRead = int32(0x00000008)
    .field public static literal specialname int32 PollSelectRead = int32(0x00000009)
    .field public static literal specialname int32 PollSelectWrite = int32(0x0000000A)
    .field public static literal specialname int32 Close = int32(0x0000000B)
    .field public static literal specialname int32 GetLocalAddress = int32(0x0000000C)
    .field public static literal specialname int32 GetLocalPort = int32(0x0000000D)
    .field public static literal specialname int32 GetRemoteAddress = int32(0x0000000E)
    .field public static literal specialname int32 GetRemotePort = int32(0x0000000F)
    .field public static literal specialname int32 OK = int32(0x00000010)
    .field public static literal specialname int32 InvalidEndPoint = int32(0x00000011)
    .field public static literal specialname int32 DataTooLarge = int32(0x00000012)
    .field public static literal specialname int32 NoData = int32(0x00000013)
    .field public static literal specialname int32 Data = int32(0x00000014)
    .field public static literal specialname int32 IPAddress = int32(0x00000015)
    .field public static literal specialname int32 Port = int32(0x00000016)
    .field public static literal specialname int32 PollSelectResult = int32(0x00000017)
    .field public static literal specialname int32 Ready = int32(0x00000018)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod1
    .field family valuetype NetStack.Contracts.UdpConnectionContract/OK OKPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/OK OKPod1
    .field family valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint InvalidEndPointPod1
    .field family valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint InvalidEndPointPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge DataTooLargePod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge DataTooLargePod1
    .field family valuetype NetStack.Contracts.UdpConnectionContract/NoData NoDataPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/Data DataPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/IPAddress IPAddressPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/Port PortPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult PollSelectResultPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/Ready ReadyPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600070B'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.UdpConnectionContract::CanonicalState$PST06000057(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.UdpConnectionContract::CanonicalState$PST06000057(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       709 (0x2c5)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   37
      IL_000f:  beq        IL_012a

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   36
      IL_0017:  beq        IL_0135

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   35
      IL_001f:  beq        IL_0140

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   34
      IL_0027:  beq        IL_014b

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   33
      IL_002f:  beq        IL_0156

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   32
      IL_0037:  beq        IL_0161

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   31
      IL_003f:  beq        IL_016c

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   30
      IL_0047:  beq        IL_0177

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   29
      IL_004f:  beq        IL_0182

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   28
      IL_0057:  beq        IL_018d

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   27
      IL_005f:  beq        IL_0198

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   26
      IL_0067:  beq        IL_01a3

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   25
      IL_006f:  beq        IL_01ae

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   24
      IL_0077:  beq        IL_01b9

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   23
      IL_007f:  beq        IL_01c4

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   22
      IL_0087:  beq        IL_01cf

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.s   21
      IL_008f:  beq        IL_01da

      IL_0094:  ldloc.0
      IL_0095:  ldc.i4.s   20
      IL_0097:  beq        IL_01e5

      IL_009c:  ldloc.0
      IL_009d:  ldc.i4.s   19
      IL_009f:  beq        IL_01f0

      IL_00a4:  ldloc.0
      IL_00a5:  ldc.i4.s   18
      IL_00a7:  beq        IL_01fb

      IL_00ac:  ldloc.0
      IL_00ad:  ldc.i4.s   17
      IL_00af:  beq        IL_0206

      IL_00b4:  ldloc.0
      IL_00b5:  ldc.i4.s   16
      IL_00b7:  beq        IL_0211

      IL_00bc:  ldloc.0
      IL_00bd:  ldc.i4.s   15
      IL_00bf:  beq        IL_021c

      IL_00c4:  ldloc.0
      IL_00c5:  ldc.i4.s   14
      IL_00c7:  beq        IL_0227

      IL_00cc:  ldloc.0
      IL_00cd:  ldc.i4.s   13
      IL_00cf:  beq        IL_0232

      IL_00d4:  ldloc.0
      IL_00d5:  ldc.i4.s   12
      IL_00d7:  beq        IL_023d

      IL_00dc:  ldloc.0
      IL_00dd:  ldc.i4.s   11
      IL_00df:  beq        IL_0248

      IL_00e4:  ldloc.0
      IL_00e5:  ldc.i4.s   10
      IL_00e7:  beq        IL_0253

      IL_00ec:  ldloc.0
      IL_00ed:  ldc.i4.s   9
      IL_00ef:  beq        IL_025e

      IL_00f4:  ldloc.0
      IL_00f5:  ldc.i4.8
      IL_00f6:  beq        IL_0269

      IL_00fb:  ldloc.0
      IL_00fc:  ldc.i4.7
      IL_00fd:  beq        IL_0274

      IL_0102:  ldloc.0
      IL_0103:  ldc.i4.6
      IL_0104:  beq        IL_027f

      IL_0109:  ldloc.0
      IL_010a:  ldc.i4.5
      IL_010b:  beq        IL_028a

      IL_0110:  ldloc.0
      IL_0111:  ldc.i4.4
      IL_0112:  beq        IL_0295

      IL_0117:  ldloc.0
      IL_0118:  ldc.i4.3
      IL_0119:  beq        IL_02a0

      IL_011e:  ldloc.0
      IL_011f:  ldc.i4.2
      IL_0120:  beq        IL_02ab

      IL_0125:  br         IL_02b6

      IL_012a:  ldstr      "Start"
      IL_012f:  stloc.1
      IL_0130:  br         IL_02c1

      IL_0135:  ldstr      "ReadyState"
      IL_013a:  stloc.1
      IL_013b:  br         IL_02c1

      IL_0140:  ldstr      "ReadyState$0"
      IL_0145:  stloc.1
      IL_0146:  br         IL_02c1

      IL_014b:  ldstr      "ReadyState$1"
      IL_0150:  stloc.1
      IL_0151:  br         IL_02c1

      IL_0156:  ldstr      "ReadyState$2"
      IL_015b:  stloc.1
      IL_015c:  br         IL_02c1

      IL_0161:  ldstr      "ReadyState$3"
      IL_0166:  stloc.1
      IL_0167:  br         IL_02c1

      IL_016c:  ldstr      "ConnectResult"
      IL_0171:  stloc.1
      IL_0172:  br         IL_02c1

      IL_0177:  ldstr      "BindResult"
      IL_017c:  stloc.1
      IL_017d:  br         IL_02c1

      IL_0182:  ldstr      "ConnectFromLocallyBoundResult"
      IL_0187:  stloc.1
      IL_0188:  br         IL_02c1

      IL_018d:  ldstr      "Connected"
      IL_0192:  stloc.1
      IL_0193:  br         IL_02c1

      IL_0198:  ldstr      "Connected$4"
      IL_019d:  stloc.1
      IL_019e:  br         IL_02c1

      IL_01a3:  ldstr      "Connected$5"
      IL_01a8:  stloc.1
      IL_01a9:  br         IL_02c1

      IL_01ae:  ldstr      "Connected$6"
      IL_01b3:  stloc.1
      IL_01b4:  br         IL_02c1

      IL_01b9:  ldstr      "Connected$7"
      IL_01be:  stloc.1
      IL_01bf:  br         IL_02c1

      IL_01c4:  ldstr      "Connected$8"
      IL_01c9:  stloc.1
      IL_01ca:  br         IL_02c1

      IL_01cf:  ldstr      "Connected$9"
      IL_01d4:  stloc.1
      IL_01d5:  br         IL_02c1

      IL_01da:  ldstr      "Connected$10"
      IL_01df:  stloc.1
      IL_01e0:  br         IL_02c1

      IL_01e5:  ldstr      "Connected$11"
      IL_01ea:  stloc.1
      IL_01eb:  br         IL_02c1

      IL_01f0:  ldstr      "Connected$12"
      IL_01f5:  stloc.1
      IL_01f6:  br         IL_02c1

      IL_01fb:  ldstr      "Connected$13"
      IL_0200:  stloc.1
      IL_0201:  br         IL_02c1

      IL_0206:  ldstr      "Connected$14"
      IL_020b:  stloc.1
      IL_020c:  br         IL_02c1

      IL_0211:  ldstr      "Connected$15"
      IL_0216:  stloc.1
      IL_0217:  br         IL_02c1

      IL_021c:  ldstr      "Connected$16"
      IL_0221:  stloc.1
      IL_0222:  br         IL_02c1

      IL_0227:  ldstr      "LocallyBound"
      IL_022c:  stloc.1
      IL_022d:  br         IL_02c1

      IL_0232:  ldstr      "LocallyBound$17"
      IL_0237:  stloc.1
      IL_0238:  br         IL_02c1

      IL_023d:  ldstr      "LocallyBound$18"
      IL_0242:  stloc.1
      IL_0243:  br         IL_02c1

      IL_0248:  ldstr      "LocallyBound$19"
      IL_024d:  stloc.1
      IL_024e:  br         IL_02c1

      IL_0253:  ldstr      "LocallyBound$20"
      IL_0258:  stloc.1
      IL_0259:  br         IL_02c1

      IL_025e:  ldstr      "LocallyBound$21"
      IL_0263:  stloc.1
      IL_0264:  br         IL_02c1

      IL_0269:  ldstr      "LocallyBound$22"
      IL_026e:  stloc.1
      IL_026f:  br         IL_02c1

      IL_0274:  ldstr      "LocallyBound$23"
      IL_0279:  stloc.1
      IL_027a:  br         IL_02c1

      IL_027f:  ldstr      "LocallyBound$24"
      IL_0284:  stloc.1
      IL_0285:  br         IL_02c1

      IL_028a:  ldstr      "LocallyBound$25"
      IL_028f:  stloc.1
      IL_0290:  br         IL_02c1

      IL_0295:  ldstr      "LocallyBound$26"
      IL_029a:  stloc.1
      IL_029b:  br         IL_02c1

      IL_02a0:  ldstr      "LocallyBound$27"
      IL_02a5:  stloc.1
      IL_02a6:  br         IL_02c1

      IL_02ab:  ldstr      "Closed"
      IL_02b0:  stloc.1
      IL_02b1:  br         IL_02c1

      IL_02b6:  ldstr      "<protocol terminated>"
      IL_02bb:  stloc.1
      IL_02bc:  br         IL_02c1

      IL_02c1:  ldloc.1
      IL_02c2:  stloc.2
      IL_02c3:  ldloc.1
      IL_02c4:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendBindLocalEndPoint(uint32 srcIP,
                                                        uint16 srcPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       129 (0x81)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006a

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0044

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverBindLocalEndPoint0$PST06000771(uint32,
                                                                                                                             uint16)
      IL_003f:  br         IL_0052

      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.0
      IL_004d:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverBindLocalEndPoint0$PST06000772(uint32,
                                                                                                                                     uint16,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0052:  ldarg.0
      IL_0053:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0058:  ldarg.0
      IL_0059:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005e:  ldc.i4.s   30
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0065:  br         IL_0080

      IL_006a:  ldstr      "can't send BindLocalEndPoint in state "
      IL_006f:  ldarg.0
      IL_0070:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_0075:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_007a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007f:  throw

      IL_0080:  ret
    } // end of method Imp::SendBindLocalEndPoint

    .method public instance void  SendConnectWithAnyLocalEndPoint(uint32 dstIP,
                                                                  uint16 dstPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       129 (0x81)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006a

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0044

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverConnectWithAnyLocalEndPoint0$PST06000773(uint32,
                                                                                                                                       uint16)
      IL_003f:  br         IL_0052

      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.0
      IL_004d:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverConnectWithAnyLocalEndPoint0$PST06000774(uint32,
                                                                                                                                               uint16,
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0052:  ldarg.0
      IL_0053:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0058:  ldarg.0
      IL_0059:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005e:  ldc.i4.s   31
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0065:  br         IL_0080

      IL_006a:  ldstr      "can't send ConnectWithAnyLocalEndPoint in state "
      IL_006f:  ldarg.0
      IL_0070:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_0075:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_007a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007f:  throw

      IL_0080:  ret
    } // end of method Imp::SendConnectWithAnyLocalEndPoint

    .method public instance void  SendConnect(uint32 srcIP,
                                              uint16 srcPort,
                                              uint32 dstIP,
                                              uint16 dstPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       237 (0xed)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_0078

      IL_001c:  br         IL_00d6

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004f

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0040:  ldarg.1
      IL_0041:  ldarg.2
      IL_0042:  ldarg.3
      IL_0043:  ldarg.s    dstPort
      IL_0045:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverConnect0$PST06000775(uint32,
                                                                                                                   uint16,
                                                                                                                   uint32,
                                                                                                                   uint16)
      IL_004a:  br         IL_0060

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.2
      IL_0057:  ldarg.3
      IL_0058:  ldarg.s    dstPort
      IL_005a:  ldarg.0
      IL_005b:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverConnect0$PST06000776(uint32,
                                                                                                                           uint16,
                                                                                                                           uint32,
                                                                                                                           uint16,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0060:  ldarg.0
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0066:  ldarg.0
      IL_0067:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006c:  ldc.i4.s   31
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0073:  br         IL_00ec

      IL_0078:  ldarg.0
      IL_0079:  ldloca.s   V_5
      IL_007b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0080:  stloc.s    V_6
      IL_0082:  ldloc.s    V_6
      IL_0084:  stloc.s    V_7
      IL_0086:  ldloc.s    V_7
      IL_0088:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_008d:  stloc.s    V_8
      IL_008f:  ldloc.s    V_5
      IL_0091:  brtrue     IL_00ac

      IL_0096:  ldloc.s    V_7
      IL_0098:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_009d:  ldarg.1
      IL_009e:  ldarg.2
      IL_009f:  ldarg.3
      IL_00a0:  ldarg.s    dstPort
      IL_00a2:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverConnect0$PST06000775(uint32,
                                                                                                                   uint16,
                                                                                                                   uint32,
                                                                                                                   uint16)
      IL_00a7:  br         IL_00be

      IL_00ac:  ldloc.s    V_7
      IL_00ae:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00b3:  ldarg.1
      IL_00b4:  ldarg.2
      IL_00b5:  ldarg.3
      IL_00b6:  ldarg.s    dstPort
      IL_00b8:  ldarg.0
      IL_00b9:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverConnect0$PST06000776(uint32,
                                                                                                                           uint16,
                                                                                                                           uint32,
                                                                                                                           uint16,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00be:  ldarg.0
      IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c4:  ldarg.0
      IL_00c5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ca:  ldc.i4.s   29
      IL_00cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d1:  br         IL_00ec

      IL_00d6:  ldstr      "can't send Connect in state "
      IL_00db:  ldarg.0
      IL_00dc:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_00e1:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00e6:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00eb:  throw

      IL_00ec:  ret
    } // end of method Imp::SendConnect

    .method public instance void  SendWrite(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverWrite0$PST06000777(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverWrite0$PST06000778(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   27
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send Write in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_007f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendWrite

    .method public instance void  SendWriteTo(uint32 dstIP,
                                              uint16 dstPort,
                                              uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      .param [3]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       363 (0x16b)
      .maxstack  24
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               bool V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_8,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_9,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_10,
               bool V_11,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_12,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_13,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_14,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_15)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   36
      IL_0017:  beq        IL_0088

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   28
      IL_001f:  beq        IL_00ee

      IL_0024:  br         IL_0154

      IL_0029:  ldarg.0
      IL_002a:  ldloca.s   V_1
      IL_002c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0031:  stloc.2
      IL_0032:  ldloc.2
      IL_0033:  stloc.3
      IL_0034:  ldloc.3
      IL_0035:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_003a:  stloc.s    V_4
      IL_003c:  ldloc.1
      IL_003d:  brtrue     IL_0061

      IL_0042:  ldarg.3
      IL_0043:  stloc.s    V_5
      IL_0045:  ldloc.s    V_4
      IL_0047:  ldloc.s    V_5
      IL_0049:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.2
      IL_0056:  ldarg.3
      IL_0057:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverWriteTo0$PST06000779(uint32,
                                                                                                                   uint16,
                                                                                                                   uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_005c:  br         IL_0070

      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0067:  ldarg.1
      IL_0068:  ldarg.2
      IL_0069:  ldarg.3
      IL_006a:  ldarg.0
      IL_006b:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverWriteTo0$PST0600077A(uint32,
                                                                                                                           uint16,
                                                                                                                           uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0070:  ldarg.0
      IL_0071:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0076:  ldarg.0
      IL_0077:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_007c:  ldc.i4.s   13
      IL_007e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0083:  br         IL_016a

      IL_0088:  ldarg.0
      IL_0089:  ldloca.s   V_6
      IL_008b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0090:  stloc.s    V_7
      IL_0092:  ldloc.s    V_7
      IL_0094:  stloc.s    V_8
      IL_0096:  ldloc.s    V_8
      IL_0098:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_009d:  stloc.s    V_9
      IL_009f:  ldloc.s    V_6
      IL_00a1:  brtrue     IL_00c6

      IL_00a6:  ldarg.3
      IL_00a7:  stloc.s    V_10
      IL_00a9:  ldloc.s    V_9
      IL_00ab:  ldloc.s    V_10
      IL_00ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_00b2:  ldloc.s    V_8
      IL_00b4:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00b9:  ldarg.1
      IL_00ba:  ldarg.2
      IL_00bb:  ldarg.3
      IL_00bc:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverWriteTo0$PST06000779(uint32,
                                                                                                                   uint16,
                                                                                                                   uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_00c1:  br         IL_00d6

      IL_00c6:  ldloc.s    V_8
      IL_00c8:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00cd:  ldarg.1
      IL_00ce:  ldarg.2
      IL_00cf:  ldarg.3
      IL_00d0:  ldarg.0
      IL_00d1:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverWriteTo0$PST0600077A(uint32,
                                                                                                                           uint16,
                                                                                                                           uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00d6:  ldarg.0
      IL_00d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00dc:  ldarg.0
      IL_00dd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e2:  ldc.i4.s   35
      IL_00e4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e9:  br         IL_016a

      IL_00ee:  ldarg.0
      IL_00ef:  ldloca.s   V_11
      IL_00f1:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00f6:  stloc.s    V_12
      IL_00f8:  ldloc.s    V_12
      IL_00fa:  stloc.s    V_13
      IL_00fc:  ldloc.s    V_13
      IL_00fe:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0103:  stloc.s    V_14
      IL_0105:  ldloc.s    V_11
      IL_0107:  brtrue     IL_012c

      IL_010c:  ldarg.3
      IL_010d:  stloc.s    V_15
      IL_010f:  ldloc.s    V_14
      IL_0111:  ldloc.s    V_15
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0118:  ldloc.s    V_13
      IL_011a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_011f:  ldarg.1
      IL_0120:  ldarg.2
      IL_0121:  ldarg.3
      IL_0122:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverWriteTo0$PST06000779(uint32,
                                                                                                                   uint16,
                                                                                                                   uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0127:  br         IL_013c

      IL_012c:  ldloc.s    V_13
      IL_012e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0133:  ldarg.1
      IL_0134:  ldarg.2
      IL_0135:  ldarg.3
      IL_0136:  ldarg.0
      IL_0137:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverWriteTo0$PST0600077A(uint32,
                                                                                                                           uint16,
                                                                                                                           uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_013c:  ldarg.0
      IL_013d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.s   25
      IL_014a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014f:  br         IL_016a

      IL_0154:  ldstr      "can't send WriteTo in state "
      IL_0159:  ldarg.0
      IL_015a:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_015f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0164:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0169:  throw

      IL_016a:  ret
    } // end of method Imp::SendWriteTo

    .method public instance void  SendRead() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c2

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverRead0$PST0600077B()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverRead0$PST0600077C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   23
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d8

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0093:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverRead0$PST0600077B()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverRead0$PST0600077C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.s   11
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send Read in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_00cd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Imp::SendRead

    .method public instance void  SendPollRead(int32 timeoutMillis) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       221 (0xdd)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_0070

      IL_001c:  br         IL_00c6

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004b

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0040:  ldarg.1
      IL_0041:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollRead0$PST0600077D(int32)
      IL_0046:  br         IL_0058

      IL_004b:  ldloc.3
      IL_004c:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverPollRead0$PST0600077E(int32,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0058:  ldarg.0
      IL_0059:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005e:  ldarg.0
      IL_005f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0064:  ldc.i4.s   22
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006b:  br         IL_00dc

      IL_0070:  ldarg.0
      IL_0071:  ldloca.s   V_5
      IL_0073:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0078:  stloc.s    V_6
      IL_007a:  ldloc.s    V_6
      IL_007c:  stloc.s    V_7
      IL_007e:  ldloc.s    V_7
      IL_0080:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0085:  stloc.s    V_8
      IL_0087:  ldloc.s    V_5
      IL_0089:  brtrue     IL_00a0

      IL_008e:  ldloc.s    V_7
      IL_0090:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0095:  ldarg.1
      IL_0096:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollRead0$PST0600077D(int32)
      IL_009b:  br         IL_00ae

      IL_00a0:  ldloc.s    V_7
      IL_00a2:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00a7:  ldarg.1
      IL_00a8:  ldarg.0
      IL_00a9:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverPollRead0$PST0600077E(int32,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ae:  ldarg.0
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b4:  ldarg.0
      IL_00b5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ba:  ldc.i4.s   10
      IL_00bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c1:  br         IL_00dc

      IL_00c6:  ldstr      "can't send PollRead in state "
      IL_00cb:  ldarg.0
      IL_00cc:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_00d1:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d6:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00db:  throw

      IL_00dc:  ret
    } // end of method Imp::SendPollRead

    .method public instance void  SendPollSelectRead(int32 timeoutMillis) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       314 (0x13a)
      .maxstack  20
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   36
      IL_0017:  beq        IL_0077

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   28
      IL_001f:  beq        IL_00cd

      IL_0024:  br         IL_0123

      IL_0029:  ldarg.0
      IL_002a:  ldloca.s   V_1
      IL_002c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0031:  stloc.2
      IL_0032:  ldloc.2
      IL_0033:  stloc.3
      IL_0034:  ldloc.3
      IL_0035:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_003a:  stloc.s    V_4
      IL_003c:  ldloc.1
      IL_003d:  brtrue     IL_0053

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0048:  ldarg.1
      IL_0049:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollSelectRead0$PST0600077F(int32)
      IL_004e:  br         IL_0060

      IL_0053:  ldloc.3
      IL_0054:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0059:  ldarg.1
      IL_005a:  ldarg.0
      IL_005b:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverPollSelectRead0$PST06000780(int32,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0060:  ldarg.0
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0066:  ldarg.0
      IL_0067:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006c:  ldc.i4.8
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0072:  br         IL_0139

      IL_0077:  ldarg.0
      IL_0078:  ldloca.s   V_5
      IL_007a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_007f:  stloc.s    V_6
      IL_0081:  ldloc.s    V_6
      IL_0083:  stloc.s    V_7
      IL_0085:  ldloc.s    V_7
      IL_0087:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_008c:  stloc.s    V_8
      IL_008e:  ldloc.s    V_5
      IL_0090:  brtrue     IL_00a7

      IL_0095:  ldloc.s    V_7
      IL_0097:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_009c:  ldarg.1
      IL_009d:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollSelectRead0$PST0600077F(int32)
      IL_00a2:  br         IL_00b5

      IL_00a7:  ldloc.s    V_7
      IL_00a9:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00ae:  ldarg.1
      IL_00af:  ldarg.0
      IL_00b0:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverPollSelectRead0$PST06000780(int32,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c1:  ldc.i4.s   33
      IL_00c3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c8:  br         IL_0139

      IL_00cd:  ldarg.0
      IL_00ce:  ldloca.s   V_9
      IL_00d0:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d5:  stloc.s    V_10
      IL_00d7:  ldloc.s    V_10
      IL_00d9:  stloc.s    V_11
      IL_00db:  ldloc.s    V_11
      IL_00dd:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00e2:  stloc.s    V_12
      IL_00e4:  ldloc.s    V_9
      IL_00e6:  brtrue     IL_00fd

      IL_00eb:  ldloc.s    V_11
      IL_00ed:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00f2:  ldarg.1
      IL_00f3:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollSelectRead0$PST0600077F(int32)
      IL_00f8:  br         IL_010b

      IL_00fd:  ldloc.s    V_11
      IL_00ff:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0104:  ldarg.1
      IL_0105:  ldarg.0
      IL_0106:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverPollSelectRead0$PST06000780(int32,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_010b:  ldarg.0
      IL_010c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0111:  ldarg.0
      IL_0112:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0117:  ldc.i4.s   20
      IL_0119:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_011e:  br         IL_0139

      IL_0123:  ldstr      "can't send PollSelectRead in state "
      IL_0128:  ldarg.0
      IL_0129:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_012e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0133:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0138:  throw

      IL_0139:  ret
    } // end of method Imp::SendPollSelectRead

    .method public instance void  SendPollSelectWrite(int32 timeoutMillis) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       314 (0x13a)
      .maxstack  20
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_0078

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   36
      IL_001f:  beq        IL_00cd

      IL_0024:  br         IL_0123

      IL_0029:  ldarg.0
      IL_002a:  ldloca.s   V_1
      IL_002c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0031:  stloc.2
      IL_0032:  ldloc.2
      IL_0033:  stloc.3
      IL_0034:  ldloc.3
      IL_0035:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_003a:  stloc.s    V_4
      IL_003c:  ldloc.1
      IL_003d:  brtrue     IL_0053

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0048:  ldarg.1
      IL_0049:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollSelectWrite0$PST06000781(int32)
      IL_004e:  br         IL_0060

      IL_0053:  ldloc.3
      IL_0054:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0059:  ldarg.1
      IL_005a:  ldarg.0
      IL_005b:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverPollSelectWrite0$PST06000782(int32,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0060:  ldarg.0
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0066:  ldarg.0
      IL_0067:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006c:  ldc.i4.s   19
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0073:  br         IL_0139

      IL_0078:  ldarg.0
      IL_0079:  ldloca.s   V_5
      IL_007b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0080:  stloc.s    V_6
      IL_0082:  ldloc.s    V_6
      IL_0084:  stloc.s    V_7
      IL_0086:  ldloc.s    V_7
      IL_0088:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_008d:  stloc.s    V_8
      IL_008f:  ldloc.s    V_5
      IL_0091:  brtrue     IL_00a8

      IL_0096:  ldloc.s    V_7
      IL_0098:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_009d:  ldarg.1
      IL_009e:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollSelectWrite0$PST06000781(int32)
      IL_00a3:  br         IL_00b6

      IL_00a8:  ldloc.s    V_7
      IL_00aa:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00af:  ldarg.1
      IL_00b0:  ldarg.0
      IL_00b1:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverPollSelectWrite0$PST06000782(int32,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b6:  ldarg.0
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c2:  ldc.i4.7
      IL_00c3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c8:  br         IL_0139

      IL_00cd:  ldarg.0
      IL_00ce:  ldloca.s   V_9
      IL_00d0:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d5:  stloc.s    V_10
      IL_00d7:  ldloc.s    V_10
      IL_00d9:  stloc.s    V_11
      IL_00db:  ldloc.s    V_11
      IL_00dd:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00e2:  stloc.s    V_12
      IL_00e4:  ldloc.s    V_9
      IL_00e6:  brtrue     IL_00fd

      IL_00eb:  ldloc.s    V_11
      IL_00ed:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00f2:  ldarg.1
      IL_00f3:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollSelectWrite0$PST06000781(int32)
      IL_00f8:  br         IL_010b

      IL_00fd:  ldloc.s    V_11
      IL_00ff:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0104:  ldarg.1
      IL_0105:  ldarg.0
      IL_0106:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverPollSelectWrite0$PST06000782(int32,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_010b:  ldarg.0
      IL_010c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0111:  ldarg.0
      IL_0112:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0117:  ldc.i4.s   32
      IL_0119:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_011e:  br         IL_0139

      IL_0123:  ldstr      "can't send PollSelectWrite in state "
      IL_0128:  ldarg.0
      IL_0129:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_012e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0133:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0138:  throw

      IL_0139:  ret
    } // end of method Imp::SendPollSelectWrite

    .method public instance void  SendClose() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       306 (0x132)
      .maxstack  20
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_0075

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   28
      IL_001f:  beq        IL_00c8

      IL_0024:  br         IL_011b

      IL_0029:  ldarg.0
      IL_002a:  ldloca.s   V_1
      IL_002c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0031:  stloc.2
      IL_0032:  ldloc.2
      IL_0033:  stloc.3
      IL_0034:  ldloc.3
      IL_0035:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_003a:  stloc.s    V_4
      IL_003c:  ldloc.1
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0048:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverClose0$PST06000783()
      IL_004d:  br         IL_005e

      IL_0052:  ldloc.3
      IL_0053:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0058:  ldarg.0
      IL_0059:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverClose0$PST06000784(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005e:  ldarg.0
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006a:  ldc.i4.2
      IL_006b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0070:  br         IL_0131

      IL_0075:  ldarg.0
      IL_0076:  ldloca.s   V_5
      IL_0078:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_007d:  stloc.s    V_6
      IL_007f:  ldloc.s    V_6
      IL_0081:  stloc.s    V_7
      IL_0083:  ldloc.s    V_7
      IL_0085:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_008a:  stloc.s    V_8
      IL_008c:  ldloc.s    V_5
      IL_008e:  brtrue     IL_00a4

      IL_0093:  ldloc.s    V_7
      IL_0095:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_009a:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverClose0$PST06000783()
      IL_009f:  br         IL_00b1

      IL_00a4:  ldloc.s    V_7
      IL_00a6:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00ab:  ldarg.0
      IL_00ac:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverClose0$PST06000784(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bd:  ldc.i4.2
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_0131

      IL_00c8:  ldarg.0
      IL_00c9:  ldloca.s   V_9
      IL_00cb:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00d0:  stloc.s    V_10
      IL_00d2:  ldloc.s    V_10
      IL_00d4:  stloc.s    V_11
      IL_00d6:  ldloc.s    V_11
      IL_00d8:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00dd:  stloc.s    V_12
      IL_00df:  ldloc.s    V_9
      IL_00e1:  brtrue     IL_00f7

      IL_00e6:  ldloc.s    V_11
      IL_00e8:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00ed:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverClose0$PST06000783()
      IL_00f2:  br         IL_0104

      IL_00f7:  ldloc.s    V_11
      IL_00f9:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00fe:  ldarg.0
      IL_00ff:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverClose0$PST06000784(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0104:  ldarg.0
      IL_0105:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_010a:  ldarg.0
      IL_010b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0110:  ldc.i4.2
      IL_0111:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0116:  br         IL_0131

      IL_011b:  ldstr      "can't send Close in state "
      IL_0120:  ldarg.0
      IL_0121:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_0126:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_012b:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0130:  throw

      IL_0131:  ret
    } // end of method Imp::SendClose

    .method public instance void  SendGetLocalAddress() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_006d

      IL_001c:  br         IL_00c1

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetLocalAddress0$PST06000785()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverGetLocalAddress0$PST06000786(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.6
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0068:  br         IL_00d7

      IL_006d:  ldarg.0
      IL_006e:  ldloca.s   V_5
      IL_0070:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0075:  stloc.s    V_6
      IL_0077:  ldloc.s    V_6
      IL_0079:  stloc.s    V_7
      IL_007b:  ldloc.s    V_7
      IL_007d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0082:  stloc.s    V_8
      IL_0084:  ldloc.s    V_5
      IL_0086:  brtrue     IL_009c

      IL_008b:  ldloc.s    V_7
      IL_008d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0092:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetLocalAddress0$PST06000785()
      IL_0097:  br         IL_00a9

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00a3:  ldarg.0
      IL_00a4:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverGetLocalAddress0$PST06000786(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a9:  ldarg.0
      IL_00aa:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   18
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't send GetLocalAddress in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::SendGetLocalAddress

    .method public instance void  SendGetLocalPort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_006d

      IL_001c:  br         IL_00c1

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetLocalPort0$PST06000787()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverGetLocalPort0$PST06000788(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.5
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0068:  br         IL_00d7

      IL_006d:  ldarg.0
      IL_006e:  ldloca.s   V_5
      IL_0070:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0075:  stloc.s    V_6
      IL_0077:  ldloc.s    V_6
      IL_0079:  stloc.s    V_7
      IL_007b:  ldloc.s    V_7
      IL_007d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0082:  stloc.s    V_8
      IL_0084:  ldloc.s    V_5
      IL_0086:  brtrue     IL_009c

      IL_008b:  ldloc.s    V_7
      IL_008d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0092:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetLocalPort0$PST06000787()
      IL_0097:  br         IL_00a9

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00a3:  ldarg.0
      IL_00a4:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverGetLocalPort0$PST06000788(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a9:  ldarg.0
      IL_00aa:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   17
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't send GetLocalPort in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::SendGetLocalPort

    .method public instance void  SendGetRemoteAddress() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c1

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetRemoteAddress0$PST06000789()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverGetRemoteAddress0$PST0600078A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   16
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d7

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0093:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetRemoteAddress0$PST06000789()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverGetRemoteAddress0$PST0600078A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.4
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't send GetRemoteAddress in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::SendGetRemoteAddress

    .method public instance void  SendGetRemotePort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c1

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0040:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetRemotePort0$PST0600078B()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverGetRemotePort0$PST0600078C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   15
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d7

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0093:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetRemotePort0$PST0600078B()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallDeliverGetRemotePort0$PST0600078C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.3
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't send GetRemotePort in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_00cc:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::SendGetRemotePort

    .method public instance void  RecvOK() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       1198 (0x4ae)
      .maxstack  33
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0049

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   30
      IL_0017:  beq        IL_00e0

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   35
      IL_001f:  beq        IL_017c

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   27
      IL_0027:  beq        IL_021b

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   29
      IL_002f:  beq        IL_02ba

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   13
      IL_0037:  beq        IL_0359

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   31
      IL_003f:  beq        IL_03f8

      IL_0044:  br         IL_0497

      IL_0049:  ldc.i4.0
      IL_004a:  stloc.1
      IL_004b:  ldarg.0
      IL_004c:  volatile.
      IL_004e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0053:  stloc.2
      IL_0054:  ldloc.2
      IL_0055:  brtrue     IL_006a

      IL_005a:  ldarg.0
      IL_005b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0060:  stloc.1
      IL_0061:  ldarg.0
      IL_0062:  volatile.
      IL_0064:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0069:  stloc.2
      IL_006a:  ldloc.2
      IL_006b:  ldc.i4.0
      IL_006c:  ceq
      IL_006e:  brfalse    IL_008c

      IL_0073:  ldloc.1
      IL_0074:  brfalse    IL_0084

      IL_0079:  ldstr      "Peer is closed"
      IL_007e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0083:  throw

      IL_0084:  ldarg.0
      IL_0085:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_008a:  br.s       IL_0049

      IL_008c:  ldarg.0
      IL_008d:  ldc.i4.s   16
      IL_008f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0094:  ldloc.2
      IL_0095:  ldc.i4.s   16
      IL_0097:  beq        IL_00b9

      IL_009c:  ldstr      "can't recv OK when next message has tag "
      IL_00a1:  ldarg.0
      IL_00a2:  volatile.
      IL_00a4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00a9:  box        [kernel]System.Int32
      IL_00ae:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00b3:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00b8:  throw

      IL_00b9:  ldarg.0
      IL_00ba:  ldc.i4.0
      IL_00bb:  volatile.
      IL_00bd:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod0
      IL_00c8:  initobj    NetStack.Contracts.UdpConnectionContract/OK
      IL_00ce:  ldarg.0
      IL_00cf:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d4:  ldc.i4.s   24
      IL_00d6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00db:  br         IL_04ad

      IL_00e0:  ldc.i4.0
      IL_00e1:  stloc.3
      IL_00e2:  ldarg.0
      IL_00e3:  volatile.
      IL_00e5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_00ea:  stloc.s    V_4
      IL_00ec:  ldloc.s    V_4
      IL_00ee:  brtrue     IL_0104

      IL_00f3:  ldarg.0
      IL_00f4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00f9:  stloc.3
      IL_00fa:  ldarg.0
      IL_00fb:  volatile.
      IL_00fd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0102:  stloc.s    V_4
      IL_0104:  ldloc.s    V_4
      IL_0106:  ldc.i4.0
      IL_0107:  ceq
      IL_0109:  brfalse    IL_0127

      IL_010e:  ldloc.3
      IL_010f:  brfalse    IL_011f

      IL_0114:  ldstr      "Peer is closed"
      IL_0119:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_011e:  throw

      IL_011f:  ldarg.0
      IL_0120:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0125:  br.s       IL_00e0

      IL_0127:  ldarg.0
      IL_0128:  ldc.i4.s   16
      IL_012a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_012f:  ldloc.s    V_4
      IL_0131:  ldc.i4.s   16
      IL_0133:  beq        IL_0155

      IL_0138:  ldstr      "can't recv OK when next message has tag "
      IL_013d:  ldarg.0
      IL_013e:  volatile.
      IL_0140:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0145:  box        [kernel]System.Int32
      IL_014a:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_014f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0154:  throw

      IL_0155:  ldarg.0
      IL_0156:  ldc.i4.0
      IL_0157:  volatile.
      IL_0159:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_015e:  ldarg.0
      IL_015f:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod1
      IL_0164:  initobj    NetStack.Contracts.UdpConnectionContract/OK
      IL_016a:  ldarg.0
      IL_016b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0170:  ldc.i4.s   14
      IL_0172:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0177:  br         IL_04ad

      IL_017c:  ldc.i4.0
      IL_017d:  stloc.s    V_5
      IL_017f:  ldarg.0
      IL_0180:  volatile.
      IL_0182:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0187:  stloc.s    V_6
      IL_0189:  ldloc.s    V_6
      IL_018b:  brtrue     IL_01a2

      IL_0190:  ldarg.0
      IL_0191:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0196:  stloc.s    V_5
      IL_0198:  ldarg.0
      IL_0199:  volatile.
      IL_019b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_01a0:  stloc.s    V_6
      IL_01a2:  ldloc.s    V_6
      IL_01a4:  ldc.i4.0
      IL_01a5:  ceq
      IL_01a7:  brfalse    IL_01c6

      IL_01ac:  ldloc.s    V_5
      IL_01ae:  brfalse    IL_01be

      IL_01b3:  ldstr      "Peer is closed"
      IL_01b8:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01bd:  throw

      IL_01be:  ldarg.0
      IL_01bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01c4:  br.s       IL_017c

      IL_01c6:  ldarg.0
      IL_01c7:  ldc.i4.s   16
      IL_01c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01ce:  ldloc.s    V_6
      IL_01d0:  ldc.i4.s   16
      IL_01d2:  beq        IL_01f4

      IL_01d7:  ldstr      "can't recv OK when next message has tag "
      IL_01dc:  ldarg.0
      IL_01dd:  volatile.
      IL_01df:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_01e4:  box        [kernel]System.Int32
      IL_01e9:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01ee:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01f3:  throw

      IL_01f4:  ldarg.0
      IL_01f5:  ldc.i4.0
      IL_01f6:  volatile.
      IL_01f8:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_01fd:  ldarg.0
      IL_01fe:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod1
      IL_0203:  initobj    NetStack.Contracts.UdpConnectionContract/OK
      IL_0209:  ldarg.0
      IL_020a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_020f:  ldc.i4.s   34
      IL_0211:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0216:  br         IL_04ad

      IL_021b:  ldc.i4.0
      IL_021c:  stloc.s    V_7
      IL_021e:  ldarg.0
      IL_021f:  volatile.
      IL_0221:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0226:  stloc.s    V_8
      IL_0228:  ldloc.s    V_8
      IL_022a:  brtrue     IL_0241

      IL_022f:  ldarg.0
      IL_0230:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0235:  stloc.s    V_7
      IL_0237:  ldarg.0
      IL_0238:  volatile.
      IL_023a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_023f:  stloc.s    V_8
      IL_0241:  ldloc.s    V_8
      IL_0243:  ldc.i4.0
      IL_0244:  ceq
      IL_0246:  brfalse    IL_0265

      IL_024b:  ldloc.s    V_7
      IL_024d:  brfalse    IL_025d

      IL_0252:  ldstr      "Peer is closed"
      IL_0257:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_025c:  throw

      IL_025d:  ldarg.0
      IL_025e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0263:  br.s       IL_021b

      IL_0265:  ldarg.0
      IL_0266:  ldc.i4.s   16
      IL_0268:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_026d:  ldloc.s    V_8
      IL_026f:  ldc.i4.s   16
      IL_0271:  beq        IL_0293

      IL_0276:  ldstr      "can't recv OK when next message has tag "
      IL_027b:  ldarg.0
      IL_027c:  volatile.
      IL_027e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0283:  box        [kernel]System.Int32
      IL_0288:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_028d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0292:  throw

      IL_0293:  ldarg.0
      IL_0294:  ldc.i4.0
      IL_0295:  volatile.
      IL_0297:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_029c:  ldarg.0
      IL_029d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod0
      IL_02a2:  initobj    NetStack.Contracts.UdpConnectionContract/OK
      IL_02a8:  ldarg.0
      IL_02a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02ae:  ldc.i4.s   26
      IL_02b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02b5:  br         IL_04ad

      IL_02ba:  ldc.i4.0
      IL_02bb:  stloc.s    V_9
      IL_02bd:  ldarg.0
      IL_02be:  volatile.
      IL_02c0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02c5:  stloc.s    V_10
      IL_02c7:  ldloc.s    V_10
      IL_02c9:  brtrue     IL_02e0

      IL_02ce:  ldarg.0
      IL_02cf:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02d4:  stloc.s    V_9
      IL_02d6:  ldarg.0
      IL_02d7:  volatile.
      IL_02d9:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02de:  stloc.s    V_10
      IL_02e0:  ldloc.s    V_10
      IL_02e2:  ldc.i4.0
      IL_02e3:  ceq
      IL_02e5:  brfalse    IL_0304

      IL_02ea:  ldloc.s    V_9
      IL_02ec:  brfalse    IL_02fc

      IL_02f1:  ldstr      "Peer is closed"
      IL_02f6:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02fb:  throw

      IL_02fc:  ldarg.0
      IL_02fd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0302:  br.s       IL_02ba

      IL_0304:  ldarg.0
      IL_0305:  ldc.i4.s   16
      IL_0307:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_030c:  ldloc.s    V_10
      IL_030e:  ldc.i4.s   16
      IL_0310:  beq        IL_0332

      IL_0315:  ldstr      "can't recv OK when next message has tag "
      IL_031a:  ldarg.0
      IL_031b:  volatile.
      IL_031d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0322:  box        [kernel]System.Int32
      IL_0327:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_032c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0331:  throw

      IL_0332:  ldarg.0
      IL_0333:  ldc.i4.0
      IL_0334:  volatile.
      IL_0336:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_033b:  ldarg.0
      IL_033c:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod0
      IL_0341:  initobj    NetStack.Contracts.UdpConnectionContract/OK
      IL_0347:  ldarg.0
      IL_0348:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_034d:  ldc.i4.s   28
      IL_034f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0354:  br         IL_04ad

      IL_0359:  ldc.i4.0
      IL_035a:  stloc.s    V_11
      IL_035c:  ldarg.0
      IL_035d:  volatile.
      IL_035f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0364:  stloc.s    V_12
      IL_0366:  ldloc.s    V_12
      IL_0368:  brtrue     IL_037f

      IL_036d:  ldarg.0
      IL_036e:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0373:  stloc.s    V_11
      IL_0375:  ldarg.0
      IL_0376:  volatile.
      IL_0378:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_037d:  stloc.s    V_12
      IL_037f:  ldloc.s    V_12
      IL_0381:  ldc.i4.0
      IL_0382:  ceq
      IL_0384:  brfalse    IL_03a3

      IL_0389:  ldloc.s    V_11
      IL_038b:  brfalse    IL_039b

      IL_0390:  ldstr      "Peer is closed"
      IL_0395:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_039a:  throw

      IL_039b:  ldarg.0
      IL_039c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_03a1:  br.s       IL_0359

      IL_03a3:  ldarg.0
      IL_03a4:  ldc.i4.s   16
      IL_03a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_03ab:  ldloc.s    V_12
      IL_03ad:  ldc.i4.s   16
      IL_03af:  beq        IL_03d1

      IL_03b4:  ldstr      "can't recv OK when next message has tag "
      IL_03b9:  ldarg.0
      IL_03ba:  volatile.
      IL_03bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_03c1:  box        [kernel]System.Int32
      IL_03c6:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_03cb:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_03d0:  throw

      IL_03d1:  ldarg.0
      IL_03d2:  ldc.i4.0
      IL_03d3:  volatile.
      IL_03d5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_03da:  ldarg.0
      IL_03db:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod0
      IL_03e0:  initobj    NetStack.Contracts.UdpConnectionContract/OK
      IL_03e6:  ldarg.0
      IL_03e7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_03ec:  ldc.i4.s   12
      IL_03ee:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_03f3:  br         IL_04ad

      IL_03f8:  ldc.i4.0
      IL_03f9:  stloc.s    V_13
      IL_03fb:  ldarg.0
      IL_03fc:  volatile.
      IL_03fe:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0403:  stloc.s    V_14
      IL_0405:  ldloc.s    V_14
      IL_0407:  brtrue     IL_041e

      IL_040c:  ldarg.0
      IL_040d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0412:  stloc.s    V_13
      IL_0414:  ldarg.0
      IL_0415:  volatile.
      IL_0417:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_041c:  stloc.s    V_14
      IL_041e:  ldloc.s    V_14
      IL_0420:  ldc.i4.0
      IL_0421:  ceq
      IL_0423:  brfalse    IL_0442

      IL_0428:  ldloc.s    V_13
      IL_042a:  brfalse    IL_043a

      IL_042f:  ldstr      "Peer is closed"
      IL_0434:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0439:  throw

      IL_043a:  ldarg.0
      IL_043b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0440:  br.s       IL_03f8

      IL_0442:  ldarg.0
      IL_0443:  ldc.i4.s   16
      IL_0445:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_044a:  ldloc.s    V_14
      IL_044c:  ldc.i4.s   16
      IL_044e:  beq        IL_0470

      IL_0453:  ldstr      "can't recv OK when next message has tag "
      IL_0458:  ldarg.0
      IL_0459:  volatile.
      IL_045b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0460:  box        [kernel]System.Int32
      IL_0465:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_046a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_046f:  throw

      IL_0470:  ldarg.0
      IL_0471:  ldc.i4.0
      IL_0472:  volatile.
      IL_0474:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0479:  ldarg.0
      IL_047a:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod1
      IL_047f:  initobj    NetStack.Contracts.UdpConnectionContract/OK
      IL_0485:  ldarg.0
      IL_0486:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_048b:  ldc.i4.s   28
      IL_048d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0492:  br         IL_04ad

      IL_0497:  ldstr      "can't recv OK in state "
      IL_049c:  ldarg.0
      IL_049d:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_04a2:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_04a7:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_04ac:  throw

      IL_04ad:  ret
    } // end of method Imp::RecvOK

    .method public instance void  RecvInvalidEndPoint([out] uint32& ip,
                                                      [out] uint16& port) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       1187 (0x4a3)
      .maxstack  29
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0041

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   30
      IL_0017:  beq        IL_00f2

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   13
      IL_001f:  beq        IL_01a8

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   25
      IL_0027:  beq        IL_0261

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   35
      IL_002f:  beq        IL_031a

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   29
      IL_0037:  beq        IL_03d3

      IL_003c:  br         IL_048c

      IL_0041:  ldc.i4.0
      IL_0042:  stloc.1
      IL_0043:  ldarg.0
      IL_0044:  volatile.
      IL_0046:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_004b:  stloc.2
      IL_004c:  ldloc.2
      IL_004d:  brtrue     IL_0062

      IL_0052:  ldarg.0
      IL_0053:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0058:  stloc.1
      IL_0059:  ldarg.0
      IL_005a:  volatile.
      IL_005c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0061:  stloc.2
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.0
      IL_0064:  ceq
      IL_0066:  brfalse    IL_0084

      IL_006b:  ldloc.1
      IL_006c:  brfalse    IL_007c

      IL_0071:  ldstr      "Peer is closed"
      IL_0076:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ldarg.0
      IL_007d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0082:  br.s       IL_0041

      IL_0084:  ldarg.0
      IL_0085:  ldc.i4.s   17
      IL_0087:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_008c:  ldloc.2
      IL_008d:  ldc.i4.s   17
      IL_008f:  beq        IL_00b1

      IL_0094:  ldstr      "can't recv InvalidEndPoint when next message has t"
      + "ag "
      IL_0099:  ldarg.0
      IL_009a:  volatile.
      IL_009c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_00a1:  box        [kernel]System.Int32
      IL_00a6:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00ab:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00b0:  throw

      IL_00b1:  ldarg.1
      IL_00b2:  ldarg.0
      IL_00b3:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_00b8:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::ip
      IL_00bd:  stind.i4
      IL_00be:  ldarg.2
      IL_00bf:  ldarg.0
      IL_00c0:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_00c5:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::port
      IL_00ca:  stind.i2
      IL_00cb:  ldarg.0
      IL_00cc:  ldc.i4.0
      IL_00cd:  volatile.
      IL_00cf:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_00d4:  ldarg.0
      IL_00d5:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_00da:  initobj    NetStack.Contracts.UdpConnectionContract/InvalidEndPoint
      IL_00e0:  ldarg.0
      IL_00e1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e6:  ldc.i4.s   37
      IL_00e8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ed:  br         IL_04a2

      IL_00f2:  ldc.i4.0
      IL_00f3:  stloc.3
      IL_00f4:  ldarg.0
      IL_00f5:  volatile.
      IL_00f7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_00fc:  stloc.s    V_4
      IL_00fe:  ldloc.s    V_4
      IL_0100:  brtrue     IL_0116

      IL_0105:  ldarg.0
      IL_0106:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_010b:  stloc.3
      IL_010c:  ldarg.0
      IL_010d:  volatile.
      IL_010f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0114:  stloc.s    V_4
      IL_0116:  ldloc.s    V_4
      IL_0118:  ldc.i4.0
      IL_0119:  ceq
      IL_011b:  brfalse    IL_0139

      IL_0120:  ldloc.3
      IL_0121:  brfalse    IL_0131

      IL_0126:  ldstr      "Peer is closed"
      IL_012b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0130:  throw

      IL_0131:  ldarg.0
      IL_0132:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0137:  br.s       IL_00f2

      IL_0139:  ldarg.0
      IL_013a:  ldc.i4.s   17
      IL_013c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0141:  ldloc.s    V_4
      IL_0143:  ldc.i4.s   17
      IL_0145:  beq        IL_0167

      IL_014a:  ldstr      "can't recv InvalidEndPoint when next message has t"
      + "ag "
      IL_014f:  ldarg.0
      IL_0150:  volatile.
      IL_0152:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0157:  box        [kernel]System.Int32
      IL_015c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0161:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0166:  throw

      IL_0167:  ldarg.1
      IL_0168:  ldarg.0
      IL_0169:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_016e:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::ip
      IL_0173:  stind.i4
      IL_0174:  ldarg.2
      IL_0175:  ldarg.0
      IL_0176:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_017b:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::port
      IL_0180:  stind.i2
      IL_0181:  ldarg.0
      IL_0182:  ldc.i4.0
      IL_0183:  volatile.
      IL_0185:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_018a:  ldarg.0
      IL_018b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_0190:  initobj    NetStack.Contracts.UdpConnectionContract/InvalidEndPoint
      IL_0196:  ldarg.0
      IL_0197:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_019c:  ldc.i4.s   37
      IL_019e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01a3:  br         IL_04a2

      IL_01a8:  ldc.i4.0
      IL_01a9:  stloc.s    V_5
      IL_01ab:  ldarg.0
      IL_01ac:  volatile.
      IL_01ae:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01b3:  stloc.s    V_6
      IL_01b5:  ldloc.s    V_6
      IL_01b7:  brtrue     IL_01ce

      IL_01bc:  ldarg.0
      IL_01bd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01c2:  stloc.s    V_5
      IL_01c4:  ldarg.0
      IL_01c5:  volatile.
      IL_01c7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01cc:  stloc.s    V_6
      IL_01ce:  ldloc.s    V_6
      IL_01d0:  ldc.i4.0
      IL_01d1:  ceq
      IL_01d3:  brfalse    IL_01f2

      IL_01d8:  ldloc.s    V_5
      IL_01da:  brfalse    IL_01ea

      IL_01df:  ldstr      "Peer is closed"
      IL_01e4:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01e9:  throw

      IL_01ea:  ldarg.0
      IL_01eb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01f0:  br.s       IL_01a8

      IL_01f2:  ldarg.0
      IL_01f3:  ldc.i4.s   17
      IL_01f5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01fa:  ldloc.s    V_6
      IL_01fc:  ldc.i4.s   17
      IL_01fe:  beq        IL_0220

      IL_0203:  ldstr      "can't recv InvalidEndPoint when next message has t"
      + "ag "
      IL_0208:  ldarg.0
      IL_0209:  volatile.
      IL_020b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0210:  box        [kernel]System.Int32
      IL_0215:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_021a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_021f:  throw

      IL_0220:  ldarg.1
      IL_0221:  ldarg.0
      IL_0222:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_0227:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::ip
      IL_022c:  stind.i4
      IL_022d:  ldarg.2
      IL_022e:  ldarg.0
      IL_022f:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_0234:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::port
      IL_0239:  stind.i2
      IL_023a:  ldarg.0
      IL_023b:  ldc.i4.0
      IL_023c:  volatile.
      IL_023e:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0243:  ldarg.0
      IL_0244:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_0249:  initobj    NetStack.Contracts.UdpConnectionContract/InvalidEndPoint
      IL_024f:  ldarg.0
      IL_0250:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0255:  ldc.i4.s   12
      IL_0257:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_025c:  br         IL_04a2

      IL_0261:  ldc.i4.0
      IL_0262:  stloc.s    V_7
      IL_0264:  ldarg.0
      IL_0265:  volatile.
      IL_0267:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_026c:  stloc.s    V_8
      IL_026e:  ldloc.s    V_8
      IL_0270:  brtrue     IL_0287

      IL_0275:  ldarg.0
      IL_0276:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_027b:  stloc.s    V_7
      IL_027d:  ldarg.0
      IL_027e:  volatile.
      IL_0280:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0285:  stloc.s    V_8
      IL_0287:  ldloc.s    V_8
      IL_0289:  ldc.i4.0
      IL_028a:  ceq
      IL_028c:  brfalse    IL_02ab

      IL_0291:  ldloc.s    V_7
      IL_0293:  brfalse    IL_02a3

      IL_0298:  ldstr      "Peer is closed"
      IL_029d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02a2:  throw

      IL_02a3:  ldarg.0
      IL_02a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02a9:  br.s       IL_0261

      IL_02ab:  ldarg.0
      IL_02ac:  ldc.i4.s   17
      IL_02ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_02b3:  ldloc.s    V_8
      IL_02b5:  ldc.i4.s   17
      IL_02b7:  beq        IL_02d9

      IL_02bc:  ldstr      "can't recv InvalidEndPoint when next message has t"
      + "ag "
      IL_02c1:  ldarg.0
      IL_02c2:  volatile.
      IL_02c4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02c9:  box        [kernel]System.Int32
      IL_02ce:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_02d3:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02d8:  throw

      IL_02d9:  ldarg.1
      IL_02da:  ldarg.0
      IL_02db:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_02e0:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::ip
      IL_02e5:  stind.i4
      IL_02e6:  ldarg.2
      IL_02e7:  ldarg.0
      IL_02e8:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_02ed:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::port
      IL_02f2:  stind.i2
      IL_02f3:  ldarg.0
      IL_02f4:  ldc.i4.0
      IL_02f5:  volatile.
      IL_02f7:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02fc:  ldarg.0
      IL_02fd:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_0302:  initobj    NetStack.Contracts.UdpConnectionContract/InvalidEndPoint
      IL_0308:  ldarg.0
      IL_0309:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_030e:  ldc.i4.s   24
      IL_0310:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0315:  br         IL_04a2

      IL_031a:  ldc.i4.0
      IL_031b:  stloc.s    V_9
      IL_031d:  ldarg.0
      IL_031e:  volatile.
      IL_0320:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0325:  stloc.s    V_10
      IL_0327:  ldloc.s    V_10
      IL_0329:  brtrue     IL_0340

      IL_032e:  ldarg.0
      IL_032f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0334:  stloc.s    V_9
      IL_0336:  ldarg.0
      IL_0337:  volatile.
      IL_0339:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_033e:  stloc.s    V_10
      IL_0340:  ldloc.s    V_10
      IL_0342:  ldc.i4.0
      IL_0343:  ceq
      IL_0345:  brfalse    IL_0364

      IL_034a:  ldloc.s    V_9
      IL_034c:  brfalse    IL_035c

      IL_0351:  ldstr      "Peer is closed"
      IL_0356:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_035b:  throw

      IL_035c:  ldarg.0
      IL_035d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0362:  br.s       IL_031a

      IL_0364:  ldarg.0
      IL_0365:  ldc.i4.s   17
      IL_0367:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_036c:  ldloc.s    V_10
      IL_036e:  ldc.i4.s   17
      IL_0370:  beq        IL_0392

      IL_0375:  ldstr      "can't recv InvalidEndPoint when next message has t"
      + "ag "
      IL_037a:  ldarg.0
      IL_037b:  volatile.
      IL_037d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0382:  box        [kernel]System.Int32
      IL_0387:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_038c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0391:  throw

      IL_0392:  ldarg.1
      IL_0393:  ldarg.0
      IL_0394:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_0399:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::ip
      IL_039e:  stind.i4
      IL_039f:  ldarg.2
      IL_03a0:  ldarg.0
      IL_03a1:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_03a6:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::port
      IL_03ab:  stind.i2
      IL_03ac:  ldarg.0
      IL_03ad:  ldc.i4.0
      IL_03ae:  volatile.
      IL_03b0:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_03b5:  ldarg.0
      IL_03b6:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_03bb:  initobj    NetStack.Contracts.UdpConnectionContract/InvalidEndPoint
      IL_03c1:  ldarg.0
      IL_03c2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_03c7:  ldc.i4.s   34
      IL_03c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_03ce:  br         IL_04a2

      IL_03d3:  ldc.i4.0
      IL_03d4:  stloc.s    V_11
      IL_03d6:  ldarg.0
      IL_03d7:  volatile.
      IL_03d9:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_03de:  stloc.s    V_12
      IL_03e0:  ldloc.s    V_12
      IL_03e2:  brtrue     IL_03f9

      IL_03e7:  ldarg.0
      IL_03e8:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03ed:  stloc.s    V_11
      IL_03ef:  ldarg.0
      IL_03f0:  volatile.
      IL_03f2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_03f7:  stloc.s    V_12
      IL_03f9:  ldloc.s    V_12
      IL_03fb:  ldc.i4.0
      IL_03fc:  ceq
      IL_03fe:  brfalse    IL_041d

      IL_0403:  ldloc.s    V_11
      IL_0405:  brfalse    IL_0415

      IL_040a:  ldstr      "Peer is closed"
      IL_040f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0414:  throw

      IL_0415:  ldarg.0
      IL_0416:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_041b:  br.s       IL_03d3

      IL_041d:  ldarg.0
      IL_041e:  ldc.i4.s   17
      IL_0420:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0425:  ldloc.s    V_12
      IL_0427:  ldc.i4.s   17
      IL_0429:  beq        IL_044b

      IL_042e:  ldstr      "can't recv InvalidEndPoint when next message has t"
      + "ag "
      IL_0433:  ldarg.0
      IL_0434:  volatile.
      IL_0436:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_043b:  box        [kernel]System.Int32
      IL_0440:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0445:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_044a:  throw

      IL_044b:  ldarg.1
      IL_044c:  ldarg.0
      IL_044d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_0452:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::ip
      IL_0457:  stind.i4
      IL_0458:  ldarg.2
      IL_0459:  ldarg.0
      IL_045a:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_045f:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::port
      IL_0464:  stind.i2
      IL_0465:  ldarg.0
      IL_0466:  ldc.i4.0
      IL_0467:  volatile.
      IL_0469:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_046e:  ldarg.0
      IL_046f:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_0474:  initobj    NetStack.Contracts.UdpConnectionContract/InvalidEndPoint
      IL_047a:  ldarg.0
      IL_047b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0480:  ldc.i4.s   14
      IL_0482:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0487:  br         IL_04a2

      IL_048c:  ldstr      "can't recv InvalidEndPoint in state "
      IL_0491:  ldarg.0
      IL_0492:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_0497:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_049c:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_04a1:  throw

      IL_04a2:  ret
    } // end of method Imp::RecvInvalidEndPoint

    .method public instance void  RecvDataTooLarge() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       697 (0x2b9)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   27
      IL_0017:  beq        IL_00c8

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   35
      IL_001f:  beq        IL_0164

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   13
      IL_0027:  beq        IL_0203

      IL_002c:  br         IL_02a2

      IL_0031:  ldc.i4.0
      IL_0032:  stloc.1
      IL_0033:  ldarg.0
      IL_0034:  volatile.
      IL_0036:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_003b:  stloc.2
      IL_003c:  ldloc.2
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldarg.0
      IL_0043:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0048:  stloc.1
      IL_0049:  ldarg.0
      IL_004a:  volatile.
      IL_004c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  ldc.i4.0
      IL_0054:  ceq
      IL_0056:  brfalse    IL_0074

      IL_005b:  ldloc.1
      IL_005c:  brfalse    IL_006c

      IL_0061:  ldstr      "Peer is closed"
      IL_0066:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_006b:  throw

      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0072:  br.s       IL_0031

      IL_0074:  ldarg.0
      IL_0075:  ldc.i4.s   18
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007c:  ldloc.2
      IL_007d:  ldc.i4.s   18
      IL_007f:  beq        IL_00a1

      IL_0084:  ldstr      "can't recv DataTooLarge when next message has tag "
      IL_0089:  ldarg.0
      IL_008a:  volatile.
      IL_008c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0091:  box        [kernel]System.Int32
      IL_0096:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_009b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a0:  throw

      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge NetStack.Contracts.UdpConnectionContract/Imp::DataTooLargePod0
      IL_00b0:  initobj    NetStack.Contracts.UdpConnectionContract/DataTooLarge
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   24
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_02b8

      IL_00c8:  ldc.i4.0
      IL_00c9:  stloc.3
      IL_00ca:  ldarg.0
      IL_00cb:  volatile.
      IL_00cd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00d2:  stloc.s    V_4
      IL_00d4:  ldloc.s    V_4
      IL_00d6:  brtrue     IL_00ec

      IL_00db:  ldarg.0
      IL_00dc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e1:  stloc.3
      IL_00e2:  ldarg.0
      IL_00e3:  volatile.
      IL_00e5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00ea:  stloc.s    V_4
      IL_00ec:  ldloc.s    V_4
      IL_00ee:  ldc.i4.0
      IL_00ef:  ceq
      IL_00f1:  brfalse    IL_010f

      IL_00f6:  ldloc.3
      IL_00f7:  brfalse    IL_0107

      IL_00fc:  ldstr      "Peer is closed"
      IL_0101:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0106:  throw

      IL_0107:  ldarg.0
      IL_0108:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_010d:  br.s       IL_00c8

      IL_010f:  ldarg.0
      IL_0110:  ldc.i4.s   18
      IL_0112:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0117:  ldloc.s    V_4
      IL_0119:  ldc.i4.s   18
      IL_011b:  beq        IL_013d

      IL_0120:  ldstr      "can't recv DataTooLarge when next message has tag "
      IL_0125:  ldarg.0
      IL_0126:  volatile.
      IL_0128:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_012d:  box        [kernel]System.Int32
      IL_0132:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0137:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_013c:  throw

      IL_013d:  ldarg.0
      IL_013e:  ldc.i4.0
      IL_013f:  volatile.
      IL_0141:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0146:  ldarg.0
      IL_0147:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge NetStack.Contracts.UdpConnectionContract/Imp::DataTooLargePod0
      IL_014c:  initobj    NetStack.Contracts.UdpConnectionContract/DataTooLarge
      IL_0152:  ldarg.0
      IL_0153:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0158:  ldc.i4.s   26
      IL_015a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_015f:  br         IL_02b8

      IL_0164:  ldc.i4.0
      IL_0165:  stloc.s    V_5
      IL_0167:  ldarg.0
      IL_0168:  volatile.
      IL_016a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_016f:  stloc.s    V_6
      IL_0171:  ldloc.s    V_6
      IL_0173:  brtrue     IL_018a

      IL_0178:  ldarg.0
      IL_0179:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_017e:  stloc.s    V_5
      IL_0180:  ldarg.0
      IL_0181:  volatile.
      IL_0183:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0188:  stloc.s    V_6
      IL_018a:  ldloc.s    V_6
      IL_018c:  ldc.i4.0
      IL_018d:  ceq
      IL_018f:  brfalse    IL_01ae

      IL_0194:  ldloc.s    V_5
      IL_0196:  brfalse    IL_01a6

      IL_019b:  ldstr      "Peer is closed"
      IL_01a0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01a5:  throw

      IL_01a6:  ldarg.0
      IL_01a7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01ac:  br.s       IL_0164

      IL_01ae:  ldarg.0
      IL_01af:  ldc.i4.s   18
      IL_01b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01b6:  ldloc.s    V_6
      IL_01b8:  ldc.i4.s   18
      IL_01ba:  beq        IL_01dc

      IL_01bf:  ldstr      "can't recv DataTooLarge when next message has tag "
      IL_01c4:  ldarg.0
      IL_01c5:  volatile.
      IL_01c7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_01cc:  box        [kernel]System.Int32
      IL_01d1:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01d6:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01db:  throw

      IL_01dc:  ldarg.0
      IL_01dd:  ldc.i4.0
      IL_01de:  volatile.
      IL_01e0:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_01e5:  ldarg.0
      IL_01e6:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge NetStack.Contracts.UdpConnectionContract/Imp::DataTooLargePod1
      IL_01eb:  initobj    NetStack.Contracts.UdpConnectionContract/DataTooLarge
      IL_01f1:  ldarg.0
      IL_01f2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01f7:  ldc.i4.s   34
      IL_01f9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01fe:  br         IL_02b8

      IL_0203:  ldc.i4.0
      IL_0204:  stloc.s    V_7
      IL_0206:  ldarg.0
      IL_0207:  volatile.
      IL_0209:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_020e:  stloc.s    V_8
      IL_0210:  ldloc.s    V_8
      IL_0212:  brtrue     IL_0229

      IL_0217:  ldarg.0
      IL_0218:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_021d:  stloc.s    V_7
      IL_021f:  ldarg.0
      IL_0220:  volatile.
      IL_0222:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0227:  stloc.s    V_8
      IL_0229:  ldloc.s    V_8
      IL_022b:  ldc.i4.0
      IL_022c:  ceq
      IL_022e:  brfalse    IL_024d

      IL_0233:  ldloc.s    V_7
      IL_0235:  brfalse    IL_0245

      IL_023a:  ldstr      "Peer is closed"
      IL_023f:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0244:  throw

      IL_0245:  ldarg.0
      IL_0246:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_024b:  br.s       IL_0203

      IL_024d:  ldarg.0
      IL_024e:  ldc.i4.s   18
      IL_0250:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0255:  ldloc.s    V_8
      IL_0257:  ldc.i4.s   18
      IL_0259:  beq        IL_027b

      IL_025e:  ldstr      "can't recv DataTooLarge when next message has tag "
      IL_0263:  ldarg.0
      IL_0264:  volatile.
      IL_0266:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_026b:  box        [kernel]System.Int32
      IL_0270:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0275:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_027a:  throw

      IL_027b:  ldarg.0
      IL_027c:  ldc.i4.0
      IL_027d:  volatile.
      IL_027f:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0284:  ldarg.0
      IL_0285:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge NetStack.Contracts.UdpConnectionContract/Imp::DataTooLargePod0
      IL_028a:  initobj    NetStack.Contracts.UdpConnectionContract/DataTooLarge
      IL_0290:  ldarg.0
      IL_0291:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0296:  ldc.i4.s   12
      IL_0298:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_029d:  br         IL_02b8

      IL_02a2:  ldstr      "can't recv DataTooLarge in state "
      IL_02a7:  ldarg.0
      IL_02a8:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_02ad:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02b2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02b7:  throw

      IL_02b8:  ret
    } // end of method Imp::RecvDataTooLarge

    .method public instance void  RecvNoData() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       363 (0x16b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  beq        IL_00b8

      IL_001c:  br         IL_0154

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   19
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   19
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv NoData when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/NoData NetStack.Contracts.UdpConnectionContract/Imp::NoDataPod0
      IL_00a0:  initobj    NetStack.Contracts.UdpConnectionContract/NoData
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.s   21
      IL_00ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b3:  br         IL_016a

      IL_00b8:  ldc.i4.0
      IL_00b9:  stloc.3
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00c2:  stloc.s    V_4
      IL_00c4:  ldloc.s    V_4
      IL_00c6:  brtrue     IL_00dc

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  ldc.i4.0
      IL_00df:  ceq
      IL_00e1:  brfalse    IL_00ff

      IL_00e6:  ldloc.3
      IL_00e7:  brfalse    IL_00f7

      IL_00ec:  ldstr      "Peer is closed"
      IL_00f1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ldarg.0
      IL_00f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fd:  br.s       IL_00b8

      IL_00ff:  ldarg.0
      IL_0100:  ldc.i4.s   19
      IL_0102:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0107:  ldloc.s    V_4
      IL_0109:  ldc.i4.s   19
      IL_010b:  beq        IL_012d

      IL_0110:  ldstr      "can't recv NoData when next message has tag "
      IL_0115:  ldarg.0
      IL_0116:  volatile.
      IL_0118:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_011d:  box        [kernel]System.Int32
      IL_0122:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0127:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ldarg.0
      IL_012e:  ldc.i4.0
      IL_012f:  volatile.
      IL_0131:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0136:  ldarg.0
      IL_0137:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/NoData NetStack.Contracts.UdpConnectionContract/Imp::NoDataPod0
      IL_013c:  initobj    NetStack.Contracts.UdpConnectionContract/NoData
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.s   9
      IL_014a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014f:  br         IL_016a

      IL_0154:  ldstr      "can't recv NoData in state "
      IL_0159:  ldarg.0
      IL_015a:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_015f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0164:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0169:  throw

      IL_016a:  ret
    } // end of method Imp::RecvNoData

    .method public instance void  RecvData([out] uint32& srcAddr,
                                           [out] uint16& srcPort,
                                           [out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       853 (0x355)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   23
      IL_0017:  beq        IL_00ef

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   22
      IL_001f:  beq        IL_01b2

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   10
      IL_0027:  beq        IL_0278

      IL_002c:  br         IL_033e

      IL_0031:  ldc.i4.0
      IL_0032:  stloc.1
      IL_0033:  ldarg.0
      IL_0034:  volatile.
      IL_0036:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_003b:  stloc.2
      IL_003c:  ldloc.2
      IL_003d:  brtrue     IL_0052

      IL_0042:  ldarg.0
      IL_0043:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0048:  stloc.1
      IL_0049:  ldarg.0
      IL_004a:  volatile.
      IL_004c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  ldc.i4.0
      IL_0054:  ceq
      IL_0056:  brfalse    IL_0074

      IL_005b:  ldloc.1
      IL_005c:  brfalse    IL_006c

      IL_0061:  ldstr      "Peer is closed"
      IL_0066:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_006b:  throw

      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0072:  br.s       IL_0031

      IL_0074:  ldarg.0
      IL_0075:  ldc.i4.s   20
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007c:  ldloc.2
      IL_007d:  ldc.i4.s   20
      IL_007f:  beq        IL_00a1

      IL_0084:  ldstr      "can't recv Data when next message has tag "
      IL_0089:  ldarg.0
      IL_008a:  volatile.
      IL_008c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0091:  box        [kernel]System.Int32
      IL_0096:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_009b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00a0:  throw

      IL_00a1:  ldarg.1
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_00a8:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/Data::srcAddr
      IL_00ad:  stind.i4
      IL_00ae:  ldarg.2
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_00b5:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Data::srcPort
      IL_00ba:  stind.i2
      IL_00bb:  ldarg.3
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_00c2:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_00c7:  stind.i
      IL_00c8:  ldarg.0
      IL_00c9:  ldc.i4.0
      IL_00ca:  volatile.
      IL_00cc:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00d1:  ldarg.0
      IL_00d2:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_00d7:  initobj    NetStack.Contracts.UdpConnectionContract/Data
      IL_00dd:  ldarg.0
      IL_00de:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e3:  ldc.i4.s   14
      IL_00e5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ea:  br         IL_0354

      IL_00ef:  ldc.i4.0
      IL_00f0:  stloc.3
      IL_00f1:  ldarg.0
      IL_00f2:  volatile.
      IL_00f4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00f9:  stloc.s    V_4
      IL_00fb:  ldloc.s    V_4
      IL_00fd:  brtrue     IL_0113

      IL_0102:  ldarg.0
      IL_0103:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0108:  stloc.3
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0111:  stloc.s    V_4
      IL_0113:  ldloc.s    V_4
      IL_0115:  ldc.i4.0
      IL_0116:  ceq
      IL_0118:  brfalse    IL_0136

      IL_011d:  ldloc.3
      IL_011e:  brfalse    IL_012e

      IL_0123:  ldstr      "Peer is closed"
      IL_0128:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012d:  throw

      IL_012e:  ldarg.0
      IL_012f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0134:  br.s       IL_00ef

      IL_0136:  ldarg.0
      IL_0137:  ldc.i4.s   20
      IL_0139:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_013e:  ldloc.s    V_4
      IL_0140:  ldc.i4.s   20
      IL_0142:  beq        IL_0164

      IL_0147:  ldstr      "can't recv Data when next message has tag "
      IL_014c:  ldarg.0
      IL_014d:  volatile.
      IL_014f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0154:  box        [kernel]System.Int32
      IL_0159:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_015e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0163:  throw

      IL_0164:  ldarg.1
      IL_0165:  ldarg.0
      IL_0166:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_016b:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/Data::srcAddr
      IL_0170:  stind.i4
      IL_0171:  ldarg.2
      IL_0172:  ldarg.0
      IL_0173:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0178:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Data::srcPort
      IL_017d:  stind.i2
      IL_017e:  ldarg.3
      IL_017f:  ldarg.0
      IL_0180:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0185:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_018a:  stind.i
      IL_018b:  ldarg.0
      IL_018c:  ldc.i4.0
      IL_018d:  volatile.
      IL_018f:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0194:  ldarg.0
      IL_0195:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_019a:  initobj    NetStack.Contracts.UdpConnectionContract/Data
      IL_01a0:  ldarg.0
      IL_01a1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01a6:  ldc.i4.s   28
      IL_01a8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01ad:  br         IL_0354

      IL_01b2:  ldc.i4.0
      IL_01b3:  stloc.s    V_5
      IL_01b5:  ldarg.0
      IL_01b6:  volatile.
      IL_01b8:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01bd:  stloc.s    V_6
      IL_01bf:  ldloc.s    V_6
      IL_01c1:  brtrue     IL_01d8

      IL_01c6:  ldarg.0
      IL_01c7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01cc:  stloc.s    V_5
      IL_01ce:  ldarg.0
      IL_01cf:  volatile.
      IL_01d1:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01d6:  stloc.s    V_6
      IL_01d8:  ldloc.s    V_6
      IL_01da:  ldc.i4.0
      IL_01db:  ceq
      IL_01dd:  brfalse    IL_01fc

      IL_01e2:  ldloc.s    V_5
      IL_01e4:  brfalse    IL_01f4

      IL_01e9:  ldstr      "Peer is closed"
      IL_01ee:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01f3:  throw

      IL_01f4:  ldarg.0
      IL_01f5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01fa:  br.s       IL_01b2

      IL_01fc:  ldarg.0
      IL_01fd:  ldc.i4.s   20
      IL_01ff:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0204:  ldloc.s    V_6
      IL_0206:  ldc.i4.s   20
      IL_0208:  beq        IL_022a

      IL_020d:  ldstr      "can't recv Data when next message has tag "
      IL_0212:  ldarg.0
      IL_0213:  volatile.
      IL_0215:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_021a:  box        [kernel]System.Int32
      IL_021f:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0224:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0229:  throw

      IL_022a:  ldarg.1
      IL_022b:  ldarg.0
      IL_022c:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0231:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/Data::srcAddr
      IL_0236:  stind.i4
      IL_0237:  ldarg.2
      IL_0238:  ldarg.0
      IL_0239:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_023e:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Data::srcPort
      IL_0243:  stind.i2
      IL_0244:  ldarg.3
      IL_0245:  ldarg.0
      IL_0246:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_024b:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0250:  stind.i
      IL_0251:  ldarg.0
      IL_0252:  ldc.i4.0
      IL_0253:  volatile.
      IL_0255:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_025a:  ldarg.0
      IL_025b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0260:  initobj    NetStack.Contracts.UdpConnectionContract/Data
      IL_0266:  ldarg.0
      IL_0267:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_026c:  ldc.i4.s   21
      IL_026e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0273:  br         IL_0354

      IL_0278:  ldc.i4.0
      IL_0279:  stloc.s    V_7
      IL_027b:  ldarg.0
      IL_027c:  volatile.
      IL_027e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0283:  stloc.s    V_8
      IL_0285:  ldloc.s    V_8
      IL_0287:  brtrue     IL_029e

      IL_028c:  ldarg.0
      IL_028d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0292:  stloc.s    V_7
      IL_0294:  ldarg.0
      IL_0295:  volatile.
      IL_0297:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_029c:  stloc.s    V_8
      IL_029e:  ldloc.s    V_8
      IL_02a0:  ldc.i4.0
      IL_02a1:  ceq
      IL_02a3:  brfalse    IL_02c2

      IL_02a8:  ldloc.s    V_7
      IL_02aa:  brfalse    IL_02ba

      IL_02af:  ldstr      "Peer is closed"
      IL_02b4:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02b9:  throw

      IL_02ba:  ldarg.0
      IL_02bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02c0:  br.s       IL_0278

      IL_02c2:  ldarg.0
      IL_02c3:  ldc.i4.s   20
      IL_02c5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_02ca:  ldloc.s    V_8
      IL_02cc:  ldc.i4.s   20
      IL_02ce:  beq        IL_02f0

      IL_02d3:  ldstr      "can't recv Data when next message has tag "
      IL_02d8:  ldarg.0
      IL_02d9:  volatile.
      IL_02db:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02e0:  box        [kernel]System.Int32
      IL_02e5:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_02ea:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02ef:  throw

      IL_02f0:  ldarg.1
      IL_02f1:  ldarg.0
      IL_02f2:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_02f7:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/Data::srcAddr
      IL_02fc:  stind.i4
      IL_02fd:  ldarg.2
      IL_02fe:  ldarg.0
      IL_02ff:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0304:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Data::srcPort
      IL_0309:  stind.i2
      IL_030a:  ldarg.3
      IL_030b:  ldarg.0
      IL_030c:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0311:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0316:  stind.i
      IL_0317:  ldarg.0
      IL_0318:  ldc.i4.0
      IL_0319:  volatile.
      IL_031b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0320:  ldarg.0
      IL_0321:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0326:  initobj    NetStack.Contracts.UdpConnectionContract/Data
      IL_032c:  ldarg.0
      IL_032d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0332:  ldc.i4.s   9
      IL_0334:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0339:  br         IL_0354

      IL_033e:  ldstr      "can't recv Data in state "
      IL_0343:  ldarg.0
      IL_0344:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_0349:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_034e:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0353:  throw

      IL_0354:  ret
    } // end of method Imp::RecvData

    .method public instance void  RecvIPAddress([out] uint32& ip) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       747 (0x2eb)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_002f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   18
      IL_0016:  beq        IL_00d3

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.4
      IL_001d:  beq        IL_017c

      IL_0022:  ldloc.0
      IL_0023:  ldc.i4.s   16
      IL_0025:  beq        IL_0228

      IL_002a:  br         IL_02d4

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.1
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_004f:  stloc.2
      IL_0050:  ldloc.2
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0072

      IL_0059:  ldloc.1
      IL_005a:  brfalse    IL_006a

      IL_005f:  ldstr      "Peer is closed"
      IL_0064:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0069:  throw

      IL_006a:  ldarg.0
      IL_006b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0070:  br.s       IL_002f

      IL_0072:  ldarg.0
      IL_0073:  ldc.i4.s   21
      IL_0075:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007a:  ldloc.2
      IL_007b:  ldc.i4.s   21
      IL_007d:  beq        IL_009f

      IL_0082:  ldstr      "can't recv IPAddress when next message has tag "
      IL_0087:  ldarg.0
      IL_0088:  volatile.
      IL_008a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_008f:  box        [kernel]System.Int32
      IL_0094:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0099:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_009e:  throw

      IL_009f:  ldarg.1
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_00a6:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/IPAddress::ip
      IL_00ab:  stind.i4
      IL_00ac:  ldarg.0
      IL_00ad:  ldc.i4.0
      IL_00ae:  volatile.
      IL_00b0:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00b5:  ldarg.0
      IL_00b6:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_00bb:  initobj    NetStack.Contracts.UdpConnectionContract/IPAddress
      IL_00c1:  ldarg.0
      IL_00c2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c7:  ldc.i4.s   14
      IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ce:  br         IL_02ea

      IL_00d3:  ldc.i4.0
      IL_00d4:  stloc.3
      IL_00d5:  ldarg.0
      IL_00d6:  volatile.
      IL_00d8:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00dd:  stloc.s    V_4
      IL_00df:  ldloc.s    V_4
      IL_00e1:  brtrue     IL_00f7

      IL_00e6:  ldarg.0
      IL_00e7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ec:  stloc.3
      IL_00ed:  ldarg.0
      IL_00ee:  volatile.
      IL_00f0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00f5:  stloc.s    V_4
      IL_00f7:  ldloc.s    V_4
      IL_00f9:  ldc.i4.0
      IL_00fa:  ceq
      IL_00fc:  brfalse    IL_011a

      IL_0101:  ldloc.3
      IL_0102:  brfalse    IL_0112

      IL_0107:  ldstr      "Peer is closed"
      IL_010c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0111:  throw

      IL_0112:  ldarg.0
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0118:  br.s       IL_00d3

      IL_011a:  ldarg.0
      IL_011b:  ldc.i4.s   21
      IL_011d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0122:  ldloc.s    V_4
      IL_0124:  ldc.i4.s   21
      IL_0126:  beq        IL_0148

      IL_012b:  ldstr      "can't recv IPAddress when next message has tag "
      IL_0130:  ldarg.0
      IL_0131:  volatile.
      IL_0133:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0138:  box        [kernel]System.Int32
      IL_013d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0142:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0147:  throw

      IL_0148:  ldarg.1
      IL_0149:  ldarg.0
      IL_014a:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_014f:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/IPAddress::ip
      IL_0154:  stind.i4
      IL_0155:  ldarg.0
      IL_0156:  ldc.i4.0
      IL_0157:  volatile.
      IL_0159:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_015e:  ldarg.0
      IL_015f:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_0164:  initobj    NetStack.Contracts.UdpConnectionContract/IPAddress
      IL_016a:  ldarg.0
      IL_016b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0170:  ldc.i4.s   28
      IL_0172:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0177:  br         IL_02ea

      IL_017c:  ldc.i4.0
      IL_017d:  stloc.s    V_5
      IL_017f:  ldarg.0
      IL_0180:  volatile.
      IL_0182:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0187:  stloc.s    V_6
      IL_0189:  ldloc.s    V_6
      IL_018b:  brtrue     IL_01a2

      IL_0190:  ldarg.0
      IL_0191:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0196:  stloc.s    V_5
      IL_0198:  ldarg.0
      IL_0199:  volatile.
      IL_019b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01a0:  stloc.s    V_6
      IL_01a2:  ldloc.s    V_6
      IL_01a4:  ldc.i4.0
      IL_01a5:  ceq
      IL_01a7:  brfalse    IL_01c6

      IL_01ac:  ldloc.s    V_5
      IL_01ae:  brfalse    IL_01be

      IL_01b3:  ldstr      "Peer is closed"
      IL_01b8:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01bd:  throw

      IL_01be:  ldarg.0
      IL_01bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01c4:  br.s       IL_017c

      IL_01c6:  ldarg.0
      IL_01c7:  ldc.i4.s   21
      IL_01c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01ce:  ldloc.s    V_6
      IL_01d0:  ldc.i4.s   21
      IL_01d2:  beq        IL_01f4

      IL_01d7:  ldstr      "can't recv IPAddress when next message has tag "
      IL_01dc:  ldarg.0
      IL_01dd:  volatile.
      IL_01df:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01e4:  box        [kernel]System.Int32
      IL_01e9:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01ee:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01f3:  throw

      IL_01f4:  ldarg.1
      IL_01f5:  ldarg.0
      IL_01f6:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_01fb:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/IPAddress::ip
      IL_0200:  stind.i4
      IL_0201:  ldarg.0
      IL_0202:  ldc.i4.0
      IL_0203:  volatile.
      IL_0205:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_020a:  ldarg.0
      IL_020b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_0210:  initobj    NetStack.Contracts.UdpConnectionContract/IPAddress
      IL_0216:  ldarg.0
      IL_0217:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_021c:  ldc.i4.s   14
      IL_021e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0223:  br         IL_02ea

      IL_0228:  ldc.i4.0
      IL_0229:  stloc.s    V_7
      IL_022b:  ldarg.0
      IL_022c:  volatile.
      IL_022e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0233:  stloc.s    V_8
      IL_0235:  ldloc.s    V_8
      IL_0237:  brtrue     IL_024e

      IL_023c:  ldarg.0
      IL_023d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0242:  stloc.s    V_7
      IL_0244:  ldarg.0
      IL_0245:  volatile.
      IL_0247:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_024c:  stloc.s    V_8
      IL_024e:  ldloc.s    V_8
      IL_0250:  ldc.i4.0
      IL_0251:  ceq
      IL_0253:  brfalse    IL_0272

      IL_0258:  ldloc.s    V_7
      IL_025a:  brfalse    IL_026a

      IL_025f:  ldstr      "Peer is closed"
      IL_0264:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0269:  throw

      IL_026a:  ldarg.0
      IL_026b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0270:  br.s       IL_0228

      IL_0272:  ldarg.0
      IL_0273:  ldc.i4.s   21
      IL_0275:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_027a:  ldloc.s    V_8
      IL_027c:  ldc.i4.s   21
      IL_027e:  beq        IL_02a0

      IL_0283:  ldstr      "can't recv IPAddress when next message has tag "
      IL_0288:  ldarg.0
      IL_0289:  volatile.
      IL_028b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0290:  box        [kernel]System.Int32
      IL_0295:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_029a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_029f:  throw

      IL_02a0:  ldarg.1
      IL_02a1:  ldarg.0
      IL_02a2:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_02a7:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/IPAddress::ip
      IL_02ac:  stind.i4
      IL_02ad:  ldarg.0
      IL_02ae:  ldc.i4.0
      IL_02af:  volatile.
      IL_02b1:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02b6:  ldarg.0
      IL_02b7:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_02bc:  initobj    NetStack.Contracts.UdpConnectionContract/IPAddress
      IL_02c2:  ldarg.0
      IL_02c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02c8:  ldc.i4.s   28
      IL_02ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02cf:  br         IL_02ea

      IL_02d4:  ldstr      "can't recv IPAddress in state "
      IL_02d9:  ldarg.0
      IL_02da:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_02df:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02e4:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02e9:  throw

      IL_02ea:  ret
    } // end of method Imp::RecvIPAddress

    .method public instance void  RecvPort([out] uint16& port) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       747 (0x2eb)
      .maxstack  21
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_002f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   17
      IL_0016:  beq        IL_00d3

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.3
      IL_001d:  beq        IL_017c

      IL_0022:  ldloc.0
      IL_0023:  ldc.i4.s   15
      IL_0025:  beq        IL_0228

      IL_002a:  br         IL_02d4

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.1
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_004f:  stloc.2
      IL_0050:  ldloc.2
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0072

      IL_0059:  ldloc.1
      IL_005a:  brfalse    IL_006a

      IL_005f:  ldstr      "Peer is closed"
      IL_0064:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0069:  throw

      IL_006a:  ldarg.0
      IL_006b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0070:  br.s       IL_002f

      IL_0072:  ldarg.0
      IL_0073:  ldc.i4.s   22
      IL_0075:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_007a:  ldloc.2
      IL_007b:  ldc.i4.s   22
      IL_007d:  beq        IL_009f

      IL_0082:  ldstr      "can't recv Port when next message has tag "
      IL_0087:  ldarg.0
      IL_0088:  volatile.
      IL_008a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_008f:  box        [kernel]System.Int32
      IL_0094:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0099:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_009e:  throw

      IL_009f:  ldarg.1
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_00a6:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Port::port
      IL_00ab:  stind.i2
      IL_00ac:  ldarg.0
      IL_00ad:  ldc.i4.0
      IL_00ae:  volatile.
      IL_00b0:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00b5:  ldarg.0
      IL_00b6:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_00bb:  initobj    NetStack.Contracts.UdpConnectionContract/Port
      IL_00c1:  ldarg.0
      IL_00c2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c7:  ldc.i4.s   14
      IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ce:  br         IL_02ea

      IL_00d3:  ldc.i4.0
      IL_00d4:  stloc.3
      IL_00d5:  ldarg.0
      IL_00d6:  volatile.
      IL_00d8:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00dd:  stloc.s    V_4
      IL_00df:  ldloc.s    V_4
      IL_00e1:  brtrue     IL_00f7

      IL_00e6:  ldarg.0
      IL_00e7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ec:  stloc.3
      IL_00ed:  ldarg.0
      IL_00ee:  volatile.
      IL_00f0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00f5:  stloc.s    V_4
      IL_00f7:  ldloc.s    V_4
      IL_00f9:  ldc.i4.0
      IL_00fa:  ceq
      IL_00fc:  brfalse    IL_011a

      IL_0101:  ldloc.3
      IL_0102:  brfalse    IL_0112

      IL_0107:  ldstr      "Peer is closed"
      IL_010c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0111:  throw

      IL_0112:  ldarg.0
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0118:  br.s       IL_00d3

      IL_011a:  ldarg.0
      IL_011b:  ldc.i4.s   22
      IL_011d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0122:  ldloc.s    V_4
      IL_0124:  ldc.i4.s   22
      IL_0126:  beq        IL_0148

      IL_012b:  ldstr      "can't recv Port when next message has tag "
      IL_0130:  ldarg.0
      IL_0131:  volatile.
      IL_0133:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0138:  box        [kernel]System.Int32
      IL_013d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0142:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0147:  throw

      IL_0148:  ldarg.1
      IL_0149:  ldarg.0
      IL_014a:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_014f:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Port::port
      IL_0154:  stind.i2
      IL_0155:  ldarg.0
      IL_0156:  ldc.i4.0
      IL_0157:  volatile.
      IL_0159:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_015e:  ldarg.0
      IL_015f:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_0164:  initobj    NetStack.Contracts.UdpConnectionContract/Port
      IL_016a:  ldarg.0
      IL_016b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0170:  ldc.i4.s   28
      IL_0172:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0177:  br         IL_02ea

      IL_017c:  ldc.i4.0
      IL_017d:  stloc.s    V_5
      IL_017f:  ldarg.0
      IL_0180:  volatile.
      IL_0182:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0187:  stloc.s    V_6
      IL_0189:  ldloc.s    V_6
      IL_018b:  brtrue     IL_01a2

      IL_0190:  ldarg.0
      IL_0191:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0196:  stloc.s    V_5
      IL_0198:  ldarg.0
      IL_0199:  volatile.
      IL_019b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01a0:  stloc.s    V_6
      IL_01a2:  ldloc.s    V_6
      IL_01a4:  ldc.i4.0
      IL_01a5:  ceq
      IL_01a7:  brfalse    IL_01c6

      IL_01ac:  ldloc.s    V_5
      IL_01ae:  brfalse    IL_01be

      IL_01b3:  ldstr      "Peer is closed"
      IL_01b8:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01bd:  throw

      IL_01be:  ldarg.0
      IL_01bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01c4:  br.s       IL_017c

      IL_01c6:  ldarg.0
      IL_01c7:  ldc.i4.s   22
      IL_01c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01ce:  ldloc.s    V_6
      IL_01d0:  ldc.i4.s   22
      IL_01d2:  beq        IL_01f4

      IL_01d7:  ldstr      "can't recv Port when next message has tag "
      IL_01dc:  ldarg.0
      IL_01dd:  volatile.
      IL_01df:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01e4:  box        [kernel]System.Int32
      IL_01e9:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01ee:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01f3:  throw

      IL_01f4:  ldarg.1
      IL_01f5:  ldarg.0
      IL_01f6:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_01fb:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Port::port
      IL_0200:  stind.i2
      IL_0201:  ldarg.0
      IL_0202:  ldc.i4.0
      IL_0203:  volatile.
      IL_0205:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_020a:  ldarg.0
      IL_020b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_0210:  initobj    NetStack.Contracts.UdpConnectionContract/Port
      IL_0216:  ldarg.0
      IL_0217:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_021c:  ldc.i4.s   14
      IL_021e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0223:  br         IL_02ea

      IL_0228:  ldc.i4.0
      IL_0229:  stloc.s    V_7
      IL_022b:  ldarg.0
      IL_022c:  volatile.
      IL_022e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0233:  stloc.s    V_8
      IL_0235:  ldloc.s    V_8
      IL_0237:  brtrue     IL_024e

      IL_023c:  ldarg.0
      IL_023d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0242:  stloc.s    V_7
      IL_0244:  ldarg.0
      IL_0245:  volatile.
      IL_0247:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_024c:  stloc.s    V_8
      IL_024e:  ldloc.s    V_8
      IL_0250:  ldc.i4.0
      IL_0251:  ceq
      IL_0253:  brfalse    IL_0272

      IL_0258:  ldloc.s    V_7
      IL_025a:  brfalse    IL_026a

      IL_025f:  ldstr      "Peer is closed"
      IL_0264:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0269:  throw

      IL_026a:  ldarg.0
      IL_026b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0270:  br.s       IL_0228

      IL_0272:  ldarg.0
      IL_0273:  ldc.i4.s   22
      IL_0275:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_027a:  ldloc.s    V_8
      IL_027c:  ldc.i4.s   22
      IL_027e:  beq        IL_02a0

      IL_0283:  ldstr      "can't recv Port when next message has tag "
      IL_0288:  ldarg.0
      IL_0289:  volatile.
      IL_028b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0290:  box        [kernel]System.Int32
      IL_0295:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_029a:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_029f:  throw

      IL_02a0:  ldarg.1
      IL_02a1:  ldarg.0
      IL_02a2:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_02a7:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Port::port
      IL_02ac:  stind.i2
      IL_02ad:  ldarg.0
      IL_02ae:  ldc.i4.0
      IL_02af:  volatile.
      IL_02b1:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02b6:  ldarg.0
      IL_02b7:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_02bc:  initobj    NetStack.Contracts.UdpConnectionContract/Port
      IL_02c2:  ldarg.0
      IL_02c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02c8:  ldc.i4.s   28
      IL_02ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02cf:  br         IL_02ea

      IL_02d4:  ldstr      "can't recv Port in state "
      IL_02d9:  ldarg.0
      IL_02da:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_02df:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_02e4:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02e9:  throw

      IL_02ea:  ret
    } // end of method Imp::RecvPort

    .method public instance void  RecvPollSelectResult([out] bool& success) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       1131 (0x46b)
      .maxstack  29
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_003f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_00e7

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.s   33
      IL_001d:  beq        IL_0194

      IL_0022:  ldloc.0
      IL_0023:  ldc.i4.s   32
      IL_0025:  beq        IL_0244

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.s   20
      IL_002d:  beq        IL_02f4

      IL_0032:  ldloc.0
      IL_0033:  ldc.i4.s   19
      IL_0035:  beq        IL_03a4

      IL_003a:  br         IL_0454

      IL_003f:  ldc.i4.0
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  volatile.
      IL_0044:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  brtrue     IL_0060

      IL_0050:  ldarg.0
      IL_0051:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0056:  stloc.1
      IL_0057:  ldarg.0
      IL_0058:  volatile.
      IL_005a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  ldc.i4.0
      IL_0062:  ceq
      IL_0064:  brfalse    IL_0082

      IL_0069:  ldloc.1
      IL_006a:  brfalse    IL_007a

      IL_006f:  ldstr      "Peer is closed"
      IL_0074:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ldarg.0
      IL_007b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0080:  br.s       IL_003f

      IL_0082:  ldarg.0
      IL_0083:  ldc.i4.s   23
      IL_0085:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_008a:  ldloc.2
      IL_008b:  ldc.i4.s   23
      IL_008d:  beq        IL_00af

      IL_0092:  ldstr      "can't recv PollSelectResult when next message has "
      + "tag "
      IL_0097:  ldarg.0
      IL_0098:  volatile.
      IL_009a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_009f:  box        [kernel]System.Int32
      IL_00a4:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_00a9:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00ae:  throw

      IL_00af:  ldarg.1
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_00b6:  ldfld      bool NetStack.Contracts.UdpConnectionContract/PollSelectResult::success
      IL_00bb:  stobj      [kernel]System.Boolean
      IL_00c0:  ldarg.0
      IL_00c1:  ldc.i4.0
      IL_00c2:  volatile.
      IL_00c4:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_00cf:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectResult
      IL_00d5:  ldarg.0
      IL_00d6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00db:  ldc.i4.s   14
      IL_00dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e2:  br         IL_046a

      IL_00e7:  ldc.i4.0
      IL_00e8:  stloc.3
      IL_00e9:  ldarg.0
      IL_00ea:  volatile.
      IL_00ec:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00f1:  stloc.s    V_4
      IL_00f3:  ldloc.s    V_4
      IL_00f5:  brtrue     IL_010b

      IL_00fa:  ldarg.0
      IL_00fb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0100:  stloc.3
      IL_0101:  ldarg.0
      IL_0102:  volatile.
      IL_0104:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0109:  stloc.s    V_4
      IL_010b:  ldloc.s    V_4
      IL_010d:  ldc.i4.0
      IL_010e:  ceq
      IL_0110:  brfalse    IL_012e

      IL_0115:  ldloc.3
      IL_0116:  brfalse    IL_0126

      IL_011b:  ldstr      "Peer is closed"
      IL_0120:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0125:  throw

      IL_0126:  ldarg.0
      IL_0127:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_012c:  br.s       IL_00e7

      IL_012e:  ldarg.0
      IL_012f:  ldc.i4.s   23
      IL_0131:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0136:  ldloc.s    V_4
      IL_0138:  ldc.i4.s   23
      IL_013a:  beq        IL_015c

      IL_013f:  ldstr      "can't recv PollSelectResult when next message has "
      + "tag "
      IL_0144:  ldarg.0
      IL_0145:  volatile.
      IL_0147:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_014c:  box        [kernel]System.Int32
      IL_0151:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0156:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_015b:  throw

      IL_015c:  ldarg.1
      IL_015d:  ldarg.0
      IL_015e:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_0163:  ldfld      bool NetStack.Contracts.UdpConnectionContract/PollSelectResult::success
      IL_0168:  stobj      [kernel]System.Boolean
      IL_016d:  ldarg.0
      IL_016e:  ldc.i4.0
      IL_016f:  volatile.
      IL_0171:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0176:  ldarg.0
      IL_0177:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_017c:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectResult
      IL_0182:  ldarg.0
      IL_0183:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0188:  ldc.i4.s   14
      IL_018a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_018f:  br         IL_046a

      IL_0194:  ldc.i4.0
      IL_0195:  stloc.s    V_5
      IL_0197:  ldarg.0
      IL_0198:  volatile.
      IL_019a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_019f:  stloc.s    V_6
      IL_01a1:  ldloc.s    V_6
      IL_01a3:  brtrue     IL_01ba

      IL_01a8:  ldarg.0
      IL_01a9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01ae:  stloc.s    V_5
      IL_01b0:  ldarg.0
      IL_01b1:  volatile.
      IL_01b3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01b8:  stloc.s    V_6
      IL_01ba:  ldloc.s    V_6
      IL_01bc:  ldc.i4.0
      IL_01bd:  ceq
      IL_01bf:  brfalse    IL_01de

      IL_01c4:  ldloc.s    V_5
      IL_01c6:  brfalse    IL_01d6

      IL_01cb:  ldstr      "Peer is closed"
      IL_01d0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d5:  throw

      IL_01d6:  ldarg.0
      IL_01d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01dc:  br.s       IL_0194

      IL_01de:  ldarg.0
      IL_01df:  ldc.i4.s   23
      IL_01e1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01e6:  ldloc.s    V_6
      IL_01e8:  ldc.i4.s   23
      IL_01ea:  beq        IL_020c

      IL_01ef:  ldstr      "can't recv PollSelectResult when next message has "
      + "tag "
      IL_01f4:  ldarg.0
      IL_01f5:  volatile.
      IL_01f7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01fc:  box        [kernel]System.Int32
      IL_0201:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0206:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_020b:  throw

      IL_020c:  ldarg.1
      IL_020d:  ldarg.0
      IL_020e:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_0213:  ldfld      bool NetStack.Contracts.UdpConnectionContract/PollSelectResult::success
      IL_0218:  stobj      [kernel]System.Boolean
      IL_021d:  ldarg.0
      IL_021e:  ldc.i4.0
      IL_021f:  volatile.
      IL_0221:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0226:  ldarg.0
      IL_0227:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_022c:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectResult
      IL_0232:  ldarg.0
      IL_0233:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0238:  ldc.i4.s   28
      IL_023a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_023f:  br         IL_046a

      IL_0244:  ldc.i4.0
      IL_0245:  stloc.s    V_7
      IL_0247:  ldarg.0
      IL_0248:  volatile.
      IL_024a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_024f:  stloc.s    V_8
      IL_0251:  ldloc.s    V_8
      IL_0253:  brtrue     IL_026a

      IL_0258:  ldarg.0
      IL_0259:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_025e:  stloc.s    V_7
      IL_0260:  ldarg.0
      IL_0261:  volatile.
      IL_0263:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0268:  stloc.s    V_8
      IL_026a:  ldloc.s    V_8
      IL_026c:  ldc.i4.0
      IL_026d:  ceq
      IL_026f:  brfalse    IL_028e

      IL_0274:  ldloc.s    V_7
      IL_0276:  brfalse    IL_0286

      IL_027b:  ldstr      "Peer is closed"
      IL_0280:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0285:  throw

      IL_0286:  ldarg.0
      IL_0287:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_028c:  br.s       IL_0244

      IL_028e:  ldarg.0
      IL_028f:  ldc.i4.s   23
      IL_0291:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0296:  ldloc.s    V_8
      IL_0298:  ldc.i4.s   23
      IL_029a:  beq        IL_02bc

      IL_029f:  ldstr      "can't recv PollSelectResult when next message has "
      + "tag "
      IL_02a4:  ldarg.0
      IL_02a5:  volatile.
      IL_02a7:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02ac:  box        [kernel]System.Int32
      IL_02b1:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_02b6:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_02bb:  throw

      IL_02bc:  ldarg.1
      IL_02bd:  ldarg.0
      IL_02be:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_02c3:  ldfld      bool NetStack.Contracts.UdpConnectionContract/PollSelectResult::success
      IL_02c8:  stobj      [kernel]System.Boolean
      IL_02cd:  ldarg.0
      IL_02ce:  ldc.i4.0
      IL_02cf:  volatile.
      IL_02d1:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02d6:  ldarg.0
      IL_02d7:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_02dc:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectResult
      IL_02e2:  ldarg.0
      IL_02e3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02e8:  ldc.i4.s   28
      IL_02ea:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02ef:  br         IL_046a

      IL_02f4:  ldc.i4.0
      IL_02f5:  stloc.s    V_9
      IL_02f7:  ldarg.0
      IL_02f8:  volatile.
      IL_02fa:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02ff:  stloc.s    V_10
      IL_0301:  ldloc.s    V_10
      IL_0303:  brtrue     IL_031a

      IL_0308:  ldarg.0
      IL_0309:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_030e:  stloc.s    V_9
      IL_0310:  ldarg.0
      IL_0311:  volatile.
      IL_0313:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0318:  stloc.s    V_10
      IL_031a:  ldloc.s    V_10
      IL_031c:  ldc.i4.0
      IL_031d:  ceq
      IL_031f:  brfalse    IL_033e

      IL_0324:  ldloc.s    V_9
      IL_0326:  brfalse    IL_0336

      IL_032b:  ldstr      "Peer is closed"
      IL_0330:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0335:  throw

      IL_0336:  ldarg.0
      IL_0337:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_033c:  br.s       IL_02f4

      IL_033e:  ldarg.0
      IL_033f:  ldc.i4.s   23
      IL_0341:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0346:  ldloc.s    V_10
      IL_0348:  ldc.i4.s   23
      IL_034a:  beq        IL_036c

      IL_034f:  ldstr      "can't recv PollSelectResult when next message has "
      + "tag "
      IL_0354:  ldarg.0
      IL_0355:  volatile.
      IL_0357:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_035c:  box        [kernel]System.Int32
      IL_0361:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0366:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_036b:  throw

      IL_036c:  ldarg.1
      IL_036d:  ldarg.0
      IL_036e:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_0373:  ldfld      bool NetStack.Contracts.UdpConnectionContract/PollSelectResult::success
      IL_0378:  stobj      [kernel]System.Boolean
      IL_037d:  ldarg.0
      IL_037e:  ldc.i4.0
      IL_037f:  volatile.
      IL_0381:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0386:  ldarg.0
      IL_0387:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_038c:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectResult
      IL_0392:  ldarg.0
      IL_0393:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0398:  ldc.i4.s   28
      IL_039a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_039f:  br         IL_046a

      IL_03a4:  ldc.i4.0
      IL_03a5:  stloc.s    V_11
      IL_03a7:  ldarg.0
      IL_03a8:  volatile.
      IL_03aa:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_03af:  stloc.s    V_12
      IL_03b1:  ldloc.s    V_12
      IL_03b3:  brtrue     IL_03ca

      IL_03b8:  ldarg.0
      IL_03b9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03be:  stloc.s    V_11
      IL_03c0:  ldarg.0
      IL_03c1:  volatile.
      IL_03c3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_03c8:  stloc.s    V_12
      IL_03ca:  ldloc.s    V_12
      IL_03cc:  ldc.i4.0
      IL_03cd:  ceq
      IL_03cf:  brfalse    IL_03ee

      IL_03d4:  ldloc.s    V_11
      IL_03d6:  brfalse    IL_03e6

      IL_03db:  ldstr      "Peer is closed"
      IL_03e0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_03e5:  throw

      IL_03e6:  ldarg.0
      IL_03e7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_03ec:  br.s       IL_03a4

      IL_03ee:  ldarg.0
      IL_03ef:  ldc.i4.s   23
      IL_03f1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_03f6:  ldloc.s    V_12
      IL_03f8:  ldc.i4.s   23
      IL_03fa:  beq        IL_041c

      IL_03ff:  ldstr      "can't recv PollSelectResult when next message has "
      + "tag "
      IL_0404:  ldarg.0
      IL_0405:  volatile.
      IL_0407:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_040c:  box        [kernel]System.Int32
      IL_0411:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0416:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_041b:  throw

      IL_041c:  ldarg.1
      IL_041d:  ldarg.0
      IL_041e:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_0423:  ldfld      bool NetStack.Contracts.UdpConnectionContract/PollSelectResult::success
      IL_0428:  stobj      [kernel]System.Boolean
      IL_042d:  ldarg.0
      IL_042e:  ldc.i4.0
      IL_042f:  volatile.
      IL_0431:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0436:  ldarg.0
      IL_0437:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_043c:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectResult
      IL_0442:  ldarg.0
      IL_0443:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0448:  ldc.i4.s   28
      IL_044a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_044f:  br         IL_046a

      IL_0454:  ldstr      "can't recv PollSelectResult in state "
      IL_0459:  ldarg.0
      IL_045a:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_045f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0464:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0469:  throw

      IL_046a:  ret
    } // end of method Imp::RecvPollSelectResult

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   37
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   24
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   24
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Ready when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0079:  box        [kernel]System.Int32
      IL_007e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Ready NetStack.Contracts.UdpConnectionContract/Imp::ReadyPod0
      IL_0098:  initobj    NetStack.Contracts.UdpConnectionContract/Ready
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   36
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv Ready in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string NetStack.Contracts.UdpConnectionContract/Imp::CurrentState()
      IL_00bb:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvReady

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.UdpConnectionContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.UdpConnectionContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.UdpConnectionContract/Imp
      IL_0022:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       2340 (0x924)
      .maxstack  32
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               bool V_31,
               int32 V_32,
               bool V_33,
               int32 V_34,
               bool V_35,
               int32 V_36,
               bool V_37,
               int32 V_38,
               bool V_39,
               int32 V_40,
               bool V_41,
               int32 V_42,
               bool V_43,
               int32 V_44,
               bool V_45,
               int32 V_46,
               bool V_47,
               int32 V_48,
               bool V_49,
               int32 V_50,
               bool V_51,
               int32 V_52,
               bool V_53,
               int32 V_54,
               bool V_55,
               int32 V_56,
               bool V_57,
               int32 V_58,
               bool V_59,
               int32 V_60,
               int32 V_61)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_00f5

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.4
      IL_0017:  beq        IL_0135

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.5
      IL_001e:  beq        IL_017d

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.6
      IL_0025:  beq        IL_01c5

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_020d

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.8
      IL_0033:  beq        IL_0255

      IL_0038:  ldloc.1
      IL_0039:  ldc.i4.s   10
      IL_003b:  beq        IL_029d

      IL_0040:  ldloc.1
      IL_0041:  ldc.i4.s   11
      IL_0043:  beq        IL_02e5

      IL_0048:  ldloc.1
      IL_0049:  ldc.i4.s   13
      IL_004b:  beq        IL_032d

      IL_0050:  ldloc.1
      IL_0051:  ldc.i4.s   14
      IL_0053:  beq        IL_0375

      IL_0058:  ldloc.1
      IL_0059:  ldc.i4.s   15
      IL_005b:  beq        IL_03bd

      IL_0060:  ldloc.1
      IL_0061:  ldc.i4.s   16
      IL_0063:  beq        IL_0405

      IL_0068:  ldloc.1
      IL_0069:  ldc.i4.s   17
      IL_006b:  beq        IL_044d

      IL_0070:  ldloc.1
      IL_0071:  ldc.i4.s   18
      IL_0073:  beq        IL_0495

      IL_0078:  ldloc.1
      IL_0079:  ldc.i4.s   19
      IL_007b:  beq        IL_04dd

      IL_0080:  ldloc.1
      IL_0081:  ldc.i4.s   20
      IL_0083:  beq        IL_0525

      IL_0088:  ldloc.1
      IL_0089:  ldc.i4.s   22
      IL_008b:  beq        IL_056d

      IL_0090:  ldloc.1
      IL_0091:  ldc.i4.s   23
      IL_0093:  beq        IL_05b5

      IL_0098:  ldloc.1
      IL_0099:  ldc.i4.s   25
      IL_009b:  beq        IL_05fd

      IL_00a0:  ldloc.1
      IL_00a1:  ldc.i4.s   27
      IL_00a3:  beq        IL_0645

      IL_00a8:  ldloc.1
      IL_00a9:  ldc.i4.s   28
      IL_00ab:  beq        IL_068d

      IL_00b0:  ldloc.1
      IL_00b1:  ldc.i4.s   29
      IL_00b3:  beq        IL_06d5

      IL_00b8:  ldloc.1
      IL_00b9:  ldc.i4.s   30
      IL_00bb:  beq        IL_071d

      IL_00c0:  ldloc.1
      IL_00c1:  ldc.i4.s   31
      IL_00c3:  beq        IL_0765

      IL_00c8:  ldloc.1
      IL_00c9:  ldc.i4.s   32
      IL_00cb:  beq        IL_07ad

      IL_00d0:  ldloc.1
      IL_00d1:  ldc.i4.s   33
      IL_00d3:  beq        IL_07f5

      IL_00d8:  ldloc.1
      IL_00d9:  ldc.i4.s   35
      IL_00db:  beq        IL_083d

      IL_00e0:  ldloc.1
      IL_00e1:  ldc.i4.s   36
      IL_00e3:  beq        IL_0885

      IL_00e8:  ldloc.1
      IL_00e9:  ldc.i4.s   37
      IL_00eb:  beq        IL_08cd

      IL_00f0:  br         IL_0915

      IL_00f5:  ldc.i4.0
      IL_00f6:  stloc.2
      IL_00f7:  ldarg.0
      IL_00f8:  volatile.
      IL_00fa:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_00ff:  stloc.3
      IL_0100:  ldloc.3
      IL_0101:  brtrue     IL_0116

      IL_0106:  ldarg.0
      IL_0107:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_010c:  stloc.2
      IL_010d:  ldarg.0
      IL_010e:  volatile.
      IL_0110:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0115:  stloc.3
      IL_0116:  ldloc.3
      IL_0117:  ldc.i4.0
      IL_0118:  ceq
      IL_011a:  brfalse    IL_012d

      IL_011f:  ldloc.2
      IL_0120:  brfalse    IL_012d

      IL_0125:  ldc.i4.m1
      IL_0126:  stloc.s    V_4
      IL_0128:  br         IL_091d

      IL_012d:  ldloc.3
      IL_012e:  stloc.s    V_4
      IL_0130:  br         IL_091d

      IL_0135:  ldc.i4.0
      IL_0136:  stloc.s    V_5
      IL_0138:  ldarg.0
      IL_0139:  volatile.
      IL_013b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0140:  stloc.s    V_6
      IL_0142:  ldloc.s    V_6
      IL_0144:  brtrue     IL_015b

      IL_0149:  ldarg.0
      IL_014a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_014f:  stloc.s    V_5
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0159:  stloc.s    V_6
      IL_015b:  ldloc.s    V_6
      IL_015d:  ldc.i4.0
      IL_015e:  ceq
      IL_0160:  brfalse    IL_0174

      IL_0165:  ldloc.s    V_5
      IL_0167:  brfalse    IL_0174

      IL_016c:  ldc.i4.m1
      IL_016d:  stloc.s    V_4
      IL_016f:  br         IL_091d

      IL_0174:  ldloc.s    V_6
      IL_0176:  stloc.s    V_4
      IL_0178:  br         IL_091d

      IL_017d:  ldc.i4.0
      IL_017e:  stloc.s    V_7
      IL_0180:  ldarg.0
      IL_0181:  volatile.
      IL_0183:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0188:  stloc.s    V_8
      IL_018a:  ldloc.s    V_8
      IL_018c:  brtrue     IL_01a3

      IL_0191:  ldarg.0
      IL_0192:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0197:  stloc.s    V_7
      IL_0199:  ldarg.0
      IL_019a:  volatile.
      IL_019c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01a1:  stloc.s    V_8
      IL_01a3:  ldloc.s    V_8
      IL_01a5:  ldc.i4.0
      IL_01a6:  ceq
      IL_01a8:  brfalse    IL_01bc

      IL_01ad:  ldloc.s    V_7
      IL_01af:  brfalse    IL_01bc

      IL_01b4:  ldc.i4.m1
      IL_01b5:  stloc.s    V_4
      IL_01b7:  br         IL_091d

      IL_01bc:  ldloc.s    V_8
      IL_01be:  stloc.s    V_4
      IL_01c0:  br         IL_091d

      IL_01c5:  ldc.i4.0
      IL_01c6:  stloc.s    V_9
      IL_01c8:  ldarg.0
      IL_01c9:  volatile.
      IL_01cb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01d0:  stloc.s    V_10
      IL_01d2:  ldloc.s    V_10
      IL_01d4:  brtrue     IL_01eb

      IL_01d9:  ldarg.0
      IL_01da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01df:  stloc.s    V_9
      IL_01e1:  ldarg.0
      IL_01e2:  volatile.
      IL_01e4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_01e9:  stloc.s    V_10
      IL_01eb:  ldloc.s    V_10
      IL_01ed:  ldc.i4.0
      IL_01ee:  ceq
      IL_01f0:  brfalse    IL_0204

      IL_01f5:  ldloc.s    V_9
      IL_01f7:  brfalse    IL_0204

      IL_01fc:  ldc.i4.m1
      IL_01fd:  stloc.s    V_4
      IL_01ff:  br         IL_091d

      IL_0204:  ldloc.s    V_10
      IL_0206:  stloc.s    V_4
      IL_0208:  br         IL_091d

      IL_020d:  ldc.i4.0
      IL_020e:  stloc.s    V_11
      IL_0210:  ldarg.0
      IL_0211:  volatile.
      IL_0213:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0218:  stloc.s    V_12
      IL_021a:  ldloc.s    V_12
      IL_021c:  brtrue     IL_0233

      IL_0221:  ldarg.0
      IL_0222:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0227:  stloc.s    V_11
      IL_0229:  ldarg.0
      IL_022a:  volatile.
      IL_022c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0231:  stloc.s    V_12
      IL_0233:  ldloc.s    V_12
      IL_0235:  ldc.i4.0
      IL_0236:  ceq
      IL_0238:  brfalse    IL_024c

      IL_023d:  ldloc.s    V_11
      IL_023f:  brfalse    IL_024c

      IL_0244:  ldc.i4.m1
      IL_0245:  stloc.s    V_4
      IL_0247:  br         IL_091d

      IL_024c:  ldloc.s    V_12
      IL_024e:  stloc.s    V_4
      IL_0250:  br         IL_091d

      IL_0255:  ldc.i4.0
      IL_0256:  stloc.s    V_13
      IL_0258:  ldarg.0
      IL_0259:  volatile.
      IL_025b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0260:  stloc.s    V_14
      IL_0262:  ldloc.s    V_14
      IL_0264:  brtrue     IL_027b

      IL_0269:  ldarg.0
      IL_026a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_026f:  stloc.s    V_13
      IL_0271:  ldarg.0
      IL_0272:  volatile.
      IL_0274:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0279:  stloc.s    V_14
      IL_027b:  ldloc.s    V_14
      IL_027d:  ldc.i4.0
      IL_027e:  ceq
      IL_0280:  brfalse    IL_0294

      IL_0285:  ldloc.s    V_13
      IL_0287:  brfalse    IL_0294

      IL_028c:  ldc.i4.m1
      IL_028d:  stloc.s    V_4
      IL_028f:  br         IL_091d

      IL_0294:  ldloc.s    V_14
      IL_0296:  stloc.s    V_4
      IL_0298:  br         IL_091d

      IL_029d:  ldc.i4.0
      IL_029e:  stloc.s    V_15
      IL_02a0:  ldarg.0
      IL_02a1:  volatile.
      IL_02a3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02a8:  stloc.s    V_16
      IL_02aa:  ldloc.s    V_16
      IL_02ac:  brtrue     IL_02c3

      IL_02b1:  ldarg.0
      IL_02b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02b7:  stloc.s    V_15
      IL_02b9:  ldarg.0
      IL_02ba:  volatile.
      IL_02bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02c1:  stloc.s    V_16
      IL_02c3:  ldloc.s    V_16
      IL_02c5:  ldc.i4.0
      IL_02c6:  ceq
      IL_02c8:  brfalse    IL_02dc

      IL_02cd:  ldloc.s    V_15
      IL_02cf:  brfalse    IL_02dc

      IL_02d4:  ldc.i4.m1
      IL_02d5:  stloc.s    V_4
      IL_02d7:  br         IL_091d

      IL_02dc:  ldloc.s    V_16
      IL_02de:  stloc.s    V_4
      IL_02e0:  br         IL_091d

      IL_02e5:  ldc.i4.0
      IL_02e6:  stloc.s    V_17
      IL_02e8:  ldarg.0
      IL_02e9:  volatile.
      IL_02eb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_02f0:  stloc.s    V_18
      IL_02f2:  ldloc.s    V_18
      IL_02f4:  brtrue     IL_030b

      IL_02f9:  ldarg.0
      IL_02fa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02ff:  stloc.s    V_17
      IL_0301:  ldarg.0
      IL_0302:  volatile.
      IL_0304:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0309:  stloc.s    V_18
      IL_030b:  ldloc.s    V_18
      IL_030d:  ldc.i4.0
      IL_030e:  ceq
      IL_0310:  brfalse    IL_0324

      IL_0315:  ldloc.s    V_17
      IL_0317:  brfalse    IL_0324

      IL_031c:  ldc.i4.m1
      IL_031d:  stloc.s    V_4
      IL_031f:  br         IL_091d

      IL_0324:  ldloc.s    V_18
      IL_0326:  stloc.s    V_4
      IL_0328:  br         IL_091d

      IL_032d:  ldc.i4.0
      IL_032e:  stloc.s    V_19
      IL_0330:  ldarg.0
      IL_0331:  volatile.
      IL_0333:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0338:  stloc.s    V_20
      IL_033a:  ldloc.s    V_20
      IL_033c:  brtrue     IL_0353

      IL_0341:  ldarg.0
      IL_0342:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0347:  stloc.s    V_19
      IL_0349:  ldarg.0
      IL_034a:  volatile.
      IL_034c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0351:  stloc.s    V_20
      IL_0353:  ldloc.s    V_20
      IL_0355:  ldc.i4.0
      IL_0356:  ceq
      IL_0358:  brfalse    IL_036c

      IL_035d:  ldloc.s    V_19
      IL_035f:  brfalse    IL_036c

      IL_0364:  ldc.i4.m1
      IL_0365:  stloc.s    V_4
      IL_0367:  br         IL_091d

      IL_036c:  ldloc.s    V_20
      IL_036e:  stloc.s    V_4
      IL_0370:  br         IL_091d

      IL_0375:  ldc.i4.0
      IL_0376:  stloc.s    V_21
      IL_0378:  ldarg.0
      IL_0379:  volatile.
      IL_037b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0380:  stloc.s    V_22
      IL_0382:  ldloc.s    V_22
      IL_0384:  brtrue     IL_039b

      IL_0389:  ldarg.0
      IL_038a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_038f:  stloc.s    V_21
      IL_0391:  ldarg.0
      IL_0392:  volatile.
      IL_0394:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0399:  stloc.s    V_22
      IL_039b:  ldloc.s    V_22
      IL_039d:  ldc.i4.0
      IL_039e:  ceq
      IL_03a0:  brfalse    IL_03b4

      IL_03a5:  ldloc.s    V_21
      IL_03a7:  brfalse    IL_03b4

      IL_03ac:  ldc.i4.m1
      IL_03ad:  stloc.s    V_4
      IL_03af:  br         IL_091d

      IL_03b4:  ldloc.s    V_22
      IL_03b6:  stloc.s    V_4
      IL_03b8:  br         IL_091d

      IL_03bd:  ldc.i4.0
      IL_03be:  stloc.s    V_23
      IL_03c0:  ldarg.0
      IL_03c1:  volatile.
      IL_03c3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_03c8:  stloc.s    V_24
      IL_03ca:  ldloc.s    V_24
      IL_03cc:  brtrue     IL_03e3

      IL_03d1:  ldarg.0
      IL_03d2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03d7:  stloc.s    V_23
      IL_03d9:  ldarg.0
      IL_03da:  volatile.
      IL_03dc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_03e1:  stloc.s    V_24
      IL_03e3:  ldloc.s    V_24
      IL_03e5:  ldc.i4.0
      IL_03e6:  ceq
      IL_03e8:  brfalse    IL_03fc

      IL_03ed:  ldloc.s    V_23
      IL_03ef:  brfalse    IL_03fc

      IL_03f4:  ldc.i4.m1
      IL_03f5:  stloc.s    V_4
      IL_03f7:  br         IL_091d

      IL_03fc:  ldloc.s    V_24
      IL_03fe:  stloc.s    V_4
      IL_0400:  br         IL_091d

      IL_0405:  ldc.i4.0
      IL_0406:  stloc.s    V_25
      IL_0408:  ldarg.0
      IL_0409:  volatile.
      IL_040b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0410:  stloc.s    V_26
      IL_0412:  ldloc.s    V_26
      IL_0414:  brtrue     IL_042b

      IL_0419:  ldarg.0
      IL_041a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_041f:  stloc.s    V_25
      IL_0421:  ldarg.0
      IL_0422:  volatile.
      IL_0424:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0429:  stloc.s    V_26
      IL_042b:  ldloc.s    V_26
      IL_042d:  ldc.i4.0
      IL_042e:  ceq
      IL_0430:  brfalse    IL_0444

      IL_0435:  ldloc.s    V_25
      IL_0437:  brfalse    IL_0444

      IL_043c:  ldc.i4.m1
      IL_043d:  stloc.s    V_4
      IL_043f:  br         IL_091d

      IL_0444:  ldloc.s    V_26
      IL_0446:  stloc.s    V_4
      IL_0448:  br         IL_091d

      IL_044d:  ldc.i4.0
      IL_044e:  stloc.s    V_27
      IL_0450:  ldarg.0
      IL_0451:  volatile.
      IL_0453:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0458:  stloc.s    V_28
      IL_045a:  ldloc.s    V_28
      IL_045c:  brtrue     IL_0473

      IL_0461:  ldarg.0
      IL_0462:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0467:  stloc.s    V_27
      IL_0469:  ldarg.0
      IL_046a:  volatile.
      IL_046c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0471:  stloc.s    V_28
      IL_0473:  ldloc.s    V_28
      IL_0475:  ldc.i4.0
      IL_0476:  ceq
      IL_0478:  brfalse    IL_048c

      IL_047d:  ldloc.s    V_27
      IL_047f:  brfalse    IL_048c

      IL_0484:  ldc.i4.m1
      IL_0485:  stloc.s    V_4
      IL_0487:  br         IL_091d

      IL_048c:  ldloc.s    V_28
      IL_048e:  stloc.s    V_4
      IL_0490:  br         IL_091d

      IL_0495:  ldc.i4.0
      IL_0496:  stloc.s    V_29
      IL_0498:  ldarg.0
      IL_0499:  volatile.
      IL_049b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_04a0:  stloc.s    V_30
      IL_04a2:  ldloc.s    V_30
      IL_04a4:  brtrue     IL_04bb

      IL_04a9:  ldarg.0
      IL_04aa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04af:  stloc.s    V_29
      IL_04b1:  ldarg.0
      IL_04b2:  volatile.
      IL_04b4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_04b9:  stloc.s    V_30
      IL_04bb:  ldloc.s    V_30
      IL_04bd:  ldc.i4.0
      IL_04be:  ceq
      IL_04c0:  brfalse    IL_04d4

      IL_04c5:  ldloc.s    V_29
      IL_04c7:  brfalse    IL_04d4

      IL_04cc:  ldc.i4.m1
      IL_04cd:  stloc.s    V_4
      IL_04cf:  br         IL_091d

      IL_04d4:  ldloc.s    V_30
      IL_04d6:  stloc.s    V_4
      IL_04d8:  br         IL_091d

      IL_04dd:  ldc.i4.0
      IL_04de:  stloc.s    V_31
      IL_04e0:  ldarg.0
      IL_04e1:  volatile.
      IL_04e3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_04e8:  stloc.s    V_32
      IL_04ea:  ldloc.s    V_32
      IL_04ec:  brtrue     IL_0503

      IL_04f1:  ldarg.0
      IL_04f2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04f7:  stloc.s    V_31
      IL_04f9:  ldarg.0
      IL_04fa:  volatile.
      IL_04fc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0501:  stloc.s    V_32
      IL_0503:  ldloc.s    V_32
      IL_0505:  ldc.i4.0
      IL_0506:  ceq
      IL_0508:  brfalse    IL_051c

      IL_050d:  ldloc.s    V_31
      IL_050f:  brfalse    IL_051c

      IL_0514:  ldc.i4.m1
      IL_0515:  stloc.s    V_4
      IL_0517:  br         IL_091d

      IL_051c:  ldloc.s    V_32
      IL_051e:  stloc.s    V_4
      IL_0520:  br         IL_091d

      IL_0525:  ldc.i4.0
      IL_0526:  stloc.s    V_33
      IL_0528:  ldarg.0
      IL_0529:  volatile.
      IL_052b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0530:  stloc.s    V_34
      IL_0532:  ldloc.s    V_34
      IL_0534:  brtrue     IL_054b

      IL_0539:  ldarg.0
      IL_053a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_053f:  stloc.s    V_33
      IL_0541:  ldarg.0
      IL_0542:  volatile.
      IL_0544:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0549:  stloc.s    V_34
      IL_054b:  ldloc.s    V_34
      IL_054d:  ldc.i4.0
      IL_054e:  ceq
      IL_0550:  brfalse    IL_0564

      IL_0555:  ldloc.s    V_33
      IL_0557:  brfalse    IL_0564

      IL_055c:  ldc.i4.m1
      IL_055d:  stloc.s    V_4
      IL_055f:  br         IL_091d

      IL_0564:  ldloc.s    V_34
      IL_0566:  stloc.s    V_4
      IL_0568:  br         IL_091d

      IL_056d:  ldc.i4.0
      IL_056e:  stloc.s    V_35
      IL_0570:  ldarg.0
      IL_0571:  volatile.
      IL_0573:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0578:  stloc.s    V_36
      IL_057a:  ldloc.s    V_36
      IL_057c:  brtrue     IL_0593

      IL_0581:  ldarg.0
      IL_0582:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0587:  stloc.s    V_35
      IL_0589:  ldarg.0
      IL_058a:  volatile.
      IL_058c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0591:  stloc.s    V_36
      IL_0593:  ldloc.s    V_36
      IL_0595:  ldc.i4.0
      IL_0596:  ceq
      IL_0598:  brfalse    IL_05ac

      IL_059d:  ldloc.s    V_35
      IL_059f:  brfalse    IL_05ac

      IL_05a4:  ldc.i4.m1
      IL_05a5:  stloc.s    V_4
      IL_05a7:  br         IL_091d

      IL_05ac:  ldloc.s    V_36
      IL_05ae:  stloc.s    V_4
      IL_05b0:  br         IL_091d

      IL_05b5:  ldc.i4.0
      IL_05b6:  stloc.s    V_37
      IL_05b8:  ldarg.0
      IL_05b9:  volatile.
      IL_05bb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_05c0:  stloc.s    V_38
      IL_05c2:  ldloc.s    V_38
      IL_05c4:  brtrue     IL_05db

      IL_05c9:  ldarg.0
      IL_05ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_05cf:  stloc.s    V_37
      IL_05d1:  ldarg.0
      IL_05d2:  volatile.
      IL_05d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_05d9:  stloc.s    V_38
      IL_05db:  ldloc.s    V_38
      IL_05dd:  ldc.i4.0
      IL_05de:  ceq
      IL_05e0:  brfalse    IL_05f4

      IL_05e5:  ldloc.s    V_37
      IL_05e7:  brfalse    IL_05f4

      IL_05ec:  ldc.i4.m1
      IL_05ed:  stloc.s    V_4
      IL_05ef:  br         IL_091d

      IL_05f4:  ldloc.s    V_38
      IL_05f6:  stloc.s    V_4
      IL_05f8:  br         IL_091d

      IL_05fd:  ldc.i4.0
      IL_05fe:  stloc.s    V_39
      IL_0600:  ldarg.0
      IL_0601:  volatile.
      IL_0603:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0608:  stloc.s    V_40
      IL_060a:  ldloc.s    V_40
      IL_060c:  brtrue     IL_0623

      IL_0611:  ldarg.0
      IL_0612:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0617:  stloc.s    V_39
      IL_0619:  ldarg.0
      IL_061a:  volatile.
      IL_061c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0621:  stloc.s    V_40
      IL_0623:  ldloc.s    V_40
      IL_0625:  ldc.i4.0
      IL_0626:  ceq
      IL_0628:  brfalse    IL_063c

      IL_062d:  ldloc.s    V_39
      IL_062f:  brfalse    IL_063c

      IL_0634:  ldc.i4.m1
      IL_0635:  stloc.s    V_4
      IL_0637:  br         IL_091d

      IL_063c:  ldloc.s    V_40
      IL_063e:  stloc.s    V_4
      IL_0640:  br         IL_091d

      IL_0645:  ldc.i4.0
      IL_0646:  stloc.s    V_41
      IL_0648:  ldarg.0
      IL_0649:  volatile.
      IL_064b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0650:  stloc.s    V_42
      IL_0652:  ldloc.s    V_42
      IL_0654:  brtrue     IL_066b

      IL_0659:  ldarg.0
      IL_065a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_065f:  stloc.s    V_41
      IL_0661:  ldarg.0
      IL_0662:  volatile.
      IL_0664:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0669:  stloc.s    V_42
      IL_066b:  ldloc.s    V_42
      IL_066d:  ldc.i4.0
      IL_066e:  ceq
      IL_0670:  brfalse    IL_0684

      IL_0675:  ldloc.s    V_41
      IL_0677:  brfalse    IL_0684

      IL_067c:  ldc.i4.m1
      IL_067d:  stloc.s    V_4
      IL_067f:  br         IL_091d

      IL_0684:  ldloc.s    V_42
      IL_0686:  stloc.s    V_4
      IL_0688:  br         IL_091d

      IL_068d:  ldc.i4.0
      IL_068e:  stloc.s    V_43
      IL_0690:  ldarg.0
      IL_0691:  volatile.
      IL_0693:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0698:  stloc.s    V_44
      IL_069a:  ldloc.s    V_44
      IL_069c:  brtrue     IL_06b3

      IL_06a1:  ldarg.0
      IL_06a2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06a7:  stloc.s    V_43
      IL_06a9:  ldarg.0
      IL_06aa:  volatile.
      IL_06ac:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_06b1:  stloc.s    V_44
      IL_06b3:  ldloc.s    V_44
      IL_06b5:  ldc.i4.0
      IL_06b6:  ceq
      IL_06b8:  brfalse    IL_06cc

      IL_06bd:  ldloc.s    V_43
      IL_06bf:  brfalse    IL_06cc

      IL_06c4:  ldc.i4.m1
      IL_06c5:  stloc.s    V_4
      IL_06c7:  br         IL_091d

      IL_06cc:  ldloc.s    V_44
      IL_06ce:  stloc.s    V_4
      IL_06d0:  br         IL_091d

      IL_06d5:  ldc.i4.0
      IL_06d6:  stloc.s    V_45
      IL_06d8:  ldarg.0
      IL_06d9:  volatile.
      IL_06db:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_06e0:  stloc.s    V_46
      IL_06e2:  ldloc.s    V_46
      IL_06e4:  brtrue     IL_06fb

      IL_06e9:  ldarg.0
      IL_06ea:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06ef:  stloc.s    V_45
      IL_06f1:  ldarg.0
      IL_06f2:  volatile.
      IL_06f4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_06f9:  stloc.s    V_46
      IL_06fb:  ldloc.s    V_46
      IL_06fd:  ldc.i4.0
      IL_06fe:  ceq
      IL_0700:  brfalse    IL_0714

      IL_0705:  ldloc.s    V_45
      IL_0707:  brfalse    IL_0714

      IL_070c:  ldc.i4.m1
      IL_070d:  stloc.s    V_4
      IL_070f:  br         IL_091d

      IL_0714:  ldloc.s    V_46
      IL_0716:  stloc.s    V_4
      IL_0718:  br         IL_091d

      IL_071d:  ldc.i4.0
      IL_071e:  stloc.s    V_47
      IL_0720:  ldarg.0
      IL_0721:  volatile.
      IL_0723:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0728:  stloc.s    V_48
      IL_072a:  ldloc.s    V_48
      IL_072c:  brtrue     IL_0743

      IL_0731:  ldarg.0
      IL_0732:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0737:  stloc.s    V_47
      IL_0739:  ldarg.0
      IL_073a:  volatile.
      IL_073c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0741:  stloc.s    V_48
      IL_0743:  ldloc.s    V_48
      IL_0745:  ldc.i4.0
      IL_0746:  ceq
      IL_0748:  brfalse    IL_075c

      IL_074d:  ldloc.s    V_47
      IL_074f:  brfalse    IL_075c

      IL_0754:  ldc.i4.m1
      IL_0755:  stloc.s    V_4
      IL_0757:  br         IL_091d

      IL_075c:  ldloc.s    V_48
      IL_075e:  stloc.s    V_4
      IL_0760:  br         IL_091d

      IL_0765:  ldc.i4.0
      IL_0766:  stloc.s    V_49
      IL_0768:  ldarg.0
      IL_0769:  volatile.
      IL_076b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0770:  stloc.s    V_50
      IL_0772:  ldloc.s    V_50
      IL_0774:  brtrue     IL_078b

      IL_0779:  ldarg.0
      IL_077a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_077f:  stloc.s    V_49
      IL_0781:  ldarg.0
      IL_0782:  volatile.
      IL_0784:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0789:  stloc.s    V_50
      IL_078b:  ldloc.s    V_50
      IL_078d:  ldc.i4.0
      IL_078e:  ceq
      IL_0790:  brfalse    IL_07a4

      IL_0795:  ldloc.s    V_49
      IL_0797:  brfalse    IL_07a4

      IL_079c:  ldc.i4.m1
      IL_079d:  stloc.s    V_4
      IL_079f:  br         IL_091d

      IL_07a4:  ldloc.s    V_50
      IL_07a6:  stloc.s    V_4
      IL_07a8:  br         IL_091d

      IL_07ad:  ldc.i4.0
      IL_07ae:  stloc.s    V_51
      IL_07b0:  ldarg.0
      IL_07b1:  volatile.
      IL_07b3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_07b8:  stloc.s    V_52
      IL_07ba:  ldloc.s    V_52
      IL_07bc:  brtrue     IL_07d3

      IL_07c1:  ldarg.0
      IL_07c2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_07c7:  stloc.s    V_51
      IL_07c9:  ldarg.0
      IL_07ca:  volatile.
      IL_07cc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_07d1:  stloc.s    V_52
      IL_07d3:  ldloc.s    V_52
      IL_07d5:  ldc.i4.0
      IL_07d6:  ceq
      IL_07d8:  brfalse    IL_07ec

      IL_07dd:  ldloc.s    V_51
      IL_07df:  brfalse    IL_07ec

      IL_07e4:  ldc.i4.m1
      IL_07e5:  stloc.s    V_4
      IL_07e7:  br         IL_091d

      IL_07ec:  ldloc.s    V_52
      IL_07ee:  stloc.s    V_4
      IL_07f0:  br         IL_091d

      IL_07f5:  ldc.i4.0
      IL_07f6:  stloc.s    V_53
      IL_07f8:  ldarg.0
      IL_07f9:  volatile.
      IL_07fb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0800:  stloc.s    V_54
      IL_0802:  ldloc.s    V_54
      IL_0804:  brtrue     IL_081b

      IL_0809:  ldarg.0
      IL_080a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_080f:  stloc.s    V_53
      IL_0811:  ldarg.0
      IL_0812:  volatile.
      IL_0814:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0819:  stloc.s    V_54
      IL_081b:  ldloc.s    V_54
      IL_081d:  ldc.i4.0
      IL_081e:  ceq
      IL_0820:  brfalse    IL_0834

      IL_0825:  ldloc.s    V_53
      IL_0827:  brfalse    IL_0834

      IL_082c:  ldc.i4.m1
      IL_082d:  stloc.s    V_4
      IL_082f:  br         IL_091d

      IL_0834:  ldloc.s    V_54
      IL_0836:  stloc.s    V_4
      IL_0838:  br         IL_091d

      IL_083d:  ldc.i4.0
      IL_083e:  stloc.s    V_55
      IL_0840:  ldarg.0
      IL_0841:  volatile.
      IL_0843:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0848:  stloc.s    V_56
      IL_084a:  ldloc.s    V_56
      IL_084c:  brtrue     IL_0863

      IL_0851:  ldarg.0
      IL_0852:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0857:  stloc.s    V_55
      IL_0859:  ldarg.0
      IL_085a:  volatile.
      IL_085c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0861:  stloc.s    V_56
      IL_0863:  ldloc.s    V_56
      IL_0865:  ldc.i4.0
      IL_0866:  ceq
      IL_0868:  brfalse    IL_087c

      IL_086d:  ldloc.s    V_55
      IL_086f:  brfalse    IL_087c

      IL_0874:  ldc.i4.m1
      IL_0875:  stloc.s    V_4
      IL_0877:  br         IL_091d

      IL_087c:  ldloc.s    V_56
      IL_087e:  stloc.s    V_4
      IL_0880:  br         IL_091d

      IL_0885:  ldc.i4.0
      IL_0886:  stloc.s    V_57
      IL_0888:  ldarg.0
      IL_0889:  volatile.
      IL_088b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0890:  stloc.s    V_58
      IL_0892:  ldloc.s    V_58
      IL_0894:  brtrue     IL_08ab

      IL_0899:  ldarg.0
      IL_089a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_089f:  stloc.s    V_57
      IL_08a1:  ldarg.0
      IL_08a2:  volatile.
      IL_08a4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_08a9:  stloc.s    V_58
      IL_08ab:  ldloc.s    V_58
      IL_08ad:  ldc.i4.0
      IL_08ae:  ceq
      IL_08b0:  brfalse    IL_08c4

      IL_08b5:  ldloc.s    V_57
      IL_08b7:  brfalse    IL_08c4

      IL_08bc:  ldc.i4.m1
      IL_08bd:  stloc.s    V_4
      IL_08bf:  br         IL_091d

      IL_08c4:  ldloc.s    V_58
      IL_08c6:  stloc.s    V_4
      IL_08c8:  br         IL_091d

      IL_08cd:  ldc.i4.0
      IL_08ce:  stloc.s    V_59
      IL_08d0:  ldarg.0
      IL_08d1:  volatile.
      IL_08d3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_08d8:  stloc.s    V_60
      IL_08da:  ldloc.s    V_60
      IL_08dc:  brtrue     IL_08f3

      IL_08e1:  ldarg.0
      IL_08e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_08e7:  stloc.s    V_59
      IL_08e9:  ldarg.0
      IL_08ea:  volatile.
      IL_08ec:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_08f1:  stloc.s    V_60
      IL_08f3:  ldloc.s    V_60
      IL_08f5:  ldc.i4.0
      IL_08f6:  ceq
      IL_08f8:  brfalse    IL_090c

      IL_08fd:  ldloc.s    V_59
      IL_08ff:  brfalse    IL_090c

      IL_0904:  ldc.i4.m1
      IL_0905:  stloc.s    V_4
      IL_0907:  br         IL_091d

      IL_090c:  ldloc.s    V_60
      IL_090e:  stloc.s    V_4
      IL_0910:  br         IL_091d

      IL_0915:  ldc.i4.m1
      IL_0916:  stloc.s    V_4
      IL_0918:  br         IL_091d

      IL_091d:  ldloc.s    V_4
      IL_091f:  stloc.s    V_61
      IL_0921:  ldloc.s    V_4
      IL_0923:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.UdpConnectionContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverOK0$PST06000732() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   16
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   16
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverOK0

    .method privatescope instance void  MarshallDeliverOK0$PST06000733(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK0$PST06000732()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/OK::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverOK0

    .method privatescope instance void  DeliverOK1$PST06000734() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   16
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   16
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0012:  ret
    } // end of method Imp::DeliverOK1

    .method privatescope instance void  MarshallDeliverOK1$PST06000735(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK1$PST06000734()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/OK NetStack.Contracts.UdpConnectionContract/Imp::OKPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/OK::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverOK1

    .method privatescope instance void  DeliverInvalidEndPoint1$PST06000736(uint32 ip,
                                                                            uint16 port) cil managed
    {
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::ip
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::port
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   17
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   17
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_002a:  ret
    } // end of method Imp::DeliverInvalidEndPoint1

    .method privatescope instance void  MarshallDeliverInvalidEndPoint1$PST06000737(uint32 ip,
                                                                                    uint16 port,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverInvalidEndPoint1$PST06000736(uint32,
                                                                                                                           uint16)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod1
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0016:  call       instance void NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverInvalidEndPoint1

    .method privatescope instance void  DeliverInvalidEndPoint0$PST06000738(uint32 ip,
                                                                            uint16 port) cil managed
    {
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::ip
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::port
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   17
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   17
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverInvalidEndPoint0

    .method privatescope instance void  MarshallDeliverInvalidEndPoint0$PST06000739(uint32 ip,
                                                                                    uint16 port,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverInvalidEndPoint0$PST06000738(uint32,
                                                                                                                           uint16)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint NetStack.Contracts.UdpConnectionContract/Imp::InvalidEndPointPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0016:  call       instance void NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverInvalidEndPoint0

    .method privatescope instance void  DeliverDataTooLarge0$PST0600073A() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   18
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   18
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverDataTooLarge0

    .method privatescope instance void  MarshallDeliverDataTooLarge0$PST0600073B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverDataTooLarge0$PST0600073A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge NetStack.Contracts.UdpConnectionContract/Imp::DataTooLargePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/DataTooLarge::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverDataTooLarge0

    .method privatescope instance void  DeliverDataTooLarge1$PST0600073C() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   18
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   18
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0012:  ret
    } // end of method Imp::DeliverDataTooLarge1

    .method privatescope instance void  MarshallDeliverDataTooLarge1$PST0600073D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverDataTooLarge1$PST0600073C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge NetStack.Contracts.UdpConnectionContract/Imp::DataTooLargePod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod1
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/DataTooLarge::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverDataTooLarge1

    .method privatescope instance void  DeliverNoData0$PST0600073E() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   19
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   19
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNoData0

    .method privatescope instance void  MarshallDeliverNoData0$PST0600073F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverNoData0$PST0600073E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/NoData NetStack.Contracts.UdpConnectionContract/Imp::NoDataPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/NoData::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNoData0

    .method privatescope instance void  DeliverData0$PST06000740(uint32 srcAddr,
                                                                 uint16 srcPort,
                                                                 uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .param [3]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/Data::srcAddr
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/Data::srcPort
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   20
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   20
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverData0

    .method privatescope instance void  MarshallDeliverData0$PST06000741(uint32 srcAddr,
                                                                         uint16 srcPort,
                                                                         uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [3]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverData0$PST06000740(uint32,
                                                                                                                uint16,
                                                                                                                uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Data NetStack.Contracts.UdpConnectionContract/Imp::DataPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Data::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverData0

    .method privatescope instance void  DeliverIPAddress0$PST06000742(uint32 ip) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/IPAddress::ip
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   21
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverIPAddress0

    .method privatescope instance void  MarshallDeliverIPAddress0$PST06000743(uint32 ip,
                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverIPAddress0$PST06000742(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/IPAddress NetStack.Contracts.UdpConnectionContract/Imp::IPAddressPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.UdpConnectionContract/IPAddress::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverIPAddress0

    .method privatescope instance void  DeliverPort0$PST06000744(uint16 port) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/Port::port
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   22
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverPort0

    .method privatescope instance void  MarshallDeliverPort0$PST06000745(uint16 port,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPort0$PST06000744(uint16)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Port NetStack.Contracts.UdpConnectionContract/Imp::PortPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.UdpConnectionContract/Port::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverPort0

    .method privatescope instance void  DeliverPollSelectResult0$PST06000746(bool success) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      bool NetStack.Contracts.UdpConnectionContract/PollSelectResult::success
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   23
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverPollSelectResult0

    .method privatescope instance void  MarshallDeliverPollSelectResult0$PST06000747(bool success,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPollSelectResult0$PST06000746(bool)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult NetStack.Contracts.UdpConnectionContract/Imp::PollSelectResultPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.UdpConnectionContract/PollSelectResult::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverPollSelectResult0

    .method privatescope instance void  DeliverReady0$PST06000748() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   24
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   24
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST06000749(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverReady0$PST06000748()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Ready NetStack.Contracts.UdpConnectionContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/Ready::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint BindLocalEndPointPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint ConnectWithAnyLocalEndPointPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/Connect ConnectPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/Write WritePod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/WriteTo WriteToPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/Read ReadPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/PollRead PollReadPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead PollSelectReadPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite PollSelectWritePod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/Close ClosePod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress GetLocalAddressPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort GetLocalPortPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress GetRemoteAddressPod0
    .field family valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort GetRemotePortPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.UdpConnectionContract::CanonicalState$PST06000057(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.UdpConnectionContract::CanonicalState$PST06000057(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       709 (0x2c5)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   37
      IL_000f:  beq        IL_012a

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   36
      IL_0017:  beq        IL_0135

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   35
      IL_001f:  beq        IL_0140

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   34
      IL_0027:  beq        IL_014b

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   33
      IL_002f:  beq        IL_0156

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   32
      IL_0037:  beq        IL_0161

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   31
      IL_003f:  beq        IL_016c

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   30
      IL_0047:  beq        IL_0177

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   29
      IL_004f:  beq        IL_0182

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   28
      IL_0057:  beq        IL_018d

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   27
      IL_005f:  beq        IL_0198

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   26
      IL_0067:  beq        IL_01a3

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   25
      IL_006f:  beq        IL_01ae

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   24
      IL_0077:  beq        IL_01b9

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   23
      IL_007f:  beq        IL_01c4

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   22
      IL_0087:  beq        IL_01cf

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.s   21
      IL_008f:  beq        IL_01da

      IL_0094:  ldloc.0
      IL_0095:  ldc.i4.s   20
      IL_0097:  beq        IL_01e5

      IL_009c:  ldloc.0
      IL_009d:  ldc.i4.s   19
      IL_009f:  beq        IL_01f0

      IL_00a4:  ldloc.0
      IL_00a5:  ldc.i4.s   18
      IL_00a7:  beq        IL_01fb

      IL_00ac:  ldloc.0
      IL_00ad:  ldc.i4.s   17
      IL_00af:  beq        IL_0206

      IL_00b4:  ldloc.0
      IL_00b5:  ldc.i4.s   16
      IL_00b7:  beq        IL_0211

      IL_00bc:  ldloc.0
      IL_00bd:  ldc.i4.s   15
      IL_00bf:  beq        IL_021c

      IL_00c4:  ldloc.0
      IL_00c5:  ldc.i4.s   14
      IL_00c7:  beq        IL_0227

      IL_00cc:  ldloc.0
      IL_00cd:  ldc.i4.s   13
      IL_00cf:  beq        IL_0232

      IL_00d4:  ldloc.0
      IL_00d5:  ldc.i4.s   12
      IL_00d7:  beq        IL_023d

      IL_00dc:  ldloc.0
      IL_00dd:  ldc.i4.s   11
      IL_00df:  beq        IL_0248

      IL_00e4:  ldloc.0
      IL_00e5:  ldc.i4.s   10
      IL_00e7:  beq        IL_0253

      IL_00ec:  ldloc.0
      IL_00ed:  ldc.i4.s   9
      IL_00ef:  beq        IL_025e

      IL_00f4:  ldloc.0
      IL_00f5:  ldc.i4.8
      IL_00f6:  beq        IL_0269

      IL_00fb:  ldloc.0
      IL_00fc:  ldc.i4.7
      IL_00fd:  beq        IL_0274

      IL_0102:  ldloc.0
      IL_0103:  ldc.i4.6
      IL_0104:  beq        IL_027f

      IL_0109:  ldloc.0
      IL_010a:  ldc.i4.5
      IL_010b:  beq        IL_028a

      IL_0110:  ldloc.0
      IL_0111:  ldc.i4.4
      IL_0112:  beq        IL_0295

      IL_0117:  ldloc.0
      IL_0118:  ldc.i4.3
      IL_0119:  beq        IL_02a0

      IL_011e:  ldloc.0
      IL_011f:  ldc.i4.2
      IL_0120:  beq        IL_02ab

      IL_0125:  br         IL_02b6

      IL_012a:  ldstr      "Start"
      IL_012f:  stloc.1
      IL_0130:  br         IL_02c1

      IL_0135:  ldstr      "ReadyState"
      IL_013a:  stloc.1
      IL_013b:  br         IL_02c1

      IL_0140:  ldstr      "ReadyState$0"
      IL_0145:  stloc.1
      IL_0146:  br         IL_02c1

      IL_014b:  ldstr      "ReadyState$1"
      IL_0150:  stloc.1
      IL_0151:  br         IL_02c1

      IL_0156:  ldstr      "ReadyState$2"
      IL_015b:  stloc.1
      IL_015c:  br         IL_02c1

      IL_0161:  ldstr      "ReadyState$3"
      IL_0166:  stloc.1
      IL_0167:  br         IL_02c1

      IL_016c:  ldstr      "ConnectResult"
      IL_0171:  stloc.1
      IL_0172:  br         IL_02c1

      IL_0177:  ldstr      "BindResult"
      IL_017c:  stloc.1
      IL_017d:  br         IL_02c1

      IL_0182:  ldstr      "ConnectFromLocallyBoundResult"
      IL_0187:  stloc.1
      IL_0188:  br         IL_02c1

      IL_018d:  ldstr      "Connected"
      IL_0192:  stloc.1
      IL_0193:  br         IL_02c1

      IL_0198:  ldstr      "Connected$4"
      IL_019d:  stloc.1
      IL_019e:  br         IL_02c1

      IL_01a3:  ldstr      "Connected$5"
      IL_01a8:  stloc.1
      IL_01a9:  br         IL_02c1

      IL_01ae:  ldstr      "Connected$6"
      IL_01b3:  stloc.1
      IL_01b4:  br         IL_02c1

      IL_01b9:  ldstr      "Connected$7"
      IL_01be:  stloc.1
      IL_01bf:  br         IL_02c1

      IL_01c4:  ldstr      "Connected$8"
      IL_01c9:  stloc.1
      IL_01ca:  br         IL_02c1

      IL_01cf:  ldstr      "Connected$9"
      IL_01d4:  stloc.1
      IL_01d5:  br         IL_02c1

      IL_01da:  ldstr      "Connected$10"
      IL_01df:  stloc.1
      IL_01e0:  br         IL_02c1

      IL_01e5:  ldstr      "Connected$11"
      IL_01ea:  stloc.1
      IL_01eb:  br         IL_02c1

      IL_01f0:  ldstr      "Connected$12"
      IL_01f5:  stloc.1
      IL_01f6:  br         IL_02c1

      IL_01fb:  ldstr      "Connected$13"
      IL_0200:  stloc.1
      IL_0201:  br         IL_02c1

      IL_0206:  ldstr      "Connected$14"
      IL_020b:  stloc.1
      IL_020c:  br         IL_02c1

      IL_0211:  ldstr      "Connected$15"
      IL_0216:  stloc.1
      IL_0217:  br         IL_02c1

      IL_021c:  ldstr      "Connected$16"
      IL_0221:  stloc.1
      IL_0222:  br         IL_02c1

      IL_0227:  ldstr      "LocallyBound"
      IL_022c:  stloc.1
      IL_022d:  br         IL_02c1

      IL_0232:  ldstr      "LocallyBound$17"
      IL_0237:  stloc.1
      IL_0238:  br         IL_02c1

      IL_023d:  ldstr      "LocallyBound$18"
      IL_0242:  stloc.1
      IL_0243:  br         IL_02c1

      IL_0248:  ldstr      "LocallyBound$19"
      IL_024d:  stloc.1
      IL_024e:  br         IL_02c1

      IL_0253:  ldstr      "LocallyBound$20"
      IL_0258:  stloc.1
      IL_0259:  br         IL_02c1

      IL_025e:  ldstr      "LocallyBound$21"
      IL_0263:  stloc.1
      IL_0264:  br         IL_02c1

      IL_0269:  ldstr      "LocallyBound$22"
      IL_026e:  stloc.1
      IL_026f:  br         IL_02c1

      IL_0274:  ldstr      "LocallyBound$23"
      IL_0279:  stloc.1
      IL_027a:  br         IL_02c1

      IL_027f:  ldstr      "LocallyBound$24"
      IL_0284:  stloc.1
      IL_0285:  br         IL_02c1

      IL_028a:  ldstr      "LocallyBound$25"
      IL_028f:  stloc.1
      IL_0290:  br         IL_02c1

      IL_0295:  ldstr      "LocallyBound$26"
      IL_029a:  stloc.1
      IL_029b:  br         IL_02c1

      IL_02a0:  ldstr      "LocallyBound$27"
      IL_02a5:  stloc.1
      IL_02a6:  br         IL_02c1

      IL_02ab:  ldstr      "Closed"
      IL_02b0:  stloc.1
      IL_02b1:  br         IL_02c1

      IL_02b6:  ldstr      "<protocol terminated>"
      IL_02bb:  stloc.1
      IL_02bc:  br         IL_02c1

      IL_02c1:  ldloc.1
      IL_02c2:  stloc.2
      IL_02c3:  ldloc.1
      IL_02c4:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvBindLocalEndPoint([out] uint32& srcIP,
                                                        [out] uint16& srcPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c8

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.2
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.2
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv BindLocalEndPoint when next message has"
      + " tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::BindLocalEndPointPod0
      IL_008e:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint::srcIP
      IL_0093:  stind.i4
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::BindLocalEndPointPod0
      IL_009b:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint::srcPort
      IL_00a0:  stind.i2
      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::BindLocalEndPointPod0
      IL_00b0:  initobj    NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   30
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv BindLocalEndPoint in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_00d3:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Exp::RecvBindLocalEndPoint

    .method public instance void  RecvConnectWithAnyLocalEndPoint([out] uint32& dstIP,
                                                                  [out] uint16& dstPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c8

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.3
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.3
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv ConnectWithAnyLocalEndPoint when next m"
      + "essage has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::ConnectWithAnyLocalEndPointPod0
      IL_008e:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint::dstIP
      IL_0093:  stind.i4
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::ConnectWithAnyLocalEndPointPod0
      IL_009b:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint::dstPort
      IL_00a0:  stind.i2
      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::ConnectWithAnyLocalEndPointPod0
      IL_00b0:  initobj    NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   31
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv ConnectWithAnyLocalEndPoint in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_00d3:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Exp::RecvConnectWithAnyLocalEndPoint

    .method public instance void  RecvConnect([out] uint32& srcIP,
                                              [out] uint16& srcPort,
                                              [out] uint32& dstIP,
                                              [out] uint16& dstPort) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       465 (0x1d1)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_00eb

      IL_001c:  br         IL_01ba

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.4
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006b:  ldloc.2
      IL_006c:  ldc.i4.4
      IL_006d:  beq        IL_008f

      IL_0072:  ldstr      "can't recv Connect when next message has tag "
      IL_0077:  ldarg.0
      IL_0078:  volatile.
      IL_007a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_007f:  box        [kernel]System.Int32
      IL_0084:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0089:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ldarg.1
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_0096:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/Connect::srcIP
      IL_009b:  stind.i4
      IL_009c:  ldarg.2
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_00a3:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Connect::srcPort
      IL_00a8:  stind.i2
      IL_00a9:  ldarg.3
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_00b0:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/Connect::dstIP
      IL_00b5:  stind.i4
      IL_00b6:  ldarg.s    dstPort
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_00be:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Connect::dstPort
      IL_00c3:  stind.i2
      IL_00c4:  ldarg.0
      IL_00c5:  ldc.i4.0
      IL_00c6:  volatile.
      IL_00c8:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00cd:  ldarg.0
      IL_00ce:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_00d3:  initobj    NetStack.Contracts.UdpConnectionContract/Connect
      IL_00d9:  ldarg.0
      IL_00da:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00df:  ldc.i4.s   31
      IL_00e1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e6:  br         IL_01d0

      IL_00eb:  ldc.i4.0
      IL_00ec:  stloc.3
      IL_00ed:  ldarg.0
      IL_00ee:  volatile.
      IL_00f0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00f5:  stloc.s    V_4
      IL_00f7:  ldloc.s    V_4
      IL_00f9:  brtrue     IL_010f

      IL_00fe:  ldarg.0
      IL_00ff:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0104:  stloc.3
      IL_0105:  ldarg.0
      IL_0106:  volatile.
      IL_0108:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_010d:  stloc.s    V_4
      IL_010f:  ldloc.s    V_4
      IL_0111:  ldc.i4.0
      IL_0112:  ceq
      IL_0114:  brfalse    IL_0132

      IL_0119:  ldloc.3
      IL_011a:  brfalse    IL_012a

      IL_011f:  ldstr      "Peer is closed"
      IL_0124:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0129:  throw

      IL_012a:  ldarg.0
      IL_012b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0130:  br.s       IL_00eb

      IL_0132:  ldarg.0
      IL_0133:  ldc.i4.4
      IL_0134:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0139:  ldloc.s    V_4
      IL_013b:  ldc.i4.4
      IL_013c:  beq        IL_015e

      IL_0141:  ldstr      "can't recv Connect when next message has tag "
      IL_0146:  ldarg.0
      IL_0147:  volatile.
      IL_0149:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_014e:  box        [kernel]System.Int32
      IL_0153:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0158:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_015d:  throw

      IL_015e:  ldarg.1
      IL_015f:  ldarg.0
      IL_0160:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_0165:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/Connect::srcIP
      IL_016a:  stind.i4
      IL_016b:  ldarg.2
      IL_016c:  ldarg.0
      IL_016d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_0172:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Connect::srcPort
      IL_0177:  stind.i2
      IL_0178:  ldarg.3
      IL_0179:  ldarg.0
      IL_017a:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_017f:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/Connect::dstIP
      IL_0184:  stind.i4
      IL_0185:  ldarg.s    dstPort
      IL_0187:  ldarg.0
      IL_0188:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_018d:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/Connect::dstPort
      IL_0192:  stind.i2
      IL_0193:  ldarg.0
      IL_0194:  ldc.i4.0
      IL_0195:  volatile.
      IL_0197:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_019c:  ldarg.0
      IL_019d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_01a2:  initobj    NetStack.Contracts.UdpConnectionContract/Connect
      IL_01a8:  ldarg.0
      IL_01a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01ae:  ldc.i4.s   29
      IL_01b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01b5:  br         IL_01d0

      IL_01ba:  ldstr      "can't recv Connect in state "
      IL_01bf:  ldarg.0
      IL_01c0:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_01c5:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_01ca:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_01cf:  throw

      IL_01d0:  ret
    } // end of method Exp::RecvConnect

    .method public instance void  RecvWrite([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Write when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0077:  box        [kernel]System.Int32
      IL_007c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Write NetStack.Contracts.UdpConnectionContract/Exp::WritePod0
      IL_008e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_0093:  stind.i
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Write NetStack.Contracts.UdpConnectionContract/Exp::WritePod0
      IL_00a3:  initobj    NetStack.Contracts.UdpConnectionContract/Write
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   27
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv Write in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_00c6:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Exp::RecvWrite

    .method public instance void  RecvWriteTo([out] uint32& dstIP,
                                              [out] uint16& dstPort,
                                              [out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       641 (0x281)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   36
      IL_0017:  beq        IL_00e5

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   28
      IL_001f:  beq        IL_01a6

      IL_0024:  br         IL_026a

      IL_0029:  ldc.i4.0
      IL_002a:  stloc.1
      IL_002b:  ldarg.0
      IL_002c:  volatile.
      IL_002e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0033:  stloc.2
      IL_0034:  ldloc.2
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldarg.0
      IL_003b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  volatile.
      IL_0044:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  brfalse    IL_006c

      IL_0053:  ldloc.1
      IL_0054:  brfalse    IL_0064

      IL_0059:  ldstr      "Peer is closed"
      IL_005e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0063:  throw

      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_006a:  br.s       IL_0029

      IL_006c:  ldarg.0
      IL_006d:  ldc.i4.6
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0073:  ldloc.2
      IL_0074:  ldc.i4.6
      IL_0075:  beq        IL_0097

      IL_007a:  ldstr      "can't recv WriteTo when next message has tag "
      IL_007f:  ldarg.0
      IL_0080:  volatile.
      IL_0082:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0087:  box        [kernel]System.Int32
      IL_008c:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0091:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0096:  throw

      IL_0097:  ldarg.1
      IL_0098:  ldarg.0
      IL_0099:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_009e:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/WriteTo::dstIP
      IL_00a3:  stind.i4
      IL_00a4:  ldarg.2
      IL_00a5:  ldarg.0
      IL_00a6:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_00ab:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/WriteTo::dstPort
      IL_00b0:  stind.i2
      IL_00b1:  ldarg.3
      IL_00b2:  ldarg.0
      IL_00b3:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_00b8:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_00bd:  stind.i
      IL_00be:  ldarg.0
      IL_00bf:  ldc.i4.0
      IL_00c0:  volatile.
      IL_00c2:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00c7:  ldarg.0
      IL_00c8:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_00cd:  initobj    NetStack.Contracts.UdpConnectionContract/WriteTo
      IL_00d3:  ldarg.0
      IL_00d4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d9:  ldc.i4.s   13
      IL_00db:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e0:  br         IL_0280

      IL_00e5:  ldc.i4.0
      IL_00e6:  stloc.3
      IL_00e7:  ldarg.0
      IL_00e8:  volatile.
      IL_00ea:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00ef:  stloc.s    V_4
      IL_00f1:  ldloc.s    V_4
      IL_00f3:  brtrue     IL_0109

      IL_00f8:  ldarg.0
      IL_00f9:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00fe:  stloc.3
      IL_00ff:  ldarg.0
      IL_0100:  volatile.
      IL_0102:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0107:  stloc.s    V_4
      IL_0109:  ldloc.s    V_4
      IL_010b:  ldc.i4.0
      IL_010c:  ceq
      IL_010e:  brfalse    IL_012c

      IL_0113:  ldloc.3
      IL_0114:  brfalse    IL_0124

      IL_0119:  ldstr      "Peer is closed"
      IL_011e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0123:  throw

      IL_0124:  ldarg.0
      IL_0125:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_012a:  br.s       IL_00e5

      IL_012c:  ldarg.0
      IL_012d:  ldc.i4.6
      IL_012e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0133:  ldloc.s    V_4
      IL_0135:  ldc.i4.6
      IL_0136:  beq        IL_0158

      IL_013b:  ldstr      "can't recv WriteTo when next message has tag "
      IL_0140:  ldarg.0
      IL_0141:  volatile.
      IL_0143:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0148:  box        [kernel]System.Int32
      IL_014d:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0152:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0157:  throw

      IL_0158:  ldarg.1
      IL_0159:  ldarg.0
      IL_015a:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_015f:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/WriteTo::dstIP
      IL_0164:  stind.i4
      IL_0165:  ldarg.2
      IL_0166:  ldarg.0
      IL_0167:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_016c:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/WriteTo::dstPort
      IL_0171:  stind.i2
      IL_0172:  ldarg.3
      IL_0173:  ldarg.0
      IL_0174:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_0179:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_017e:  stind.i
      IL_017f:  ldarg.0
      IL_0180:  ldc.i4.0
      IL_0181:  volatile.
      IL_0183:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0188:  ldarg.0
      IL_0189:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_018e:  initobj    NetStack.Contracts.UdpConnectionContract/WriteTo
      IL_0194:  ldarg.0
      IL_0195:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_019a:  ldc.i4.s   35
      IL_019c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01a1:  br         IL_0280

      IL_01a6:  ldc.i4.0
      IL_01a7:  stloc.s    V_5
      IL_01a9:  ldarg.0
      IL_01aa:  volatile.
      IL_01ac:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01b1:  stloc.s    V_6
      IL_01b3:  ldloc.s    V_6
      IL_01b5:  brtrue     IL_01cc

      IL_01ba:  ldarg.0
      IL_01bb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01c0:  stloc.s    V_5
      IL_01c2:  ldarg.0
      IL_01c3:  volatile.
      IL_01c5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01ca:  stloc.s    V_6
      IL_01cc:  ldloc.s    V_6
      IL_01ce:  ldc.i4.0
      IL_01cf:  ceq
      IL_01d1:  brfalse    IL_01f0

      IL_01d6:  ldloc.s    V_5
      IL_01d8:  brfalse    IL_01e8

      IL_01dd:  ldstr      "Peer is closed"
      IL_01e2:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01e7:  throw

      IL_01e8:  ldarg.0
      IL_01e9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01ee:  br.s       IL_01a6

      IL_01f0:  ldarg.0
      IL_01f1:  ldc.i4.6
      IL_01f2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01f7:  ldloc.s    V_6
      IL_01f9:  ldc.i4.6
      IL_01fa:  beq        IL_021c

      IL_01ff:  ldstr      "can't recv WriteTo when next message has tag "
      IL_0204:  ldarg.0
      IL_0205:  volatile.
      IL_0207:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_020c:  box        [kernel]System.Int32
      IL_0211:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0216:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_021b:  throw

      IL_021c:  ldarg.1
      IL_021d:  ldarg.0
      IL_021e:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_0223:  ldfld      uint32 NetStack.Contracts.UdpConnectionContract/WriteTo::dstIP
      IL_0228:  stind.i4
      IL_0229:  ldarg.2
      IL_022a:  ldarg.0
      IL_022b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_0230:  ldfld      uint16 NetStack.Contracts.UdpConnectionContract/WriteTo::dstPort
      IL_0235:  stind.i2
      IL_0236:  ldarg.3
      IL_0237:  ldarg.0
      IL_0238:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_023d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_0242:  stind.i
      IL_0243:  ldarg.0
      IL_0244:  ldc.i4.0
      IL_0245:  volatile.
      IL_0247:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_024c:  ldarg.0
      IL_024d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_0252:  initobj    NetStack.Contracts.UdpConnectionContract/WriteTo
      IL_0258:  ldarg.0
      IL_0259:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_025e:  ldc.i4.s   25
      IL_0260:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0265:  br         IL_0280

      IL_026a:  ldstr      "can't recv WriteTo in state "
      IL_026f:  ldarg.0
      IL_0270:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0275:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_027a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_027f:  throw

      IL_0280:  ret
    } // end of method Exp::RecvWriteTo

    .method public instance void  RecvRead() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       359 (0x167)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_00b6

      IL_001c:  br         IL_0150

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.7
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006b:  ldloc.2
      IL_006c:  ldc.i4.7
      IL_006d:  beq        IL_008f

      IL_0072:  ldstr      "can't recv Read when next message has tag "
      IL_0077:  ldarg.0
      IL_0078:  volatile.
      IL_007a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_007f:  box        [kernel]System.Int32
      IL_0084:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0089:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ldarg.0
      IL_0090:  ldc.i4.0
      IL_0091:  volatile.
      IL_0093:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0098:  ldarg.0
      IL_0099:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Read NetStack.Contracts.UdpConnectionContract/Exp::ReadPod0
      IL_009e:  initobj    NetStack.Contracts.UdpConnectionContract/Read
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00aa:  ldc.i4.s   23
      IL_00ac:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b1:  br         IL_0166

      IL_00b6:  ldc.i4.0
      IL_00b7:  stloc.3
      IL_00b8:  ldarg.0
      IL_00b9:  volatile.
      IL_00bb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00c0:  stloc.s    V_4
      IL_00c2:  ldloc.s    V_4
      IL_00c4:  brtrue     IL_00da

      IL_00c9:  ldarg.0
      IL_00ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00cf:  stloc.3
      IL_00d0:  ldarg.0
      IL_00d1:  volatile.
      IL_00d3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00d8:  stloc.s    V_4
      IL_00da:  ldloc.s    V_4
      IL_00dc:  ldc.i4.0
      IL_00dd:  ceq
      IL_00df:  brfalse    IL_00fd

      IL_00e4:  ldloc.3
      IL_00e5:  brfalse    IL_00f5

      IL_00ea:  ldstr      "Peer is closed"
      IL_00ef:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f4:  throw

      IL_00f5:  ldarg.0
      IL_00f6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fb:  br.s       IL_00b6

      IL_00fd:  ldarg.0
      IL_00fe:  ldc.i4.7
      IL_00ff:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0104:  ldloc.s    V_4
      IL_0106:  ldc.i4.7
      IL_0107:  beq        IL_0129

      IL_010c:  ldstr      "can't recv Read when next message has tag "
      IL_0111:  ldarg.0
      IL_0112:  volatile.
      IL_0114:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0119:  box        [kernel]System.Int32
      IL_011e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0123:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0128:  throw

      IL_0129:  ldarg.0
      IL_012a:  ldc.i4.0
      IL_012b:  volatile.
      IL_012d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0132:  ldarg.0
      IL_0133:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Read NetStack.Contracts.UdpConnectionContract/Exp::ReadPod0
      IL_0138:  initobj    NetStack.Contracts.UdpConnectionContract/Read
      IL_013e:  ldarg.0
      IL_013f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0144:  ldc.i4.s   11
      IL_0146:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014b:  br         IL_0166

      IL_0150:  ldstr      "can't recv Read in state "
      IL_0155:  ldarg.0
      IL_0156:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_015b:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0160:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0165:  throw

      IL_0166:  ret
    } // end of method Exp::RecvRead

    .method public instance void  RecvPollRead([out] int32& timeoutMillis) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       385 (0x181)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_00c3

      IL_001c:  br         IL_016a

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.8
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006b:  ldloc.2
      IL_006c:  ldc.i4.8
      IL_006d:  beq        IL_008f

      IL_0072:  ldstr      "can't recv PollRead when next message has tag "
      IL_0077:  ldarg.0
      IL_0078:  volatile.
      IL_007a:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_007f:  box        [kernel]System.Int32
      IL_0084:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0089:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ldarg.1
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollRead NetStack.Contracts.UdpConnectionContract/Exp::PollReadPod0
      IL_0096:  ldfld      int32 NetStack.Contracts.UdpConnectionContract/PollRead::timeoutMillis
      IL_009b:  stind.i4
      IL_009c:  ldarg.0
      IL_009d:  ldc.i4.0
      IL_009e:  volatile.
      IL_00a0:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00a5:  ldarg.0
      IL_00a6:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollRead NetStack.Contracts.UdpConnectionContract/Exp::PollReadPod0
      IL_00ab:  initobj    NetStack.Contracts.UdpConnectionContract/PollRead
      IL_00b1:  ldarg.0
      IL_00b2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b7:  ldc.i4.s   22
      IL_00b9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00be:  br         IL_0180

      IL_00c3:  ldc.i4.0
      IL_00c4:  stloc.3
      IL_00c5:  ldarg.0
      IL_00c6:  volatile.
      IL_00c8:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00cd:  stloc.s    V_4
      IL_00cf:  ldloc.s    V_4
      IL_00d1:  brtrue     IL_00e7

      IL_00d6:  ldarg.0
      IL_00d7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00dc:  stloc.3
      IL_00dd:  ldarg.0
      IL_00de:  volatile.
      IL_00e0:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00e5:  stloc.s    V_4
      IL_00e7:  ldloc.s    V_4
      IL_00e9:  ldc.i4.0
      IL_00ea:  ceq
      IL_00ec:  brfalse    IL_010a

      IL_00f1:  ldloc.3
      IL_00f2:  brfalse    IL_0102

      IL_00f7:  ldstr      "Peer is closed"
      IL_00fc:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0101:  throw

      IL_0102:  ldarg.0
      IL_0103:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0108:  br.s       IL_00c3

      IL_010a:  ldarg.0
      IL_010b:  ldc.i4.8
      IL_010c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0111:  ldloc.s    V_4
      IL_0113:  ldc.i4.8
      IL_0114:  beq        IL_0136

      IL_0119:  ldstr      "can't recv PollRead when next message has tag "
      IL_011e:  ldarg.0
      IL_011f:  volatile.
      IL_0121:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0126:  box        [kernel]System.Int32
      IL_012b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0130:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0135:  throw

      IL_0136:  ldarg.1
      IL_0137:  ldarg.0
      IL_0138:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollRead NetStack.Contracts.UdpConnectionContract/Exp::PollReadPod0
      IL_013d:  ldfld      int32 NetStack.Contracts.UdpConnectionContract/PollRead::timeoutMillis
      IL_0142:  stind.i4
      IL_0143:  ldarg.0
      IL_0144:  ldc.i4.0
      IL_0145:  volatile.
      IL_0147:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_014c:  ldarg.0
      IL_014d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollRead NetStack.Contracts.UdpConnectionContract/Exp::PollReadPod0
      IL_0152:  initobj    NetStack.Contracts.UdpConnectionContract/PollRead
      IL_0158:  ldarg.0
      IL_0159:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_015e:  ldc.i4.s   10
      IL_0160:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0165:  br         IL_0180

      IL_016a:  ldstr      "can't recv PollRead in state "
      IL_016f:  ldarg.0
      IL_0170:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0175:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_017a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_017f:  throw

      IL_0180:  ret
    } // end of method Exp::RecvPollRead

    .method public instance void  RecvPollSelectRead([out] int32& timeoutMillis) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       568 (0x238)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   36
      IL_0017:  beq        IL_00cc

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   28
      IL_001f:  beq        IL_0175

      IL_0024:  br         IL_0221

      IL_0029:  ldc.i4.0
      IL_002a:  stloc.1
      IL_002b:  ldarg.0
      IL_002c:  volatile.
      IL_002e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0033:  stloc.2
      IL_0034:  ldloc.2
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldarg.0
      IL_003b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  volatile.
      IL_0044:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  brfalse    IL_006c

      IL_0053:  ldloc.1
      IL_0054:  brfalse    IL_0064

      IL_0059:  ldstr      "Peer is closed"
      IL_005e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0063:  throw

      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_006a:  br.s       IL_0029

      IL_006c:  ldarg.0
      IL_006d:  ldc.i4.s   9
      IL_006f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0074:  ldloc.2
      IL_0075:  ldc.i4.s   9
      IL_0077:  beq        IL_0099

      IL_007c:  ldstr      "can't recv PollSelectRead when next message has tag "
      IL_0081:  ldarg.0
      IL_0082:  volatile.
      IL_0084:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0089:  box        [kernel]System.Int32
      IL_008e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0093:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0098:  throw

      IL_0099:  ldarg.1
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead NetStack.Contracts.UdpConnectionContract/Exp::PollSelectReadPod0
      IL_00a0:  ldfld      int32 NetStack.Contracts.UdpConnectionContract/PollSelectRead::timeoutMillis
      IL_00a5:  stind.i4
      IL_00a6:  ldarg.0
      IL_00a7:  ldc.i4.0
      IL_00a8:  volatile.
      IL_00aa:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead NetStack.Contracts.UdpConnectionContract/Exp::PollSelectReadPod0
      IL_00b5:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectRead
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c1:  ldc.i4.8
      IL_00c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c7:  br         IL_0237

      IL_00cc:  ldc.i4.0
      IL_00cd:  stloc.3
      IL_00ce:  ldarg.0
      IL_00cf:  volatile.
      IL_00d1:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00d6:  stloc.s    V_4
      IL_00d8:  ldloc.s    V_4
      IL_00da:  brtrue     IL_00f0

      IL_00df:  ldarg.0
      IL_00e0:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e5:  stloc.3
      IL_00e6:  ldarg.0
      IL_00e7:  volatile.
      IL_00e9:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00ee:  stloc.s    V_4
      IL_00f0:  ldloc.s    V_4
      IL_00f2:  ldc.i4.0
      IL_00f3:  ceq
      IL_00f5:  brfalse    IL_0113

      IL_00fa:  ldloc.3
      IL_00fb:  brfalse    IL_010b

      IL_0100:  ldstr      "Peer is closed"
      IL_0105:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_010a:  throw

      IL_010b:  ldarg.0
      IL_010c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0111:  br.s       IL_00cc

      IL_0113:  ldarg.0
      IL_0114:  ldc.i4.s   9
      IL_0116:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_011b:  ldloc.s    V_4
      IL_011d:  ldc.i4.s   9
      IL_011f:  beq        IL_0141

      IL_0124:  ldstr      "can't recv PollSelectRead when next message has tag "
      IL_0129:  ldarg.0
      IL_012a:  volatile.
      IL_012c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0131:  box        [kernel]System.Int32
      IL_0136:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_013b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0140:  throw

      IL_0141:  ldarg.1
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead NetStack.Contracts.UdpConnectionContract/Exp::PollSelectReadPod0
      IL_0148:  ldfld      int32 NetStack.Contracts.UdpConnectionContract/PollSelectRead::timeoutMillis
      IL_014d:  stind.i4
      IL_014e:  ldarg.0
      IL_014f:  ldc.i4.0
      IL_0150:  volatile.
      IL_0152:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0157:  ldarg.0
      IL_0158:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead NetStack.Contracts.UdpConnectionContract/Exp::PollSelectReadPod0
      IL_015d:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectRead
      IL_0163:  ldarg.0
      IL_0164:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0169:  ldc.i4.s   33
      IL_016b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0170:  br         IL_0237

      IL_0175:  ldc.i4.0
      IL_0176:  stloc.s    V_5
      IL_0178:  ldarg.0
      IL_0179:  volatile.
      IL_017b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0180:  stloc.s    V_6
      IL_0182:  ldloc.s    V_6
      IL_0184:  brtrue     IL_019b

      IL_0189:  ldarg.0
      IL_018a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_018f:  stloc.s    V_5
      IL_0191:  ldarg.0
      IL_0192:  volatile.
      IL_0194:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0199:  stloc.s    V_6
      IL_019b:  ldloc.s    V_6
      IL_019d:  ldc.i4.0
      IL_019e:  ceq
      IL_01a0:  brfalse    IL_01bf

      IL_01a5:  ldloc.s    V_5
      IL_01a7:  brfalse    IL_01b7

      IL_01ac:  ldstr      "Peer is closed"
      IL_01b1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01b6:  throw

      IL_01b7:  ldarg.0
      IL_01b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01bd:  br.s       IL_0175

      IL_01bf:  ldarg.0
      IL_01c0:  ldc.i4.s   9
      IL_01c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01c7:  ldloc.s    V_6
      IL_01c9:  ldc.i4.s   9
      IL_01cb:  beq        IL_01ed

      IL_01d0:  ldstr      "can't recv PollSelectRead when next message has tag "
      IL_01d5:  ldarg.0
      IL_01d6:  volatile.
      IL_01d8:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01dd:  box        [kernel]System.Int32
      IL_01e2:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01e7:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01ec:  throw

      IL_01ed:  ldarg.1
      IL_01ee:  ldarg.0
      IL_01ef:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead NetStack.Contracts.UdpConnectionContract/Exp::PollSelectReadPod0
      IL_01f4:  ldfld      int32 NetStack.Contracts.UdpConnectionContract/PollSelectRead::timeoutMillis
      IL_01f9:  stind.i4
      IL_01fa:  ldarg.0
      IL_01fb:  ldc.i4.0
      IL_01fc:  volatile.
      IL_01fe:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0203:  ldarg.0
      IL_0204:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead NetStack.Contracts.UdpConnectionContract/Exp::PollSelectReadPod0
      IL_0209:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectRead
      IL_020f:  ldarg.0
      IL_0210:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0215:  ldc.i4.s   20
      IL_0217:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_021c:  br         IL_0237

      IL_0221:  ldstr      "can't recv PollSelectRead in state "
      IL_0226:  ldarg.0
      IL_0227:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_022c:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0231:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0236:  throw

      IL_0237:  ret
    } // end of method Exp::RecvPollSelectRead

    .method public instance void  RecvPollSelectWrite([out] int32& timeoutMillis) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       568 (0x238)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_00cd

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   36
      IL_001f:  beq        IL_0175

      IL_0024:  br         IL_0221

      IL_0029:  ldc.i4.0
      IL_002a:  stloc.1
      IL_002b:  ldarg.0
      IL_002c:  volatile.
      IL_002e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0033:  stloc.2
      IL_0034:  ldloc.2
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldarg.0
      IL_003b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  volatile.
      IL_0044:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  brfalse    IL_006c

      IL_0053:  ldloc.1
      IL_0054:  brfalse    IL_0064

      IL_0059:  ldstr      "Peer is closed"
      IL_005e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0063:  throw

      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_006a:  br.s       IL_0029

      IL_006c:  ldarg.0
      IL_006d:  ldc.i4.s   10
      IL_006f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0074:  ldloc.2
      IL_0075:  ldc.i4.s   10
      IL_0077:  beq        IL_0099

      IL_007c:  ldstr      "can't recv PollSelectWrite when next message has t"
      + "ag "
      IL_0081:  ldarg.0
      IL_0082:  volatile.
      IL_0084:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0089:  box        [kernel]System.Int32
      IL_008e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0093:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0098:  throw

      IL_0099:  ldarg.1
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite NetStack.Contracts.UdpConnectionContract/Exp::PollSelectWritePod0
      IL_00a0:  ldfld      int32 NetStack.Contracts.UdpConnectionContract/PollSelectWrite::timeoutMillis
      IL_00a5:  stind.i4
      IL_00a6:  ldarg.0
      IL_00a7:  ldc.i4.0
      IL_00a8:  volatile.
      IL_00aa:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite NetStack.Contracts.UdpConnectionContract/Exp::PollSelectWritePod0
      IL_00b5:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectWrite
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c1:  ldc.i4.s   19
      IL_00c3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c8:  br         IL_0237

      IL_00cd:  ldc.i4.0
      IL_00ce:  stloc.3
      IL_00cf:  ldarg.0
      IL_00d0:  volatile.
      IL_00d2:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00d7:  stloc.s    V_4
      IL_00d9:  ldloc.s    V_4
      IL_00db:  brtrue     IL_00f1

      IL_00e0:  ldarg.0
      IL_00e1:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e6:  stloc.3
      IL_00e7:  ldarg.0
      IL_00e8:  volatile.
      IL_00ea:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00ef:  stloc.s    V_4
      IL_00f1:  ldloc.s    V_4
      IL_00f3:  ldc.i4.0
      IL_00f4:  ceq
      IL_00f6:  brfalse    IL_0114

      IL_00fb:  ldloc.3
      IL_00fc:  brfalse    IL_010c

      IL_0101:  ldstr      "Peer is closed"
      IL_0106:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_010b:  throw

      IL_010c:  ldarg.0
      IL_010d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0112:  br.s       IL_00cd

      IL_0114:  ldarg.0
      IL_0115:  ldc.i4.s   10
      IL_0117:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_011c:  ldloc.s    V_4
      IL_011e:  ldc.i4.s   10
      IL_0120:  beq        IL_0142

      IL_0125:  ldstr      "can't recv PollSelectWrite when next message has t"
      + "ag "
      IL_012a:  ldarg.0
      IL_012b:  volatile.
      IL_012d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0132:  box        [kernel]System.Int32
      IL_0137:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_013c:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0141:  throw

      IL_0142:  ldarg.1
      IL_0143:  ldarg.0
      IL_0144:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite NetStack.Contracts.UdpConnectionContract/Exp::PollSelectWritePod0
      IL_0149:  ldfld      int32 NetStack.Contracts.UdpConnectionContract/PollSelectWrite::timeoutMillis
      IL_014e:  stind.i4
      IL_014f:  ldarg.0
      IL_0150:  ldc.i4.0
      IL_0151:  volatile.
      IL_0153:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0158:  ldarg.0
      IL_0159:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite NetStack.Contracts.UdpConnectionContract/Exp::PollSelectWritePod0
      IL_015e:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectWrite
      IL_0164:  ldarg.0
      IL_0165:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_016a:  ldc.i4.7
      IL_016b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0170:  br         IL_0237

      IL_0175:  ldc.i4.0
      IL_0176:  stloc.s    V_5
      IL_0178:  ldarg.0
      IL_0179:  volatile.
      IL_017b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0180:  stloc.s    V_6
      IL_0182:  ldloc.s    V_6
      IL_0184:  brtrue     IL_019b

      IL_0189:  ldarg.0
      IL_018a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_018f:  stloc.s    V_5
      IL_0191:  ldarg.0
      IL_0192:  volatile.
      IL_0194:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0199:  stloc.s    V_6
      IL_019b:  ldloc.s    V_6
      IL_019d:  ldc.i4.0
      IL_019e:  ceq
      IL_01a0:  brfalse    IL_01bf

      IL_01a5:  ldloc.s    V_5
      IL_01a7:  brfalse    IL_01b7

      IL_01ac:  ldstr      "Peer is closed"
      IL_01b1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01b6:  throw

      IL_01b7:  ldarg.0
      IL_01b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01bd:  br.s       IL_0175

      IL_01bf:  ldarg.0
      IL_01c0:  ldc.i4.s   10
      IL_01c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01c7:  ldloc.s    V_6
      IL_01c9:  ldc.i4.s   10
      IL_01cb:  beq        IL_01ed

      IL_01d0:  ldstr      "can't recv PollSelectWrite when next message has t"
      + "ag "
      IL_01d5:  ldarg.0
      IL_01d6:  volatile.
      IL_01d8:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01dd:  box        [kernel]System.Int32
      IL_01e2:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01e7:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01ec:  throw

      IL_01ed:  ldarg.1
      IL_01ee:  ldarg.0
      IL_01ef:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite NetStack.Contracts.UdpConnectionContract/Exp::PollSelectWritePod0
      IL_01f4:  ldfld      int32 NetStack.Contracts.UdpConnectionContract/PollSelectWrite::timeoutMillis
      IL_01f9:  stind.i4
      IL_01fa:  ldarg.0
      IL_01fb:  ldc.i4.0
      IL_01fc:  volatile.
      IL_01fe:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0203:  ldarg.0
      IL_0204:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite NetStack.Contracts.UdpConnectionContract/Exp::PollSelectWritePod0
      IL_0209:  initobj    NetStack.Contracts.UdpConnectionContract/PollSelectWrite
      IL_020f:  ldarg.0
      IL_0210:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0215:  ldc.i4.s   32
      IL_0217:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_021c:  br         IL_0237

      IL_0221:  ldstr      "can't recv PollSelectWrite in state "
      IL_0226:  ldarg.0
      IL_0227:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_022c:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0231:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0236:  throw

      IL_0237:  ret
    } // end of method Exp::RecvPollSelectWrite

    .method public instance void  RecvClose() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       527 (0x20f)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0029

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_00bf

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   28
      IL_001f:  beq        IL_015a

      IL_0024:  br         IL_01f8

      IL_0029:  ldc.i4.0
      IL_002a:  stloc.1
      IL_002b:  ldarg.0
      IL_002c:  volatile.
      IL_002e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0033:  stloc.2
      IL_0034:  ldloc.2
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldarg.0
      IL_003b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0040:  stloc.1
      IL_0041:  ldarg.0
      IL_0042:  volatile.
      IL_0044:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  brfalse    IL_006c

      IL_0053:  ldloc.1
      IL_0054:  brfalse    IL_0064

      IL_0059:  ldstr      "Peer is closed"
      IL_005e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0063:  throw

      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_006a:  br.s       IL_0029

      IL_006c:  ldarg.0
      IL_006d:  ldc.i4.s   11
      IL_006f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0074:  ldloc.2
      IL_0075:  ldc.i4.s   11
      IL_0077:  beq        IL_0099

      IL_007c:  ldstr      "can't recv Close when next message has tag "
      IL_0081:  ldarg.0
      IL_0082:  volatile.
      IL_0084:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0089:  box        [kernel]System.Int32
      IL_008e:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0093:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0098:  throw

      IL_0099:  ldarg.0
      IL_009a:  ldc.i4.0
      IL_009b:  volatile.
      IL_009d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Close NetStack.Contracts.UdpConnectionContract/Exp::ClosePod0
      IL_00a8:  initobj    NetStack.Contracts.UdpConnectionContract/Close
      IL_00ae:  ldarg.0
      IL_00af:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b4:  ldc.i4.2
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ba:  br         IL_020e

      IL_00bf:  ldc.i4.0
      IL_00c0:  stloc.3
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00c9:  stloc.s    V_4
      IL_00cb:  ldloc.s    V_4
      IL_00cd:  brtrue     IL_00e3

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.3
      IL_00d9:  ldarg.0
      IL_00da:  volatile.
      IL_00dc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00e1:  stloc.s    V_4
      IL_00e3:  ldloc.s    V_4
      IL_00e5:  ldc.i4.0
      IL_00e6:  ceq
      IL_00e8:  brfalse    IL_0106

      IL_00ed:  ldloc.3
      IL_00ee:  brfalse    IL_00fe

      IL_00f3:  ldstr      "Peer is closed"
      IL_00f8:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00fd:  throw

      IL_00fe:  ldarg.0
      IL_00ff:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0104:  br.s       IL_00bf

      IL_0106:  ldarg.0
      IL_0107:  ldc.i4.s   11
      IL_0109:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_010e:  ldloc.s    V_4
      IL_0110:  ldc.i4.s   11
      IL_0112:  beq        IL_0134

      IL_0117:  ldstr      "can't recv Close when next message has tag "
      IL_011c:  ldarg.0
      IL_011d:  volatile.
      IL_011f:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0124:  box        [kernel]System.Int32
      IL_0129:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_012e:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0133:  throw

      IL_0134:  ldarg.0
      IL_0135:  ldc.i4.0
      IL_0136:  volatile.
      IL_0138:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_013d:  ldarg.0
      IL_013e:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Close NetStack.Contracts.UdpConnectionContract/Exp::ClosePod0
      IL_0143:  initobj    NetStack.Contracts.UdpConnectionContract/Close
      IL_0149:  ldarg.0
      IL_014a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_014f:  ldc.i4.2
      IL_0150:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0155:  br         IL_020e

      IL_015a:  ldc.i4.0
      IL_015b:  stloc.s    V_5
      IL_015d:  ldarg.0
      IL_015e:  volatile.
      IL_0160:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0165:  stloc.s    V_6
      IL_0167:  ldloc.s    V_6
      IL_0169:  brtrue     IL_0180

      IL_016e:  ldarg.0
      IL_016f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0174:  stloc.s    V_5
      IL_0176:  ldarg.0
      IL_0177:  volatile.
      IL_0179:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_017e:  stloc.s    V_6
      IL_0180:  ldloc.s    V_6
      IL_0182:  ldc.i4.0
      IL_0183:  ceq
      IL_0185:  brfalse    IL_01a4

      IL_018a:  ldloc.s    V_5
      IL_018c:  brfalse    IL_019c

      IL_0191:  ldstr      "Peer is closed"
      IL_0196:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_019b:  throw

      IL_019c:  ldarg.0
      IL_019d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01a2:  br.s       IL_015a

      IL_01a4:  ldarg.0
      IL_01a5:  ldc.i4.s   11
      IL_01a7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01ac:  ldloc.s    V_6
      IL_01ae:  ldc.i4.s   11
      IL_01b0:  beq        IL_01d2

      IL_01b5:  ldstr      "can't recv Close when next message has tag "
      IL_01ba:  ldarg.0
      IL_01bb:  volatile.
      IL_01bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01c2:  box        [kernel]System.Int32
      IL_01c7:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_01cc:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_01d1:  throw

      IL_01d2:  ldarg.0
      IL_01d3:  ldc.i4.0
      IL_01d4:  volatile.
      IL_01d6:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01db:  ldarg.0
      IL_01dc:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Close NetStack.Contracts.UdpConnectionContract/Exp::ClosePod0
      IL_01e1:  initobj    NetStack.Contracts.UdpConnectionContract/Close
      IL_01e7:  ldarg.0
      IL_01e8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01ed:  ldc.i4.2
      IL_01ee:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01f3:  br         IL_020e

      IL_01f8:  ldstr      "can't recv Close in state "
      IL_01fd:  ldarg.0
      IL_01fe:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0203:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0208:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_020d:  throw

      IL_020e:  ret
    } // end of method Exp::RecvClose

    .method public instance void  RecvGetLocalAddress() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       362 (0x16a)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00b7

      IL_001c:  br         IL_0153

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   12
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   12
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv GetLocalAddress when next message has t"
      + "ag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress NetStack.Contracts.UdpConnectionContract/Exp::GetLocalAddressPod0
      IL_00a0:  initobj    NetStack.Contracts.UdpConnectionContract/GetLocalAddress
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.6
      IL_00ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b2:  br         IL_0169

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.3
      IL_00b9:  ldarg.0
      IL_00ba:  volatile.
      IL_00bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00c1:  stloc.s    V_4
      IL_00c3:  ldloc.s    V_4
      IL_00c5:  brtrue     IL_00db

      IL_00ca:  ldarg.0
      IL_00cb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d0:  stloc.3
      IL_00d1:  ldarg.0
      IL_00d2:  volatile.
      IL_00d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00d9:  stloc.s    V_4
      IL_00db:  ldloc.s    V_4
      IL_00dd:  ldc.i4.0
      IL_00de:  ceq
      IL_00e0:  brfalse    IL_00fe

      IL_00e5:  ldloc.3
      IL_00e6:  brfalse    IL_00f6

      IL_00eb:  ldstr      "Peer is closed"
      IL_00f0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f5:  throw

      IL_00f6:  ldarg.0
      IL_00f7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fc:  br.s       IL_00b7

      IL_00fe:  ldarg.0
      IL_00ff:  ldc.i4.s   12
      IL_0101:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0106:  ldloc.s    V_4
      IL_0108:  ldc.i4.s   12
      IL_010a:  beq        IL_012c

      IL_010f:  ldstr      "can't recv GetLocalAddress when next message has t"
      + "ag "
      IL_0114:  ldarg.0
      IL_0115:  volatile.
      IL_0117:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_011c:  box        [kernel]System.Int32
      IL_0121:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0126:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012b:  throw

      IL_012c:  ldarg.0
      IL_012d:  ldc.i4.0
      IL_012e:  volatile.
      IL_0130:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0135:  ldarg.0
      IL_0136:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress NetStack.Contracts.UdpConnectionContract/Exp::GetLocalAddressPod0
      IL_013b:  initobj    NetStack.Contracts.UdpConnectionContract/GetLocalAddress
      IL_0141:  ldarg.0
      IL_0142:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0147:  ldc.i4.s   18
      IL_0149:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014e:  br         IL_0169

      IL_0153:  ldstr      "can't recv GetLocalAddress in state "
      IL_0158:  ldarg.0
      IL_0159:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_015e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0163:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0168:  throw

      IL_0169:  ret
    } // end of method Exp::RecvGetLocalAddress

    .method public instance void  RecvGetLocalPort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       362 (0x16a)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  beq        IL_00b7

      IL_001c:  br         IL_0153

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   13
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   13
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv GetLocalPort when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort NetStack.Contracts.UdpConnectionContract/Exp::GetLocalPortPod0
      IL_00a0:  initobj    NetStack.Contracts.UdpConnectionContract/GetLocalPort
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.5
      IL_00ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b2:  br         IL_0169

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.3
      IL_00b9:  ldarg.0
      IL_00ba:  volatile.
      IL_00bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00c1:  stloc.s    V_4
      IL_00c3:  ldloc.s    V_4
      IL_00c5:  brtrue     IL_00db

      IL_00ca:  ldarg.0
      IL_00cb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d0:  stloc.3
      IL_00d1:  ldarg.0
      IL_00d2:  volatile.
      IL_00d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00d9:  stloc.s    V_4
      IL_00db:  ldloc.s    V_4
      IL_00dd:  ldc.i4.0
      IL_00de:  ceq
      IL_00e0:  brfalse    IL_00fe

      IL_00e5:  ldloc.3
      IL_00e6:  brfalse    IL_00f6

      IL_00eb:  ldstr      "Peer is closed"
      IL_00f0:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f5:  throw

      IL_00f6:  ldarg.0
      IL_00f7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fc:  br.s       IL_00b7

      IL_00fe:  ldarg.0
      IL_00ff:  ldc.i4.s   13
      IL_0101:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0106:  ldloc.s    V_4
      IL_0108:  ldc.i4.s   13
      IL_010a:  beq        IL_012c

      IL_010f:  ldstr      "can't recv GetLocalPort when next message has tag "
      IL_0114:  ldarg.0
      IL_0115:  volatile.
      IL_0117:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_011c:  box        [kernel]System.Int32
      IL_0121:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0126:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012b:  throw

      IL_012c:  ldarg.0
      IL_012d:  ldc.i4.0
      IL_012e:  volatile.
      IL_0130:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0135:  ldarg.0
      IL_0136:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort NetStack.Contracts.UdpConnectionContract/Exp::GetLocalPortPod0
      IL_013b:  initobj    NetStack.Contracts.UdpConnectionContract/GetLocalPort
      IL_0141:  ldarg.0
      IL_0142:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0147:  ldc.i4.s   17
      IL_0149:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014e:  br         IL_0169

      IL_0153:  ldstr      "can't recv GetLocalPort in state "
      IL_0158:  ldarg.0
      IL_0159:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_015e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0163:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0168:  throw

      IL_0169:  ret
    } // end of method Exp::RecvGetLocalPort

    .method public instance void  RecvGetRemoteAddress() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       362 (0x16a)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_00b8

      IL_001c:  br         IL_0153

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   14
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   14
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv GetRemoteAddress when next message has "
      + "tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress NetStack.Contracts.UdpConnectionContract/Exp::GetRemoteAddressPod0
      IL_00a0:  initobj    NetStack.Contracts.UdpConnectionContract/GetRemoteAddress
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.s   16
      IL_00ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b3:  br         IL_0169

      IL_00b8:  ldc.i4.0
      IL_00b9:  stloc.3
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00c2:  stloc.s    V_4
      IL_00c4:  ldloc.s    V_4
      IL_00c6:  brtrue     IL_00dc

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  ldc.i4.0
      IL_00df:  ceq
      IL_00e1:  brfalse    IL_00ff

      IL_00e6:  ldloc.3
      IL_00e7:  brfalse    IL_00f7

      IL_00ec:  ldstr      "Peer is closed"
      IL_00f1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ldarg.0
      IL_00f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fd:  br.s       IL_00b8

      IL_00ff:  ldarg.0
      IL_0100:  ldc.i4.s   14
      IL_0102:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0107:  ldloc.s    V_4
      IL_0109:  ldc.i4.s   14
      IL_010b:  beq        IL_012d

      IL_0110:  ldstr      "can't recv GetRemoteAddress when next message has "
      + "tag "
      IL_0115:  ldarg.0
      IL_0116:  volatile.
      IL_0118:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_011d:  box        [kernel]System.Int32
      IL_0122:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0127:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ldarg.0
      IL_012e:  ldc.i4.0
      IL_012f:  volatile.
      IL_0131:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0136:  ldarg.0
      IL_0137:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress NetStack.Contracts.UdpConnectionContract/Exp::GetRemoteAddressPod0
      IL_013c:  initobj    NetStack.Contracts.UdpConnectionContract/GetRemoteAddress
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.4
      IL_0149:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014e:  br         IL_0169

      IL_0153:  ldstr      "can't recv GetRemoteAddress in state "
      IL_0158:  ldarg.0
      IL_0159:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_015e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0163:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0168:  throw

      IL_0169:  ret
    } // end of method Exp::RecvGetRemoteAddress

    .method public instance void  RecvGetRemotePort() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       362 (0x16a)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_00b8

      IL_001c:  br         IL_0153

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   15
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   15
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv GetRemotePort when next message has tag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0081:  box        [kernel]System.Int32
      IL_0086:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort NetStack.Contracts.UdpConnectionContract/Exp::GetRemotePortPod0
      IL_00a0:  initobj    NetStack.Contracts.UdpConnectionContract/GetRemotePort
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.s   15
      IL_00ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b3:  br         IL_0169

      IL_00b8:  ldc.i4.0
      IL_00b9:  stloc.3
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00c2:  stloc.s    V_4
      IL_00c4:  ldloc.s    V_4
      IL_00c6:  brtrue     IL_00dc

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  ldc.i4.0
      IL_00df:  ceq
      IL_00e1:  brfalse    IL_00ff

      IL_00e6:  ldloc.3
      IL_00e7:  brfalse    IL_00f7

      IL_00ec:  ldstr      "Peer is closed"
      IL_00f1:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ldarg.0
      IL_00f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fd:  br.s       IL_00b8

      IL_00ff:  ldarg.0
      IL_0100:  ldc.i4.s   15
      IL_0102:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0107:  ldloc.s    V_4
      IL_0109:  ldc.i4.s   15
      IL_010b:  beq        IL_012d

      IL_0110:  ldstr      "can't recv GetRemotePort when next message has tag "
      IL_0115:  ldarg.0
      IL_0116:  volatile.
      IL_0118:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_011d:  box        [kernel]System.Int32
      IL_0122:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0127:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ldarg.0
      IL_012e:  ldc.i4.0
      IL_012f:  volatile.
      IL_0131:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0136:  ldarg.0
      IL_0137:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort NetStack.Contracts.UdpConnectionContract/Exp::GetRemotePortPod0
      IL_013c:  initobj    NetStack.Contracts.UdpConnectionContract/GetRemotePort
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.3
      IL_0149:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014e:  br         IL_0169

      IL_0153:  ldstr      "can't recv GetRemotePort in state "
      IL_0158:  ldarg.0
      IL_0159:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_015e:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0163:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0168:  throw

      IL_0169:  ret
    } // end of method Exp::RecvGetRemotePort

    .method public instance void  SendOK() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       677 (0x2a5)
      .maxstack  40
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24,
               bool V_25,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_26,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_27,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_28)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0049

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   30
      IL_0017:  beq        IL_0096

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   35
      IL_001f:  beq        IL_00ea

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   27
      IL_0027:  beq        IL_013e

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   29
      IL_002f:  beq        IL_0192

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   13
      IL_0037:  beq        IL_01e6

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   31
      IL_003f:  beq        IL_023a

      IL_0044:  br         IL_028e

      IL_0049:  ldarg.0
      IL_004a:  ldloca.s   V_1
      IL_004c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0051:  stloc.2
      IL_0052:  ldloc.2
      IL_0053:  stloc.3
      IL_0054:  ldloc.3
      IL_0055:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_005a:  stloc.s    V_4
      IL_005c:  ldloc.1
      IL_005d:  brtrue     IL_0072

      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0068:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK0$PST06000732()
      IL_006d:  br         IL_007e

      IL_0072:  ldloc.3
      IL_0073:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0078:  ldarg.0
      IL_0079:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverOK0$PST06000733(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_007e:  ldarg.0
      IL_007f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0084:  ldarg.0
      IL_0085:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_008a:  ldc.i4.s   24
      IL_008c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0091:  br         IL_02a4

      IL_0096:  ldarg.0
      IL_0097:  ldloca.s   V_5
      IL_0099:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_009e:  stloc.s    V_6
      IL_00a0:  ldloc.s    V_6
      IL_00a2:  stloc.s    V_7
      IL_00a4:  ldloc.s    V_7
      IL_00a6:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00ab:  stloc.s    V_8
      IL_00ad:  ldloc.s    V_5
      IL_00af:  brtrue     IL_00c5

      IL_00b4:  ldloc.s    V_7
      IL_00b6:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00bb:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK1$PST06000734()
      IL_00c0:  br         IL_00d2

      IL_00c5:  ldloc.s    V_7
      IL_00c7:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00cc:  ldarg.0
      IL_00cd:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverOK1$PST06000735(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00d2:  ldarg.0
      IL_00d3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00d8:  ldarg.0
      IL_00d9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00de:  ldc.i4.s   14
      IL_00e0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e5:  br         IL_02a4

      IL_00ea:  ldarg.0
      IL_00eb:  ldloca.s   V_9
      IL_00ed:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00f2:  stloc.s    V_10
      IL_00f4:  ldloc.s    V_10
      IL_00f6:  stloc.s    V_11
      IL_00f8:  ldloc.s    V_11
      IL_00fa:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00ff:  stloc.s    V_12
      IL_0101:  ldloc.s    V_9
      IL_0103:  brtrue     IL_0119

      IL_0108:  ldloc.s    V_11
      IL_010a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_010f:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK1$PST06000734()
      IL_0114:  br         IL_0126

      IL_0119:  ldloc.s    V_11
      IL_011b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0120:  ldarg.0
      IL_0121:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverOK1$PST06000735(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0126:  ldarg.0
      IL_0127:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_012c:  ldarg.0
      IL_012d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0132:  ldc.i4.s   34
      IL_0134:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0139:  br         IL_02a4

      IL_013e:  ldarg.0
      IL_013f:  ldloca.s   V_13
      IL_0141:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0146:  stloc.s    V_14
      IL_0148:  ldloc.s    V_14
      IL_014a:  stloc.s    V_15
      IL_014c:  ldloc.s    V_15
      IL_014e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0153:  stloc.s    V_16
      IL_0155:  ldloc.s    V_13
      IL_0157:  brtrue     IL_016d

      IL_015c:  ldloc.s    V_15
      IL_015e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0163:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK0$PST06000732()
      IL_0168:  br         IL_017a

      IL_016d:  ldloc.s    V_15
      IL_016f:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0174:  ldarg.0
      IL_0175:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverOK0$PST06000733(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_017a:  ldarg.0
      IL_017b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0180:  ldarg.0
      IL_0181:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0186:  ldc.i4.s   26
      IL_0188:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_018d:  br         IL_02a4

      IL_0192:  ldarg.0
      IL_0193:  ldloca.s   V_17
      IL_0195:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_019a:  stloc.s    V_18
      IL_019c:  ldloc.s    V_18
      IL_019e:  stloc.s    V_19
      IL_01a0:  ldloc.s    V_19
      IL_01a2:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01a7:  stloc.s    V_20
      IL_01a9:  ldloc.s    V_17
      IL_01ab:  brtrue     IL_01c1

      IL_01b0:  ldloc.s    V_19
      IL_01b2:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01b7:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK0$PST06000732()
      IL_01bc:  br         IL_01ce

      IL_01c1:  ldloc.s    V_19
      IL_01c3:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01c8:  ldarg.0
      IL_01c9:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverOK0$PST06000733(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01ce:  ldarg.0
      IL_01cf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01d4:  ldarg.0
      IL_01d5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01da:  ldc.i4.s   28
      IL_01dc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01e1:  br         IL_02a4

      IL_01e6:  ldarg.0
      IL_01e7:  ldloca.s   V_21
      IL_01e9:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01ee:  stloc.s    V_22
      IL_01f0:  ldloc.s    V_22
      IL_01f2:  stloc.s    V_23
      IL_01f4:  ldloc.s    V_23
      IL_01f6:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01fb:  stloc.s    V_24
      IL_01fd:  ldloc.s    V_21
      IL_01ff:  brtrue     IL_0215

      IL_0204:  ldloc.s    V_23
      IL_0206:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_020b:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK0$PST06000732()
      IL_0210:  br         IL_0222

      IL_0215:  ldloc.s    V_23
      IL_0217:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_021c:  ldarg.0
      IL_021d:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverOK0$PST06000733(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0222:  ldarg.0
      IL_0223:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0228:  ldarg.0
      IL_0229:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_022e:  ldc.i4.s   12
      IL_0230:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0235:  br         IL_02a4

      IL_023a:  ldarg.0
      IL_023b:  ldloca.s   V_25
      IL_023d:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0242:  stloc.s    V_26
      IL_0244:  ldloc.s    V_26
      IL_0246:  stloc.s    V_27
      IL_0248:  ldloc.s    V_27
      IL_024a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_024f:  stloc.s    V_28
      IL_0251:  ldloc.s    V_25
      IL_0253:  brtrue     IL_0269

      IL_0258:  ldloc.s    V_27
      IL_025a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_025f:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverOK1$PST06000734()
      IL_0264:  br         IL_0276

      IL_0269:  ldloc.s    V_27
      IL_026b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0270:  ldarg.0
      IL_0271:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverOK1$PST06000735(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0276:  ldarg.0
      IL_0277:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_027c:  ldarg.0
      IL_027d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0282:  ldc.i4.s   28
      IL_0284:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0289:  br         IL_02a4

      IL_028e:  ldstr      "can't send OK in state "
      IL_0293:  ldarg.0
      IL_0294:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0299:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_029e:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_02a3:  throw

      IL_02a4:  ret
    } // end of method Exp::SendOK

    .method public instance void  SendInvalidEndPoint(uint32 ip,
                                                      uint16 port) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       609 (0x261)
      .maxstack  35
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0041

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   30
      IL_0017:  beq        IL_0092

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   13
      IL_001f:  beq        IL_00ea

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   25
      IL_0027:  beq        IL_0142

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   35
      IL_002f:  beq        IL_019a

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   29
      IL_0037:  beq        IL_01f2

      IL_003c:  br         IL_024a

      IL_0041:  ldarg.0
      IL_0042:  ldloca.s   V_1
      IL_0044:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0049:  stloc.2
      IL_004a:  ldloc.2
      IL_004b:  stloc.3
      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0052:  stloc.s    V_4
      IL_0054:  ldloc.1
      IL_0055:  brtrue     IL_006c

      IL_005a:  ldloc.3
      IL_005b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0060:  ldarg.1
      IL_0061:  ldarg.2
      IL_0062:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverInvalidEndPoint1$PST06000736(uint32,
                                                                                                                           uint16)
      IL_0067:  br         IL_007a

      IL_006c:  ldloc.3
      IL_006d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0072:  ldarg.1
      IL_0073:  ldarg.2
      IL_0074:  ldarg.0
      IL_0075:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverInvalidEndPoint1$PST06000737(uint32,
                                                                                                                                   uint16,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_007a:  ldarg.0
      IL_007b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0080:  ldarg.0
      IL_0081:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0086:  ldc.i4.s   37
      IL_0088:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_008d:  br         IL_0260

      IL_0092:  ldarg.0
      IL_0093:  ldloca.s   V_5
      IL_0095:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  stloc.s    V_7
      IL_00a0:  ldloc.s    V_7
      IL_00a2:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00a7:  stloc.s    V_8
      IL_00a9:  ldloc.s    V_5
      IL_00ab:  brtrue     IL_00c3

      IL_00b0:  ldloc.s    V_7
      IL_00b2:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00b7:  ldarg.1
      IL_00b8:  ldarg.2
      IL_00b9:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverInvalidEndPoint1$PST06000736(uint32,
                                                                                                                           uint16)
      IL_00be:  br         IL_00d2

      IL_00c3:  ldloc.s    V_7
      IL_00c5:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00ca:  ldarg.1
      IL_00cb:  ldarg.2
      IL_00cc:  ldarg.0
      IL_00cd:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverInvalidEndPoint1$PST06000737(uint32,
                                                                                                                                   uint16,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00d2:  ldarg.0
      IL_00d3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00d8:  ldarg.0
      IL_00d9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00de:  ldc.i4.s   37
      IL_00e0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e5:  br         IL_0260

      IL_00ea:  ldarg.0
      IL_00eb:  ldloca.s   V_9
      IL_00ed:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00f2:  stloc.s    V_10
      IL_00f4:  ldloc.s    V_10
      IL_00f6:  stloc.s    V_11
      IL_00f8:  ldloc.s    V_11
      IL_00fa:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00ff:  stloc.s    V_12
      IL_0101:  ldloc.s    V_9
      IL_0103:  brtrue     IL_011b

      IL_0108:  ldloc.s    V_11
      IL_010a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_010f:  ldarg.1
      IL_0110:  ldarg.2
      IL_0111:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverInvalidEndPoint0$PST06000738(uint32,
                                                                                                                           uint16)
      IL_0116:  br         IL_012a

      IL_011b:  ldloc.s    V_11
      IL_011d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0122:  ldarg.1
      IL_0123:  ldarg.2
      IL_0124:  ldarg.0
      IL_0125:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverInvalidEndPoint0$PST06000739(uint32,
                                                                                                                                   uint16,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_012a:  ldarg.0
      IL_012b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0130:  ldarg.0
      IL_0131:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0136:  ldc.i4.s   12
      IL_0138:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_013d:  br         IL_0260

      IL_0142:  ldarg.0
      IL_0143:  ldloca.s   V_13
      IL_0145:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_014a:  stloc.s    V_14
      IL_014c:  ldloc.s    V_14
      IL_014e:  stloc.s    V_15
      IL_0150:  ldloc.s    V_15
      IL_0152:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0157:  stloc.s    V_16
      IL_0159:  ldloc.s    V_13
      IL_015b:  brtrue     IL_0173

      IL_0160:  ldloc.s    V_15
      IL_0162:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0167:  ldarg.1
      IL_0168:  ldarg.2
      IL_0169:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverInvalidEndPoint0$PST06000738(uint32,
                                                                                                                           uint16)
      IL_016e:  br         IL_0182

      IL_0173:  ldloc.s    V_15
      IL_0175:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_017a:  ldarg.1
      IL_017b:  ldarg.2
      IL_017c:  ldarg.0
      IL_017d:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverInvalidEndPoint0$PST06000739(uint32,
                                                                                                                                   uint16,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0182:  ldarg.0
      IL_0183:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0188:  ldarg.0
      IL_0189:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_018e:  ldc.i4.s   24
      IL_0190:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0195:  br         IL_0260

      IL_019a:  ldarg.0
      IL_019b:  ldloca.s   V_17
      IL_019d:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01a2:  stloc.s    V_18
      IL_01a4:  ldloc.s    V_18
      IL_01a6:  stloc.s    V_19
      IL_01a8:  ldloc.s    V_19
      IL_01aa:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01af:  stloc.s    V_20
      IL_01b1:  ldloc.s    V_17
      IL_01b3:  brtrue     IL_01cb

      IL_01b8:  ldloc.s    V_19
      IL_01ba:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01bf:  ldarg.1
      IL_01c0:  ldarg.2
      IL_01c1:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverInvalidEndPoint1$PST06000736(uint32,
                                                                                                                           uint16)
      IL_01c6:  br         IL_01da

      IL_01cb:  ldloc.s    V_19
      IL_01cd:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01d2:  ldarg.1
      IL_01d3:  ldarg.2
      IL_01d4:  ldarg.0
      IL_01d5:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverInvalidEndPoint1$PST06000737(uint32,
                                                                                                                                   uint16,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01da:  ldarg.0
      IL_01db:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01e0:  ldarg.0
      IL_01e1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01e6:  ldc.i4.s   34
      IL_01e8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01ed:  br         IL_0260

      IL_01f2:  ldarg.0
      IL_01f3:  ldloca.s   V_21
      IL_01f5:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01fa:  stloc.s    V_22
      IL_01fc:  ldloc.s    V_22
      IL_01fe:  stloc.s    V_23
      IL_0200:  ldloc.s    V_23
      IL_0202:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0207:  stloc.s    V_24
      IL_0209:  ldloc.s    V_21
      IL_020b:  brtrue     IL_0223

      IL_0210:  ldloc.s    V_23
      IL_0212:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0217:  ldarg.1
      IL_0218:  ldarg.2
      IL_0219:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverInvalidEndPoint0$PST06000738(uint32,
                                                                                                                           uint16)
      IL_021e:  br         IL_0232

      IL_0223:  ldloc.s    V_23
      IL_0225:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_022a:  ldarg.1
      IL_022b:  ldarg.2
      IL_022c:  ldarg.0
      IL_022d:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverInvalidEndPoint0$PST06000739(uint32,
                                                                                                                                   uint16,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0232:  ldarg.0
      IL_0233:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0238:  ldarg.0
      IL_0239:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_023e:  ldc.i4.s   14
      IL_0240:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0245:  br         IL_0260

      IL_024a:  ldstr      "can't send InvalidEndPoint in state "
      IL_024f:  ldarg.0
      IL_0250:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0255:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_025a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_025f:  throw

      IL_0260:  ret
    } // end of method Exp::SendInvalidEndPoint

    .method public instance void  SendDataTooLarge() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       401 (0x191)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   27
      IL_0017:  beq        IL_007e

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   35
      IL_001f:  beq        IL_00d2

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   13
      IL_0027:  beq        IL_0126

      IL_002c:  br         IL_017a

      IL_0031:  ldarg.0
      IL_0032:  ldloca.s   V_1
      IL_0034:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  stloc.3
      IL_003c:  ldloc.3
      IL_003d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0042:  stloc.s    V_4
      IL_0044:  ldloc.1
      IL_0045:  brtrue     IL_005a

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0050:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverDataTooLarge0$PST0600073A()
      IL_0055:  br         IL_0066

      IL_005a:  ldloc.3
      IL_005b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0060:  ldarg.0
      IL_0061:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverDataTooLarge0$PST0600073B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0066:  ldarg.0
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006c:  ldarg.0
      IL_006d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0072:  ldc.i4.s   24
      IL_0074:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0079:  br         IL_0190

      IL_007e:  ldarg.0
      IL_007f:  ldloca.s   V_5
      IL_0081:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0086:  stloc.s    V_6
      IL_0088:  ldloc.s    V_6
      IL_008a:  stloc.s    V_7
      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0093:  stloc.s    V_8
      IL_0095:  ldloc.s    V_5
      IL_0097:  brtrue     IL_00ad

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00a3:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverDataTooLarge0$PST0600073A()
      IL_00a8:  br         IL_00ba

      IL_00ad:  ldloc.s    V_7
      IL_00af:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverDataTooLarge0$PST0600073B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ba:  ldarg.0
      IL_00bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c0:  ldarg.0
      IL_00c1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c6:  ldc.i4.s   26
      IL_00c8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cd:  br         IL_0190

      IL_00d2:  ldarg.0
      IL_00d3:  ldloca.s   V_9
      IL_00d5:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00da:  stloc.s    V_10
      IL_00dc:  ldloc.s    V_10
      IL_00de:  stloc.s    V_11
      IL_00e0:  ldloc.s    V_11
      IL_00e2:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00e7:  stloc.s    V_12
      IL_00e9:  ldloc.s    V_9
      IL_00eb:  brtrue     IL_0101

      IL_00f0:  ldloc.s    V_11
      IL_00f2:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00f7:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverDataTooLarge1$PST0600073C()
      IL_00fc:  br         IL_010e

      IL_0101:  ldloc.s    V_11
      IL_0103:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0108:  ldarg.0
      IL_0109:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverDataTooLarge1$PST0600073D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_010e:  ldarg.0
      IL_010f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0114:  ldarg.0
      IL_0115:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_011a:  ldc.i4.s   34
      IL_011c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0121:  br         IL_0190

      IL_0126:  ldarg.0
      IL_0127:  ldloca.s   V_13
      IL_0129:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_012e:  stloc.s    V_14
      IL_0130:  ldloc.s    V_14
      IL_0132:  stloc.s    V_15
      IL_0134:  ldloc.s    V_15
      IL_0136:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_013b:  stloc.s    V_16
      IL_013d:  ldloc.s    V_13
      IL_013f:  brtrue     IL_0155

      IL_0144:  ldloc.s    V_15
      IL_0146:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_014b:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverDataTooLarge0$PST0600073A()
      IL_0150:  br         IL_0162

      IL_0155:  ldloc.s    V_15
      IL_0157:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_015c:  ldarg.0
      IL_015d:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverDataTooLarge0$PST0600073B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0162:  ldarg.0
      IL_0163:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0168:  ldarg.0
      IL_0169:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_016e:  ldc.i4.s   12
      IL_0170:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0175:  br         IL_0190

      IL_017a:  ldstr      "can't send DataTooLarge in state "
      IL_017f:  ldarg.0
      IL_0180:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0185:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_018a:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_018f:  throw

      IL_0190:  ret
    } // end of method Exp::SendDataTooLarge

    .method public instance void  SendNoData() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c2

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0040:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverNoData0$PST0600073E()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverNoData0$PST0600073F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   21
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d8

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0093:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverNoData0$PST0600073E()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverNoData0$PST0600073F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.s   9
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send NoData in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_00cd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Exp::SendNoData

    .method public instance void  SendData(uint32 srcAddr,
                                           uint16 srcPort,
                                           uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      .param [3]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       473 (0x1d9)
      .maxstack  30
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               bool V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_8,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_9,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_10,
               bool V_11,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_12,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_13,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_14,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_15,
               bool V_16,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_17,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_19,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_20)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0031

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   23
      IL_0017:  beq        IL_0090

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   22
      IL_001f:  beq        IL_00f6

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   10
      IL_0027:  beq        IL_015c

      IL_002c:  br         IL_01c2

      IL_0031:  ldarg.0
      IL_0032:  ldloca.s   V_1
      IL_0034:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  stloc.3
      IL_003c:  ldloc.3
      IL_003d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0042:  stloc.s    V_4
      IL_0044:  ldloc.1
      IL_0045:  brtrue     IL_0069

      IL_004a:  ldarg.3
      IL_004b:  stloc.s    V_5
      IL_004d:  ldloc.s    V_4
      IL_004f:  ldloc.s    V_5
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0056:  ldloc.3
      IL_0057:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_005c:  ldarg.1
      IL_005d:  ldarg.2
      IL_005e:  ldarg.3
      IL_005f:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverData0$PST06000740(uint32,
                                                                                                                uint16,
                                                                                                                uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0064:  br         IL_0078

      IL_0069:  ldloc.3
      IL_006a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_006f:  ldarg.1
      IL_0070:  ldarg.2
      IL_0071:  ldarg.3
      IL_0072:  ldarg.0
      IL_0073:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverData0$PST06000741(uint32,
                                                                                                                        uint16,
                                                                                                                        uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0078:  ldarg.0
      IL_0079:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_007e:  ldarg.0
      IL_007f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0084:  ldc.i4.s   14
      IL_0086:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_008b:  br         IL_01d8

      IL_0090:  ldarg.0
      IL_0091:  ldloca.s   V_6
      IL_0093:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0098:  stloc.s    V_7
      IL_009a:  ldloc.s    V_7
      IL_009c:  stloc.s    V_8
      IL_009e:  ldloc.s    V_8
      IL_00a0:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00a5:  stloc.s    V_9
      IL_00a7:  ldloc.s    V_6
      IL_00a9:  brtrue     IL_00ce

      IL_00ae:  ldarg.3
      IL_00af:  stloc.s    V_10
      IL_00b1:  ldloc.s    V_9
      IL_00b3:  ldloc.s    V_10
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_00ba:  ldloc.s    V_8
      IL_00bc:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00c1:  ldarg.1
      IL_00c2:  ldarg.2
      IL_00c3:  ldarg.3
      IL_00c4:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverData0$PST06000740(uint32,
                                                                                                                uint16,
                                                                                                                uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_00c9:  br         IL_00de

      IL_00ce:  ldloc.s    V_8
      IL_00d0:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00d5:  ldarg.1
      IL_00d6:  ldarg.2
      IL_00d7:  ldarg.3
      IL_00d8:  ldarg.0
      IL_00d9:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverData0$PST06000741(uint32,
                                                                                                                        uint16,
                                                                                                                        uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00de:  ldarg.0
      IL_00df:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00e4:  ldarg.0
      IL_00e5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ea:  ldc.i4.s   28
      IL_00ec:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00f1:  br         IL_01d8

      IL_00f6:  ldarg.0
      IL_00f7:  ldloca.s   V_11
      IL_00f9:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00fe:  stloc.s    V_12
      IL_0100:  ldloc.s    V_12
      IL_0102:  stloc.s    V_13
      IL_0104:  ldloc.s    V_13
      IL_0106:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_010b:  stloc.s    V_14
      IL_010d:  ldloc.s    V_11
      IL_010f:  brtrue     IL_0134

      IL_0114:  ldarg.3
      IL_0115:  stloc.s    V_15
      IL_0117:  ldloc.s    V_14
      IL_0119:  ldloc.s    V_15
      IL_011b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0120:  ldloc.s    V_13
      IL_0122:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0127:  ldarg.1
      IL_0128:  ldarg.2
      IL_0129:  ldarg.3
      IL_012a:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverData0$PST06000740(uint32,
                                                                                                                uint16,
                                                                                                                uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_012f:  br         IL_0144

      IL_0134:  ldloc.s    V_13
      IL_0136:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_013b:  ldarg.1
      IL_013c:  ldarg.2
      IL_013d:  ldarg.3
      IL_013e:  ldarg.0
      IL_013f:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverData0$PST06000741(uint32,
                                                                                                                        uint16,
                                                                                                                        uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0144:  ldarg.0
      IL_0145:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_014a:  ldarg.0
      IL_014b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0150:  ldc.i4.s   21
      IL_0152:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0157:  br         IL_01d8

      IL_015c:  ldarg.0
      IL_015d:  ldloca.s   V_16
      IL_015f:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0164:  stloc.s    V_17
      IL_0166:  ldloc.s    V_17
      IL_0168:  stloc.s    V_18
      IL_016a:  ldloc.s    V_18
      IL_016c:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0171:  stloc.s    V_19
      IL_0173:  ldloc.s    V_16
      IL_0175:  brtrue     IL_019a

      IL_017a:  ldarg.3
      IL_017b:  stloc.s    V_20
      IL_017d:  ldloc.s    V_19
      IL_017f:  ldloc.s    V_20
      IL_0181:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0186:  ldloc.s    V_18
      IL_0188:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_018d:  ldarg.1
      IL_018e:  ldarg.2
      IL_018f:  ldarg.3
      IL_0190:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverData0$PST06000740(uint32,
                                                                                                                uint16,
                                                                                                                uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0195:  br         IL_01aa

      IL_019a:  ldloc.s    V_18
      IL_019c:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01a1:  ldarg.1
      IL_01a2:  ldarg.2
      IL_01a3:  ldarg.3
      IL_01a4:  ldarg.0
      IL_01a5:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverData0$PST06000741(uint32,
                                                                                                                        uint16,
                                                                                                                        uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01aa:  ldarg.0
      IL_01ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01b0:  ldarg.0
      IL_01b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01b6:  ldc.i4.s   9
      IL_01b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01bd:  br         IL_01d8

      IL_01c2:  ldstr      "can't send Data in state "
      IL_01c7:  ldarg.0
      IL_01c8:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_01cd:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_01d2:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_01d7:  throw

      IL_01d8:  ret
    } // end of method Exp::SendData

    .method public instance void  SendIPAddress(uint32 ip) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       407 (0x197)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_002f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   18
      IL_0016:  beq        IL_007e

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.4
      IL_001d:  beq        IL_00d4

      IL_0022:  ldloc.0
      IL_0023:  ldc.i4.s   16
      IL_0025:  beq        IL_012a

      IL_002a:  br         IL_0180

      IL_002f:  ldarg.0
      IL_0030:  ldloca.s   V_1
      IL_0032:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0037:  stloc.2
      IL_0038:  ldloc.2
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0040:  stloc.s    V_4
      IL_0042:  ldloc.1
      IL_0043:  brtrue     IL_0059

      IL_0048:  ldloc.3
      IL_0049:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_004e:  ldarg.1
      IL_004f:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverIPAddress0$PST06000742(uint32)
      IL_0054:  br         IL_0066

      IL_0059:  ldloc.3
      IL_005a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_005f:  ldarg.1
      IL_0060:  ldarg.0
      IL_0061:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverIPAddress0$PST06000743(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0066:  ldarg.0
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006c:  ldarg.0
      IL_006d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0072:  ldc.i4.s   14
      IL_0074:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0079:  br         IL_0196

      IL_007e:  ldarg.0
      IL_007f:  ldloca.s   V_5
      IL_0081:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0086:  stloc.s    V_6
      IL_0088:  ldloc.s    V_6
      IL_008a:  stloc.s    V_7
      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0093:  stloc.s    V_8
      IL_0095:  ldloc.s    V_5
      IL_0097:  brtrue     IL_00ae

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00a3:  ldarg.1
      IL_00a4:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverIPAddress0$PST06000742(uint32)
      IL_00a9:  br         IL_00bc

      IL_00ae:  ldloc.s    V_7
      IL_00b0:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00b5:  ldarg.1
      IL_00b6:  ldarg.0
      IL_00b7:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverIPAddress0$PST06000743(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00bc:  ldarg.0
      IL_00bd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.s   28
      IL_00ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cf:  br         IL_0196

      IL_00d4:  ldarg.0
      IL_00d5:  ldloca.s   V_9
      IL_00d7:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00dc:  stloc.s    V_10
      IL_00de:  ldloc.s    V_10
      IL_00e0:  stloc.s    V_11
      IL_00e2:  ldloc.s    V_11
      IL_00e4:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00e9:  stloc.s    V_12
      IL_00eb:  ldloc.s    V_9
      IL_00ed:  brtrue     IL_0104

      IL_00f2:  ldloc.s    V_11
      IL_00f4:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00f9:  ldarg.1
      IL_00fa:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverIPAddress0$PST06000742(uint32)
      IL_00ff:  br         IL_0112

      IL_0104:  ldloc.s    V_11
      IL_0106:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_010b:  ldarg.1
      IL_010c:  ldarg.0
      IL_010d:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverIPAddress0$PST06000743(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0112:  ldarg.0
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0118:  ldarg.0
      IL_0119:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_011e:  ldc.i4.s   14
      IL_0120:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0125:  br         IL_0196

      IL_012a:  ldarg.0
      IL_012b:  ldloca.s   V_13
      IL_012d:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0132:  stloc.s    V_14
      IL_0134:  ldloc.s    V_14
      IL_0136:  stloc.s    V_15
      IL_0138:  ldloc.s    V_15
      IL_013a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_013f:  stloc.s    V_16
      IL_0141:  ldloc.s    V_13
      IL_0143:  brtrue     IL_015a

      IL_0148:  ldloc.s    V_15
      IL_014a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_014f:  ldarg.1
      IL_0150:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverIPAddress0$PST06000742(uint32)
      IL_0155:  br         IL_0168

      IL_015a:  ldloc.s    V_15
      IL_015c:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0161:  ldarg.1
      IL_0162:  ldarg.0
      IL_0163:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverIPAddress0$PST06000743(uint32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0168:  ldarg.0
      IL_0169:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_016e:  ldarg.0
      IL_016f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0174:  ldc.i4.s   28
      IL_0176:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_017b:  br         IL_0196

      IL_0180:  ldstr      "can't send IPAddress in state "
      IL_0185:  ldarg.0
      IL_0186:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_018b:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0190:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0195:  throw

      IL_0196:  ret
    } // end of method Exp::SendIPAddress

    .method public instance void  SendPort(uint16 port) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       407 (0x197)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_002f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.s   17
      IL_0016:  beq        IL_007e

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.3
      IL_001d:  beq        IL_00d4

      IL_0022:  ldloc.0
      IL_0023:  ldc.i4.s   15
      IL_0025:  beq        IL_012a

      IL_002a:  br         IL_0180

      IL_002f:  ldarg.0
      IL_0030:  ldloca.s   V_1
      IL_0032:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0037:  stloc.2
      IL_0038:  ldloc.2
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0040:  stloc.s    V_4
      IL_0042:  ldloc.1
      IL_0043:  brtrue     IL_0059

      IL_0048:  ldloc.3
      IL_0049:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_004e:  ldarg.1
      IL_004f:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPort0$PST06000744(uint16)
      IL_0054:  br         IL_0066

      IL_0059:  ldloc.3
      IL_005a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_005f:  ldarg.1
      IL_0060:  ldarg.0
      IL_0061:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPort0$PST06000745(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0066:  ldarg.0
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006c:  ldarg.0
      IL_006d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0072:  ldc.i4.s   14
      IL_0074:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0079:  br         IL_0196

      IL_007e:  ldarg.0
      IL_007f:  ldloca.s   V_5
      IL_0081:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0086:  stloc.s    V_6
      IL_0088:  ldloc.s    V_6
      IL_008a:  stloc.s    V_7
      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0093:  stloc.s    V_8
      IL_0095:  ldloc.s    V_5
      IL_0097:  brtrue     IL_00ae

      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00a3:  ldarg.1
      IL_00a4:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPort0$PST06000744(uint16)
      IL_00a9:  br         IL_00bc

      IL_00ae:  ldloc.s    V_7
      IL_00b0:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00b5:  ldarg.1
      IL_00b6:  ldarg.0
      IL_00b7:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPort0$PST06000745(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00bc:  ldarg.0
      IL_00bd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.s   28
      IL_00ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cf:  br         IL_0196

      IL_00d4:  ldarg.0
      IL_00d5:  ldloca.s   V_9
      IL_00d7:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00dc:  stloc.s    V_10
      IL_00de:  ldloc.s    V_10
      IL_00e0:  stloc.s    V_11
      IL_00e2:  ldloc.s    V_11
      IL_00e4:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00e9:  stloc.s    V_12
      IL_00eb:  ldloc.s    V_9
      IL_00ed:  brtrue     IL_0104

      IL_00f2:  ldloc.s    V_11
      IL_00f4:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00f9:  ldarg.1
      IL_00fa:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPort0$PST06000744(uint16)
      IL_00ff:  br         IL_0112

      IL_0104:  ldloc.s    V_11
      IL_0106:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_010b:  ldarg.1
      IL_010c:  ldarg.0
      IL_010d:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPort0$PST06000745(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0112:  ldarg.0
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0118:  ldarg.0
      IL_0119:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_011e:  ldc.i4.s   14
      IL_0120:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0125:  br         IL_0196

      IL_012a:  ldarg.0
      IL_012b:  ldloca.s   V_13
      IL_012d:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0132:  stloc.s    V_14
      IL_0134:  ldloc.s    V_14
      IL_0136:  stloc.s    V_15
      IL_0138:  ldloc.s    V_15
      IL_013a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_013f:  stloc.s    V_16
      IL_0141:  ldloc.s    V_13
      IL_0143:  brtrue     IL_015a

      IL_0148:  ldloc.s    V_15
      IL_014a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_014f:  ldarg.1
      IL_0150:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPort0$PST06000744(uint16)
      IL_0155:  br         IL_0168

      IL_015a:  ldloc.s    V_15
      IL_015c:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0161:  ldarg.1
      IL_0162:  ldarg.0
      IL_0163:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPort0$PST06000745(uint16,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0168:  ldarg.0
      IL_0169:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_016e:  ldarg.0
      IL_016f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0174:  ldc.i4.s   28
      IL_0176:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_017b:  br         IL_0196

      IL_0180:  ldstr      "can't send Port in state "
      IL_0185:  ldarg.0
      IL_0186:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_018b:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0190:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0195:  throw

      IL_0196:  ret
    } // end of method Exp::SendPort

    .method public instance void  SendPollSelectResult(bool success) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       595 (0x253)
      .maxstack  35
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_003f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_008e

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.s   33
      IL_001d:  beq        IL_00e4

      IL_0022:  ldloc.0
      IL_0023:  ldc.i4.s   32
      IL_0025:  beq        IL_013a

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.s   20
      IL_002d:  beq        IL_0190

      IL_0032:  ldloc.0
      IL_0033:  ldc.i4.s   19
      IL_0035:  beq        IL_01e6

      IL_003a:  br         IL_023c

      IL_003f:  ldarg.0
      IL_0040:  ldloca.s   V_1
      IL_0042:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0047:  stloc.2
      IL_0048:  ldloc.2
      IL_0049:  stloc.3
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0050:  stloc.s    V_4
      IL_0052:  ldloc.1
      IL_0053:  brtrue     IL_0069

      IL_0058:  ldloc.3
      IL_0059:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_005e:  ldarg.1
      IL_005f:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPollSelectResult0$PST06000746(bool)
      IL_0064:  br         IL_0076

      IL_0069:  ldloc.3
      IL_006a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_006f:  ldarg.1
      IL_0070:  ldarg.0
      IL_0071:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPollSelectResult0$PST06000747(bool,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0076:  ldarg.0
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_007c:  ldarg.0
      IL_007d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0082:  ldc.i4.s   14
      IL_0084:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0089:  br         IL_0252

      IL_008e:  ldarg.0
      IL_008f:  ldloca.s   V_5
      IL_0091:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0096:  stloc.s    V_6
      IL_0098:  ldloc.s    V_6
      IL_009a:  stloc.s    V_7
      IL_009c:  ldloc.s    V_7
      IL_009e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00a3:  stloc.s    V_8
      IL_00a5:  ldloc.s    V_5
      IL_00a7:  brtrue     IL_00be

      IL_00ac:  ldloc.s    V_7
      IL_00ae:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00b3:  ldarg.1
      IL_00b4:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPollSelectResult0$PST06000746(bool)
      IL_00b9:  br         IL_00cc

      IL_00be:  ldloc.s    V_7
      IL_00c0:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00c5:  ldarg.1
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPollSelectResult0$PST06000747(bool,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00cc:  ldarg.0
      IL_00cd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00d2:  ldarg.0
      IL_00d3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d8:  ldc.i4.s   14
      IL_00da:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00df:  br         IL_0252

      IL_00e4:  ldarg.0
      IL_00e5:  ldloca.s   V_9
      IL_00e7:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00ec:  stloc.s    V_10
      IL_00ee:  ldloc.s    V_10
      IL_00f0:  stloc.s    V_11
      IL_00f2:  ldloc.s    V_11
      IL_00f4:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_00f9:  stloc.s    V_12
      IL_00fb:  ldloc.s    V_9
      IL_00fd:  brtrue     IL_0114

      IL_0102:  ldloc.s    V_11
      IL_0104:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0109:  ldarg.1
      IL_010a:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPollSelectResult0$PST06000746(bool)
      IL_010f:  br         IL_0122

      IL_0114:  ldloc.s    V_11
      IL_0116:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_011b:  ldarg.1
      IL_011c:  ldarg.0
      IL_011d:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPollSelectResult0$PST06000747(bool,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0122:  ldarg.0
      IL_0123:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0128:  ldarg.0
      IL_0129:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_012e:  ldc.i4.s   28
      IL_0130:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0135:  br         IL_0252

      IL_013a:  ldarg.0
      IL_013b:  ldloca.s   V_13
      IL_013d:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0142:  stloc.s    V_14
      IL_0144:  ldloc.s    V_14
      IL_0146:  stloc.s    V_15
      IL_0148:  ldloc.s    V_15
      IL_014a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_014f:  stloc.s    V_16
      IL_0151:  ldloc.s    V_13
      IL_0153:  brtrue     IL_016a

      IL_0158:  ldloc.s    V_15
      IL_015a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_015f:  ldarg.1
      IL_0160:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPollSelectResult0$PST06000746(bool)
      IL_0165:  br         IL_0178

      IL_016a:  ldloc.s    V_15
      IL_016c:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0171:  ldarg.1
      IL_0172:  ldarg.0
      IL_0173:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPollSelectResult0$PST06000747(bool,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0178:  ldarg.0
      IL_0179:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_017e:  ldarg.0
      IL_017f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0184:  ldc.i4.s   28
      IL_0186:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_018b:  br         IL_0252

      IL_0190:  ldarg.0
      IL_0191:  ldloca.s   V_17
      IL_0193:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0198:  stloc.s    V_18
      IL_019a:  ldloc.s    V_18
      IL_019c:  stloc.s    V_19
      IL_019e:  ldloc.s    V_19
      IL_01a0:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01a5:  stloc.s    V_20
      IL_01a7:  ldloc.s    V_17
      IL_01a9:  brtrue     IL_01c0

      IL_01ae:  ldloc.s    V_19
      IL_01b0:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01b5:  ldarg.1
      IL_01b6:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPollSelectResult0$PST06000746(bool)
      IL_01bb:  br         IL_01ce

      IL_01c0:  ldloc.s    V_19
      IL_01c2:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01c7:  ldarg.1
      IL_01c8:  ldarg.0
      IL_01c9:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPollSelectResult0$PST06000747(bool,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01ce:  ldarg.0
      IL_01cf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01d4:  ldarg.0
      IL_01d5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01da:  ldc.i4.s   28
      IL_01dc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01e1:  br         IL_0252

      IL_01e6:  ldarg.0
      IL_01e7:  ldloca.s   V_21
      IL_01e9:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01ee:  stloc.s    V_22
      IL_01f0:  ldloc.s    V_22
      IL_01f2:  stloc.s    V_23
      IL_01f4:  ldloc.s    V_23
      IL_01f6:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_01fb:  stloc.s    V_24
      IL_01fd:  ldloc.s    V_21
      IL_01ff:  brtrue     IL_0216

      IL_0204:  ldloc.s    V_23
      IL_0206:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_020b:  ldarg.1
      IL_020c:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverPollSelectResult0$PST06000746(bool)
      IL_0211:  br         IL_0224

      IL_0216:  ldloc.s    V_23
      IL_0218:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_021d:  ldarg.1
      IL_021e:  ldarg.0
      IL_021f:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverPollSelectResult0$PST06000747(bool,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0224:  ldarg.0
      IL_0225:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_022a:  ldarg.0
      IL_022b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0230:  ldc.i4.s   28
      IL_0232:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0237:  br         IL_0252

      IL_023c:  ldstr      "can't send PollSelectResult in state "
      IL_0241:  ldarg.0
      IL_0242:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0247:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_024c:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0251:  throw

      IL_0252:  ret
    } // end of method Exp::SendPollSelectResult

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   37
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0038:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::DeliverReady0$PST06000748()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::MarshallDeliverReady0$PST06000749(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   36
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send Ready in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0071:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendReady

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.UdpConnectionContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.UdpConnectionContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.UdpConnectionContract/Exp
      IL_0022:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       2340 (0x924)
      .maxstack  32
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               bool V_31,
               int32 V_32,
               bool V_33,
               int32 V_34,
               bool V_35,
               int32 V_36,
               bool V_37,
               int32 V_38,
               bool V_39,
               int32 V_40,
               bool V_41,
               int32 V_42,
               bool V_43,
               int32 V_44,
               bool V_45,
               int32 V_46,
               bool V_47,
               int32 V_48,
               bool V_49,
               int32 V_50,
               bool V_51,
               int32 V_52,
               bool V_53,
               int32 V_54,
               bool V_55,
               int32 V_56,
               bool V_57,
               int32 V_58,
               bool V_59,
               int32 V_60,
               int32 V_61)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_00f5

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.4
      IL_0017:  beq        IL_0135

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.5
      IL_001e:  beq        IL_017d

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.6
      IL_0025:  beq        IL_01c5

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_020d

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.8
      IL_0033:  beq        IL_0255

      IL_0038:  ldloc.1
      IL_0039:  ldc.i4.s   10
      IL_003b:  beq        IL_029d

      IL_0040:  ldloc.1
      IL_0041:  ldc.i4.s   11
      IL_0043:  beq        IL_02e5

      IL_0048:  ldloc.1
      IL_0049:  ldc.i4.s   13
      IL_004b:  beq        IL_032d

      IL_0050:  ldloc.1
      IL_0051:  ldc.i4.s   14
      IL_0053:  beq        IL_0375

      IL_0058:  ldloc.1
      IL_0059:  ldc.i4.s   15
      IL_005b:  beq        IL_03bd

      IL_0060:  ldloc.1
      IL_0061:  ldc.i4.s   16
      IL_0063:  beq        IL_0405

      IL_0068:  ldloc.1
      IL_0069:  ldc.i4.s   17
      IL_006b:  beq        IL_044d

      IL_0070:  ldloc.1
      IL_0071:  ldc.i4.s   18
      IL_0073:  beq        IL_0495

      IL_0078:  ldloc.1
      IL_0079:  ldc.i4.s   19
      IL_007b:  beq        IL_04dd

      IL_0080:  ldloc.1
      IL_0081:  ldc.i4.s   20
      IL_0083:  beq        IL_0525

      IL_0088:  ldloc.1
      IL_0089:  ldc.i4.s   22
      IL_008b:  beq        IL_056d

      IL_0090:  ldloc.1
      IL_0091:  ldc.i4.s   23
      IL_0093:  beq        IL_05b5

      IL_0098:  ldloc.1
      IL_0099:  ldc.i4.s   25
      IL_009b:  beq        IL_05fd

      IL_00a0:  ldloc.1
      IL_00a1:  ldc.i4.s   27
      IL_00a3:  beq        IL_0645

      IL_00a8:  ldloc.1
      IL_00a9:  ldc.i4.s   28
      IL_00ab:  beq        IL_068d

      IL_00b0:  ldloc.1
      IL_00b1:  ldc.i4.s   29
      IL_00b3:  beq        IL_06d5

      IL_00b8:  ldloc.1
      IL_00b9:  ldc.i4.s   30
      IL_00bb:  beq        IL_071d

      IL_00c0:  ldloc.1
      IL_00c1:  ldc.i4.s   31
      IL_00c3:  beq        IL_0765

      IL_00c8:  ldloc.1
      IL_00c9:  ldc.i4.s   32
      IL_00cb:  beq        IL_07ad

      IL_00d0:  ldloc.1
      IL_00d1:  ldc.i4.s   33
      IL_00d3:  beq        IL_07f5

      IL_00d8:  ldloc.1
      IL_00d9:  ldc.i4.s   35
      IL_00db:  beq        IL_083d

      IL_00e0:  ldloc.1
      IL_00e1:  ldc.i4.s   36
      IL_00e3:  beq        IL_0885

      IL_00e8:  ldloc.1
      IL_00e9:  ldc.i4.s   37
      IL_00eb:  beq        IL_08cd

      IL_00f0:  br         IL_0915

      IL_00f5:  ldc.i4.0
      IL_00f6:  stloc.2
      IL_00f7:  ldarg.0
      IL_00f8:  volatile.
      IL_00fa:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_00ff:  stloc.3
      IL_0100:  ldloc.3
      IL_0101:  brtrue     IL_0116

      IL_0106:  ldarg.0
      IL_0107:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_010c:  stloc.2
      IL_010d:  ldarg.0
      IL_010e:  volatile.
      IL_0110:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0115:  stloc.3
      IL_0116:  ldloc.3
      IL_0117:  ldc.i4.0
      IL_0118:  ceq
      IL_011a:  brfalse    IL_012d

      IL_011f:  ldloc.2
      IL_0120:  brfalse    IL_012d

      IL_0125:  ldc.i4.m1
      IL_0126:  stloc.s    V_4
      IL_0128:  br         IL_091d

      IL_012d:  ldloc.3
      IL_012e:  stloc.s    V_4
      IL_0130:  br         IL_091d

      IL_0135:  ldc.i4.0
      IL_0136:  stloc.s    V_5
      IL_0138:  ldarg.0
      IL_0139:  volatile.
      IL_013b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0140:  stloc.s    V_6
      IL_0142:  ldloc.s    V_6
      IL_0144:  brtrue     IL_015b

      IL_0149:  ldarg.0
      IL_014a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_014f:  stloc.s    V_5
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0159:  stloc.s    V_6
      IL_015b:  ldloc.s    V_6
      IL_015d:  ldc.i4.0
      IL_015e:  ceq
      IL_0160:  brfalse    IL_0174

      IL_0165:  ldloc.s    V_5
      IL_0167:  brfalse    IL_0174

      IL_016c:  ldc.i4.m1
      IL_016d:  stloc.s    V_4
      IL_016f:  br         IL_091d

      IL_0174:  ldloc.s    V_6
      IL_0176:  stloc.s    V_4
      IL_0178:  br         IL_091d

      IL_017d:  ldc.i4.0
      IL_017e:  stloc.s    V_7
      IL_0180:  ldarg.0
      IL_0181:  volatile.
      IL_0183:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0188:  stloc.s    V_8
      IL_018a:  ldloc.s    V_8
      IL_018c:  brtrue     IL_01a3

      IL_0191:  ldarg.0
      IL_0192:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0197:  stloc.s    V_7
      IL_0199:  ldarg.0
      IL_019a:  volatile.
      IL_019c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01a1:  stloc.s    V_8
      IL_01a3:  ldloc.s    V_8
      IL_01a5:  ldc.i4.0
      IL_01a6:  ceq
      IL_01a8:  brfalse    IL_01bc

      IL_01ad:  ldloc.s    V_7
      IL_01af:  brfalse    IL_01bc

      IL_01b4:  ldc.i4.m1
      IL_01b5:  stloc.s    V_4
      IL_01b7:  br         IL_091d

      IL_01bc:  ldloc.s    V_8
      IL_01be:  stloc.s    V_4
      IL_01c0:  br         IL_091d

      IL_01c5:  ldc.i4.0
      IL_01c6:  stloc.s    V_9
      IL_01c8:  ldarg.0
      IL_01c9:  volatile.
      IL_01cb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01d0:  stloc.s    V_10
      IL_01d2:  ldloc.s    V_10
      IL_01d4:  brtrue     IL_01eb

      IL_01d9:  ldarg.0
      IL_01da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01df:  stloc.s    V_9
      IL_01e1:  ldarg.0
      IL_01e2:  volatile.
      IL_01e4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_01e9:  stloc.s    V_10
      IL_01eb:  ldloc.s    V_10
      IL_01ed:  ldc.i4.0
      IL_01ee:  ceq
      IL_01f0:  brfalse    IL_0204

      IL_01f5:  ldloc.s    V_9
      IL_01f7:  brfalse    IL_0204

      IL_01fc:  ldc.i4.m1
      IL_01fd:  stloc.s    V_4
      IL_01ff:  br         IL_091d

      IL_0204:  ldloc.s    V_10
      IL_0206:  stloc.s    V_4
      IL_0208:  br         IL_091d

      IL_020d:  ldc.i4.0
      IL_020e:  stloc.s    V_11
      IL_0210:  ldarg.0
      IL_0211:  volatile.
      IL_0213:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0218:  stloc.s    V_12
      IL_021a:  ldloc.s    V_12
      IL_021c:  brtrue     IL_0233

      IL_0221:  ldarg.0
      IL_0222:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0227:  stloc.s    V_11
      IL_0229:  ldarg.0
      IL_022a:  volatile.
      IL_022c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0231:  stloc.s    V_12
      IL_0233:  ldloc.s    V_12
      IL_0235:  ldc.i4.0
      IL_0236:  ceq
      IL_0238:  brfalse    IL_024c

      IL_023d:  ldloc.s    V_11
      IL_023f:  brfalse    IL_024c

      IL_0244:  ldc.i4.m1
      IL_0245:  stloc.s    V_4
      IL_0247:  br         IL_091d

      IL_024c:  ldloc.s    V_12
      IL_024e:  stloc.s    V_4
      IL_0250:  br         IL_091d

      IL_0255:  ldc.i4.0
      IL_0256:  stloc.s    V_13
      IL_0258:  ldarg.0
      IL_0259:  volatile.
      IL_025b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0260:  stloc.s    V_14
      IL_0262:  ldloc.s    V_14
      IL_0264:  brtrue     IL_027b

      IL_0269:  ldarg.0
      IL_026a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_026f:  stloc.s    V_13
      IL_0271:  ldarg.0
      IL_0272:  volatile.
      IL_0274:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0279:  stloc.s    V_14
      IL_027b:  ldloc.s    V_14
      IL_027d:  ldc.i4.0
      IL_027e:  ceq
      IL_0280:  brfalse    IL_0294

      IL_0285:  ldloc.s    V_13
      IL_0287:  brfalse    IL_0294

      IL_028c:  ldc.i4.m1
      IL_028d:  stloc.s    V_4
      IL_028f:  br         IL_091d

      IL_0294:  ldloc.s    V_14
      IL_0296:  stloc.s    V_4
      IL_0298:  br         IL_091d

      IL_029d:  ldc.i4.0
      IL_029e:  stloc.s    V_15
      IL_02a0:  ldarg.0
      IL_02a1:  volatile.
      IL_02a3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_02a8:  stloc.s    V_16
      IL_02aa:  ldloc.s    V_16
      IL_02ac:  brtrue     IL_02c3

      IL_02b1:  ldarg.0
      IL_02b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02b7:  stloc.s    V_15
      IL_02b9:  ldarg.0
      IL_02ba:  volatile.
      IL_02bc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_02c1:  stloc.s    V_16
      IL_02c3:  ldloc.s    V_16
      IL_02c5:  ldc.i4.0
      IL_02c6:  ceq
      IL_02c8:  brfalse    IL_02dc

      IL_02cd:  ldloc.s    V_15
      IL_02cf:  brfalse    IL_02dc

      IL_02d4:  ldc.i4.m1
      IL_02d5:  stloc.s    V_4
      IL_02d7:  br         IL_091d

      IL_02dc:  ldloc.s    V_16
      IL_02de:  stloc.s    V_4
      IL_02e0:  br         IL_091d

      IL_02e5:  ldc.i4.0
      IL_02e6:  stloc.s    V_17
      IL_02e8:  ldarg.0
      IL_02e9:  volatile.
      IL_02eb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_02f0:  stloc.s    V_18
      IL_02f2:  ldloc.s    V_18
      IL_02f4:  brtrue     IL_030b

      IL_02f9:  ldarg.0
      IL_02fa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02ff:  stloc.s    V_17
      IL_0301:  ldarg.0
      IL_0302:  volatile.
      IL_0304:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0309:  stloc.s    V_18
      IL_030b:  ldloc.s    V_18
      IL_030d:  ldc.i4.0
      IL_030e:  ceq
      IL_0310:  brfalse    IL_0324

      IL_0315:  ldloc.s    V_17
      IL_0317:  brfalse    IL_0324

      IL_031c:  ldc.i4.m1
      IL_031d:  stloc.s    V_4
      IL_031f:  br         IL_091d

      IL_0324:  ldloc.s    V_18
      IL_0326:  stloc.s    V_4
      IL_0328:  br         IL_091d

      IL_032d:  ldc.i4.0
      IL_032e:  stloc.s    V_19
      IL_0330:  ldarg.0
      IL_0331:  volatile.
      IL_0333:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0338:  stloc.s    V_20
      IL_033a:  ldloc.s    V_20
      IL_033c:  brtrue     IL_0353

      IL_0341:  ldarg.0
      IL_0342:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0347:  stloc.s    V_19
      IL_0349:  ldarg.0
      IL_034a:  volatile.
      IL_034c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0351:  stloc.s    V_20
      IL_0353:  ldloc.s    V_20
      IL_0355:  ldc.i4.0
      IL_0356:  ceq
      IL_0358:  brfalse    IL_036c

      IL_035d:  ldloc.s    V_19
      IL_035f:  brfalse    IL_036c

      IL_0364:  ldc.i4.m1
      IL_0365:  stloc.s    V_4
      IL_0367:  br         IL_091d

      IL_036c:  ldloc.s    V_20
      IL_036e:  stloc.s    V_4
      IL_0370:  br         IL_091d

      IL_0375:  ldc.i4.0
      IL_0376:  stloc.s    V_21
      IL_0378:  ldarg.0
      IL_0379:  volatile.
      IL_037b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0380:  stloc.s    V_22
      IL_0382:  ldloc.s    V_22
      IL_0384:  brtrue     IL_039b

      IL_0389:  ldarg.0
      IL_038a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_038f:  stloc.s    V_21
      IL_0391:  ldarg.0
      IL_0392:  volatile.
      IL_0394:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0399:  stloc.s    V_22
      IL_039b:  ldloc.s    V_22
      IL_039d:  ldc.i4.0
      IL_039e:  ceq
      IL_03a0:  brfalse    IL_03b4

      IL_03a5:  ldloc.s    V_21
      IL_03a7:  brfalse    IL_03b4

      IL_03ac:  ldc.i4.m1
      IL_03ad:  stloc.s    V_4
      IL_03af:  br         IL_091d

      IL_03b4:  ldloc.s    V_22
      IL_03b6:  stloc.s    V_4
      IL_03b8:  br         IL_091d

      IL_03bd:  ldc.i4.0
      IL_03be:  stloc.s    V_23
      IL_03c0:  ldarg.0
      IL_03c1:  volatile.
      IL_03c3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_03c8:  stloc.s    V_24
      IL_03ca:  ldloc.s    V_24
      IL_03cc:  brtrue     IL_03e3

      IL_03d1:  ldarg.0
      IL_03d2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03d7:  stloc.s    V_23
      IL_03d9:  ldarg.0
      IL_03da:  volatile.
      IL_03dc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_03e1:  stloc.s    V_24
      IL_03e3:  ldloc.s    V_24
      IL_03e5:  ldc.i4.0
      IL_03e6:  ceq
      IL_03e8:  brfalse    IL_03fc

      IL_03ed:  ldloc.s    V_23
      IL_03ef:  brfalse    IL_03fc

      IL_03f4:  ldc.i4.m1
      IL_03f5:  stloc.s    V_4
      IL_03f7:  br         IL_091d

      IL_03fc:  ldloc.s    V_24
      IL_03fe:  stloc.s    V_4
      IL_0400:  br         IL_091d

      IL_0405:  ldc.i4.0
      IL_0406:  stloc.s    V_25
      IL_0408:  ldarg.0
      IL_0409:  volatile.
      IL_040b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0410:  stloc.s    V_26
      IL_0412:  ldloc.s    V_26
      IL_0414:  brtrue     IL_042b

      IL_0419:  ldarg.0
      IL_041a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_041f:  stloc.s    V_25
      IL_0421:  ldarg.0
      IL_0422:  volatile.
      IL_0424:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0429:  stloc.s    V_26
      IL_042b:  ldloc.s    V_26
      IL_042d:  ldc.i4.0
      IL_042e:  ceq
      IL_0430:  brfalse    IL_0444

      IL_0435:  ldloc.s    V_25
      IL_0437:  brfalse    IL_0444

      IL_043c:  ldc.i4.m1
      IL_043d:  stloc.s    V_4
      IL_043f:  br         IL_091d

      IL_0444:  ldloc.s    V_26
      IL_0446:  stloc.s    V_4
      IL_0448:  br         IL_091d

      IL_044d:  ldc.i4.0
      IL_044e:  stloc.s    V_27
      IL_0450:  ldarg.0
      IL_0451:  volatile.
      IL_0453:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0458:  stloc.s    V_28
      IL_045a:  ldloc.s    V_28
      IL_045c:  brtrue     IL_0473

      IL_0461:  ldarg.0
      IL_0462:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0467:  stloc.s    V_27
      IL_0469:  ldarg.0
      IL_046a:  volatile.
      IL_046c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0471:  stloc.s    V_28
      IL_0473:  ldloc.s    V_28
      IL_0475:  ldc.i4.0
      IL_0476:  ceq
      IL_0478:  brfalse    IL_048c

      IL_047d:  ldloc.s    V_27
      IL_047f:  brfalse    IL_048c

      IL_0484:  ldc.i4.m1
      IL_0485:  stloc.s    V_4
      IL_0487:  br         IL_091d

      IL_048c:  ldloc.s    V_28
      IL_048e:  stloc.s    V_4
      IL_0490:  br         IL_091d

      IL_0495:  ldc.i4.0
      IL_0496:  stloc.s    V_29
      IL_0498:  ldarg.0
      IL_0499:  volatile.
      IL_049b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_04a0:  stloc.s    V_30
      IL_04a2:  ldloc.s    V_30
      IL_04a4:  brtrue     IL_04bb

      IL_04a9:  ldarg.0
      IL_04aa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04af:  stloc.s    V_29
      IL_04b1:  ldarg.0
      IL_04b2:  volatile.
      IL_04b4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_04b9:  stloc.s    V_30
      IL_04bb:  ldloc.s    V_30
      IL_04bd:  ldc.i4.0
      IL_04be:  ceq
      IL_04c0:  brfalse    IL_04d4

      IL_04c5:  ldloc.s    V_29
      IL_04c7:  brfalse    IL_04d4

      IL_04cc:  ldc.i4.m1
      IL_04cd:  stloc.s    V_4
      IL_04cf:  br         IL_091d

      IL_04d4:  ldloc.s    V_30
      IL_04d6:  stloc.s    V_4
      IL_04d8:  br         IL_091d

      IL_04dd:  ldc.i4.0
      IL_04de:  stloc.s    V_31
      IL_04e0:  ldarg.0
      IL_04e1:  volatile.
      IL_04e3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_04e8:  stloc.s    V_32
      IL_04ea:  ldloc.s    V_32
      IL_04ec:  brtrue     IL_0503

      IL_04f1:  ldarg.0
      IL_04f2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04f7:  stloc.s    V_31
      IL_04f9:  ldarg.0
      IL_04fa:  volatile.
      IL_04fc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0501:  stloc.s    V_32
      IL_0503:  ldloc.s    V_32
      IL_0505:  ldc.i4.0
      IL_0506:  ceq
      IL_0508:  brfalse    IL_051c

      IL_050d:  ldloc.s    V_31
      IL_050f:  brfalse    IL_051c

      IL_0514:  ldc.i4.m1
      IL_0515:  stloc.s    V_4
      IL_0517:  br         IL_091d

      IL_051c:  ldloc.s    V_32
      IL_051e:  stloc.s    V_4
      IL_0520:  br         IL_091d

      IL_0525:  ldc.i4.0
      IL_0526:  stloc.s    V_33
      IL_0528:  ldarg.0
      IL_0529:  volatile.
      IL_052b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0530:  stloc.s    V_34
      IL_0532:  ldloc.s    V_34
      IL_0534:  brtrue     IL_054b

      IL_0539:  ldarg.0
      IL_053a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_053f:  stloc.s    V_33
      IL_0541:  ldarg.0
      IL_0542:  volatile.
      IL_0544:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0549:  stloc.s    V_34
      IL_054b:  ldloc.s    V_34
      IL_054d:  ldc.i4.0
      IL_054e:  ceq
      IL_0550:  brfalse    IL_0564

      IL_0555:  ldloc.s    V_33
      IL_0557:  brfalse    IL_0564

      IL_055c:  ldc.i4.m1
      IL_055d:  stloc.s    V_4
      IL_055f:  br         IL_091d

      IL_0564:  ldloc.s    V_34
      IL_0566:  stloc.s    V_4
      IL_0568:  br         IL_091d

      IL_056d:  ldc.i4.0
      IL_056e:  stloc.s    V_35
      IL_0570:  ldarg.0
      IL_0571:  volatile.
      IL_0573:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0578:  stloc.s    V_36
      IL_057a:  ldloc.s    V_36
      IL_057c:  brtrue     IL_0593

      IL_0581:  ldarg.0
      IL_0582:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0587:  stloc.s    V_35
      IL_0589:  ldarg.0
      IL_058a:  volatile.
      IL_058c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0591:  stloc.s    V_36
      IL_0593:  ldloc.s    V_36
      IL_0595:  ldc.i4.0
      IL_0596:  ceq
      IL_0598:  brfalse    IL_05ac

      IL_059d:  ldloc.s    V_35
      IL_059f:  brfalse    IL_05ac

      IL_05a4:  ldc.i4.m1
      IL_05a5:  stloc.s    V_4
      IL_05a7:  br         IL_091d

      IL_05ac:  ldloc.s    V_36
      IL_05ae:  stloc.s    V_4
      IL_05b0:  br         IL_091d

      IL_05b5:  ldc.i4.0
      IL_05b6:  stloc.s    V_37
      IL_05b8:  ldarg.0
      IL_05b9:  volatile.
      IL_05bb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_05c0:  stloc.s    V_38
      IL_05c2:  ldloc.s    V_38
      IL_05c4:  brtrue     IL_05db

      IL_05c9:  ldarg.0
      IL_05ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_05cf:  stloc.s    V_37
      IL_05d1:  ldarg.0
      IL_05d2:  volatile.
      IL_05d4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_05d9:  stloc.s    V_38
      IL_05db:  ldloc.s    V_38
      IL_05dd:  ldc.i4.0
      IL_05de:  ceq
      IL_05e0:  brfalse    IL_05f4

      IL_05e5:  ldloc.s    V_37
      IL_05e7:  brfalse    IL_05f4

      IL_05ec:  ldc.i4.m1
      IL_05ed:  stloc.s    V_4
      IL_05ef:  br         IL_091d

      IL_05f4:  ldloc.s    V_38
      IL_05f6:  stloc.s    V_4
      IL_05f8:  br         IL_091d

      IL_05fd:  ldc.i4.0
      IL_05fe:  stloc.s    V_39
      IL_0600:  ldarg.0
      IL_0601:  volatile.
      IL_0603:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0608:  stloc.s    V_40
      IL_060a:  ldloc.s    V_40
      IL_060c:  brtrue     IL_0623

      IL_0611:  ldarg.0
      IL_0612:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0617:  stloc.s    V_39
      IL_0619:  ldarg.0
      IL_061a:  volatile.
      IL_061c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0621:  stloc.s    V_40
      IL_0623:  ldloc.s    V_40
      IL_0625:  ldc.i4.0
      IL_0626:  ceq
      IL_0628:  brfalse    IL_063c

      IL_062d:  ldloc.s    V_39
      IL_062f:  brfalse    IL_063c

      IL_0634:  ldc.i4.m1
      IL_0635:  stloc.s    V_4
      IL_0637:  br         IL_091d

      IL_063c:  ldloc.s    V_40
      IL_063e:  stloc.s    V_4
      IL_0640:  br         IL_091d

      IL_0645:  ldc.i4.0
      IL_0646:  stloc.s    V_41
      IL_0648:  ldarg.0
      IL_0649:  volatile.
      IL_064b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0650:  stloc.s    V_42
      IL_0652:  ldloc.s    V_42
      IL_0654:  brtrue     IL_066b

      IL_0659:  ldarg.0
      IL_065a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_065f:  stloc.s    V_41
      IL_0661:  ldarg.0
      IL_0662:  volatile.
      IL_0664:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0669:  stloc.s    V_42
      IL_066b:  ldloc.s    V_42
      IL_066d:  ldc.i4.0
      IL_066e:  ceq
      IL_0670:  brfalse    IL_0684

      IL_0675:  ldloc.s    V_41
      IL_0677:  brfalse    IL_0684

      IL_067c:  ldc.i4.m1
      IL_067d:  stloc.s    V_4
      IL_067f:  br         IL_091d

      IL_0684:  ldloc.s    V_42
      IL_0686:  stloc.s    V_4
      IL_0688:  br         IL_091d

      IL_068d:  ldc.i4.0
      IL_068e:  stloc.s    V_43
      IL_0690:  ldarg.0
      IL_0691:  volatile.
      IL_0693:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0698:  stloc.s    V_44
      IL_069a:  ldloc.s    V_44
      IL_069c:  brtrue     IL_06b3

      IL_06a1:  ldarg.0
      IL_06a2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06a7:  stloc.s    V_43
      IL_06a9:  ldarg.0
      IL_06aa:  volatile.
      IL_06ac:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_06b1:  stloc.s    V_44
      IL_06b3:  ldloc.s    V_44
      IL_06b5:  ldc.i4.0
      IL_06b6:  ceq
      IL_06b8:  brfalse    IL_06cc

      IL_06bd:  ldloc.s    V_43
      IL_06bf:  brfalse    IL_06cc

      IL_06c4:  ldc.i4.m1
      IL_06c5:  stloc.s    V_4
      IL_06c7:  br         IL_091d

      IL_06cc:  ldloc.s    V_44
      IL_06ce:  stloc.s    V_4
      IL_06d0:  br         IL_091d

      IL_06d5:  ldc.i4.0
      IL_06d6:  stloc.s    V_45
      IL_06d8:  ldarg.0
      IL_06d9:  volatile.
      IL_06db:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_06e0:  stloc.s    V_46
      IL_06e2:  ldloc.s    V_46
      IL_06e4:  brtrue     IL_06fb

      IL_06e9:  ldarg.0
      IL_06ea:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06ef:  stloc.s    V_45
      IL_06f1:  ldarg.0
      IL_06f2:  volatile.
      IL_06f4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_06f9:  stloc.s    V_46
      IL_06fb:  ldloc.s    V_46
      IL_06fd:  ldc.i4.0
      IL_06fe:  ceq
      IL_0700:  brfalse    IL_0714

      IL_0705:  ldloc.s    V_45
      IL_0707:  brfalse    IL_0714

      IL_070c:  ldc.i4.m1
      IL_070d:  stloc.s    V_4
      IL_070f:  br         IL_091d

      IL_0714:  ldloc.s    V_46
      IL_0716:  stloc.s    V_4
      IL_0718:  br         IL_091d

      IL_071d:  ldc.i4.0
      IL_071e:  stloc.s    V_47
      IL_0720:  ldarg.0
      IL_0721:  volatile.
      IL_0723:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0728:  stloc.s    V_48
      IL_072a:  ldloc.s    V_48
      IL_072c:  brtrue     IL_0743

      IL_0731:  ldarg.0
      IL_0732:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0737:  stloc.s    V_47
      IL_0739:  ldarg.0
      IL_073a:  volatile.
      IL_073c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0741:  stloc.s    V_48
      IL_0743:  ldloc.s    V_48
      IL_0745:  ldc.i4.0
      IL_0746:  ceq
      IL_0748:  brfalse    IL_075c

      IL_074d:  ldloc.s    V_47
      IL_074f:  brfalse    IL_075c

      IL_0754:  ldc.i4.m1
      IL_0755:  stloc.s    V_4
      IL_0757:  br         IL_091d

      IL_075c:  ldloc.s    V_48
      IL_075e:  stloc.s    V_4
      IL_0760:  br         IL_091d

      IL_0765:  ldc.i4.0
      IL_0766:  stloc.s    V_49
      IL_0768:  ldarg.0
      IL_0769:  volatile.
      IL_076b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0770:  stloc.s    V_50
      IL_0772:  ldloc.s    V_50
      IL_0774:  brtrue     IL_078b

      IL_0779:  ldarg.0
      IL_077a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_077f:  stloc.s    V_49
      IL_0781:  ldarg.0
      IL_0782:  volatile.
      IL_0784:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0789:  stloc.s    V_50
      IL_078b:  ldloc.s    V_50
      IL_078d:  ldc.i4.0
      IL_078e:  ceq
      IL_0790:  brfalse    IL_07a4

      IL_0795:  ldloc.s    V_49
      IL_0797:  brfalse    IL_07a4

      IL_079c:  ldc.i4.m1
      IL_079d:  stloc.s    V_4
      IL_079f:  br         IL_091d

      IL_07a4:  ldloc.s    V_50
      IL_07a6:  stloc.s    V_4
      IL_07a8:  br         IL_091d

      IL_07ad:  ldc.i4.0
      IL_07ae:  stloc.s    V_51
      IL_07b0:  ldarg.0
      IL_07b1:  volatile.
      IL_07b3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_07b8:  stloc.s    V_52
      IL_07ba:  ldloc.s    V_52
      IL_07bc:  brtrue     IL_07d3

      IL_07c1:  ldarg.0
      IL_07c2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_07c7:  stloc.s    V_51
      IL_07c9:  ldarg.0
      IL_07ca:  volatile.
      IL_07cc:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_07d1:  stloc.s    V_52
      IL_07d3:  ldloc.s    V_52
      IL_07d5:  ldc.i4.0
      IL_07d6:  ceq
      IL_07d8:  brfalse    IL_07ec

      IL_07dd:  ldloc.s    V_51
      IL_07df:  brfalse    IL_07ec

      IL_07e4:  ldc.i4.m1
      IL_07e5:  stloc.s    V_4
      IL_07e7:  br         IL_091d

      IL_07ec:  ldloc.s    V_52
      IL_07ee:  stloc.s    V_4
      IL_07f0:  br         IL_091d

      IL_07f5:  ldc.i4.0
      IL_07f6:  stloc.s    V_53
      IL_07f8:  ldarg.0
      IL_07f9:  volatile.
      IL_07fb:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0800:  stloc.s    V_54
      IL_0802:  ldloc.s    V_54
      IL_0804:  brtrue     IL_081b

      IL_0809:  ldarg.0
      IL_080a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_080f:  stloc.s    V_53
      IL_0811:  ldarg.0
      IL_0812:  volatile.
      IL_0814:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0819:  stloc.s    V_54
      IL_081b:  ldloc.s    V_54
      IL_081d:  ldc.i4.0
      IL_081e:  ceq
      IL_0820:  brfalse    IL_0834

      IL_0825:  ldloc.s    V_53
      IL_0827:  brfalse    IL_0834

      IL_082c:  ldc.i4.m1
      IL_082d:  stloc.s    V_4
      IL_082f:  br         IL_091d

      IL_0834:  ldloc.s    V_54
      IL_0836:  stloc.s    V_4
      IL_0838:  br         IL_091d

      IL_083d:  ldc.i4.0
      IL_083e:  stloc.s    V_55
      IL_0840:  ldarg.0
      IL_0841:  volatile.
      IL_0843:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0848:  stloc.s    V_56
      IL_084a:  ldloc.s    V_56
      IL_084c:  brtrue     IL_0863

      IL_0851:  ldarg.0
      IL_0852:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0857:  stloc.s    V_55
      IL_0859:  ldarg.0
      IL_085a:  volatile.
      IL_085c:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0861:  stloc.s    V_56
      IL_0863:  ldloc.s    V_56
      IL_0865:  ldc.i4.0
      IL_0866:  ceq
      IL_0868:  brfalse    IL_087c

      IL_086d:  ldloc.s    V_55
      IL_086f:  brfalse    IL_087c

      IL_0874:  ldc.i4.m1
      IL_0875:  stloc.s    V_4
      IL_0877:  br         IL_091d

      IL_087c:  ldloc.s    V_56
      IL_087e:  stloc.s    V_4
      IL_0880:  br         IL_091d

      IL_0885:  ldc.i4.0
      IL_0886:  stloc.s    V_57
      IL_0888:  ldarg.0
      IL_0889:  volatile.
      IL_088b:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0890:  stloc.s    V_58
      IL_0892:  ldloc.s    V_58
      IL_0894:  brtrue     IL_08ab

      IL_0899:  ldarg.0
      IL_089a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_089f:  stloc.s    V_57
      IL_08a1:  ldarg.0
      IL_08a2:  volatile.
      IL_08a4:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_08a9:  stloc.s    V_58
      IL_08ab:  ldloc.s    V_58
      IL_08ad:  ldc.i4.0
      IL_08ae:  ceq
      IL_08b0:  brfalse    IL_08c4

      IL_08b5:  ldloc.s    V_57
      IL_08b7:  brfalse    IL_08c4

      IL_08bc:  ldc.i4.m1
      IL_08bd:  stloc.s    V_4
      IL_08bf:  br         IL_091d

      IL_08c4:  ldloc.s    V_58
      IL_08c6:  stloc.s    V_4
      IL_08c8:  br         IL_091d

      IL_08cd:  ldc.i4.0
      IL_08ce:  stloc.s    V_59
      IL_08d0:  ldarg.0
      IL_08d1:  volatile.
      IL_08d3:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_08d8:  stloc.s    V_60
      IL_08da:  ldloc.s    V_60
      IL_08dc:  brtrue     IL_08f3

      IL_08e1:  ldarg.0
      IL_08e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_08e7:  stloc.s    V_59
      IL_08e9:  ldarg.0
      IL_08ea:  volatile.
      IL_08ec:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_08f1:  stloc.s    V_60
      IL_08f3:  ldloc.s    V_60
      IL_08f5:  ldc.i4.0
      IL_08f6:  ceq
      IL_08f8:  brfalse    IL_090c

      IL_08fd:  ldloc.s    V_59
      IL_08ff:  brfalse    IL_090c

      IL_0904:  ldc.i4.m1
      IL_0905:  stloc.s    V_4
      IL_0907:  br         IL_091d

      IL_090c:  ldloc.s    V_60
      IL_090e:  stloc.s    V_4
      IL_0910:  br         IL_091d

      IL_0915:  ldc.i4.m1
      IL_0916:  stloc.s    V_4
      IL_0918:  br         IL_091d

      IL_091d:  ldloc.s    V_4
      IL_091f:  stloc.s    V_61
      IL_0921:  ldloc.s    V_4
      IL_0923:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.UdpConnectionContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverBindLocalEndPoint0$PST06000771(uint32 srcIP,
                                                                              uint16 srcPort) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::BindLocalEndPointPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint::srcIP
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::BindLocalEndPointPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint::srcPort
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.2
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.2
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0028:  ret
    } // end of method Exp::DeliverBindLocalEndPoint0

    .method privatescope instance void  MarshallDeliverBindLocalEndPoint0$PST06000772(uint32 srcIP,
                                                                                      uint16 srcPort,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverBindLocalEndPoint0$PST06000771(uint32,
                                                                                                                             uint16)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::BindLocalEndPointPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0016:  call       instance void NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint::MarshallAll(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverBindLocalEndPoint0

    .method privatescope instance void  DeliverConnectWithAnyLocalEndPoint0$PST06000773(uint32 dstIP,
                                                                                        uint16 dstPort) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::ConnectWithAnyLocalEndPointPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint::dstIP
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::ConnectWithAnyLocalEndPointPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint::dstPort
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.3
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.3
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0028:  ret
    } // end of method Exp::DeliverConnectWithAnyLocalEndPoint0

    .method privatescope instance void  MarshallDeliverConnectWithAnyLocalEndPoint0$PST06000774(uint32 dstIP,
                                                                                                uint16 dstPort,
                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverConnectWithAnyLocalEndPoint0$PST06000773(uint32,
                                                                                                                                       uint16)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint NetStack.Contracts.UdpConnectionContract/Exp::ConnectWithAnyLocalEndPointPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0016:  call       instance void NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverConnectWithAnyLocalEndPoint0

    .method privatescope instance void  DeliverConnect0$PST06000775(uint32 srcIP,
                                                                    uint16 srcPort,
                                                                    uint32 dstIP,
                                                                    uint16 dstPort) cil managed
    {
      // Code size       66 (0x42)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/Connect::srcIP
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/Connect::srcPort
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/Connect::dstIP
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_002a:  ldarg.s    dstPort
      IL_002c:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/Connect::dstPort
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.4
      IL_0033:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0038:  ldarg.0
      IL_0039:  ldc.i4.4
      IL_003a:  volatile.
      IL_003c:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0041:  ret
    } // end of method Exp::DeliverConnect0

    .method privatescope instance void  MarshallDeliverConnect0$PST06000776(uint32 srcIP,
                                                                            uint16 srcPort,
                                                                            uint32 dstIP,
                                                                            uint16 dstPort,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    dstPort
      IL_0006:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverConnect0$PST06000775(uint32,
                                                                                                                   uint16,
                                                                                                                   uint32,
                                                                                                                   uint16)
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Connect NetStack.Contracts.UdpConnectionContract/Exp::ConnectPod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_001a:  call       instance void NetStack.Contracts.UdpConnectionContract/Connect::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_001f:  ret
    } // end of method Exp::MarshallDeliverConnect0

    .method privatescope instance void  DeliverWrite0$PST06000777(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Write NetStack.Contracts.UdpConnectionContract/Exp::WritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverWrite0

    .method privatescope instance void  MarshallDeliverWrite0$PST06000778(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverWrite0$PST06000777(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Write NetStack.Contracts.UdpConnectionContract/Exp::WritePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.UdpConnectionContract/Write::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverWrite0

    .method privatescope instance void  DeliverWriteTo0$PST06000779(uint32 dstIP,
                                                                    uint16 dstPort,
                                                                    uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .param [3]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       53 (0x35)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 NetStack.Contracts.UdpConnectionContract/WriteTo::dstIP
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint16 NetStack.Contracts.UdpConnectionContract/WriteTo::dstPort
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.6
      IL_0026:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldc.i4.6
      IL_002d:  volatile.
      IL_002f:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0034:  ret
    } // end of method Exp::DeliverWriteTo0

    .method privatescope instance void  MarshallDeliverWriteTo0$PST0600077A(uint32 dstIP,
                                                                            uint16 dstPort,
                                                                            uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [3]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverWriteTo0$PST06000779(uint32,
                                                                                                                   uint16,
                                                                                                                   uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/WriteTo NetStack.Contracts.UdpConnectionContract/Exp::WriteToPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/WriteTo::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverWriteTo0

    .method privatescope instance void  DeliverRead0$PST0600077B() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverRead0

    .method privatescope instance void  MarshallDeliverRead0$PST0600077C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverRead0$PST0600077B()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Read NetStack.Contracts.UdpConnectionContract/Exp::ReadPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/Read::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverRead0

    .method privatescope instance void  DeliverPollRead0$PST0600077D(int32 timeoutMillis) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollRead NetStack.Contracts.UdpConnectionContract/Exp::PollReadPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 NetStack.Contracts.UdpConnectionContract/PollRead::timeoutMillis
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.8
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.8
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverPollRead0

    .method privatescope instance void  MarshallDeliverPollRead0$PST0600077E(int32 timeoutMillis,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollRead0$PST0600077D(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollRead NetStack.Contracts.UdpConnectionContract/Exp::PollReadPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.UdpConnectionContract/PollRead::MarshallAll(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverPollRead0

    .method privatescope instance void  DeliverPollSelectRead0$PST0600077F(int32 timeoutMillis) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead NetStack.Contracts.UdpConnectionContract/Exp::PollSelectReadPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 NetStack.Contracts.UdpConnectionContract/PollSelectRead::timeoutMillis
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverPollSelectRead0

    .method privatescope instance void  MarshallDeliverPollSelectRead0$PST06000780(int32 timeoutMillis,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollSelectRead0$PST0600077F(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead NetStack.Contracts.UdpConnectionContract/Exp::PollSelectReadPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.UdpConnectionContract/PollSelectRead::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverPollSelectRead0

    .method privatescope instance void  DeliverPollSelectWrite0$PST06000781(int32 timeoutMillis) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite NetStack.Contracts.UdpConnectionContract/Exp::PollSelectWritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 NetStack.Contracts.UdpConnectionContract/PollSelectWrite::timeoutMillis
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverPollSelectWrite0

    .method privatescope instance void  MarshallDeliverPollSelectWrite0$PST06000782(int32 timeoutMillis,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverPollSelectWrite0$PST06000781(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite NetStack.Contracts.UdpConnectionContract/Exp::PollSelectWritePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.UdpConnectionContract/PollSelectWrite::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverPollSelectWrite0

    .method privatescope instance void  DeliverClose0$PST06000783() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverClose0

    .method privatescope instance void  MarshallDeliverClose0$PST06000784(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverClose0$PST06000783()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Close NetStack.Contracts.UdpConnectionContract/Exp::ClosePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/Close::MarshallAll(uint8*,
                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverClose0

    .method privatescope instance void  DeliverGetLocalAddress0$PST06000785() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetLocalAddress0

    .method privatescope instance void  MarshallDeliverGetLocalAddress0$PST06000786(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetLocalAddress0$PST06000785()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress NetStack.Contracts.UdpConnectionContract/Exp::GetLocalAddressPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/GetLocalAddress::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetLocalAddress0

    .method privatescope instance void  DeliverGetLocalPort0$PST06000787() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   13
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   13
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetLocalPort0

    .method privatescope instance void  MarshallDeliverGetLocalPort0$PST06000788(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetLocalPort0$PST06000787()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort NetStack.Contracts.UdpConnectionContract/Exp::GetLocalPortPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/GetLocalPort::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetLocalPort0

    .method privatescope instance void  DeliverGetRemoteAddress0$PST06000789() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   14
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   14
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetRemoteAddress0

    .method privatescope instance void  MarshallDeliverGetRemoteAddress0$PST0600078A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetRemoteAddress0$PST06000789()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress NetStack.Contracts.UdpConnectionContract/Exp::GetRemoteAddressPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/GetRemoteAddress::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetRemoteAddress0

    .method privatescope instance void  DeliverGetRemotePort0$PST0600078B() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   15
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   15
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetRemotePort0

    .method privatescope instance void  MarshallDeliverGetRemotePort0$PST0600078C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::DeliverGetRemotePort0$PST0600078B()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort NetStack.Contracts.UdpConnectionContract/Exp::GetRemotePortPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpConnectionContract/Exp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpConnectionContract/GetRemotePort::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetRemotePort0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname BindLocalEndPoint
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 srcIP
    .field public uint16 srcPort
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BindLocalEndPoint::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BindLocalEndPoint::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint::MarshallContent(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     uint8*,
                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method BindLocalEndPoint::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method BindLocalEndPoint::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BindLocalEndPoint::Release

  } // end of class BindLocalEndPoint

  .class sequential ansi sealed nested public specialname ConnectWithAnyLocalEndPoint
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 dstIP
    .field public uint16 dstPort
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectWithAnyLocalEndPoint::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ConnectWithAnyLocalEndPoint::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ConnectWithAnyLocalEndPoint::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method ConnectWithAnyLocalEndPoint::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ConnectWithAnyLocalEndPoint::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectWithAnyLocalEndPoint::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectWithAnyLocalEndPoint::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectWithAnyLocalEndPoint::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectWithAnyLocalEndPoint::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectWithAnyLocalEndPoint::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ConnectWithAnyLocalEndPoint::Release

  } // end of class ConnectWithAnyLocalEndPoint

  .class sequential ansi sealed nested public specialname Connect
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 srcIP
    .field public uint16 srcPort
    .field public uint32 dstIP
    .field public uint16 dstPort
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/Connect
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Connect::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Connect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Connect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Release

  } // end of class Connect

  .class sequential ansi sealed nested public specialname Write
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Write::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/Write
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Write::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Write::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Write::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_0008:  ldtoken    [kernel]System.Byte
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Write::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Write::data
      IL_001a:  ret
    } // end of method Write::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Release

  } // end of class Write

  .class sequential ansi sealed nested public specialname WriteTo
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint32 dstIP
    .field public uint16 dstPort
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method WriteTo::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/WriteTo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WriteTo::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/WriteTo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WriteTo::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/WriteTo
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/WriteTo::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method WriteTo::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/WriteTo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method WriteTo::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_0008:  ldtoken    [kernel]System.Byte
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method WriteTo::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/WriteTo::data
      IL_001a:  ret
    } // end of method WriteTo::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WriteTo::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WriteTo::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WriteTo::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WriteTo::Release

  } // end of class WriteTo

  .class sequential ansi sealed nested public specialname Read
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/Read
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Read::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Read::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Read::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Release

  } // end of class Read

  .class sequential ansi sealed nested public specialname PollRead
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 timeoutMillis
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/PollRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollRead::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/PollRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollRead::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/PollRead
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/PollRead::MarshallContent(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            uint8*,
                                                                                                            int32&)
      IL_001d:  ret
    } // end of method PollRead::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/PollRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PollRead::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollRead::Release

  } // end of class PollRead

  .class sequential ansi sealed nested public specialname PollSelectRead
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 timeoutMillis
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectRead::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollSelectRead::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollSelectRead::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/PollSelectRead
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/PollSelectRead::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method PollSelectRead::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PollSelectRead::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectRead::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectRead::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectRead::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectRead::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectRead::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectRead::Release

  } // end of class PollSelectRead

  .class sequential ansi sealed nested public specialname PollSelectWrite
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 timeoutMillis
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollSelectWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollSelectWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/PollSelectWrite
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/PollSelectWrite::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method PollSelectWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PollSelectWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectWrite::Release

  } // end of class PollSelectWrite

  .class sequential ansi sealed nested public specialname Close
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Close::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Close::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/Close
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Close::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Close::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Close::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Release

  } // end of class Close

  .class sequential ansi sealed nested public specialname GetLocalAddress
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLocalAddress::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLocalAddress::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/GetLocalAddress
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/GetLocalAddress::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method GetLocalAddress::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetLocalAddress::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalAddress::Release

  } // end of class GetLocalAddress

  .class sequential ansi sealed nested public specialname GetLocalPort
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLocalPort::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLocalPort::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/GetLocalPort
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/GetLocalPort::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*,
                                                                                                                int32&)
      IL_001d:  ret
    } // end of method GetLocalPort::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetLocalPort::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLocalPort::Release

  } // end of class GetLocalPort

  .class sequential ansi sealed nested public specialname GetRemoteAddress
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRemoteAddress::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRemoteAddress::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/GetRemoteAddress
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/GetRemoteAddress::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method GetRemoteAddress::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetRemoteAddress::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemoteAddress::Release

  } // end of class GetRemoteAddress

  .class sequential ansi sealed nested public specialname GetRemotePort
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRemotePort::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetRemotePort::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/GetRemotePort
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/GetRemotePort::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method GetRemotePort::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetRemotePort::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetRemotePort::Release

  } // end of class GetRemotePort

  .class sequential ansi sealed nested public specialname OK
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method OK::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method OK::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/OK
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/OK::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*,
                                                                                                      int32&)
      IL_001d:  ret
    } // end of method OK::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/OK* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method OK::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method OK::Release

  } // end of class OK

  .class sequential ansi sealed nested public specialname InvalidEndPoint
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint32 ip
    .field public uint16 port
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InvalidEndPoint::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InvalidEndPoint::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/InvalidEndPoint
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/InvalidEndPoint::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method InvalidEndPoint::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method InvalidEndPoint::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidEndPoint::Release

  } // end of class InvalidEndPoint

  .class sequential ansi sealed nested public specialname DataTooLarge
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataTooLarge::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DataTooLarge::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DataTooLarge::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/DataTooLarge
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/DataTooLarge::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*,
                                                                                                                int32&)
      IL_001d:  ret
    } // end of method DataTooLarge::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DataTooLarge::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataTooLarge::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataTooLarge::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataTooLarge::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataTooLarge::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataTooLarge::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DataTooLarge::Release

  } // end of class DataTooLarge

  .class sequential ansi sealed nested public specialname NoData
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/NoData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoData::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/NoData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoData::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/NoData
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/NoData::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method NoData::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/NoData* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NoData::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoData::Release

  } // end of class NoData

  .class sequential ansi sealed nested public specialname Data
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint32 srcAddr
    .field public uint16 srcPort
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Data::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Data* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Data::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Data* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Data::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/Data
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Data::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Data::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Data* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Data::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0008:  ldtoken    [kernel]System.Byte
      IL_000d:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Data::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) NetStack.Contracts.UdpConnectionContract/Data::data
      IL_001a:  ret
    } // end of method Data::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Data::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Data::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Data::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Data::Release

  } // end of class Data

  .class sequential ansi sealed nested public specialname IPAddress
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint32 ip
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/IPAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IPAddress::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/IPAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method IPAddress::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/IPAddress
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/IPAddress::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method IPAddress::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/IPAddress* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method IPAddress::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method IPAddress::Release

  } // end of class IPAddress

  .class sequential ansi sealed nested public specialname Port
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint16 port
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Port* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Port::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Port* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Port::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/Port
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Port::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Port::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Port* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Port::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Port::Release

  } // end of class Port

  .class sequential ansi sealed nested public specialname PollSelectResult
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public bool success
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectResult::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollSelectResult::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollSelectResult::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/PollSelectResult
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/PollSelectResult::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method PollSelectResult::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PollSelectResult::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectResult::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectResult::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectResult::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectResult::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectResult::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollSelectResult::Release

  } // end of class PollSelectResult

  .class sequential ansi sealed nested public specialname Ready
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpConnectionContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpConnectionContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpConnectionContract/Ready
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Ready::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpConnectionContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class abstract auto ansi nested public specialname Start
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000025)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ReadyState 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000024)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ReadyState$0 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/WriteTo msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ReadyState$2 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ReadyState$3 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ConnectResult 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/Connect msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ConnectResult 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/ConnectWithAnyLocalEndPoint msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/BindResult 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/BindLocalEndPoint msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/Close msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000023)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ReadyState$1 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/OK msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ReadyState$1 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ReadyState$1 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .class abstract auto ansi nested public specialname ReadyState$1
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000022)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Start 
            Epsilon() cil managed
    {
    } // end of method ReadyState$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$1::.ctor

  } // end of class ReadyState$1

  .class abstract auto ansi nested public specialname ReadyState$2
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000021)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult msg) cil managed
    {
    } // end of method ReadyState$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$2::.ctor

  } // end of class ReadyState$2

  .class abstract auto ansi nested public specialname ReadyState$3
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000020)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$3::.ctor

  } // end of class ReadyState$3

  .class abstract auto ansi nested public specialname ConnectResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001F)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/OK msg) cil managed
    {
    } // end of method ConnectResult::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Start 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint msg) cil managed
    {
    } // end of method ConnectResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ConnectResult::.ctor

  } // end of class ConnectResult

  .class abstract auto ansi nested public specialname BindResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001E)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/OK msg) cil managed
    {
    } // end of method BindResult::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Start 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint msg) cil managed
    {
    } // end of method BindResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method BindResult::.ctor

  } // end of class BindResult

  .class abstract auto ansi nested public specialname ConnectFromLocallyBoundResult
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001D)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/OK msg) cil managed
    {
    } // end of method ConnectFromLocallyBoundResult::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint msg) cil managed
    {
    } // end of method ConnectFromLocallyBoundResult::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ConnectFromLocallyBoundResult::.ctor

  } // end of class ConnectFromLocallyBoundResult

  .class abstract auto ansi nested public specialname Connected
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001C)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$4 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/Write msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$6 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/WriteTo msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$8 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/Read msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$9 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/PollRead msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$11 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$12 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/Close msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$13 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$14 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$15 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress msg) cil managed
    {
    } // end of method Connected::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$16 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort msg) cil managed
    {
    } // end of method Connected::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected::.ctor

  } // end of class Connected

  .class abstract auto ansi nested public specialname Connected$4
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001B)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$5 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/OK msg) cil managed
    {
    } // end of method Connected$4::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$5 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge msg) cil managed
    {
    } // end of method Connected$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$4::.ctor

  } // end of class Connected$4

  .class abstract auto ansi nested public specialname Connected$5
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001A)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Epsilon() cil managed
    {
    } // end of method Connected$5::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$5::.ctor

  } // end of class Connected$5

  .class abstract auto ansi nested public specialname Connected$6
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000019)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$7 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/OK msg) cil managed
    {
    } // end of method Connected$6::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$7 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint msg) cil managed
    {
    } // end of method Connected$6::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$7 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge msg) cil managed
    {
    } // end of method Connected$6::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$6::.ctor

  } // end of class Connected$6

  .class abstract auto ansi nested public specialname Connected$7
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000018)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Epsilon() cil managed
    {
    } // end of method Connected$7::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$7::.ctor

  } // end of class Connected$7

  .class abstract auto ansi nested public specialname Connected$8
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000017)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Data msg) cil managed
    {
    } // end of method Connected$8::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$8::.ctor

  } // end of class Connected$8

  .class abstract auto ansi nested public specialname Connected$9
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000016)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$10 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Data msg) cil managed
    {
    } // end of method Connected$9::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected$10 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/NoData msg) cil managed
    {
    } // end of method Connected$9::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$9::.ctor

  } // end of class Connected$9

  .class abstract auto ansi nested public specialname Connected$10
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000015)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Epsilon() cil managed
    {
    } // end of method Connected$10::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$10::.ctor

  } // end of class Connected$10

  .class abstract auto ansi nested public specialname Connected$11
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000014)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult msg) cil managed
    {
    } // end of method Connected$11::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$11::.ctor

  } // end of class Connected$11

  .class abstract auto ansi nested public specialname Connected$12
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000013)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult msg) cil managed
    {
    } // end of method Connected$12::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$12::.ctor

  } // end of class Connected$12

  .class abstract auto ansi nested public specialname Connected$13
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000012)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method Connected$13::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$13::.ctor

  } // end of class Connected$13

  .class abstract auto ansi nested public specialname Connected$14
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000011)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Port msg) cil managed
    {
    } // end of method Connected$14::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$14::.ctor

  } // end of class Connected$14

  .class abstract auto ansi nested public specialname Connected$15
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000010)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method Connected$15::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$15::.ctor

  } // end of class Connected$15

  .class abstract auto ansi nested public specialname Connected$16
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000F)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Connected 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Port msg) cil managed
    {
    } // end of method Connected$16::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connected$16::.ctor

  } // end of class Connected$16

  .class abstract auto ansi nested public specialname LocallyBound
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$17 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/WriteTo msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/ConnectFromLocallyBoundResult 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/Connect msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$19 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/Read msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$20 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/PollRead msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$22 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectRead msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$23 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectWrite msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/Closed 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/Close msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$24 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/GetLocalAddress msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$25 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/GetLocalPort msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$26 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/GetRemoteAddress msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$27 
            Recv(valuetype NetStack.Contracts.UdpConnectionContract/GetRemotePort msg) cil managed
    {
    } // end of method LocallyBound::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound::.ctor

  } // end of class LocallyBound

  .class abstract auto ansi nested public specialname LocallyBound$17
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$18 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/OK msg) cil managed
    {
    } // end of method LocallyBound$17::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$18 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/InvalidEndPoint msg) cil managed
    {
    } // end of method LocallyBound$17::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$18 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/DataTooLarge msg) cil managed
    {
    } // end of method LocallyBound$17::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$17::.ctor

  } // end of class LocallyBound$17

  .class abstract auto ansi nested public specialname LocallyBound$18
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Epsilon() cil managed
    {
    } // end of method LocallyBound$18::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$18::.ctor

  } // end of class LocallyBound$18

  .class abstract auto ansi nested public specialname LocallyBound$19
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Data msg) cil managed
    {
    } // end of method LocallyBound$19::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$19::.ctor

  } // end of class LocallyBound$19

  .class abstract auto ansi nested public specialname LocallyBound$20
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$21 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Data msg) cil managed
    {
    } // end of method LocallyBound$20::Send

    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound$21 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/NoData msg) cil managed
    {
    } // end of method LocallyBound$20::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$20::.ctor

  } // end of class LocallyBound$20

  .class abstract auto ansi nested public specialname LocallyBound$21
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Epsilon() cil managed
    {
    } // end of method LocallyBound$21::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$21::.ctor

  } // end of class LocallyBound$21

  .class abstract auto ansi nested public specialname LocallyBound$22
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult msg) cil managed
    {
    } // end of method LocallyBound$22::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$22::.ctor

  } // end of class LocallyBound$22

  .class abstract auto ansi nested public specialname LocallyBound$23
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/PollSelectResult msg) cil managed
    {
    } // end of method LocallyBound$23::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$23::.ctor

  } // end of class LocallyBound$23

  .class abstract auto ansi nested public specialname LocallyBound$24
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method LocallyBound$24::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$24::.ctor

  } // end of class LocallyBound$24

  .class abstract auto ansi nested public specialname LocallyBound$25
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Port msg) cil managed
    {
    } // end of method LocallyBound$25::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$25::.ctor

  } // end of class LocallyBound$25

  .class abstract auto ansi nested public specialname LocallyBound$26
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/IPAddress msg) cil managed
    {
    } // end of method LocallyBound$26::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$26::.ctor

  } // end of class LocallyBound$26

  .class abstract auto ansi nested public specialname LocallyBound$27
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class NetStack.Contracts.UdpConnectionContract/LocallyBound 
            Send(valuetype NetStack.Contracts.UdpConnectionContract/Port msg) cil managed
    {
    } // end of method LocallyBound$27::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LocallyBound$27::.ctor

  } // end of class LocallyBound$27

  .class abstract auto ansi nested public specialname Closed
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Closed::.ctor

  } // end of class Closed

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       74 (0x4a)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.UdpConnectionContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
    IL_0017:  ldc.i4.s   37
    IL_0019:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::.ctor(int32)
    IL_001e:  ldloc.0
    IL_001f:  stind.i
    IL_0020:  ldarg.0
    IL_0021:  ldtoken    NetStack.Contracts.UdpConnectionContract/Imp
    IL_0026:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0030:  stloc.1
    IL_0031:  ldloc.1
    IL_0032:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
    IL_0037:  ldc.i4.s   37
    IL_0039:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::'.ctor$PST0600070B'(int32)
    IL_003e:  ldloc.1
    IL_003f:  stind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  ldarg.0
    IL_0043:  ldind.i
    IL_0044:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0049:  ret
  } // end of method UdpConnectionContract::NewChannel

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.UdpConnectionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.UdpConnectionContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.UdpConnectionContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void NetStack.Contracts.UdpConnectionContract/Imp::'.ctor$PST0600070B'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method UdpConnectionContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [kernel]System.Object::.ctor()
    IL_0006:  ret
  } // end of method UdpConnectionContract::.ctor

  .method privatescope static int32  StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       219 (0xdb)
    .maxstack  12
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.s   24
    IL_000c:  beq        IL_0045

    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.s   12
    IL_0014:  beq        IL_0059

    IL_0019:  ldloc.1
    IL_001a:  ldc.i4.s   34
    IL_001c:  beq        IL_006d

    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.2
    IL_0023:  beq        IL_0081

    IL_0028:  ldloc.1
    IL_0029:  ldc.i4.s   26
    IL_002b:  beq        IL_0094

    IL_0030:  ldloc.1
    IL_0031:  ldc.i4.s   21
    IL_0033:  beq        IL_00a8

    IL_0038:  ldloc.1
    IL_0039:  ldc.i4.s   9
    IL_003b:  beq        IL_00bc

    IL_0040:  br         IL_00d0

    IL_0045:  ldarg.0
    IL_0046:  ldc.i4.s   28
    IL_0048:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_004d:  ldarg.0
    IL_004e:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0053:  stloc.2
    IL_0054:  br         IL_00d7

    IL_0059:  ldarg.0
    IL_005a:  ldc.i4.s   14
    IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0061:  ldarg.0
    IL_0062:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0067:  stloc.2
    IL_0068:  br         IL_00d7

    IL_006d:  ldarg.0
    IL_006e:  ldc.i4.s   37
    IL_0070:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0075:  ldarg.0
    IL_0076:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_007b:  stloc.2
    IL_007c:  br         IL_00d7

    IL_0081:  ldarg.0
    IL_0082:  ldc.i4.1
    IL_0083:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0088:  ldarg.0
    IL_0089:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_008e:  stloc.2
    IL_008f:  br         IL_00d7

    IL_0094:  ldarg.0
    IL_0095:  ldc.i4.s   28
    IL_0097:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_009c:  ldarg.0
    IL_009d:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00a2:  stloc.2
    IL_00a3:  br         IL_00d7

    IL_00a8:  ldarg.0
    IL_00a9:  ldc.i4.s   28
    IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00b0:  ldarg.0
    IL_00b1:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00b6:  stloc.2
    IL_00b7:  br         IL_00d7

    IL_00bc:  ldarg.0
    IL_00bd:  ldc.i4.s   14
    IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00c4:  ldarg.0
    IL_00c5:  call       int32 NetStack.Contracts.UdpConnectionContract::StableState$PST06000056(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00ca:  stloc.2
    IL_00cb:  br         IL_00d7

    IL_00d0:  ldloc.0
    IL_00d1:  stloc.2
    IL_00d2:  br         IL_00d7

    IL_00d7:  ldloc.2
    IL_00d8:  stloc.3
    IL_00d9:  ldloc.2
    IL_00da:  ret
  } // end of method UdpConnectionContract::StableState

  .method privatescope static int32  CanonicalState$PST06000057(int32 state) cil managed
  {
    // Code size       128 (0x80)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.s   24
    IL_0005:  beq        IL_003e

    IL_000a:  ldloc.0
    IL_000b:  ldc.i4.s   12
    IL_000d:  beq        IL_0046

    IL_0012:  ldloc.0
    IL_0013:  ldc.i4.s   34
    IL_0015:  beq        IL_004e

    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.2
    IL_001c:  beq        IL_0056

    IL_0021:  ldloc.0
    IL_0022:  ldc.i4.s   26
    IL_0024:  beq        IL_005d

    IL_0029:  ldloc.0
    IL_002a:  ldc.i4.s   21
    IL_002c:  beq        IL_0065

    IL_0031:  ldloc.0
    IL_0032:  ldc.i4.s   9
    IL_0034:  beq        IL_006d

    IL_0039:  br         IL_0075

    IL_003e:  ldc.i4.s   28
    IL_0040:  stloc.1
    IL_0041:  br         IL_007c

    IL_0046:  ldc.i4.s   14
    IL_0048:  stloc.1
    IL_0049:  br         IL_007c

    IL_004e:  ldc.i4.s   37
    IL_0050:  stloc.1
    IL_0051:  br         IL_007c

    IL_0056:  ldc.i4.1
    IL_0057:  stloc.1
    IL_0058:  br         IL_007c

    IL_005d:  ldc.i4.s   28
    IL_005f:  stloc.1
    IL_0060:  br         IL_007c

    IL_0065:  ldc.i4.s   28
    IL_0067:  stloc.1
    IL_0068:  br         IL_007c

    IL_006d:  ldc.i4.s   14
    IL_006f:  stloc.1
    IL_0070:  br         IL_007c

    IL_0075:  ldarg.0
    IL_0076:  stloc.1
    IL_0077:  br         IL_007c

    IL_007c:  ldloc.1
    IL_007d:  stloc.2
    IL_007e:  ldloc.1
    IL_007f:  ret
  } // end of method UdpConnectionContract::CanonicalState

} // end of class NetStack.Contracts.UdpConnectionContract

.class public abstract auto ansi beforefieldinit NetStack.Contracts.UdpContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [kernel]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000006)
    .field public static literal specialname int32 Ready = int32(0x00000003)
    .field public static literal specialname int32 CreateUdpSession = int32(0x00000004)
    .field public static literal specialname int32 Ack = int32(0x00000005)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype NetStack.Contracts.UdpContract/Ready ReadyPod0
    .field family valuetype NetStack.Contracts.UdpContract/Ack AckPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST060008F7'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.UdpContract::CanonicalState$PST0600005C(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.UdpContract::CanonicalState$PST0600005C(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       104 (0x68)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_002d

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.4
      IL_0015:  beq        IL_0038

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.3
      IL_001c:  beq        IL_0043

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.2
      IL_0023:  beq        IL_004e

      IL_0028:  br         IL_0059

      IL_002d:  ldstr      "ReadyState"
      IL_0032:  stloc.1
      IL_0033:  br         IL_0064

      IL_0038:  ldstr      "ReadyState$0"
      IL_003d:  stloc.1
      IL_003e:  br         IL_0064

      IL_0043:  ldstr      "Start"
      IL_0048:  stloc.1
      IL_0049:  br         IL_0064

      IL_004e:  ldstr      "DoneState"
      IL_0053:  stloc.1
      IL_0054:  br         IL_0064

      IL_0059:  ldstr      "<protocol terminated>"
      IL_005e:  stloc.1
      IL_005f:  br         IL_0064

      IL_0064:  ldloc.1
      IL_0065:  stloc.2
      IL_0066:  ldloc.1
      IL_0067:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ready when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype NetStack.Contracts.UdpContract/Ready NetStack.Contracts.UdpContract/Imp::ReadyPod0
      IL_0095:  initobj    NetStack.Contracts.UdpContract/Ready
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Ready in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.UdpContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvReady

    .method public instance void  SendCreateUdpSession(valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) endpoint) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       196 (0xc4)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003f

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0012:  ldc.i4.s   37
      IL_0014:  call       instance bool NetStack.Contracts.UdpConnectionContract/Exp::InState(int32)
      IL_0019:  brtrue     IL_003f

      IL_001e:  ldstr      "can't move endpoint endpoint in state "
      IL_0023:  ldarg.1
      IL_0024:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0029:  ldarg.1
      IL_002a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_002f:  call       instance string NetStack.Contracts.UdpConnectionContract/Exp::CurrentState()
      IL_0034:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0039:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_003e:  throw

      IL_003f:  ldarg.0
      IL_0040:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0045:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_004a:  stloc.0
      IL_004b:  ldloc.0
      IL_004c:  ldc.i4.5
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00ad

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype NetStack.Contracts.UdpContract/Exp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_0089

      IL_0070:  ldloc.s    V_4
      IL_0072:  ldarg.1
      IL_0073:  call       void NetStack.Contracts.UdpConnectionContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0078:  ldloc.3
      IL_0079:  castclass  valuetype NetStack.Contracts.UdpContract/Exp&
      IL_007e:  ldarg.1
      IL_007f:  call       instance void NetStack.Contracts.UdpContract/Exp::DeliverCreateUdpSession0$PST06000925(valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0084:  br         IL_0096

      IL_0089:  ldloc.3
      IL_008a:  castclass  valuetype NetStack.Contracts.UdpContract/Exp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.0
      IL_0091:  call       instance void NetStack.Contracts.UdpContract/Exp::MarshallDeliverCreateUdpSession0$PST06000926(valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0096:  ldarg.0
      IL_0097:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.4
      IL_00a3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a8:  br         IL_00c3

      IL_00ad:  ldstr      "can't send CreateUdpSession in state "
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance string NetStack.Contracts.UdpContract/Imp::CurrentState()
      IL_00b8:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bd:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c2:  throw

      IL_00c3:  ret
    } // end of method Imp::SendCreateUdpSession

    .method public instance void  RecvAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ack when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype NetStack.Contracts.UdpContract/Ack NetStack.Contracts.UdpContract/Imp::AckPod0
      IL_0095:  initobj    NetStack.Contracts.UdpContract/Ack
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Ack in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.UdpContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAck

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.UdpContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string NetStack.Contracts.UdpContract/Imp::CurrentState()
      IL_00b7:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.UdpContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.UdpContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.UdpContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.UdpContract/Imp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.UdpContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.UdpContract/Imp
      IL_0022:  call       instance void NetStack.Contracts.UdpContract/Imp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.3
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.UdpContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverReady0$PST0600090B() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST0600090C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpContract/Imp::DeliverReady0$PST0600090B()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpContract/Ready NetStack.Contracts.UdpContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpContract/Ready::MarshallAll(uint8*,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverAck0$PST0600090D() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAck0

    .method privatescope instance void  MarshallDeliverAck0$PST0600090E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpContract/Imp::DeliverAck0$PST0600090D()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype NetStack.Contracts.UdpContract/Ack NetStack.Contracts.UdpContract/Imp::AckPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0014:  call       instance void NetStack.Contracts.UdpContract/Ack::MarshallAll(uint8*,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                         int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAck0

    .method privatescope instance void  DeliverContractNotSupported0$PST0600090F() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000910(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void NetStack.Contracts.UdpContract/Imp::DeliverContractNotSupported0$PST0600090F()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported NetStack.Contracts.UdpContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([kernel]System.Runtime.CompilerServices.IsVolatile) NetStack.Contracts.UdpContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [kernel]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype NetStack.Contracts.UdpContract/CreateUdpSession CreateUdpSessionPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 NetStack.Contracts.UdpContract::CanonicalState$PST0600005C(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 NetStack.Contracts.UdpContract::CanonicalState$PST0600005C(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       104 (0x68)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_002d

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.4
      IL_0015:  beq        IL_0038

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.3
      IL_001c:  beq        IL_0043

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.2
      IL_0023:  beq        IL_004e

      IL_0028:  br         IL_0059

      IL_002d:  ldstr      "ReadyState"
      IL_0032:  stloc.1
      IL_0033:  br         IL_0064

      IL_0038:  ldstr      "ReadyState$0"
      IL_003d:  stloc.1
      IL_003e:  br         IL_0064

      IL_0043:  ldstr      "Start"
      IL_0048:  stloc.1
      IL_0049:  br         IL_0064

      IL_004e:  ldstr      "DoneState"
      IL_0053:  stloc.1
      IL_0054:  br         IL_0064

      IL_0059:  ldstr      "<protocol terminated>"
      IL_005e:  stloc.1
      IL_005f:  br         IL_0064

      IL_0064:  ldloc.1
      IL_0065:  stloc.2
      IL_0066:  ldloc.1
      IL_0067:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.UdpContract/Imp::DeliverReady0$PST0600090B()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.UdpContract/Imp::MarshallDeliverReady0$PST0600090C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Ready in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.UdpContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendReady

    .method public instance void  RecvCreateUdpSession([out] valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& endpoint) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv CreateUdpSession when next message has "
      + "tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [kernel]System.Int32
      IL_007b:  call       string [kernel]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype NetStack.Contracts.UdpContract/CreateUdpSession NetStack.Contracts.UdpContract/Exp::CreateUdpSessionPod0
      IL_008d:  ldfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype NetStack.Contracts.UdpContract/CreateUdpSession NetStack.Contracts.UdpContract/Exp::CreateUdpSessionPod0
      IL_00a2:  initobj    NetStack.Contracts.UdpContract/CreateUdpSession
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.4
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv CreateUdpSession in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string NetStack.Contracts.UdpContract/Exp::CurrentState()
      IL_00c4:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Exp::RecvCreateUdpSession

    .method public instance void  SendAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.UdpContract/Imp::DeliverAck0$PST0600090D()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.UdpContract/Imp::MarshallDeliverAck0$PST0600090E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Ack in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.UdpContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAck

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0037:  call       instance void NetStack.Contracts.UdpContract/Imp::DeliverContractNotSupported0$PST0600090F()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void NetStack.Contracts.UdpContract/Imp::MarshallDeliverContractNotSupported0$PST06000910(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string NetStack.Contracts.UdpContract/Exp::CurrentState()
      IL_006f:  call       string [kernel]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [kernel]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype NetStack.Contracts.UdpContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void NetStack.Contracts.UdpContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.UdpContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void NetStack.Contracts.UdpContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void NetStack.Contracts.UdpContract/Exp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    NetStack.Contracts.UdpContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    NetStack.Contracts.UdpContract/Exp
      IL_0022:  call       instance void NetStack.Contracts.UdpContract/Exp::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.3
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [kernel]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 NetStack.Contracts.UdpContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [kernel]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverCreateUdpSession0$PST06000925(valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype NetStack.Contracts.UdpContract/CreateUdpSession NetStack.Contracts.UdpContract/Exp::CreateUdpSessionPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.4
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.4
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverCreateUdpSession0

    .method privatescope instance void  MarshallDeliverCreateUdpSession0$PST06000926(valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) endpoint,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [kernel]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void NetStack.Contracts.UdpContract/Exp::DeliverCreateUdpSession0$PST06000925(valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype NetStack.Contracts.UdpContract/CreateUdpSession NetStack.Contracts.UdpContract/Exp::CreateUdpSessionPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void NetStack.Contracts.UdpContract/CreateUdpSession::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverCreateUdpSession0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Ready
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpContract/Ready
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpContract/Ready::MarshallContent(uint8*,
                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                               uint8*,
                                                                                               int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class sequential ansi sealed nested public specialname CreateUdpSession
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) endpoint
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_0007:  call       void NetStack.Contracts.UdpConnectionContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method CreateUdpSession::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpContract/CreateUdpSession* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateUdpSession::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpContract/CreateUdpSession* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateUdpSession::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpContract/CreateUdpSession
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpContract/CreateUdpSession::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method CreateUdpSession::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpContract/CreateUdpSession* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CreateUdpSession::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_001a:  ldtoken    valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start)
      IL_001f:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_003a:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_0047:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_004c:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*)
      IL_0051:  ret
    } // end of method CreateUdpSession::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype NetStack.Contracts.UdpConnectionContract/Exp&
      IL_0013:  call       instance void NetStack.Contracts.UdpConnectionContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype NetStack.Contracts.UdpConnectionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(NetStack.Contracts.UdpConnectionContract/Start) NetStack.Contracts.UdpContract/CreateUdpSession::endpoint
      IL_0025:  ret
    } // end of method CreateUdpSession::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateUdpSession::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateUdpSession::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateUdpSession::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateUdpSession::Release

  } // end of class CreateUdpSession

  .class sequential ansi sealed nested public specialname Ack
         extends [kernel]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype NetStack.Contracts.UdpContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype NetStack.Contracts.UdpContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    NetStack.Contracts.UdpContract/Ack
      IL_0009:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void NetStack.Contracts.UdpContract/Ack::MarshallContent(uint8*,
                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                             uint8*,
                                                                                             int32&)
      IL_001d:  ret
    } // end of method Ack::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype NetStack.Contracts.UdpContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ack::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Release

  } // end of class Ack

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class NetStack.Contracts.UdpContract/ReadyState 
            Send(valuetype NetStack.Contracts.UdpContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class NetStack.Contracts.UdpContract/ReadyState$0 
            Recv(valuetype NetStack.Contracts.UdpContract/CreateUdpSession msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [kernel]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class NetStack.Contracts.UdpContract/ReadyState 
            Send(valuetype NetStack.Contracts.UdpContract/Ack msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [kernel]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .field public static literal string ModuleName = "/service/udp"
  .method public static void  NewChannel([out] valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.UdpContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.UdpContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void NetStack.Contracts.UdpContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.UdpContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void NetStack.Contracts.UdpContract/Imp::'.ctor$PST060008F7'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method UdpContract::NewChannel

  .method public static void  NewChannel([out] valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype NetStack.Contracts.UdpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype NetStack.Contracts.UdpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    NetStack.Contracts.UdpContract/Exp
    IL_0006:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype NetStack.Contracts.UdpContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void NetStack.Contracts.UdpContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    NetStack.Contracts.UdpContract/Imp
    IL_0025:  call       class [kernel]System.Type [kernel]System.Type::GetTypeFromHandle(valuetype [kernel]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [kernel]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype NetStack.Contracts.UdpContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void NetStack.Contracts.UdpContract/Imp::'.ctor$PST060008F7'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method UdpContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method UdpContract::.ctor

  .method privatescope static int32  StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 NetStack.Contracts.UdpContract::StableState$PST0600005B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method UdpContract::StableState

  .method privatescope static int32  CanonicalState$PST0600005C(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method UdpContract::CanonicalState

} // end of class NetStack.Contracts.UdpContract


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
