; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	C:\Users\cc\source\repos\Singularity-OS\base\Kernel\Native\Decimal.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0EC@MMNMAGOK@assert?$CI?$CB?$CCFloatFromDecimal?$CC?$CJ?5fail@ ; `string'
PUBLIC	?g_FloatFromDecimal@Struct_System_Decimal@@SIHPAU1@PAM@Z ; Struct_System_Decimal::g_FloatFromDecimal
EXTRN	?fail_assert@@YIXPBD@Z:PROC			; fail_assert
;	COMDAT ??_C@_0EC@MMNMAGOK@assert?$CI?$CB?$CCFloatFromDecimal?$CC?$CJ?5fail@
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\decimal.cpp
CONST	SEGMENT
??_C@_0EC@MMNMAGOK@assert?$CI?$CB?$CCFloatFromDecimal?$CC?$CJ?5fail@ DB 'a'
	DB	'ssert(!"FloatFromDecimal") failed at Native\Decimal.cpp:__LIN'
	DB	'E__', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_FloatFromDecimal@Struct_System_Decimal@@SIHPAU1@PAM@Z
_TEXT	SEGMENT
?g_FloatFromDecimal@Struct_System_Decimal@@SIHPAU1@PAM@Z PROC ; Struct_System_Decimal::g_FloatFromDecimal, COMDAT
; _d$ = ecx
; _result$ = edx

; 17   :     Assert(!"FloatFromDecimal");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0EC@MMNMAGOK@assert?$CI?$CB?$CCFloatFromDecimal?$CC?$CJ?5fail@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 18   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 19   : }

  0000c	c3		 ret	 0
?g_FloatFromDecimal@Struct_System_Decimal@@SIHPAU1@PAM@Z ENDP ; Struct_System_Decimal::g_FloatFromDecimal
_TEXT	ENDS
PUBLIC	??_C@_0ED@KKKNBDMD@assert?$CI?$CB?$CCDoubleFromDecimal?$CC?$CJ?5fai@ ; `string'
PUBLIC	?g_DoubleFromDecimal@Struct_System_Decimal@@SIHPAU1@PAN@Z ; Struct_System_Decimal::g_DoubleFromDecimal
;	COMDAT ??_C@_0ED@KKKNBDMD@assert?$CI?$CB?$CCDoubleFromDecimal?$CC?$CJ?5fai@
CONST	SEGMENT
??_C@_0ED@KKKNBDMD@assert?$CI?$CB?$CCDoubleFromDecimal?$CC?$CJ?5fai@ DB 'a'
	DB	'ssert(!"DoubleFromDecimal") failed at Native\Decimal.cpp:__LI'
	DB	'NE__', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DoubleFromDecimal@Struct_System_Decimal@@SIHPAU1@PAN@Z
_TEXT	SEGMENT
?g_DoubleFromDecimal@Struct_System_Decimal@@SIHPAU1@PAN@Z PROC ; Struct_System_Decimal::g_DoubleFromDecimal, COMDAT
; _d$ = ecx
; _result$ = edx

; 24   :     Assert(!"DoubleFromDecimal");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0ED@KKKNBDMD@assert?$CI?$CB?$CCDoubleFromDecimal?$CC?$CJ?5fai@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 25   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 26   : }

  0000c	c3		 ret	 0
?g_DoubleFromDecimal@Struct_System_Decimal@@SIHPAU1@PAN@Z ENDP ; Struct_System_Decimal::g_DoubleFromDecimal
_TEXT	ENDS
PUBLIC	??_C@_0EB@NCPELKKC@assert?$CI?$CB?$CCDecimalTruncate?$CC?$CJ?5faile@ ; `string'
PUBLIC	?g_DecimalTruncate@Struct_System_Decimal@@SIHPAU1@0@Z ; Struct_System_Decimal::g_DecimalTruncate
;	COMDAT ??_C@_0EB@NCPELKKC@assert?$CI?$CB?$CCDecimalTruncate?$CC?$CJ?5faile@
CONST	SEGMENT
??_C@_0EB@NCPELKKC@assert?$CI?$CB?$CCDecimalTruncate?$CC?$CJ?5faile@ DB 'a'
	DB	'ssert(!"DecimalTruncate") failed at Native\Decimal.cpp:__LINE'
	DB	'__', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalTruncate@Struct_System_Decimal@@SIHPAU1@0@Z
_TEXT	SEGMENT
?g_DecimalTruncate@Struct_System_Decimal@@SIHPAU1@0@Z PROC ; Struct_System_Decimal::g_DecimalTruncate, COMDAT
; _d$ = ecx
; _result$ = edx

; 31   :     Assert(!"DecimalTruncate");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0EB@NCPELKKC@assert?$CI?$CB?$CCDecimalTruncate?$CC?$CJ?5faile@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 32   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 33   : }

  0000c	c3		 ret	 0
?g_DecimalTruncate@Struct_System_Decimal@@SIHPAU1@0@Z ENDP ; Struct_System_Decimal::g_DecimalTruncate
_TEXT	ENDS
PUBLIC	??_C@_0DO@DLBOIBIP@assert?$CI?$CB?$CCDecimalRound?$CC?$CJ?5failed?5a@ ; `string'
PUBLIC	?g_DecimalRound@Struct_System_Decimal@@SIHPAU1@H0@Z ; Struct_System_Decimal::g_DecimalRound
;	COMDAT ??_C@_0DO@DLBOIBIP@assert?$CI?$CB?$CCDecimalRound?$CC?$CJ?5failed?5a@
CONST	SEGMENT
??_C@_0DO@DLBOIBIP@assert?$CI?$CB?$CCDecimalRound?$CC?$CJ?5failed?5a@ DB 'a'
	DB	'ssert(!"DecimalRound") failed at Native\Decimal.cpp:__LINE__', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalRound@Struct_System_Decimal@@SIHPAU1@H0@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
?g_DecimalRound@Struct_System_Decimal@@SIHPAU1@H0@Z PROC ; Struct_System_Decimal::g_DecimalRound, COMDAT
; _d$ = ecx
; _decimals$ = edx

; 39   :     Assert(!"DecimalRound");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0DO@DLBOIBIP@assert?$CI?$CB?$CCDecimalRound?$CC?$CJ?5failed?5a@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 40   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 41   : }

  0000c	c2 04 00	 ret	 4
?g_DecimalRound@Struct_System_Decimal@@SIHPAU1@H0@Z ENDP ; Struct_System_Decimal::g_DecimalRound
_TEXT	ENDS
PUBLIC	??_C@_0EA@CNHFPBNA@assert?$CI?$CB?$CCDecimalCompare?$CC?$CJ?5failed@ ; `string'
PUBLIC	?g_DecimalCompare@Struct_System_Decimal@@SIHPAU1@0@Z ; Struct_System_Decimal::g_DecimalCompare
;	COMDAT ??_C@_0EA@CNHFPBNA@assert?$CI?$CB?$CCDecimalCompare?$CC?$CJ?5failed@
CONST	SEGMENT
??_C@_0EA@CNHFPBNA@assert?$CI?$CB?$CCDecimalCompare?$CC?$CJ?5failed@ DB 'a'
	DB	'ssert(!"DecimalCompare") failed at Native\Decimal.cpp:__LINE_'
	DB	'_', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalCompare@Struct_System_Decimal@@SIHPAU1@0@Z
_TEXT	SEGMENT
?g_DecimalCompare@Struct_System_Decimal@@SIHPAU1@0@Z PROC ; Struct_System_Decimal::g_DecimalCompare, COMDAT
; _d1$ = ecx
; _d2$ = edx

; 46   :     Assert(!"DecimalCompare");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0EA@CNHFPBNA@assert?$CI?$CB?$CCDecimalCompare?$CC?$CJ?5failed@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 47   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 48   : }

  0000c	c3		 ret	 0
?g_DecimalCompare@Struct_System_Decimal@@SIHPAU1@0@Z ENDP ; Struct_System_Decimal::g_DecimalCompare
_TEXT	ENDS
PUBLIC	??_C@_0ED@NKBAIBOB@assert?$CI?$CB?$CCDecimalFromDouble?$CC?$CJ?5fai@ ; `string'
PUBLIC	?g_DecimalFromDouble@Struct_System_Decimal@@SIHNPAU1@@Z ; Struct_System_Decimal::g_DecimalFromDouble
;	COMDAT ??_C@_0ED@NKBAIBOB@assert?$CI?$CB?$CCDecimalFromDouble?$CC?$CJ?5fai@
CONST	SEGMENT
??_C@_0ED@NKBAIBOB@assert?$CI?$CB?$CCDecimalFromDouble?$CC?$CJ?5fai@ DB 'a'
	DB	'ssert(!"DecimalFromDouble") failed at Native\Decimal.cpp:__LI'
	DB	'NE__', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalFromDouble@Struct_System_Decimal@@SIHNPAU1@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 8
?g_DecimalFromDouble@Struct_System_Decimal@@SIHNPAU1@@Z PROC ; Struct_System_Decimal::g_DecimalFromDouble, COMDAT
; _result$ = ecx

; 53   :     Assert(!"DecimalFromDouble");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0ED@NKBAIBOB@assert?$CI?$CB?$CCDecimalFromDouble?$CC?$CJ?5fai@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 54   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 55   : }

  0000c	c2 08 00	 ret	 8
?g_DecimalFromDouble@Struct_System_Decimal@@SIHNPAU1@@Z ENDP ; Struct_System_Decimal::g_DecimalFromDouble
_TEXT	ENDS
PUBLIC	??_C@_0EC@LGPFLDEH@assert?$CI?$CB?$CCDecimalFromFloat?$CC?$CJ?5fail@ ; `string'
PUBLIC	?g_DecimalFromFloat@Struct_System_Decimal@@SIHMPAU1@@Z ; Struct_System_Decimal::g_DecimalFromFloat
;	COMDAT ??_C@_0EC@LGPFLDEH@assert?$CI?$CB?$CCDecimalFromFloat?$CC?$CJ?5fail@
CONST	SEGMENT
??_C@_0EC@LGPFLDEH@assert?$CI?$CB?$CCDecimalFromFloat?$CC?$CJ?5fail@ DB 'a'
	DB	'ssert(!"DecimalFromFloat") failed at Native\Decimal.cpp:__LIN'
	DB	'E__', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalFromFloat@Struct_System_Decimal@@SIHMPAU1@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?g_DecimalFromFloat@Struct_System_Decimal@@SIHMPAU1@@Z PROC ; Struct_System_Decimal::g_DecimalFromFloat, COMDAT
; _result$ = ecx

; 60   :     Assert(!"DecimalFromFloat");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0EC@LGPFLDEH@assert?$CI?$CB?$CCDecimalFromFloat?$CC?$CJ?5fail@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 61   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 62   : }

  0000c	c2 04 00	 ret	 4
?g_DecimalFromFloat@Struct_System_Decimal@@SIHMPAU1@@Z ENDP ; Struct_System_Decimal::g_DecimalFromFloat
_TEXT	ENDS
PUBLIC	??_C@_0DM@ONBKKIPL@assert?$CI?$CB?$CCDecimalAdd?$CC?$CJ?5failed?5at?5@ ; `string'
PUBLIC	?g_DecimalAdd@Struct_System_Decimal@@SIHPAU1@00@Z ; Struct_System_Decimal::g_DecimalAdd
;	COMDAT ??_C@_0DM@ONBKKIPL@assert?$CI?$CB?$CCDecimalAdd?$CC?$CJ?5failed?5at?5@
CONST	SEGMENT
??_C@_0DM@ONBKKIPL@assert?$CI?$CB?$CCDecimalAdd?$CC?$CJ?5failed?5at?5@ DB 'a'
	DB	'ssert(!"DecimalAdd") failed at Native\Decimal.cpp:__LINE__', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalAdd@Struct_System_Decimal@@SIHPAU1@00@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
?g_DecimalAdd@Struct_System_Decimal@@SIHPAU1@00@Z PROC	; Struct_System_Decimal::g_DecimalAdd, COMDAT
; _d1$ = ecx
; _d2$ = edx

; 68   :     Assert(!"DecimalAdd");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0DM@ONBKKIPL@assert?$CI?$CB?$CCDecimalAdd?$CC?$CJ?5failed?5at?5@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 69   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 70   : }

  0000c	c2 04 00	 ret	 4
?g_DecimalAdd@Struct_System_Decimal@@SIHPAU1@00@Z ENDP	; Struct_System_Decimal::g_DecimalAdd
_TEXT	ENDS
PUBLIC	??_C@_0DP@JKAFKNAP@assert?$CI?$CB?$CCDecimalDivide?$CC?$CJ?5failed?5@ ; `string'
PUBLIC	?g_DecimalDivide@Struct_System_Decimal@@SIHPAU1@00@Z ; Struct_System_Decimal::g_DecimalDivide
;	COMDAT ??_C@_0DP@JKAFKNAP@assert?$CI?$CB?$CCDecimalDivide?$CC?$CJ?5failed?5@
CONST	SEGMENT
??_C@_0DP@JKAFKNAP@assert?$CI?$CB?$CCDecimalDivide?$CC?$CJ?5failed?5@ DB 'a'
	DB	'ssert(!"DecimalDivide") failed at Native\Decimal.cpp:__LINE__'
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalDivide@Struct_System_Decimal@@SIHPAU1@00@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
?g_DecimalDivide@Struct_System_Decimal@@SIHPAU1@00@Z PROC ; Struct_System_Decimal::g_DecimalDivide, COMDAT
; _d1$ = ecx
; _d2$ = edx

; 76   :     Assert(!"DecimalDivide");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0DP@JKAFKNAP@assert?$CI?$CB?$CCDecimalDivide?$CC?$CJ?5failed?5@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 77   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 78   : }

  0000c	c2 04 00	 ret	 4
?g_DecimalDivide@Struct_System_Decimal@@SIHPAU1@00@Z ENDP ; Struct_System_Decimal::g_DecimalDivide
_TEXT	ENDS
PUBLIC	??_C@_0DO@IEPNIHCG@assert?$CI?$CB?$CCDecimalFloor?$CC?$CJ?5failed?5a@ ; `string'
PUBLIC	?g_DecimalFloor@Struct_System_Decimal@@SIHPAU1@0@Z ; Struct_System_Decimal::g_DecimalFloor
;	COMDAT ??_C@_0DO@IEPNIHCG@assert?$CI?$CB?$CCDecimalFloor?$CC?$CJ?5failed?5a@
CONST	SEGMENT
??_C@_0DO@IEPNIHCG@assert?$CI?$CB?$CCDecimalFloor?$CC?$CJ?5failed?5a@ DB 'a'
	DB	'ssert(!"DecimalFloor") failed at Native\Decimal.cpp:__LINE__', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalFloor@Struct_System_Decimal@@SIHPAU1@0@Z
_TEXT	SEGMENT
?g_DecimalFloor@Struct_System_Decimal@@SIHPAU1@0@Z PROC	; Struct_System_Decimal::g_DecimalFloor, COMDAT
; _d$ = ecx
; _result$ = edx

; 83   :     Assert(!"DecimalFloor");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0DO@IEPNIHCG@assert?$CI?$CB?$CCDecimalFloor?$CC?$CJ?5failed?5a@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 84   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 85   : }

  0000c	c3		 ret	 0
?g_DecimalFloor@Struct_System_Decimal@@SIHPAU1@0@Z ENDP	; Struct_System_Decimal::g_DecimalFloor
_TEXT	ENDS
PUBLIC	??_C@_0EB@COLJCAGE@assert?$CI?$CB?$CCDecimalMultiply?$CC?$CJ?5faile@ ; `string'
PUBLIC	?g_DecimalMultiply@Struct_System_Decimal@@SIHPAU1@00@Z ; Struct_System_Decimal::g_DecimalMultiply
;	COMDAT ??_C@_0EB@COLJCAGE@assert?$CI?$CB?$CCDecimalMultiply?$CC?$CJ?5faile@
CONST	SEGMENT
??_C@_0EB@COLJCAGE@assert?$CI?$CB?$CCDecimalMultiply?$CC?$CJ?5faile@ DB 'a'
	DB	'ssert(!"DecimalMultiply") failed at Native\Decimal.cpp:__LINE'
	DB	'__', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalMultiply@Struct_System_Decimal@@SIHPAU1@00@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
?g_DecimalMultiply@Struct_System_Decimal@@SIHPAU1@00@Z PROC ; Struct_System_Decimal::g_DecimalMultiply, COMDAT
; _d1$ = ecx
; _d2$ = edx

; 91   :     Assert(!"DecimalMultiply");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0EB@COLJCAGE@assert?$CI?$CB?$CCDecimalMultiply?$CC?$CJ?5faile@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 92   :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 93   : }

  0000c	c2 04 00	 ret	 4
?g_DecimalMultiply@Struct_System_Decimal@@SIHPAU1@00@Z ENDP ; Struct_System_Decimal::g_DecimalMultiply
_TEXT	ENDS
PUBLIC	??_C@_0EB@DGJGPPDO@assert?$CI?$CB?$CCDecimalSubtract?$CC?$CJ?5faile@ ; `string'
PUBLIC	?g_DecimalSubtract@Struct_System_Decimal@@SIHPAU1@00@Z ; Struct_System_Decimal::g_DecimalSubtract
;	COMDAT ??_C@_0EB@DGJGPPDO@assert?$CI?$CB?$CCDecimalSubtract?$CC?$CJ?5faile@
CONST	SEGMENT
??_C@_0EB@DGJGPPDO@assert?$CI?$CB?$CCDecimalSubtract?$CC?$CJ?5faile@ DB 'a'
	DB	'ssert(!"DecimalSubtract") failed at Native\Decimal.cpp:__LINE'
	DB	'__', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_DecimalSubtract@Struct_System_Decimal@@SIHPAU1@00@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
?g_DecimalSubtract@Struct_System_Decimal@@SIHPAU1@00@Z PROC ; Struct_System_Decimal::g_DecimalSubtract, COMDAT
; _d1$ = ecx
; _d2$ = edx

; 99   :     Assert(!"DecimalSubtract");

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0EB@DGJGPPDO@assert?$CI?$CB?$CCDecimalSubtract?$CC?$CJ?5faile@
  00005	e8 00 00 00 00	 call	 ?fail_assert@@YIXPBD@Z	; fail_assert

; 100  :     return 0;

  0000a	33 c0		 xor	 eax, eax

; 101  : }

  0000c	c2 04 00	 ret	 4
?g_DecimalSubtract@Struct_System_Decimal@@SIHPAU1@00@Z ENDP ; Struct_System_Decimal::g_DecimalSubtract
_TEXT	ENDS
END
