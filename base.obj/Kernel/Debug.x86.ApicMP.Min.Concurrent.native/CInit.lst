; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	C:\Users\cc\source\repos\Singularity-OS\base\Kernel\Native\CInit.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___xi_a
PUBLIC	___xi_z
PUBLIC	___xc_a
PUBLIC	___xc_z
PUBLIC	___xp_a
PUBLIC	___xp_z
PUBLIC	___xt_a
PUBLIC	___xt_z
CRT$XTZ	SEGMENT
___xt_z	DD	00H
CRT$XTZ	ENDS
CRT$XTA	SEGMENT
___xt_a	DD	00H
CRT$XTA	ENDS
CRT$XPZ	SEGMENT
___xp_z	DD	00H
CRT$XPZ	ENDS
CRT$XPA	SEGMENT
___xp_a	DD	00H
CRT$XPA	ENDS
CRT$XCZ	SEGMENT
___xc_z	DD	00H
CRT$XCZ	ENDS
CRT$XCA	SEGMENT
___xc_a	DD	00H
CRT$XCA	ENDS
CRT$XIZ	SEGMENT
___xi_z	DD	00H
CRT$XIZ	ENDS
CRT$XIA	SEGMENT
___xi_a	DD	00H
; Function compile flags: /Ogtp
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\cinit.cpp
CRT$XIA	ENDS
;	COMDAT ?_initterm@@YAXPAP6AXXZ0@Z
_TEXT	SEGMENT
?_initterm@@YAXPAP6AXXZ0@Z PROC				; _initterm, COMDAT
; _pfbegin$ = eax
; _pfend$ = edi

; 69   : {

  00000	56		 push	 esi
  00001	8b f0		 mov	 esi, eax

; 70   :     for (; pfbegin < pfend; pfbegin++) {

  00003	3b f7		 cmp	 esi, edi
  00005	73 0f		 jae	 SHORT $LN2@initterm
$LL4@initterm:

; 71   :         if (*pfbegin != NULL) {

  00007	8b 06		 mov	 eax, DWORD PTR [esi]
  00009	85 c0		 test	 eax, eax
  0000b	74 02		 je	 SHORT $LN3@initterm

; 72   :             (**pfbegin)();

  0000d	ff d0		 call	 eax
$LN3@initterm:

; 70   :     for (; pfbegin < pfend; pfbegin++) {

  0000f	83 c6 04	 add	 esi, 4
  00012	3b f7		 cmp	 esi, edi
  00014	72 f1		 jb	 SHORT $LL4@initterm
$LN2@initterm:
  00016	5e		 pop	 esi

; 73   :         }
; 74   :     }
; 75   : }

  00017	c3		 ret	 0
?_initterm@@YAXPAP6AXXZ0@Z ENDP				; _initterm
_TEXT	ENDS
PUBLIC	?_cinit@@YAHXZ					; _cinit
; Function compile flags: /Ogtp
;	COMDAT ?_cinit@@YAHXZ
_TEXT	SEGMENT
?_cinit@@YAHXZ PROC					; _cinit, COMDAT

; 80   : {

  00000	56		 push	 esi

; 81   :     // do C initializations
; 82   :     _initterm( __xi_a, __xi_z );

  00001	be 00 00 00 00	 mov	 esi, OFFSET ___xi_a
  00006	8b c6		 mov	 eax, esi
  00008	3d 00 00 00 00	 cmp	 eax, OFFSET ___xi_z
  0000d	73 14		 jae	 SHORT $LN4@cinit
  0000f	90		 npad	 1
$LL6@cinit:
  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	85 c0		 test	 eax, eax
  00014	74 02		 je	 SHORT $LN5@cinit
  00016	ff d0		 call	 eax
$LN5@cinit:
  00018	83 c6 04	 add	 esi, 4
  0001b	81 fe 00 00 00
	00		 cmp	 esi, OFFSET ___xi_z
  00021	72 ed		 jb	 SHORT $LL6@cinit
$LN4@cinit:

; 83   : 
; 84   :     // do C++ initializations
; 85   :     _initterm( __xc_a, __xc_z );

  00023	be 00 00 00 00	 mov	 esi, OFFSET ___xc_a
  00028	8b ce		 mov	 ecx, esi
  0002a	81 f9 00 00 00
	00		 cmp	 ecx, OFFSET ___xc_z
  00030	73 13		 jae	 SHORT $LN19@cinit
$LL12@cinit:
  00032	8b 06		 mov	 eax, DWORD PTR [esi]
  00034	85 c0		 test	 eax, eax
  00036	74 02		 je	 SHORT $LN11@cinit
  00038	ff d0		 call	 eax
$LN11@cinit:
  0003a	83 c6 04	 add	 esi, 4
  0003d	81 fe 00 00 00
	00		 cmp	 esi, OFFSET ___xc_z
  00043	72 ed		 jb	 SHORT $LL12@cinit
$LN19@cinit:

; 86   :     return 0;

  00045	33 c0		 xor	 eax, eax
  00047	5e		 pop	 esi

; 87   : }

  00048	c3		 ret	 0
?_cinit@@YAHXZ ENDP					; _cinit
_TEXT	ENDS
PUBLIC	?_cfini@@YAHXZ					; _cfini
; Function compile flags: /Ogtp
;	COMDAT ?_cfini@@YAHXZ
_TEXT	SEGMENT
?_cfini@@YAHXZ PROC					; _cfini, COMDAT

; 90   : {

  00000	56		 push	 esi

; 91   :     // do C initializations
; 92   :     _initterm( __xp_a, __xp_z );

  00001	be 00 00 00 00	 mov	 esi, OFFSET ___xp_a
  00006	8b c6		 mov	 eax, esi
  00008	3d 00 00 00 00	 cmp	 eax, OFFSET ___xp_z
  0000d	73 14		 jae	 SHORT $LN4@cfini
  0000f	90		 npad	 1
$LL6@cfini:
  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	85 c0		 test	 eax, eax
  00014	74 02		 je	 SHORT $LN5@cfini
  00016	ff d0		 call	 eax
$LN5@cfini:
  00018	83 c6 04	 add	 esi, 4
  0001b	81 fe 00 00 00
	00		 cmp	 esi, OFFSET ___xp_z
  00021	72 ed		 jb	 SHORT $LL6@cfini
$LN4@cfini:

; 93   : 
; 94   :     // do C++ terminations
; 95   :     _initterm( __xt_a, __xt_z );

  00023	be 00 00 00 00	 mov	 esi, OFFSET ___xt_a
  00028	8b ce		 mov	 ecx, esi
  0002a	81 f9 00 00 00
	00		 cmp	 ecx, OFFSET ___xt_z
  00030	73 13		 jae	 SHORT $LN19@cfini
$LL12@cfini:
  00032	8b 06		 mov	 eax, DWORD PTR [esi]
  00034	85 c0		 test	 eax, eax
  00036	74 02		 je	 SHORT $LN11@cfini
  00038	ff d0		 call	 eax
$LN11@cfini:
  0003a	83 c6 04	 add	 esi, 4
  0003d	81 fe 00 00 00
	00		 cmp	 esi, OFFSET ___xt_z
  00043	72 ed		 jb	 SHORT $LL12@cfini
$LN19@cfini:

; 96   :     return 0;

  00045	33 c0		 xor	 eax, eax
  00047	5e		 pop	 esi

; 97   : }

  00048	c3		 ret	 0
?_cfini@@YAHXZ ENDP					; _cfini
_TEXT	ENDS
END
