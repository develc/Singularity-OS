; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	C:\Users\cc\source\repos\Singularity-OS\base\Kernel\Native\Monitoring.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?MonitoringStorageHandle@@3PAUuintPtr@@A	; MonitoringStorageHandle
PUBLIC	?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A	; MonitoringSource
PUBLIC	?MonitoringTypeHandle@@3PAUuintPtr@@A		; MonitoringTypeHandle
_BSS	SEGMENT
?MonitoringStorageHandle@@3PAUuintPtr@@A DD 01H DUP (?)	; MonitoringStorageHandle
?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A DD 01H DUP (?) ; MonitoringSource
?MonitoringTypeHandle@@3PAUuintPtr@@A DD 01H DUP (?)	; MonitoringTypeHandle
_BSS	ENDS
PUBLIC	??_C@_0L@LOABPNHL@Monitoring?$AA@		; `string'
PUBLIC	?g_Initialize@Class_Microsoft_Singularity_Monitoring@@SIXXZ ; Class_Microsoft_Singularity_Monitoring::g_Initialize
EXTRN	?GetSourceFromHandle@@YIPAU_SOURCE_DESCRIPTOR@@PAUuintPtr@@@Z:PROC ; GetSourceFromHandle
EXTRN	?RegisterNativeSource@@YIPAUuintPtr@@PADPAU1@I@Z:PROC ; RegisterNativeSource
EXTRN	?g_MemoryStorageCreateImpl@Class_Microsoft_Singularity_Eventing_MemoryStorage@@SIPAUuintPtr@@IPAEII@Z:PROC ; Class_Microsoft_Singularity_Eventing_MemoryStorage::g_MemoryStorageCreateImpl
EXTRN	?c_buffer@Class_Microsoft_Singularity_Monitoring@@2PAEA:DWORD ; Class_Microsoft_Singularity_Monitoring::c_buffer
EXTRN	?g_InitPages@Class_Microsoft_Singularity_Monitoring@@SIXPAUuintPtr@@@Z:PROC ; Class_Microsoft_Singularity_Monitoring::g_InitPages
;	COMDAT ??_C@_0L@LOABPNHL@Monitoring?$AA@
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\monitoring.cpp
CONST	SEGMENT
??_C@_0L@LOABPNHL@Monitoring?$AA@ DB 'Monitoring', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?g_Initialize@Class_Microsoft_Singularity_Monitoring@@SIXXZ
_TEXT	SEGMENT
?g_Initialize@Class_Microsoft_Singularity_Monitoring@@SIXXZ PROC ; Class_Microsoft_Singularity_Monitoring::g_Initialize, COMDAT

; 28   : 
; 29   : #if SINGULARITY_KERNEL
; 30   : 
; 31   :     g_InitPages((UIntPtr)(MONITORING_BUFFER_SIZE));

  00000	b9 00 00 60 00	 mov	 ecx, 6291456		; 00600000H
  00005	e8 00 00 00 00	 call	 ?g_InitPages@Class_Microsoft_Singularity_Monitoring@@SIXPAUuintPtr@@@Z ; Class_Microsoft_Singularity_Monitoring::g_InitPages

; 32   : 
; 33   :     if (c_buffer != NULL) {

  0000a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?c_buffer@Class_Microsoft_Singularity_Monitoring@@2PAEA ; Class_Microsoft_Singularity_Monitoring::c_buffer
  00010	85 d2		 test	 edx, edx
  00012	74 37		 je	 SHORT $LN1@g_Initiali

; 34   : 
; 35   :         MonitoringStorageHandle = Class_Microsoft_Singularity_Eventing_MemoryStorage::
; 36   :             g_MemoryStorageCreateImpl(MEMORY_STORAGE_FLAGS_RECYCLE_MEMORY,
; 37   :                                       (uint8 *)c_buffer,
; 38   :                                       (uint32)MONITORING_BUFFER_SIZE,
; 39   :                                       0);

  00014	6a 00		 push	 0
  00016	68 00 00 60 00	 push	 6291456			; 00600000H
  0001b	b9 02 00 00 00	 mov	 ecx, 2
  00020	e8 00 00 00 00	 call	 ?g_MemoryStorageCreateImpl@Class_Microsoft_Singularity_Eventing_MemoryStorage@@SIPAUuintPtr@@IPAEII@Z ; Class_Microsoft_Singularity_Eventing_MemoryStorage::g_MemoryStorageCreateImpl

; 40   : 
; 41   :         if (MonitoringStorageHandle) {

  00025	85 c0		 test	 eax, eax
  00027	a3 00 00 00 00	 mov	 DWORD PTR ?MonitoringStorageHandle@@3PAUuintPtr@@A, eax ; MonitoringStorageHandle
  0002c	74 1d		 je	 SHORT $LN1@g_Initiali

; 42   : 
; 43   :             UIntPtr sourceHandle = RegisterNativeSource("Monitoring",
; 44   :                                                         MonitoringStorageHandle,
; 45   :                                                         Monitoring_ControlFlag_Active);

  0002e	68 00 00 01 00	 push	 65536			; 00010000H
  00033	8b d0		 mov	 edx, eax
  00035	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@LOABPNHL@Monitoring?$AA@
  0003a	e8 00 00 00 00	 call	 ?RegisterNativeSource@@YIPAUuintPtr@@PADPAU1@I@Z ; RegisterNativeSource

; 46   : 
; 47   :             MonitoringSource = GetSourceFromHandle(sourceHandle);

  0003f	8b c8		 mov	 ecx, eax
  00041	e8 00 00 00 00	 call	 ?GetSourceFromHandle@@YIPAU_SOURCE_DESCRIPTOR@@PAUuintPtr@@@Z ; GetSourceFromHandle
  00046	a3 00 00 00 00	 mov	 DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A, eax ; MonitoringSource
$LN1@g_Initiali:

; 48   :         }
; 49   :     }
; 50   : 
; 51   : #elif SINGULARITY_PROCESS
; 52   : 
; 53   :     Struct_Microsoft_Singularity_V1_Services_ProcessService::
; 54   :         g_GetSharedSourceHandles(Class_Microsoft_Singularity_Eventing_Controller_MonitoringInfo,
; 55   :                                  &MonitoringStorageHandle,
; 56   :                                  (UIntPtr *)&MonitoringSource,
; 57   :                                  &MonitoringTypeHandle);
; 58   : 
; 59   : #else
; 60   : #error "File should be compiled with SINGULARITY_KERNEL or SINGULARITY_PROCESS"
; 61   : #endif
; 62   : }

  0004b	c3		 ret	 0
?g_Initialize@Class_Microsoft_Singularity_Monitoring@@SIXXZ ENDP ; Class_Microsoft_Singularity_Monitoring::g_Initialize
_TEXT	ENDS
PUBLIC	?GetMonitoringHandles@@YI_NPAPAUuintPtr@@00@Z	; GetMonitoringHandles
; Function compile flags: /Ogtp
;	COMDAT ?GetMonitoringHandles@@YI_NPAPAUuintPtr@@00@Z
_TEXT	SEGMENT
_eventTypeHandle$ = 8					; size = 4
?GetMonitoringHandles@@YI_NPAPAUuintPtr@@00@Z PROC	; GetMonitoringHandles, COMDAT
; _storageHandle$ = ecx
; _sourceHandle$ = edx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 68   :     *storageHandle = MonitoringStorageHandle;

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringStorageHandle@@3PAUuintPtr@@A ; MonitoringStorageHandle
  00008	89 01		 mov	 DWORD PTR [ecx], eax

; 69   :     *sourceHandle = (UIntPtr)MonitoringSource;

  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00010	89 0a		 mov	 DWORD PTR [edx], ecx

; 70   :     *eventTypeHandle = MonitoringTypeHandle;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringTypeHandle@@3PAUuintPtr@@A ; MonitoringTypeHandle
  00017	8b 55 08	 mov	 edx, DWORD PTR _eventTypeHandle$[ebp]
  0001a	89 02		 mov	 DWORD PTR [edx], eax

; 71   :     return true;

  0001c	b0 01		 mov	 al, 1

; 72   : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?GetMonitoringHandles@@YI_NPAPAUuintPtr@@00@Z ENDP	; GetMonitoringHandles
_TEXT	ENDS
PUBLIC	?IsMonitoringEnabled@@YI_NXZ			; IsMonitoringEnabled
; Function compile flags: /Ogtp
;	COMDAT ?IsMonitoringEnabled@@YI_NXZ
_TEXT	SEGMENT
?IsMonitoringEnabled@@YI_NXZ PROC			; IsMonitoringEnabled, COMDAT

; 77   :     return ((MonitoringSource != NULL) &&
; 78   :             (MonitoringSource->ControlFlags & Monitoring_ControlFlag_Active));

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00005	85 c0		 test	 eax, eax
  00007	74 0f		 je	 SHORT $LN3@IsMonitori
  00009	f7 40 14 00 00
	01 00		 test	 DWORD PTR [eax+20], 65536 ; 00010000H
  00010	74 06		 je	 SHORT $LN3@IsMonitori
  00012	b8 01 00 00 00	 mov	 eax, 1

; 79   : }

  00017	c3		 ret	 0
$LN3@IsMonitori:

; 77   :     return ((MonitoringSource != NULL) &&
; 78   :             (MonitoringSource->ControlFlags & Monitoring_ControlFlag_Active));

  00018	33 c0		 xor	 eax, eax

; 79   : }

  0001a	c3		 ret	 0
?IsMonitoringEnabled@@YI_NXZ ENDP			; IsMonitoringEnabled
_TEXT	ENDS
PUBLIC	?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGG@Z ; Class_Microsoft_Singularity_Monitoring::g_Log
EXTRN	?InternalLogFixedRecord@@YIPAU_MEMORY_HEADER@@PAUuintPtr@@I0PAXI@Z:PROC ; InternalLogFixedRecord
EXTRN	?g_GetCurrentThreadContext@Class_Microsoft_Singularity_Processor@@SIPAUStruct_Microsoft_Singularity_ThreadContext@@XZ:PROC ; Class_Microsoft_Singularity_Processor::g_GetCurrentThreadContext
; Function compile flags: /Ogtp
;	COMDAT ?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGG@Z
_TEXT	SEGMENT
_entry$11458 = -32					; size = 32
?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGG@Z PROC ; Class_Microsoft_Singularity_Monitoring::g_Log, COMDAT
; _provider$ = cx
; _type$ = dx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 85   :     if (IsMonitoringEnabled()) {

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00008	83 ec 20	 sub	 esp, 32			; 00000020H
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	33 f6		 xor	 esi, esi
  0000f	3b c6		 cmp	 eax, esi
  00011	57		 push	 edi
  00012	66 8b fa	 mov	 di, dx
  00015	66 8b d9	 mov	 bx, cx
  00018	74 57		 je	 SHORT $LN1@g_Log
  0001a	f7 40 14 00 00
	01 00		 test	 DWORD PTR [eax+20], 65536 ; 00010000H
  00021	74 4e		 je	 SHORT $LN1@g_Log

; 86   : 
; 87   :         Struct_Microsoft_Singularity_ThreadContext *threadContext =
; 88   :             Class_Microsoft_Singularity_Processor::g_GetCurrentThreadContext();

  00023	e8 00 00 00 00	 call	 ?g_GetCurrentThreadContext@Class_Microsoft_Singularity_Processor@@SIPAUStruct_Microsoft_Singularity_ThreadContext@@XZ ; Class_Microsoft_Singularity_Processor::g_GetCurrentThreadContext

; 89   : 
; 90   :         MONITORING_ENTRY entry = {threadContext->processId, provider,type,0,0,0,0,0,0};

  00028	66 8b 80 74 02
	00 00		 mov	 ax, WORD PTR [eax+628]

; 91   :         InternalLogFixedRecord(MonitoringStorageHandle,
; 92   :                                MonitoringSource->ControlFlags,
; 93   :                                MonitoringTypeHandle,
; 94   :                                &entry,
; 95   :                                sizeof(entry));

  0002f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?MonitoringTypeHandle@@3PAUuintPtr@@A ; MonitoringTypeHandle
  00035	6a 20		 push	 32			; 00000020H
  00037	8d 4d e0	 lea	 ecx, DWORD PTR _entry$11458[ebp]
  0003a	66 89 45 e0	 mov	 WORD PTR _entry$11458[ebp], ax
  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00043	51		 push	 ecx
  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?MonitoringStorageHandle@@3PAUuintPtr@@A ; MonitoringStorageHandle
  0004a	66 89 5d e2	 mov	 WORD PTR _entry$11458[ebp+2], bx
  0004e	66 89 7d e4	 mov	 WORD PTR _entry$11458[ebp+4], di
  00052	66 89 75 e6	 mov	 WORD PTR _entry$11458[ebp+6], si
  00056	89 75 e8	 mov	 DWORD PTR _entry$11458[ebp+8], esi
  00059	89 75 ec	 mov	 DWORD PTR _entry$11458[ebp+12], esi
  0005c	89 75 f0	 mov	 DWORD PTR _entry$11458[ebp+16], esi
  0005f	89 75 f4	 mov	 DWORD PTR _entry$11458[ebp+20], esi
  00062	89 75 f8	 mov	 DWORD PTR _entry$11458[ebp+24], esi
  00065	89 75 fc	 mov	 DWORD PTR _entry$11458[ebp+28], esi
  00068	52		 push	 edx
  00069	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  0006c	e8 00 00 00 00	 call	 ?InternalLogFixedRecord@@YIPAU_MEMORY_HEADER@@PAUuintPtr@@I0PAXI@Z ; InternalLogFixedRecord
$LN1@g_Log:
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx

; 96   :     }
; 97   : }

  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGG@Z ENDP ; Class_Microsoft_Singularity_Monitoring::g_Log
_TEXT	ENDS
PUBLIC	?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGGGIIIII@Z ; Class_Microsoft_Singularity_Monitoring::g_Log
; Function compile flags: /Ogtp
;	COMDAT ?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGGGIIIII@Z
_TEXT	SEGMENT
_entry$11471 = -32					; size = 32
_version$ = 8						; size = 2
_a0$ = 12						; size = 4
_a1$ = 16						; size = 4
_a2$ = 20						; size = 4
_a3$ = 24						; size = 4
_a4$ = 28						; size = 4
?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGGGIIIII@Z PROC ; Class_Microsoft_Singularity_Monitoring::g_Log, COMDAT
; _provider$ = cx
; _type$ = dx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  :     if (IsMonitoringEnabled()) {

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00008	83 ec 20	 sub	 esp, 32			; 00000020H
  0000b	85 c0		 test	 eax, eax
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	66 8b f2	 mov	 si, dx
  00012	66 8b f9	 mov	 di, cx
  00015	74 6e		 je	 SHORT $LN1@g_Log@2
  00017	f7 40 14 00 00
	01 00		 test	 DWORD PTR [eax+20], 65536 ; 00010000H
  0001e	74 65		 je	 SHORT $LN1@g_Log@2

; 104  : 
; 105  :         Struct_Microsoft_Singularity_ThreadContext *threadContext =
; 106  :             Class_Microsoft_Singularity_Processor::g_GetCurrentThreadContext();

  00020	e8 00 00 00 00	 call	 ?g_GetCurrentThreadContext@Class_Microsoft_Singularity_Processor@@SIPAUStruct_Microsoft_Singularity_ThreadContext@@XZ ; Class_Microsoft_Singularity_Processor::g_GetCurrentThreadContext

; 107  : 
; 108  :         MONITORING_ENTRY entry = {threadContext->processId, provider,type,version,a0,a1,a2,a3,a4};

  00025	66 8b 80 74 02
	00 00		 mov	 ax, WORD PTR [eax+628]
  0002c	66 8b 4d 08	 mov	 cx, WORD PTR _version$[ebp]
  00030	8b 55 0c	 mov	 edx, DWORD PTR _a0$[ebp]
  00033	66 89 45 e0	 mov	 WORD PTR _entry$11471[ebp], ax
  00037	8b 45 10	 mov	 eax, DWORD PTR _a1$[ebp]
  0003a	66 89 4d e6	 mov	 WORD PTR _entry$11471[ebp+6], cx
  0003e	8b 4d 14	 mov	 ecx, DWORD PTR _a2$[ebp]
  00041	89 55 e8	 mov	 DWORD PTR _entry$11471[ebp+8], edx
  00044	8b 55 18	 mov	 edx, DWORD PTR _a3$[ebp]
  00047	89 45 ec	 mov	 DWORD PTR _entry$11471[ebp+12], eax
  0004a	8b 45 1c	 mov	 eax, DWORD PTR _a4$[ebp]
  0004d	89 4d f0	 mov	 DWORD PTR _entry$11471[ebp+16], ecx

; 109  :         InternalLogFixedRecord(MonitoringStorageHandle,
; 110  :                                MonitoringSource->ControlFlags,
; 111  :                                MonitoringTypeHandle,
; 112  :                                &entry,
; 113  :                                sizeof(entry));

  00050	6a 20		 push	 32			; 00000020H
  00052	89 55 f4	 mov	 DWORD PTR _entry$11471[ebp+20], edx
  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?MonitoringTypeHandle@@3PAUuintPtr@@A ; MonitoringTypeHandle
  0005b	8d 4d e0	 lea	 ecx, DWORD PTR _entry$11471[ebp]
  0005e	89 45 f8	 mov	 DWORD PTR _entry$11471[ebp+24], eax
  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00066	51		 push	 ecx
  00067	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?MonitoringStorageHandle@@3PAUuintPtr@@A ; MonitoringStorageHandle
  0006d	66 89 7d e2	 mov	 WORD PTR _entry$11471[ebp+2], di
  00071	66 89 75 e4	 mov	 WORD PTR _entry$11471[ebp+4], si
  00075	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _entry$11471[ebp+28], 0
  0007c	52		 push	 edx
  0007d	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00080	e8 00 00 00 00	 call	 ?InternalLogFixedRecord@@YIPAU_MEMORY_HEADER@@PAUuintPtr@@I0PAXI@Z ; InternalLogFixedRecord
$LN1@g_Log@2:
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi

; 114  :     }
; 115  : }

  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 18 00	 ret	 24			; 00000018H
?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGGGIIIII@Z ENDP ; Class_Microsoft_Singularity_Monitoring::g_Log
_TEXT	ENDS
PUBLIC	?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGGPAUClass_System_String@@@Z ; Class_Microsoft_Singularity_Monitoring::g_Log
EXTRN	?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z:PROC ; InternalLogVariableRecord
; Function compile flags: /Ogtp
;	COMDAT ?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGGPAUClass_System_String@@@Z
_TEXT	SEGMENT
_entry$11479 = -44					; size = 32
_array$11480 = -12					; size = 12
_s$ = 8							; size = 4
?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGGPAUClass_System_String@@@Z PROC ; Class_Microsoft_Singularity_Monitoring::g_Log, COMDAT
; _provider$ = cx
; _type$ = dx

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 120  :     if (IsMonitoringEnabled()) {

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00008	83 ec 2c	 sub	 esp, 44			; 0000002cH
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	33 f6		 xor	 esi, esi
  0000f	3b c6		 cmp	 eax, esi
  00011	57		 push	 edi
  00012	66 8b fa	 mov	 di, dx
  00015	66 8b d9	 mov	 bx, cx
  00018	74 7f		 je	 SHORT $LN1@g_Log@3
  0001a	f7 40 14 00 00
	01 00		 test	 DWORD PTR [eax+20], 65536 ; 00010000H
  00021	74 76		 je	 SHORT $LN1@g_Log@3

; 121  : 
; 122  :         Struct_Microsoft_Singularity_ThreadContext *threadContext =
; 123  :             Class_Microsoft_Singularity_Processor::g_GetCurrentThreadContext();

  00023	e8 00 00 00 00	 call	 ?g_GetCurrentThreadContext@Class_Microsoft_Singularity_Processor@@SIPAUStruct_Microsoft_Singularity_ThreadContext@@XZ ; Class_Microsoft_Singularity_Processor::g_GetCurrentThreadContext

; 124  : 
; 125  :         MONITORING_ENTRY entry = {threadContext->processId, provider,type,0,0,0,0,0,0,1};

  00028	66 8b 80 74 02
	00 00		 mov	 ax, WORD PTR [eax+628]
  0002f	66 89 45 d4	 mov	 WORD PTR _entry$11479[ebp], ax

; 126  : 
; 127  :         Struct_Microsoft_Singularity_Eventing_ArrayType array[] = {
; 128  :             {s->m_stringLength,

  00033	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00036	66 8b 50 08	 mov	 dx, WORD PTR [eax+8]

; 129  :              sizeof(char),
; 130  :              Class_Microsoft_Singularity_Eventing_DataType___string,
; 131  :              &s->m_firstChar}};

  0003a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003d	89 45 fc	 mov	 DWORD PTR _array$11480[ebp+8], eax
  00040	b9 01 00 00 00	 mov	 ecx, 1

; 132  : 
; 133  :         InternalLogVariableRecord(true,
; 134  :                                   MonitoringStorageHandle,
; 135  :                                   MonitoringSource->ControlFlags,
; 136  :                                   MonitoringTypeHandle,
; 137  :                                   &entry,
; 138  :                                   sizeof(entry),
; 139  :                                   sizeof(array)/sizeof(array[0]),
; 140  :                                   array);

  00045	8d 45 f4	 lea	 eax, DWORD PTR _array$11480[ebp]
  00048	50		 push	 eax
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringTypeHandle@@3PAUuintPtr@@A ; MonitoringTypeHandle
  0004e	51		 push	 ecx
  0004f	66 89 55 f4	 mov	 WORD PTR _array$11480[ebp], dx
  00053	6a 20		 push	 32			; 00000020H
  00055	8d 55 d4	 lea	 edx, DWORD PTR _entry$11479[ebp]
  00058	52		 push	 edx
  00059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  0005f	50		 push	 eax
  00060	66 89 5d d6	 mov	 WORD PTR _entry$11479[ebp+2], bx
  00064	66 89 7d d8	 mov	 WORD PTR _entry$11479[ebp+4], di
  00068	66 89 75 da	 mov	 WORD PTR _entry$11479[ebp+6], si
  0006c	89 75 dc	 mov	 DWORD PTR _entry$11479[ebp+8], esi
  0006f	89 75 e0	 mov	 DWORD PTR _entry$11479[ebp+12], esi
  00072	89 75 e4	 mov	 DWORD PTR _entry$11479[ebp+16], esi
  00075	89 75 e8	 mov	 DWORD PTR _entry$11479[ebp+20], esi
  00078	89 75 ec	 mov	 DWORD PTR _entry$11479[ebp+24], esi
  0007b	66 89 4d f0	 mov	 WORD PTR _entry$11479[ebp+28], cx
  0007f	66 89 4d f6	 mov	 WORD PTR _array$11480[ebp+2], cx
  00083	c7 45 f8 00 40
	00 00		 mov	 DWORD PTR _array$11480[ebp+4], 16384 ; 00004000H
  0008a	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0008d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?MonitoringStorageHandle@@3PAUuintPtr@@A ; MonitoringStorageHandle
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
$LN1@g_Log@3:
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx

; 141  :     }
; 142  : }

  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 04 00	 ret	 4
?g_Log@Class_Microsoft_Singularity_Monitoring@@SIXGGPAUClass_System_String@@@Z ENDP ; Class_Microsoft_Singularity_Monitoring::g_Log
_TEXT	ENDS
PUBLIC	?g_isActive@Class_Microsoft_Singularity_Monitoring@@SI_NXZ ; Class_Microsoft_Singularity_Monitoring::g_isActive
; Function compile flags: /Ogtp
;	COMDAT ?g_isActive@Class_Microsoft_Singularity_Monitoring@@SI_NXZ
_TEXT	SEGMENT
?g_isActive@Class_Microsoft_Singularity_Monitoring@@SI_NXZ PROC ; Class_Microsoft_Singularity_Monitoring::g_isActive, COMDAT

; 148  :     return IsMonitoringEnabled();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00005	85 c0		 test	 eax, eax
  00007	74 0f		 je	 SHORT $LN5@g_isActive
  00009	f7 40 14 00 00
	01 00		 test	 DWORD PTR [eax+20], 65536 ; 00010000H
  00010	74 06		 je	 SHORT $LN5@g_isActive
  00012	b8 01 00 00 00	 mov	 eax, 1

; 149  : }

  00017	c3		 ret	 0

; 148  :     return IsMonitoringEnabled();

$LN5@g_isActive:
  00018	33 c0		 xor	 eax, eax

; 149  : }

  0001a	c3		 ret	 0
?g_isActive@Class_Microsoft_Singularity_Monitoring@@SI_NXZ ENDP ; Class_Microsoft_Singularity_Monitoring::g_isActive
_TEXT	ENDS
PUBLIC	?g_setActive@Class_Microsoft_Singularity_Monitoring@@SIX_N@Z ; Class_Microsoft_Singularity_Monitoring::g_setActive
; Function compile flags: /Ogtp
;	COMDAT ?g_setActive@Class_Microsoft_Singularity_Monitoring@@SIX_N@Z
_TEXT	SEGMENT
?g_setActive@Class_Microsoft_Singularity_Monitoring@@SIX_N@Z PROC ; Class_Microsoft_Singularity_Monitoring::g_setActive, COMDAT
; _active$ = cl

; 154  :     if (MonitoringSource != NULL) {

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MonitoringSource@@3PAU_SOURCE_DESCRIPTOR@@A ; MonitoringSource
  00005	85 c0		 test	 eax, eax
  00007	74 13		 je	 SHORT $LN1@g_setActiv

; 155  :         if (active) {

  00009	84 c9		 test	 cl, cl
  0000b	74 08		 je	 SHORT $LN2@g_setActiv

; 156  :             MonitoringSource->ControlFlags |= Monitoring_ControlFlag_Active;

  0000d	81 48 14 00 00
	01 00		 or	 DWORD PTR [eax+20], 65536 ; 00010000H

; 159  :         }
; 160  :     }
; 161  : }

  00014	c3		 ret	 0
$LN2@g_setActiv:

; 157  :         } else {
; 158  :             MonitoringSource->ControlFlags &= ~Monitoring_ControlFlag_Active;

  00015	81 60 14 ff ff
	fe ff		 and	 DWORD PTR [eax+20], -65537 ; fffeffffH
$LN1@g_setActiv:

; 159  :         }
; 160  :     }
; 161  : }

  0001c	c3		 ret	 0
?g_setActive@Class_Microsoft_Singularity_Monitoring@@SIX_N@Z ENDP ; Class_Microsoft_Singularity_Monitoring::g_setActive
_TEXT	ENDS
PUBLIC	?g_FillLogEntry@Class_Microsoft_Singularity_Monitoring@@SIHPAUStruct_Microsoft_Singularity_Monitoring_LogEntry@@PA_K@Z ; Class_Microsoft_Singularity_Monitoring::g_FillLogEntry
; Function compile flags: /Ogtp
;	COMDAT ?g_FillLogEntry@Class_Microsoft_Singularity_Monitoring@@SIHPAUStruct_Microsoft_Singularity_Monitoring_LogEntry@@PA_K@Z
_TEXT	SEGMENT
?g_FillLogEntry@Class_Microsoft_Singularity_Monitoring@@SIHPAUStruct_Microsoft_Singularity_Monitoring_LogEntry@@PA_K@Z PROC ; Class_Microsoft_Singularity_Monitoring::g_FillLogEntry, COMDAT
; _log$ = ecx
; _min_counter$ = edx

; 167  :     //
; 168  :     //  TODO: impplement it to fix monnet
; 169  :     //
; 170  :     return 0;

  00000	33 c0		 xor	 eax, eax

; 171  : }

  00002	c3		 ret	 0
?g_FillLogEntry@Class_Microsoft_Singularity_Monitoring@@SIHPAUStruct_Microsoft_Singularity_Monitoring_LogEntry@@PA_K@Z ENDP ; Class_Microsoft_Singularity_Monitoring::g_FillLogEntry
_TEXT	ENDS
PUBLIC	?g_FillTextEntry@Class_Microsoft_Singularity_Monitoring@@SIHPAE_K0H@Z ; Class_Microsoft_Singularity_Monitoring::g_FillTextEntry
; Function compile flags: /Ogtp
;	COMDAT ?g_FillTextEntry@Class_Microsoft_Singularity_Monitoring@@SIHPAE_K0H@Z
_TEXT	SEGMENT
_counter$ = 8						; size = 8
_max_size$ = 16						; size = 4
?g_FillTextEntry@Class_Microsoft_Singularity_Monitoring@@SIHPAE_K0H@Z PROC ; Class_Microsoft_Singularity_Monitoring::g_FillTextEntry, COMDAT
; _src$ = ecx
; _dst$ = edx

; 176  :     //
; 177  :     //  TODO: impplement it to fix monnet
; 178  :     //
; 179  : 
; 180  :     return 0;

  00000	33 c0		 xor	 eax, eax

; 181  : }

  00002	c2 0c 00	 ret	 12			; 0000000cH
?g_FillTextEntry@Class_Microsoft_Singularity_Monitoring@@SIHPAE_K0H@Z ENDP ; Class_Microsoft_Singularity_Monitoring::g_FillTextEntry
_TEXT	ENDS
END
