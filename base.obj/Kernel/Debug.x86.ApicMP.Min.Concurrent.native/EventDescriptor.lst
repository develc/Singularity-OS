; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	C:\Users\cc\source\repos\Singularity-OS\base\Kernel\Native\EventDescriptor.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Handle_GC_INTERVAL@@3PAUuintPtr@@A		; Handle_GC_INTERVAL
PUBLIC	?Handle_LEGACY_LOG_ENTRY@@3PAUuintPtr@@A	; Handle_LEGACY_LOG_ENTRY
PUBLIC	?Handle_GC_ROOTS@@3PAUuintPtr@@A		; Handle_GC_ROOTS
PUBLIC	?Handle_MONITORING_ENTRY@@3PAUuintPtr@@A	; Handle_MONITORING_ENTRY
PUBLIC	?Handle_LOG_SEVERITY@@3PAUuintPtr@@A		; Handle_LOG_SEVERITY
PUBLIC	?Handle_GC_GENERATIONS@@3PAUuintPtr@@A		; Handle_GC_GENERATIONS
PUBLIC	?Handle_GC_ALLOCATION@@3PAUuintPtr@@A		; Handle_GC_ALLOCATION
PUBLIC	?Handle_LOG_EXCEPTION@@3PAUuintPtr@@A		; Handle_LOG_EXCEPTION
PUBLIC	?Handle_GC_OBJECT@@3PAUuintPtr@@A		; Handle_GC_OBJECT
PUBLIC	?Handle_GC_STACK@@3PAUuintPtr@@A		; Handle_GC_STACK
PUBLIC	?Handle_GC_FUNCTION@@3PAUuintPtr@@A		; Handle_GC_FUNCTION
PUBLIC	?Handle_MEMORY_HEADER@@3PAUuintPtr@@A		; Handle_MEMORY_HEADER
PUBLIC	?Handle_GC_TYPE@@3PAUuintPtr@@A			; Handle_GC_TYPE
_BSS	SEGMENT
?Handle_GC_INTERVAL@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_GC_INTERVAL
?Handle_LEGACY_LOG_ENTRY@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_LEGACY_LOG_ENTRY
?Handle_GC_ROOTS@@3PAUuintPtr@@A DD 01H DUP (?)		; Handle_GC_ROOTS
?Handle_MONITORING_ENTRY@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_MONITORING_ENTRY
?Handle_LOG_SEVERITY@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_LOG_SEVERITY
?Handle_GC_GENERATIONS@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_GC_GENERATIONS
?Handle_GC_ALLOCATION@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_GC_ALLOCATION
?Handle_LOG_EXCEPTION@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_LOG_EXCEPTION
?Handle_GC_OBJECT@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_GC_OBJECT
?Handle_GC_STACK@@3PAUuintPtr@@A DD 01H DUP (?)		; Handle_GC_STACK
?Handle_GC_FUNCTION@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_GC_FUNCTION
?Handle_MEMORY_HEADER@@3PAUuintPtr@@A DD 01H DUP (?)	; Handle_MEMORY_HEADER
?Handle_GC_TYPE@@3PAUuintPtr@@A DD 01H DUP (?)		; Handle_GC_TYPE
_BSS	ENDS
PUBLIC	?GetRecordHeaderSize@@YIIGG@Z			; GetRecordHeaderSize
; Function compile flags: /Ogtp
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\eventing.h
;	COMDAT ?GetRecordHeaderSize@@YIIGG@Z
_TEXT	SEGMENT
?GetRecordHeaderSize@@YIIGG@Z PROC			; GetRecordHeaderSize, COMDAT
; _Flags$ = cx
; _StackSize$ = edx

; 168  :     uint16 HeaderSize = sizeof(MEMORY_HEADER);
; 169  : 
; 170  :     if (Flags & RECORD_STACK_TRACES) {

  00000	f6 c1 01	 test	 cl, 1
  00003	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00008	74 05		 je	 SHORT $LN4@GetRecordH

; 171  :         
; 172  :         HeaderSize += StackSize;

  0000a	03 d0		 add	 edx, eax
  0000c	0f b7 c2	 movzx	 eax, dx
$LN4@GetRecordH:

; 173  :     }
; 174  : 
; 175  :     return HeaderSize;

  0000f	0f b7 c0	 movzx	 eax, ax

; 176  : }

  00012	c3		 ret	 0
?GetRecordHeaderSize@@YIIGG@Z ENDP			; GetRecordHeaderSize
_TEXT	ENDS
PUBLIC	?GetRecordInternalStructure@@YIPAXPAU_MEMORY_HEADER@@G@Z ; GetRecordInternalStructure
; Function compile flags: /Ogtp
;	COMDAT ?GetRecordInternalStructure@@YIPAXPAU_MEMORY_HEADER@@G@Z
_TEXT	SEGMENT
?GetRecordInternalStructure@@YIPAXPAU_MEMORY_HEADER@@G@Z PROC ; GetRecordInternalStructure, COMDAT
; _Record$ = ecx
; _RecordFlag$ = dx

; 186  :     if (Record->Flags & RecordFlag) {

  00000	66 85 51 06	 test	 WORD PTR [ecx+6], dx
  00004	74 0e		 je	 SHORT $LN2@GetRecordI

; 187  : 
; 188  :         uint16 HeaderSize;
; 189  : 
; 190  :         if (RecordFlag & (RecordFlag - 1)) {

  00006	0f b7 c2	 movzx	 eax, dx
  00009	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  0000c	85 d0		 test	 edx, eax

; 191  : 
; 192  :             //  A single bit at the time can be set to query the internal layout info.
; 193  :             //  Return failure otherwise.
; 194  : 
; 195  :             return NULL;

  0000e	75 04		 jne	 SHORT $LN2@GetRecordI

; 196  :         }
; 197  : 
; 198  :         //  The structures are allocated in order, as the flags bits decrease
; 199  :         //  We can clear the flags 
; 200  : 
; 201  :         HeaderSize = GetRecordHeaderSize(Record->Flags & (~((RecordFlag << 1) - 1)), 0);
; 202  : 
; 203  :         return (PVOID)((ULONG_PTR)Record + HeaderSize);

  00010	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]

; 207  : }

  00013	c3		 ret	 0
$LN2@GetRecordI:

; 204  :     }
; 205  : 
; 206  :     return NULL;

  00014	33 c0		 xor	 eax, eax

; 207  : }

  00016	c3		 ret	 0
?GetRecordInternalStructure@@YIPAXPAU_MEMORY_HEADER@@G@Z ENDP ; GetRecordInternalStructure
_TEXT	ENDS
PUBLIC	?GetUserRecordStructure@@YIPAXPAU_MEMORY_HEADER@@@Z ; GetUserRecordStructure
; Function compile flags: /Ogtp
;	COMDAT ?GetUserRecordStructure@@YIPAXPAU_MEMORY_HEADER@@@Z
_TEXT	SEGMENT
?GetUserRecordStructure@@YIPAXPAU_MEMORY_HEADER@@@Z PROC ; GetUserRecordStructure, COMDAT
; _Record$ = ecx

; 216  :     if (Record->Flags & RECORD_STACK_TRACES) {

  00000	f6 41 06 01	 test	 BYTE PTR [ecx+6], 1
  00004	74 17		 je	 SHORT $LN2@GetUserRec

; 217  : 
; 218  :         ULONG_PTR * StackSize = (ULONG_PTR *)GetRecordInternalStructure(Record, RECORD_STACK_TRACES);
; 219  :         return (PVOID)((ULONG_PTR)Record + GetRecordHeaderSize(Record->Flags, (uint16)(*StackSize + 1) * sizeof(UIntPtr)));

  00006	66 8b 41 18	 mov	 ax, WORD PTR [ecx+24]
  0000a	66 05 07 00	 add	 ax, 7
  0000e	66 03 c0	 add	 ax, ax
  00011	66 03 c0	 add	 ax, ax
  00014	0f b7 c0	 movzx	 eax, ax
  00017	0f b7 c0	 movzx	 eax, ax
  0001a	03 c1		 add	 eax, ecx

; 224  :     }
; 225  : 
; 226  :     return NULL;
; 227  : }

  0001c	c3		 ret	 0
$LN2@GetUserRec:

; 220  : 
; 221  :     } else {
; 222  : 
; 223  :         return (PVOID)((ULONG_PTR)Record + GetRecordHeaderSize(Record->Flags, 0));

  0001d	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]

; 224  :     }
; 225  : 
; 226  :     return NULL;
; 227  : }

  00020	c3		 ret	 0
?GetUserRecordStructure@@YIPAXPAU_MEMORY_HEADER@@@Z ENDP ; GetUserRecordStructure
_TEXT	ENDS
PUBLIC	?GetLocalRepository@@YIPAU_MEMORY_STORAGE@@XZ	; GetLocalRepository
EXTRN	?SourceController@@3U_SOURCE_CONTROLLER@@A:BYTE	; SourceController
; Function compile flags: /Ogtp
;	COMDAT ?GetLocalRepository@@YIPAU_MEMORY_STORAGE@@XZ
_TEXT	SEGMENT
?GetLocalRepository@@YIPAU_MEMORY_STORAGE@@XZ PROC	; GetLocalRepository, COMDAT

; 367  :     return SourceController.SourceRepository;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A

; 368  : }

  00005	c3		 ret	 0
?GetLocalRepository@@YIPAU_MEMORY_STORAGE@@XZ ENDP	; GetLocalRepository
_TEXT	ENDS
PUBLIC	?GetLocalRepositoryHandle@@YIPAUuintPtr@@XZ	; GetLocalRepositoryHandle
; Function compile flags: /Ogtp
;	COMDAT ?GetLocalRepositoryHandle@@YIPAUuintPtr@@XZ
_TEXT	SEGMENT
?GetLocalRepositoryHandle@@YIPAUuintPtr@@XZ PROC	; GetLocalRepositoryHandle, COMDAT

; 374  :     return (UIntPtr)GetLocalRepository();

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A

; 375  : }

  00005	c3		 ret	 0
?GetLocalRepositoryHandle@@YIPAUuintPtr@@XZ ENDP	; GetLocalRepositoryHandle
_TEXT	ENDS
PUBLIC	?GetFieldSize@@YIGG@Z				; GetFieldSize
; Function compile flags: /Ogtp
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\eventdescriptor.cpp
;	COMDAT ?GetFieldSize@@YIGG@Z
_TEXT	SEGMENT
?GetFieldSize@@YIGG@Z PROC				; GetFieldSize, COMDAT
; _type$ = ecx

; 32   :     if (type & EVENT_FIELD_TYPE_arrayType) {

  00000	f7 c1 00 80 00
	00		 test	 ecx, 32768		; 00008000H
  00006	74 05		 je	 SHORT $LN8@GetFieldSi
$LN4@GetFieldSi:

; 33   : 
; 34   :         return sizeof(uint16);

  00008	66 b8 02 00	 mov	 ax, 2

; 61   : }

  0000c	c3		 ret	 0
$LN8@GetFieldSi:

; 35   :     }
; 36   : 
; 37   :     switch (type) {

  0000d	0f b7 c1	 movzx	 eax, cx
  00010	83 c0 ff	 add	 eax, -1
  00013	83 f8 09	 cmp	 eax, 9
  00016	77 16		 ja	 SHORT $LN6@GetFieldSi
  00018	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN11@GetFieldSi[eax*4]
$LN5@GetFieldSi:

; 38   : 
; 39   :         case EVENT_FIELD_TYPE_int8:
; 40   :         case EVENT_FIELD_TYPE_uint8:
; 41   :             return sizeof(uint8);

  0001f	66 b8 01 00	 mov	 ax, 1

; 61   : }

  00023	c3		 ret	 0
$LN3@GetFieldSi:

; 42   : 
; 43   :         case EVENT_FIELD_TYPE_int16:
; 44   :         case EVENT_FIELD_TYPE_uint16:
; 45   :             return sizeof(uint16);
; 46   : 
; 47   :         case EVENT_FIELD_TYPE_int32:
; 48   :         case EVENT_FIELD_TYPE_uint32:
; 49   :             return sizeof(uint32);

  00024	66 b8 04 00	 mov	 ax, 4

; 61   : }

  00028	c3		 ret	 0
$LN2@GetFieldSi:

; 50   : 
; 51   :         case EVENT_FIELD_TYPE_int64:
; 52   :         case EVENT_FIELD_TYPE_uint64:
; 53   :             return sizeof(uint64);

  00029	66 b8 08 00	 mov	 ax, 8

; 61   : }

  0002d	c3		 ret	 0
$LN6@GetFieldSi:

; 54   : 
; 55   :         case EVENT_FIELD_TYPE_IntPtr:
; 56   :         case EVENT_FIELD_TYPE_UIntPtr:
; 57   :             return sizeof(UIntPtr);
; 58   :     }
; 59   : 
; 60   :     return 0;

  0002e	66 33 c0	 xor	 ax, ax

; 61   : }

  00031	c3		 ret	 0
  00032	8b ff		 npad	 2
$LN11@GetFieldSi:
  00034	00 00 00 00	 DD	 $LN5@GetFieldSi
  00038	00 00 00 00	 DD	 $LN5@GetFieldSi
  0003c	00 00 00 00	 DD	 $LN4@GetFieldSi
  00040	00 00 00 00	 DD	 $LN4@GetFieldSi
  00044	00 00 00 00	 DD	 $LN3@GetFieldSi
  00048	00 00 00 00	 DD	 $LN3@GetFieldSi
  0004c	00 00 00 00	 DD	 $LN2@GetFieldSi
  00050	00 00 00 00	 DD	 $LN2@GetFieldSi
  00054	00 00 00 00	 DD	 $LN3@GetFieldSi
  00058	00 00 00 00	 DD	 $LN3@GetFieldSi
?GetFieldSize@@YIGG@Z ENDP				; GetFieldSize
_TEXT	ENDS
PUBLIC	?GetFixedTypeSize@@YIGPAU_EVENT_DESCRIPTOR@@@Z	; GetFixedTypeSize
; Function compile flags: /Ogtp
;	COMDAT ?GetFixedTypeSize@@YIGPAU_EVENT_DESCRIPTOR@@@Z
_TEXT	SEGMENT
?GetFixedTypeSize@@YIGPAU_EVENT_DESCRIPTOR@@@Z PROC	; GetFixedTypeSize, COMDAT
; _typeEntry$ = ecx

; 65   : {

  00000	56		 push	 esi

; 66   :     PEVENT_FIELD_DESCRIPTOR field;
; 67   :     uint16 size = 0;
; 68   : 
; 69   :     for (field = typeEntry->fieldsLink; field != NULL; field = field->fieldsLink) {

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]
  00003	33 c0		 xor	 eax, eax
  00005	85 f6		 test	 esi, esi
  00007	74 63		 je	 SHORT $LN2@GetFixedTy
  00009	53		 push	 ebx
  0000a	57		 push	 edi
  0000b	eb 03 8d 49 00	 npad	 5
$LL20@GetFixedTy:

; 70   : 
; 71   :         uint16 fieldSize = GetFieldSize(field->Type);

  00010	0f b7 4e 06	 movzx	 ecx, WORD PTR [esi+6]
  00014	f7 c1 00 80 00
	00		 test	 ecx, 32768		; 00008000H
  0001a	74 07		 je	 SHORT $LN14@GetFixedTy
$LN10@GetFixedTy:
  0001c	b9 02 00 00 00	 mov	 ecx, 2
  00021	eb 29		 jmp	 SHORT $LN15@GetFixedTy
$LN14@GetFixedTy:
  00023	0f b7 c9	 movzx	 ecx, cx
  00026	83 c1 ff	 add	 ecx, -1
  00029	83 f9 09	 cmp	 ecx, 9
  0002c	77 1c		 ja	 SHORT $LN12@GetFixedTy
  0002e	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN21@GetFixedTy[ecx*4]
$LN11@GetFixedTy:
  00035	b9 01 00 00 00	 mov	 ecx, 1
  0003a	eb 10		 jmp	 SHORT $LN15@GetFixedTy
$LN9@GetFixedTy:
  0003c	b9 04 00 00 00	 mov	 ecx, 4
  00041	eb 09		 jmp	 SHORT $LN15@GetFixedTy
$LN8@GetFixedTy:
  00043	b9 08 00 00 00	 mov	 ecx, 8
  00048	eb 02		 jmp	 SHORT $LN15@GetFixedTy
$LN12@GetFixedTy:
  0004a	33 c9		 xor	 ecx, ecx
$LN15@GetFixedTy:

; 72   : 
; 73   :         if (size < (field->Offset + fieldSize)) {

  0004c	0f b7 56 04	 movzx	 edx, WORD PTR [esi+4]
  00050	0f b7 d9	 movzx	 ebx, cx
  00053	0f b7 fa	 movzx	 edi, dx
  00056	03 fb		 add	 edi, ebx
  00058	0f b7 d8	 movzx	 ebx, ax
  0005b	3b df		 cmp	 ebx, edi
  0005d	7d 05		 jge	 SHORT $LN3@GetFixedTy

; 74   : 
; 75   :             size = field->Offset + fieldSize;

  0005f	03 d1		 add	 edx, ecx
  00061	0f b7 c2	 movzx	 eax, dx
$LN3@GetFixedTy:
  00064	8b 36		 mov	 esi, DWORD PTR [esi]
  00066	85 f6		 test	 esi, esi
  00068	75 a6		 jne	 SHORT $LL20@GetFixedTy
  0006a	5f		 pop	 edi
  0006b	5b		 pop	 ebx
$LN2@GetFixedTy:
  0006c	5e		 pop	 esi

; 76   :         }
; 77   :     }
; 78   : 
; 79   :     return size;
; 80   : }

  0006d	c3		 ret	 0
  0006e	8b ff		 npad	 2
$LN21@GetFixedTy:
  00070	00 00 00 00	 DD	 $LN11@GetFixedTy
  00074	00 00 00 00	 DD	 $LN11@GetFixedTy
  00078	00 00 00 00	 DD	 $LN10@GetFixedTy
  0007c	00 00 00 00	 DD	 $LN10@GetFixedTy
  00080	00 00 00 00	 DD	 $LN9@GetFixedTy
  00084	00 00 00 00	 DD	 $LN9@GetFixedTy
  00088	00 00 00 00	 DD	 $LN8@GetFixedTy
  0008c	00 00 00 00	 DD	 $LN8@GetFixedTy
  00090	00 00 00 00	 DD	 $LN9@GetFixedTy
  00094	00 00 00 00	 DD	 $LN9@GetFixedTy
?GetFixedTypeSize@@YIGPAU_EVENT_DESCRIPTOR@@@Z ENDP	; GetFixedTypeSize
_TEXT	ENDS
PUBLIC	?GetExtendedString@@YIPADPAUuintPtr@@H@Z	; GetExtendedString
; Function compile flags: /Ogtp
;	COMDAT ?GetExtendedString@@YIPADPAUuintPtr@@H@Z
_TEXT	SEGMENT
_index$ = -4						; size = 4
?GetExtendedString@@YIPADPAUuintPtr@@H@Z PROC		; GetExtendedString, COMDAT
; _EntryHandle$ = ecx
; _index$ = edx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 84   :     PMEMORY_HEADER entry = HANDLE_TO_HEADER(EntryHandle);
; 85   :     char * endPtr = (char *)(entry) + entry->Size;
; 86   : 
; 87   :     int entrySize;
; 88   : 
; 89   :     switch (entry->Flags) {

  00008	0f b7 5e 06	 movzx	 ebx, WORD PTR [esi+6]
  0000c	57		 push	 edi
  0000d	0f b7 3e	 movzx	 edi, WORD PTR [esi]
  00010	0f b7 c3	 movzx	 eax, bx
  00013	03 fe		 add	 edi, esi
  00015	3d 00 88 00 00	 cmp	 eax, 34816		; 00008800H
  0001a	89 55 fc	 mov	 DWORD PTR _index$[ebp], edx
  0001d	7f 1e		 jg	 SHORT $LN17@GetExtende
  0001f	74 15		 je	 SHORT $LN9@GetExtende
  00021	3d 00 81 00 00	 cmp	 eax, 33024		; 00008100H
  00026	74 07		 je	 SHORT $LN12@GetExtende
  00028	3d 00 82 00 00	 cmp	 eax, 33280		; 00008200H
  0002d	75 1c		 jne	 SHORT $LN7@GetExtende
$LN12@GetExtende:

; 90   : 
; 91   :         case RECORD_EVENT_TYPE:
; 92   :             entrySize = sizeof(EVENT_DESCRIPTOR);
; 93   :             break;
; 94   : 
; 95   :         case RECORD_EVENT_FIELD:
; 96   :             entrySize = sizeof(EVENT_FIELD_DESCRIPTOR);

  0002f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH

; 97   :             break;

  00034	eb 2a		 jmp	 SHORT $LN13@GetExtende
$LN9@GetExtende:

; 101  :             break;
; 102  : 
; 103  :         case RECORD_EVENT_VALUE:
; 104  :             entrySize = sizeof(EVENT_VALUE_DESCRIPTOR);

  00036	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H

; 105  :             break;

  0003b	eb 23		 jmp	 SHORT $LN13@GetExtende
$LN17@GetExtende:

; 84   :     PMEMORY_HEADER entry = HANDLE_TO_HEADER(EntryHandle);
; 85   :     char * endPtr = (char *)(entry) + entry->Size;
; 86   : 
; 87   :     int entrySize;
; 88   : 
; 89   :     switch (entry->Flags) {

  0003d	3d 00 90 00 00	 cmp	 eax, 36864		; 00009000H
  00042	74 17		 je	 SHORT $LN10@GetExtende
  00044	3d 00 a0 00 00	 cmp	 eax, 40960		; 0000a000H
  00049	74 eb		 je	 SHORT $LN9@GetExtende
$LN7@GetExtende:

; 106  : 
; 107  :         case RECORD_EVENT_ENUM:
; 108  :             entrySize = sizeof(ENUM_DESCRIPTOR);
; 109  :             break;
; 110  : 
; 111  :         default : {
; 112  : 
; 113  :             PEVENT_DESCRIPTOR typeEntry = HANDLE_TO_TYPE(entry->Type);

  0004b	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0004e	83 c1 18	 add	 ecx, 24			; 00000018H

; 114  :             entrySize = GetFixedTypeSize(typeEntry);

  00051	e8 00 00 00 00	 call	 ?GetFixedTypeSize@@YIGPAU_EVENT_DESCRIPTOR@@@Z ; GetFixedTypeSize
  00056	0f b7 c8	 movzx	 ecx, ax
  00059	eb 05		 jmp	 SHORT $LN13@GetExtende
$LN10@GetExtende:

; 98   : 
; 99   :         case RECORD_EVENT_GENERIC_FIELD:
; 100  :             entrySize = sizeof(EVENT_GENERIC_TYPE_DESCRIPTOR);

  0005b	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
$LN13@GetExtende:

; 115  :         }
; 116  :     }
; 117  : 
; 118  : 
; 119  :     void * base = GetUserRecordStructure(entry);

  00060	f6 c3 01	 test	 bl, 1
  00063	74 18		 je	 SHORT $LN19@GetExtende
  00065	66 8b 46 18	 mov	 ax, WORD PTR [esi+24]
  00069	66 05 07 00	 add	 ax, 7
  0006d	66 03 c0	 add	 ax, ax
  00070	66 03 c0	 add	 ax, ax
  00073	0f b7 c0	 movzx	 eax, ax
  00076	0f b7 c0	 movzx	 eax, ax
  00079	03 c6		 add	 eax, esi
  0007b	eb 03		 jmp	 SHORT $LN20@GetExtende
$LN19@GetExtende:
  0007d	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
$LN20@GetExtende:

; 120  : 
; 121  :     char * crtPtr = (char *)base + entrySize;
; 122  : 
; 123  :     crtPtr = (char *)ROUND_UP_TO_POWER2(crtPtr, sizeof(int));

  00080	8d 44 08 03	 lea	 eax, DWORD PTR [eax+ecx+3]
  00084	83 e0 fc	 and	 eax, -4			; fffffffcH

; 124  :     if (crtPtr >= endPtr) {

  00087	3b c7		 cmp	 eax, edi
  00089	72 09		 jb	 SHORT $LN6@GetExtende
$LN36@GetExtende:
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi

; 125  :         return NULL;

  0008d	33 c0		 xor	 eax, eax
  0008f	5b		 pop	 ebx

; 143  :         return NULL;
; 144  :     }
; 145  :     return ptr;
; 146  : }

  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
$LN6@GetExtende:

; 126  :     }
; 127  : 
; 128  :     for (int i = 1; i < index; i++) {

  00094	b9 01 00 00 00	 mov	 ecx, 1
  00099	39 4d fc	 cmp	 DWORD PTR _index$[ebp], ecx
  0009c	7e 18		 jle	 SHORT $LN3@GetExtende
  0009e	8b ff		 npad	 2
$LL5@GetExtende:

; 129  : 
; 130  :         uint16 length;
; 131  : 
; 132  :         // copy the structure localy since it may not be aligned.
; 133  : 
; 134  :         memcpy(&length, crtPtr, sizeof(uint16));

  000a0	0f b7 10	 movzx	 edx, WORD PTR [eax]

; 135  :         crtPtr += length + sizeof(uint16);

  000a3	0f b7 d2	 movzx	 edx, dx
  000a6	8d 44 10 02	 lea	 eax, DWORD PTR [eax+edx+2]

; 136  :         if (crtPtr >= endPtr) {

  000aa	3b c7		 cmp	 eax, edi
  000ac	73 dd		 jae	 SHORT $LN36@GetExtende
  000ae	83 c1 01	 add	 ecx, 1
  000b1	3b 4d fc	 cmp	 ecx, DWORD PTR _index$[ebp]
  000b4	7c ea		 jl	 SHORT $LL5@GetExtende
$LN3@GetExtende:

; 137  :             return NULL;
; 138  :         }
; 139  :     }
; 140  : 
; 141  :     char * ptr = crtPtr + sizeof(uint16); // skip also the size of the string

  000b6	8d 48 02	 lea	 ecx, DWORD PTR [eax+2]

; 142  :     if (ptr >= endPtr) {

  000b9	3b cf		 cmp	 ecx, edi
  000bb	5f		 pop	 edi
  000bc	1b c0		 sbb	 eax, eax
  000be	5e		 pop	 esi
  000bf	23 c1		 and	 eax, ecx
  000c1	5b		 pop	 ebx

; 143  :         return NULL;
; 144  :     }
; 145  :     return ptr;
; 146  : }

  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?GetExtendedString@@YIPADPAUuintPtr@@H@Z ENDP		; GetExtendedString
_TEXT	ENDS
PUBLIC	?RegisterEventDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXG0G@Z ; RegisterEventDescriptorImplementation
EXTRN	?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z:PROC ; InternalLogVariableRecord
; Function compile flags: /Ogtp
;	COMDAT ?RegisterEventDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXG0G@Z
_TEXT	SEGMENT
_array$ = -36						; size = 24
_Event$ = -12						; size = 12
_nameLength$ = 8					; size = 2
_description$ = 12					; size = 4
_descriptionLength$ = 16				; size = 2
?RegisterEventDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXG0G@Z PROC ; RegisterEventDescriptorImplementation, COMDAT
; _stringType$ = ecx
; _name$ = edx

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	8b c1		 mov	 eax, ecx
  00008	57		 push	 edi

; 161  :     EVENT_DESCRIPTOR Event = {NULL, 0, 1, 2};
; 162  : 
; 163  :     Struct_Microsoft_Singularity_Eventing_ArrayType array[] = {
; 164  :         {nameLength,

  00009	66 8b 7d 08	 mov	 di, WORD PTR _nameLength$[ebp]
  0000d	b9 01 00 00 00	 mov	 ecx, 1

; 165  :          sizeof(char),
; 166  :          stringType,
; 167  :          name},

  00012	89 55 e4	 mov	 DWORD PTR _array$[ebp+8], edx

; 168  :         {descriptionLength,

  00015	66 8b 55 10	 mov	 dx, WORD PTR _descriptionLength$[ebp]

; 169  :          sizeof(char),
; 170  :          stringType,
; 171  :          description}};
; 172  : 
; 173  :     if (descriptionLength == 0) {

  00019	66 85 d2	 test	 dx, dx
  0001c	89 45 e0	 mov	 DWORD PTR _array$[ebp+4], eax
  0001f	89 45 ec	 mov	 DWORD PTR _array$[ebp+16], eax
  00022	8b 45 0c	 mov	 eax, DWORD PTR _description$[ebp]
  00025	66 89 7d dc	 mov	 WORD PTR _array$[ebp], di
  00029	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _Event$[ebp], 0
  00030	66 c7 45 f8 00
	00		 mov	 WORD PTR _Event$[ebp+4], 0
  00036	66 89 4d fa	 mov	 WORD PTR _Event$[ebp+6], cx
  0003a	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$[ebp+8], 2
  00040	66 89 4d de	 mov	 WORD PTR _array$[ebp+2], cx
  00044	66 89 55 e8	 mov	 WORD PTR _array$[ebp+12], dx
  00048	66 89 4d ea	 mov	 WORD PTR _array$[ebp+14], cx
  0004c	89 45 f0	 mov	 DWORD PTR _array$[ebp+20], eax
  0004f	5f		 pop	 edi
  00050	75 04		 jne	 SHORT $LN1@RegisterEv

; 174  : 
; 175  :         Event.Description = 0;

  00052	66 89 55 fc	 mov	 WORD PTR _Event$[ebp+8], dx
$LN1@RegisterEv:

; 176  :     }
; 177  : 
; 178  :     PMEMORY_HEADER Entry = InternalLogVariableRecord( true,
; 179  :         GetLocalRepositoryHandle(),
; 180  :         RECORD_EVENT_TYPE,
; 181  :         0,
; 182  :         &Event,
; 183  :         sizeof(Event),
; 184  :         (descriptionLength) ? 2 : 1,
; 185  :         array);

  00056	8d 45 dc	 lea	 eax, DWORD PTR _array$[ebp]
  00059	50		 push	 eax
  0005a	33 c0		 xor	 eax, eax
  0005c	66 85 d2	 test	 dx, dx
  0005f	0f 95 c0	 setne	 al
  00062	8d 55 f4	 lea	 edx, DWORD PTR _Event$[ebp]
  00065	83 c0 01	 add	 eax, 1
  00068	50		 push	 eax
  00069	6a 0c		 push	 12			; 0000000cH
  0006b	52		 push	 edx
  0006c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  00072	6a 00		 push	 0
  00074	68 00 81 00 00	 push	 33024			; 00008100H
  00079	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord

; 186  : 
; 187  :     return Entry;
; 188  : 
; 189  : }

  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 0c 00	 ret	 12			; 0000000cH
?RegisterEventDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXG0G@Z ENDP ; RegisterEventDescriptorImplementation
_TEXT	ENDS
PUBLIC	?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
EXTRN	?CommitEventEntry@@YIXPAU_MEMORY_HEADER@@@Z:PROC ; CommitEventEntry
; Function compile flags: /Ogtp
;	COMDAT ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z
_TEXT	SEGMENT
_Field$ = -32						; size = 12
_array$ = -20						; size = 12
_fieldSize$ = -8					; size = 4
_stringType$ = -4					; size = 4
_name$ = 8						; size = 4
_nameLength$ = 12					; size = 4
_offset$ = 16						; size = 2
_type$ = 20						; size = 2
?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z PROC ; RegisterFieldDescriptorImplementation, COMDAT
; _stringType$ = ecx
; _Descriptor$ = edx

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 199  :     PEVENT_DESCRIPTOR eventDescriptor = (PEVENT_DESCRIPTOR)GetUserRecordStructure(Descriptor);

  00006	f6 42 06 01	 test	 BYTE PTR [edx+6], 1
  0000a	53		 push	 ebx
  0000b	56		 push	 esi
  0000c	57		 push	 edi
  0000d	89 4d fc	 mov	 DWORD PTR _stringType$[ebp], ecx
  00010	74 18		 je	 SHORT $LN8@RegisterFi
  00012	66 8b 42 18	 mov	 ax, WORD PTR [edx+24]
  00016	66 05 07 00	 add	 ax, 7
  0001a	66 03 c0	 add	 ax, ax
  0001d	66 03 c0	 add	 ax, ax
  00020	0f b7 c0	 movzx	 eax, ax
  00023	0f b7 f8	 movzx	 edi, ax
  00026	03 fa		 add	 edi, edx
  00028	eb 03		 jmp	 SHORT $LN9@RegisterFi
$LN8@RegisterFi:
  0002a	8d 7a 18	 lea	 edi, DWORD PTR [edx+24]
$LN9@RegisterFi:

; 200  :     int fieldSize = GetFieldSize(type);

  0002d	8b 4d 14	 mov	 ecx, DWORD PTR _type$[ebp]
  00030	e8 00 00 00 00	 call	 ?GetFieldSize@@YIGG@Z	; GetFieldSize

; 201  : 
; 202  :     if (offset == 0) {

  00035	8b 5d 10	 mov	 ebx, DWORD PTR _offset$[ebp]
  00038	66 85 db	 test	 bx, bx
  0003b	0f b7 c0	 movzx	 eax, ax
  0003e	89 45 f8	 mov	 DWORD PTR _fieldSize$[ebp], eax
  00041	75 16		 jne	 SHORT $LN46@RegisterFi

; 203  : 
; 204  :         offset = eventDescriptor->Size;
; 205  : 
; 206  :         //
; 207  :         //  Align naturaly the field
; 208  :         //
; 209  : 
; 210  :         offset = (uint16)ROUND_UP_TO_POWER2(offset, fieldSize);

  00043	66 8b 4f 04	 mov	 cx, WORD PTR [edi+4]
  00047	66 03 c8	 add	 cx, ax
  0004a	8d 70 ff	 lea	 esi, DWORD PTR [eax-1]
  0004d	66 83 e9 01	 sub	 cx, 1
  00051	f7 d6		 not	 esi
  00053	66 23 ce	 and	 cx, si
  00056	0f b7 d9	 movzx	 ebx, cx
$LN46@RegisterFi:

; 211  :     }
; 212  : 
; 213  :     EV_ASSERT(offset == ROUND_UP_TO_POWER2(offset, fieldSize));

  00059	0f b7 cb	 movzx	 ecx, bx
  0005c	8d 74 01 ff	 lea	 esi, DWORD PTR [ecx+eax-1]
  00060	83 c0 ff	 add	 eax, -1
  00063	f7 d0		 not	 eax
  00065	23 f0		 and	 esi, eax
  00067	3b ce		 cmp	 ecx, esi
  00069	74 01		 je	 SHORT $LN3@RegisterFi
  0006b	cc		 int	 3
$LN3@RegisterFi:

; 214  :     EV_ASSERT(offset >= eventDescriptor->Size);

  0006c	66 3b 5f 04	 cmp	 bx, WORD PTR [edi+4]
  00070	73 01		 jae	 SHORT $LN2@RegisterFi
  00072	cc		 int	 3
$LN2@RegisterFi:

; 215  : 
; 216  :     EVENT_FIELD_DESCRIPTOR Field = {NULL, offset, type, NULL};

  00073	66 8b 4d 14	 mov	 cx, WORD PTR _type$[ebp]
  00077	33 c0		 xor	 eax, eax
  00079	66 89 4d e6	 mov	 WORD PTR _Field$[ebp+6], cx

; 217  :     Struct_Microsoft_Singularity_Eventing_ArrayType array[] = {
; 218  :         {nameLength,
; 219  :          sizeof(char),
; 220  :          stringType,

  0007d	8b 4d fc	 mov	 ecx, DWORD PTR _stringType$[ebp]
  00080	89 45 e0	 mov	 DWORD PTR _Field$[ebp], eax
  00083	66 89 45 e8	 mov	 WORD PTR _Field$[ebp+8], ax
  00087	66 8b 45 0c	 mov	 ax, WORD PTR _nameLength$[ebp]
  0008b	89 4d f0	 mov	 DWORD PTR _array$[ebp+4], ecx

; 221  :          name}};
; 222  : 
; 223  :     PMEMORY_HEADER Entry = InternalLogVariableRecord( false,
; 224  :                                                       GetLocalRepositoryHandle(),
; 225  :                                                       RECORD_EVENT_FIELD,
; 226  :                                                       (UIntPtr)Descriptor,
; 227  :                                                       &Field,
; 228  :                                                       sizeof(Field),
; 229  :                                                       1,
; 230  :                                                       array);

  0008e	8d 4d ec	 lea	 ecx, DWORD PTR _array$[ebp]
  00091	51		 push	 ecx
  00092	66 89 45 ec	 mov	 WORD PTR _array$[ebp], ax
  00096	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00099	6a 01		 push	 1
  0009b	6a 0c		 push	 12			; 0000000cH
  0009d	89 45 f4	 mov	 DWORD PTR _array$[ebp+8], eax
  000a0	8d 45 e0	 lea	 eax, DWORD PTR _Field$[ebp]
  000a3	50		 push	 eax
  000a4	52		 push	 edx
  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  000ab	68 00 82 00 00	 push	 33280			; 00008200H
  000b0	32 c9		 xor	 cl, cl
  000b2	66 89 5d e4	 mov	 WORD PTR _Field$[ebp+4], bx
  000b6	66 c7 45 ee 01
	00		 mov	 WORD PTR _array$[ebp+2], 1
  000bc	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  000c1	8b f0		 mov	 esi, eax

; 231  : 
; 232  :     if (Entry != NULL) {

  000c3	85 f6		 test	 esi, esi
  000c5	74 39		 je	 SHORT $LN1@RegisterFi

; 233  : 
; 234  :         PEVENT_FIELD_DESCRIPTOR newField = (PEVENT_FIELD_DESCRIPTOR)GetUserRecordStructure(Entry);

  000c7	f6 46 06 01	 test	 BYTE PTR [esi+6], 1
  000cb	74 18		 je	 SHORT $LN29@RegisterFi
  000cd	66 8b 4e 18	 mov	 cx, WORD PTR [esi+24]
  000d1	66 83 c1 07	 add	 cx, 7
  000d5	66 03 c9	 add	 cx, cx
  000d8	66 03 c9	 add	 cx, cx
  000db	0f b7 c1	 movzx	 eax, cx
  000de	0f b7 c0	 movzx	 eax, ax
  000e1	03 c6		 add	 eax, esi
  000e3	eb 03		 jmp	 SHORT $LN30@RegisterFi
$LN29@RegisterFi:
  000e5	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
$LN30@RegisterFi:

; 235  : 
; 236  :         newField->fieldsLink = eventDescriptor->fieldsLink;

  000e8	8b 17		 mov	 edx, DWORD PTR [edi]
  000ea	89 10		 mov	 DWORD PTR [eax], edx

; 237  :         eventDescriptor->fieldsLink = newField;

  000ec	89 07		 mov	 DWORD PTR [edi], eax

; 238  :         eventDescriptor->Size = offset + fieldSize;

  000ee	8b 45 f8	 mov	 eax, DWORD PTR _fieldSize$[ebp]
  000f1	03 c3		 add	 eax, ebx

; 239  : 
; 240  :         CommitEventEntry(Entry);

  000f3	8b ce		 mov	 ecx, esi
  000f5	66 89 47 04	 mov	 WORD PTR [edi+4], ax
  000f9	e8 00 00 00 00	 call	 ?CommitEventEntry@@YIXPAU_MEMORY_HEADER@@@Z ; CommitEventEntry

; 241  :     }
; 242  : 
; 243  :     return Entry;

  000fe	8b c6		 mov	 eax, esi
$LN1@RegisterFi:
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx

; 244  : }

  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 10 00	 ret	 16			; 00000010H
?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ENDP ; RegisterFieldDescriptorImplementation
_TEXT	ENDS
PUBLIC	?RegisterGenericFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGGPAUuintPtr@@@Z ; RegisterGenericFieldDescriptorImplementation
; Function compile flags: /Ogtp
;	COMDAT ?RegisterGenericFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGGPAUuintPtr@@@Z
_TEXT	SEGMENT
_Field$ = -36						; size = 20
_array$ = -16						; size = 12
_stringType$ = -4					; size = 4
_name$ = 8						; size = 4
_nameLength$ = 12					; size = 4
_offset$ = 16						; size = 2
_size$ = 20						; size = 2
_typeFieldDescriptor$ = 24				; size = 4
?RegisterGenericFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGGPAUuintPtr@@@Z PROC ; RegisterGenericFieldDescriptorImplementation, COMDAT
; _stringType$ = ecx
; _event$ = edx

; 254  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H

; 255  :     PEVENT_DESCRIPTOR eventDescriptor = (PEVENT_DESCRIPTOR)GetUserRecordStructure(event);

  00006	f6 42 06 01	 test	 BYTE PTR [edx+6], 1
  0000a	53		 push	 ebx
  0000b	56		 push	 esi
  0000c	57		 push	 edi
  0000d	89 4d fc	 mov	 DWORD PTR _stringType$[ebp], ecx
  00010	74 18		 je	 SHORT $LN8@RegisterGe
  00012	66 8b 42 18	 mov	 ax, WORD PTR [edx+24]
  00016	66 05 07 00	 add	 ax, 7
  0001a	66 03 c0	 add	 ax, ax
  0001d	66 03 c0	 add	 ax, ax
  00020	0f b7 c0	 movzx	 eax, ax
  00023	0f b7 f8	 movzx	 edi, ax
  00026	03 fa		 add	 edi, edx
  00028	eb 03		 jmp	 SHORT $LN9@RegisterGe
$LN8@RegisterGe:
  0002a	8d 7a 18	 lea	 edi, DWORD PTR [edx+24]
$LN9@RegisterGe:

; 256  : 
; 257  :     if (offset == 0) {

  0002d	8b 5d 10	 mov	 ebx, DWORD PTR _offset$[ebp]
  00030	66 85 db	 test	 bx, bx

; 258  : 
; 259  :         offset = eventDescriptor->Size;
; 260  : 
; 261  :         //
; 262  :         //  Align naturaly the field
; 263  :         //
; 264  : 
; 265  :         offset = (uint16)ROUND_UP_TO_POWER2(offset, size);

  00033	8b 45 14	 mov	 eax, DWORD PTR _size$[ebp]
  00036	75 16		 jne	 SHORT $LN4@RegisterGe
  00038	66 8b 4f 04	 mov	 cx, WORD PTR [edi+4]
  0003c	66 03 c8	 add	 cx, ax
  0003f	8d 70 ff	 lea	 esi, DWORD PTR [eax-1]
  00042	66 83 e9 01	 sub	 cx, 1
  00046	f7 d6		 not	 esi
  00048	66 23 ce	 and	 cx, si
  0004b	0f b7 d9	 movzx	 ebx, cx
$LN4@RegisterGe:

; 266  :     }
; 267  : 
; 268  :     EV_ASSERT(offset == ROUND_UP_TO_POWER2(offset, size));

  0004e	0f b7 cb	 movzx	 ecx, bx
  00051	0f b7 f0	 movzx	 esi, ax
  00054	8d 74 0e ff	 lea	 esi, DWORD PTR [esi+ecx-1]
  00058	0f b7 c8	 movzx	 ecx, ax
  0005b	83 c1 ff	 add	 ecx, -1
  0005e	f7 d1		 not	 ecx
  00060	23 f1		 and	 esi, ecx
  00062	0f b7 cb	 movzx	 ecx, bx
  00065	3b ce		 cmp	 ecx, esi
  00067	74 01		 je	 SHORT $LN3@RegisterGe
  00069	cc		 int	 3
$LN3@RegisterGe:

; 269  :     EV_ASSERT(offset >= eventDescriptor->Size);

  0006a	66 3b 5f 04	 cmp	 bx, WORD PTR [edi+4]
  0006e	73 01		 jae	 SHORT $LN2@RegisterGe
  00070	cc		 int	 3
$LN2@RegisterGe:

; 270  : 
; 271  :     EVENT_GENERIC_TYPE_DESCRIPTOR Field = {NULL,
; 272  :                                            offset,
; 273  :                                            GENERIC_TYPE_SIGNATURE,
; 274  :                                            size,

  00071	66 89 45 e4	 mov	 WORD PTR _Field$[ebp+8], ax

; 275  :                                            typeFieldDescriptor,

  00075	8b 45 18	 mov	 eax, DWORD PTR _typeFieldDescriptor$[ebp]
  00078	89 45 e8	 mov	 DWORD PTR _Field$[ebp+12], eax

; 276  :                                            1};
; 277  : 
; 278  :     Struct_Microsoft_Singularity_Eventing_ArrayType array[] = {
; 279  :         {nameLength,

  0007b	66 8b 45 0c	 mov	 ax, WORD PTR _nameLength$[ebp]
  0007f	66 89 45 f0	 mov	 WORD PTR _array$[ebp], ax

; 280  :          sizeof(char),
; 281  :          stringType,

  00083	8b 45 fc	 mov	 eax, DWORD PTR _stringType$[ebp]
  00086	89 45 f4	 mov	 DWORD PTR _array$[ebp+4], eax

; 282  :          name}};

  00089	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0008c	b9 01 00 00 00	 mov	 ecx, 1
  00091	89 45 f8	 mov	 DWORD PTR _array$[ebp+8], eax

; 283  : 
; 284  :     PMEMORY_HEADER Entry = InternalLogVariableRecord( false,
; 285  :                                                       GetLocalRepositoryHandle(),
; 286  :                                                       RECORD_EVENT_GENERIC_FIELD,
; 287  :                                                       (UIntPtr)event,
; 288  :                                                       &Field,
; 289  :                                                       sizeof(Field),
; 290  :                                                       1,
; 291  :                                                       array);

  00094	8d 45 f0	 lea	 eax, DWORD PTR _array$[ebp]
  00097	50		 push	 eax
  00098	51		 push	 ecx
  00099	66 89 4d e2	 mov	 WORD PTR _Field$[ebp+6], cx
  0009d	66 89 4d ec	 mov	 WORD PTR _Field$[ebp+16], cx
  000a1	66 89 4d f2	 mov	 WORD PTR _array$[ebp+2], cx
  000a5	6a 14		 push	 20			; 00000014H
  000a7	8d 4d dc	 lea	 ecx, DWORD PTR _Field$[ebp]
  000aa	51		 push	 ecx
  000ab	52		 push	 edx
  000ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  000b2	68 00 90 00 00	 push	 36864			; 00009000H
  000b7	32 c9		 xor	 cl, cl
  000b9	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _Field$[ebp], 0
  000c0	66 89 5d e0	 mov	 WORD PTR _Field$[ebp+4], bx
  000c4	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  000c9	8b f0		 mov	 esi, eax

; 292  : 
; 293  :     if (Entry != NULL) {

  000cb	85 f6		 test	 esi, esi
  000cd	74 39		 je	 SHORT $LN1@RegisterGe

; 294  : 
; 295  :         PEVENT_FIELD_DESCRIPTOR newField = (PEVENT_FIELD_DESCRIPTOR)GetUserRecordStructure(Entry);

  000cf	f6 46 06 01	 test	 BYTE PTR [esi+6], 1
  000d3	74 18		 je	 SHORT $LN29@RegisterGe
  000d5	66 8b 56 18	 mov	 dx, WORD PTR [esi+24]
  000d9	66 83 c2 07	 add	 dx, 7
  000dd	66 03 d2	 add	 dx, dx
  000e0	66 03 d2	 add	 dx, dx
  000e3	0f b7 c2	 movzx	 eax, dx
  000e6	0f b7 c0	 movzx	 eax, ax
  000e9	03 c6		 add	 eax, esi
  000eb	eb 03		 jmp	 SHORT $LN30@RegisterGe
$LN29@RegisterGe:
  000ed	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
$LN30@RegisterGe:

; 296  : 
; 297  :         newField->fieldsLink = eventDescriptor->fieldsLink;

  000f0	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 298  :         eventDescriptor->fieldsLink = newField;
; 299  :         eventDescriptor->Size = offset + size;

  000f2	8b 55 14	 mov	 edx, DWORD PTR _size$[ebp]
  000f5	89 08		 mov	 DWORD PTR [eax], ecx
  000f7	03 da		 add	 ebx, edx

; 300  : 
; 301  :         CommitEventEntry(Entry);

  000f9	8b ce		 mov	 ecx, esi
  000fb	89 07		 mov	 DWORD PTR [edi], eax
  000fd	66 89 5f 04	 mov	 WORD PTR [edi+4], bx
  00101	e8 00 00 00 00	 call	 ?CommitEventEntry@@YIXPAU_MEMORY_HEADER@@@Z ; CommitEventEntry

; 302  :     }
; 303  : 
; 304  :     return Entry;

  00106	8b c6		 mov	 eax, esi
$LN1@RegisterGe:
  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx

; 305  : }

  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 14 00	 ret	 20			; 00000014H
?RegisterGenericFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGGPAUuintPtr@@@Z ENDP ; RegisterGenericFieldDescriptorImplementation
_TEXT	ENDS
PUBLIC	?RegisterEnumDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXGG@Z ; RegisterEnumDescriptorImplementation
; Function compile flags: /Ogtp
;	COMDAT ?RegisterEnumDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXGG@Z
_TEXT	SEGMENT
_Event$ = -36						; size = 24
_array$ = -12						; size = 12
_nameLength$ = 8					; size = 2
_type$ = 12						; size = 2
?RegisterEnumDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXGG@Z PROC ; RegisterEnumDescriptorImplementation, COMDAT
; _stringType$ = ecx
; _name$ = edx

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	57		 push	 edi

; 313  :     ENUM_DESCRIPTOR Event = {NULL, type, 0, 1, 2};
; 314  : 
; 315  :     Struct_Microsoft_Singularity_Eventing_ArrayType array[] = {
; 316  :         {nameLength,

  00007	66 8b 7d 08	 mov	 di, WORD PTR _nameLength$[ebp]
  0000b	8b c1		 mov	 eax, ecx
  0000d	66 8b 4d 0c	 mov	 cx, WORD PTR _type$[ebp]

; 317  :          sizeof(char),
; 318  :          stringType,
; 319  :          name}};

  00011	89 55 fc	 mov	 DWORD PTR _array$[ebp+8], edx

; 320  : 
; 321  :     PMEMORY_HEADER Entry = InternalLogVariableRecord( true,
; 322  :         GetLocalRepositoryHandle(),
; 323  :         RECORD_EVENT_ENUM,
; 324  :         0,
; 325  :         &Event,
; 326  :         sizeof(Event),
; 327  :         1,
; 328  :         array);

  00014	8d 55 f4	 lea	 edx, DWORD PTR _array$[ebp]
  00017	52		 push	 edx
  00018	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  0001e	66 89 4d e0	 mov	 WORD PTR _Event$[ebp+4], cx
  00022	b9 01 00 00 00	 mov	 ecx, 1
  00027	51		 push	 ecx
  00028	6a 18		 push	 24			; 00000018H
  0002a	89 45 f8	 mov	 DWORD PTR _array$[ebp+4], eax
  0002d	8d 45 dc	 lea	 eax, DWORD PTR _Event$[ebp]
  00030	50		 push	 eax
  00031	6a 00		 push	 0
  00033	68 00 a0 00 00	 push	 40960			; 0000a000H
  00038	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _Event$[ebp], 0
  0003f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _Event$[ebp+8], 0
  00046	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Event$[ebp+12], 0
  0004d	66 89 4d ec	 mov	 WORD PTR _Event$[ebp+16], cx
  00051	66 c7 45 ee 02
	00		 mov	 WORD PTR _Event$[ebp+18], 2
  00057	66 89 7d f4	 mov	 WORD PTR _array$[ebp], di
  0005b	66 89 4d f6	 mov	 WORD PTR _array$[ebp+2], cx
  0005f	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  00064	5f		 pop	 edi

; 329  : 
; 330  :     return Entry;
; 331  : 
; 332  : }

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?RegisterEnumDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXGG@Z ENDP ; RegisterEnumDescriptorImplementation
_TEXT	ENDS
PUBLIC	?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation
; Function compile flags: /Ogtp
;	COMDAT ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z
_TEXT	SEGMENT
_Field$ = -36						; size = 24
_array$ = -12						; size = 12
_name$ = 8						; size = 4
_nameLength$ = 12					; size = 4
_value$ = 16						; size = 8
_flagLetter$ = 24					; size = 1
?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z PROC ; RegisterValueDescriptorImplementation, COMDAT
; _stringType$ = ecx
; _descriptor$ = edx

; 341  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	53		 push	 ebx

; 342  :     EVENT_VALUE_DESCRIPTOR Field = {NULL, flagLetter, value, NULL };

  00007	8a 5d 18	 mov	 bl, BYTE PTR _flagLetter$[ebp]
  0000a	56		 push	 esi
  0000b	8b f2		 mov	 esi, edx
  0000d	8b 55 10	 mov	 edx, DWORD PTR _value$[ebp]
  00010	89 55 e4	 mov	 DWORD PTR _Field$[ebp+8], edx
  00013	8b 55 14	 mov	 edx, DWORD PTR _value$[ebp+4]
  00016	57		 push	 edi
  00017	33 c0		 xor	 eax, eax
  00019	89 55 e8	 mov	 DWORD PTR _Field$[ebp+12], edx

; 343  : 
; 344  :     Struct_Microsoft_Singularity_Eventing_ArrayType array[] = {
; 345  :         {nameLength,
; 346  :          sizeof(char),
; 347  :          stringType,
; 348  :          name}};
; 349  : 
; 350  :     PMEMORY_HEADER Entry = InternalLogVariableRecord( false,
; 351  :                                                       GetLocalRepositoryHandle(),
; 352  :                                                       RECORD_EVENT_VALUE,
; 353  :                                                       (UIntPtr)descriptor,
; 354  :                                                       &Field,
; 355  :                                                       sizeof(Field),
; 356  :                                                       1,
; 357  :                                                       array);

  0001c	8d 55 f4	 lea	 edx, DWORD PTR _array$[ebp]
  0001f	52		 push	 edx
  00020	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  00026	89 45 dc	 mov	 DWORD PTR _Field$[ebp], eax
  00029	66 89 45 ec	 mov	 WORD PTR _Field$[ebp+16], ax
  0002d	66 8b 45 0c	 mov	 ax, WORD PTR _nameLength$[ebp]
  00031	6a 01		 push	 1
  00033	6a 18		 push	 24			; 00000018H
  00035	66 89 45 f4	 mov	 WORD PTR _array$[ebp], ax
  00039	8d 45 dc	 lea	 eax, DWORD PTR _Field$[ebp]
  0003c	89 4d f8	 mov	 DWORD PTR _array$[ebp+4], ecx
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  00042	50		 push	 eax
  00043	56		 push	 esi
  00044	89 4d fc	 mov	 DWORD PTR _array$[ebp+8], ecx
  00047	68 00 88 00 00	 push	 34816			; 00008800H
  0004c	32 c9		 xor	 cl, cl
  0004e	88 5d e0	 mov	 BYTE PTR _Field$[ebp+4], bl
  00051	66 c7 45 f6 01
	00		 mov	 WORD PTR _array$[ebp+2], 1
  00057	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  0005c	8b f8		 mov	 edi, eax

; 358  :     if (Entry != NULL) {

  0005e	85 ff		 test	 edi, edi
  00060	74 61		 je	 SHORT $LN2@RegisterVa

; 359  : 
; 360  :         PENUM_DESCRIPTOR eventDescriptor = (PENUM_DESCRIPTOR)GetUserRecordStructure(descriptor);

  00062	f6 46 06 01	 test	 BYTE PTR [esi+6], 1
  00066	74 18		 je	 SHORT $LN10@RegisterVa
  00068	66 8b 4e 18	 mov	 cx, WORD PTR [esi+24]
  0006c	66 83 c1 07	 add	 cx, 7
  00070	66 03 c9	 add	 cx, cx
  00073	66 03 c9	 add	 cx, cx
  00076	0f b7 c1	 movzx	 eax, cx
  00079	0f b7 c0	 movzx	 eax, ax
  0007c	03 c6		 add	 eax, esi
  0007e	eb 03		 jmp	 SHORT $LN11@RegisterVa
$LN10@RegisterVa:
  00080	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
$LN11@RegisterVa:

; 361  :         PEVENT_VALUE_DESCRIPTOR newField = (PEVENT_VALUE_DESCRIPTOR)GetUserRecordStructure(Entry);

  00083	f6 47 06 01	 test	 BYTE PTR [edi+6], 1
  00087	74 18		 je	 SHORT $LN27@RegisterVa
  00089	66 8b 57 18	 mov	 dx, WORD PTR [edi+24]
  0008d	66 83 c2 07	 add	 dx, 7
  00091	66 03 d2	 add	 dx, dx
  00094	66 03 d2	 add	 dx, dx
  00097	0f b7 ca	 movzx	 ecx, dx
  0009a	0f b7 c9	 movzx	 ecx, cx
  0009d	03 cf		 add	 ecx, edi
  0009f	eb 03		 jmp	 SHORT $LN28@RegisterVa
$LN27@RegisterVa:
  000a1	8d 4f 18	 lea	 ecx, DWORD PTR [edi+24]
$LN28@RegisterVa:

; 362  : 
; 363  :         newField->fieldsLink = eventDescriptor->fieldsLink;
; 364  :         eventDescriptor->fieldsLink = newField;
; 365  : 
; 366  :         if (flagLetter) {

  000a4	84 db		 test	 bl, bl
  000a6	8b 10		 mov	 edx, DWORD PTR [eax]
  000a8	89 11		 mov	 DWORD PTR [ecx], edx
  000aa	89 08		 mov	 DWORD PTR [eax], ecx
  000ac	74 0c		 je	 SHORT $LN1@RegisterVa

; 367  : 
; 368  :             eventDescriptor->FlagsMask |= value;

  000ae	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  000b1	8b 55 14	 mov	 edx, DWORD PTR _value$[ebp+4]
  000b4	09 48 08	 or	 DWORD PTR [eax+8], ecx
  000b7	09 50 0c	 or	 DWORD PTR [eax+12], edx
$LN1@RegisterVa:

; 369  :         }
; 370  : 
; 371  :         CommitEventEntry(Entry);

  000ba	8b cf		 mov	 ecx, edi
  000bc	e8 00 00 00 00	 call	 ?CommitEventEntry@@YIXPAU_MEMORY_HEADER@@@Z ; CommitEventEntry

; 372  :     }
; 373  : 
; 374  :     return Entry;

  000c1	8b c7		 mov	 eax, edi
$LN2@RegisterVa:
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx

; 375  : }

  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c2 14 00	 ret	 20			; 00000014H
?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ENDP ; RegisterValueDescriptorImplementation
_TEXT	ENDS
PUBLIC	?RegisterEventDescriptor@@YIPAU_MEMORY_HEADER@@PADG0G@Z ; RegisterEventDescriptor
; Function compile flags: /Ogtp
;	COMDAT ?RegisterEventDescriptor@@YIPAU_MEMORY_HEADER@@PADG0G@Z
_TEXT	SEGMENT
_description$ = 8					; size = 4
_descriptionLength$ = 12				; size = 2
?RegisterEventDescriptor@@YIPAU_MEMORY_HEADER@@PADG0G@Z PROC ; RegisterEventDescriptor, COMDAT
; _name$ = ecx
; _nameLength$ = edx

; 384  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c2		 mov	 eax, edx

; 385  :     return RegisterEventDescriptorImplementation(EVENT_FIELD_TYPE_szChar,
; 386  :                                                  name,
; 387  :                                                  nameLength,
; 388  :                                                  description,
; 389  :                                                  descriptionLength);

  00005	8b 55 0c	 mov	 edx, DWORD PTR _descriptionLength$[ebp]
  00008	52		 push	 edx
  00009	8b 55 08	 mov	 edx, DWORD PTR _description$[ebp]
  0000c	52		 push	 edx
  0000d	8b d1		 mov	 edx, ecx
  0000f	50		 push	 eax
  00010	b9 00 20 00 00	 mov	 ecx, 8192		; 00002000H
  00015	e8 00 00 00 00	 call	 ?RegisterEventDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXG0G@Z ; RegisterEventDescriptorImplementation

; 390  : }

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?RegisterEventDescriptor@@YIPAU_MEMORY_HEADER@@PADG0G@Z ENDP ; RegisterEventDescriptor
_TEXT	ENDS
PUBLIC	?RegisterFieldDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADIGG@Z ; RegisterFieldDescriptor
; Function compile flags: /Ogtp
;	COMDAT ?RegisterFieldDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADIGG@Z
_TEXT	SEGMENT
_nameLength$ = 8					; size = 4
_offset$ = 12						; size = 2
_type$ = 16						; size = 2
?RegisterFieldDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADIGG@Z PROC ; RegisterFieldDescriptor, COMDAT
; _Descriptor$ = ecx
; _name$ = edx

; 398  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c2		 mov	 eax, edx

; 399  :     return RegisterFieldDescriptorImplementation(
; 400  :                             EVENT_FIELD_TYPE_szChar,
; 401  :                             Descriptor,
; 402  :                             name,
; 403  :                             nameLength,
; 404  :                             offset,
; 405  :                             type);

  00005	8b 55 10	 mov	 edx, DWORD PTR _type$[ebp]
  00008	52		 push	 edx
  00009	8b 55 0c	 mov	 edx, DWORD PTR _offset$[ebp]
  0000c	52		 push	 edx
  0000d	8b 55 08	 mov	 edx, DWORD PTR _nameLength$[ebp]
  00010	52		 push	 edx
  00011	8b d1		 mov	 edx, ecx
  00013	50		 push	 eax
  00014	b9 00 20 00 00	 mov	 ecx, 8192		; 00002000H
  00019	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 406  : }

  0001e	5d		 pop	 ebp
  0001f	c2 0c 00	 ret	 12			; 0000000cH
?RegisterFieldDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADIGG@Z ENDP ; RegisterFieldDescriptor
_TEXT	ENDS
PUBLIC	?RegisterGenericFieldDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADIGGPAUuintPtr@@@Z ; RegisterGenericFieldDescriptor
; Function compile flags: /Ogtp
;	COMDAT ?RegisterGenericFieldDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADIGGPAUuintPtr@@@Z
_TEXT	SEGMENT
_nameLength$ = 8					; size = 4
_offset$ = 12						; size = 2
_size$ = 16						; size = 2
_typeFieldDescriptor$ = 20				; size = 4
?RegisterGenericFieldDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADIGGPAUuintPtr@@@Z PROC ; RegisterGenericFieldDescriptor, COMDAT
; _event$ = ecx
; _name$ = edx

; 415  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c2		 mov	 eax, edx

; 416  :     return RegisterGenericFieldDescriptorImplementation( EVENT_FIELD_TYPE_szChar,
; 417  :                                                          event,
; 418  :                                                          name,
; 419  :                                                          nameLength,
; 420  :                                                          offset,
; 421  :                                                          size,
; 422  :                                                          typeFieldDescriptor);

  00005	8b 55 14	 mov	 edx, DWORD PTR _typeFieldDescriptor$[ebp]
  00008	52		 push	 edx
  00009	8b 55 10	 mov	 edx, DWORD PTR _size$[ebp]
  0000c	52		 push	 edx
  0000d	8b 55 0c	 mov	 edx, DWORD PTR _offset$[ebp]
  00010	52		 push	 edx
  00011	8b 55 08	 mov	 edx, DWORD PTR _nameLength$[ebp]
  00014	52		 push	 edx
  00015	8b d1		 mov	 edx, ecx
  00017	50		 push	 eax
  00018	b9 00 20 00 00	 mov	 ecx, 8192		; 00002000H
  0001d	e8 00 00 00 00	 call	 ?RegisterGenericFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGGPAUuintPtr@@@Z ; RegisterGenericFieldDescriptorImplementation

; 423  : }

  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
?RegisterGenericFieldDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADIGGPAUuintPtr@@@Z ENDP ; RegisterGenericFieldDescriptor
_TEXT	ENDS
PUBLIC	?RegisterEnumDescriptor@@YIPAU_MEMORY_HEADER@@PADGG@Z ; RegisterEnumDescriptor
; Function compile flags: /Ogtp
;	COMDAT ?RegisterEnumDescriptor@@YIPAU_MEMORY_HEADER@@PADGG@Z
_TEXT	SEGMENT
_type$ = 8						; size = 2
?RegisterEnumDescriptor@@YIPAU_MEMORY_HEADER@@PADGG@Z PROC ; RegisterEnumDescriptor, COMDAT
; _name$ = ecx
; _nameLength$ = edx

; 429  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c2		 mov	 eax, edx

; 430  :     return RegisterEnumDescriptorImplementation(EVENT_FIELD_TYPE_szChar,
; 431  :                                                 name,
; 432  :                                                 nameLength,
; 433  :                                                 type);

  00005	8b 55 08	 mov	 edx, DWORD PTR _type$[ebp]
  00008	52		 push	 edx
  00009	8b d1		 mov	 edx, ecx
  0000b	50		 push	 eax
  0000c	b9 00 20 00 00	 mov	 ecx, 8192		; 00002000H
  00011	e8 00 00 00 00	 call	 ?RegisterEnumDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXGG@Z ; RegisterEnumDescriptorImplementation

; 434  : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?RegisterEnumDescriptor@@YIPAU_MEMORY_HEADER@@PADGG@Z ENDP ; RegisterEnumDescriptor
_TEXT	ENDS
PUBLIC	?RegisterValueDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADI_KE@Z ; RegisterValueDescriptor
; Function compile flags: /Ogtp
;	COMDAT ?RegisterValueDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADI_KE@Z
_TEXT	SEGMENT
_nameLength$ = 8					; size = 4
_value$ = 12						; size = 8
_flagLetter$ = 20					; size = 1
?RegisterValueDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADI_KE@Z PROC ; RegisterValueDescriptor, COMDAT
; _descriptor$ = ecx
; _name$ = edx

; 442  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c2		 mov	 eax, edx

; 443  : 
; 444  :     return RegisterValueDescriptorImplementation(EVENT_FIELD_TYPE_szChar,
; 445  :                                                  descriptor,
; 446  :                                                  name,
; 447  :                                                  nameLength,
; 448  :                                                  value,
; 449  :                                                  flagLetter);

  00005	8b 55 14	 mov	 edx, DWORD PTR _flagLetter$[ebp]
  00008	52		 push	 edx
  00009	8b 55 10	 mov	 edx, DWORD PTR _value$[ebp+4]
  0000c	52		 push	 edx
  0000d	8b 55 0c	 mov	 edx, DWORD PTR _value$[ebp]
  00010	52		 push	 edx
  00011	8b 55 08	 mov	 edx, DWORD PTR _nameLength$[ebp]
  00014	52		 push	 edx
  00015	8b d1		 mov	 edx, ecx
  00017	50		 push	 eax
  00018	b9 00 20 00 00	 mov	 ecx, 8192		; 00002000H
  0001d	e8 00 00 00 00	 call	 ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation

; 450  : }

  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
?RegisterValueDescriptor@@YIPAU_MEMORY_HEADER@@PAU1@PADI_KE@Z ENDP ; RegisterValueDescriptor
_TEXT	ENDS
PUBLIC	?InitializeRegistrationSystem@@YIXPAXI@Z	; InitializeRegistrationSystem
EXTRN	?RegisterRepositoryStorage@@YIXPAU_MEMORY_STORAGE@@@Z:PROC ; RegisterRepositoryStorage
EXTRN	?g_MemoryStorageCreateImpl@Class_Microsoft_Singularity_Eventing_MemoryStorage@@SIPAUuintPtr@@IPAEII@Z:PROC ; Class_Microsoft_Singularity_Eventing_MemoryStorage::g_MemoryStorageCreateImpl
; Function compile flags: /Ogtp
;	COMDAT ?InitializeRegistrationSystem@@YIXPAXI@Z
_TEXT	SEGMENT
?InitializeRegistrationSystem@@YIXPAXI@Z PROC		; InitializeRegistrationSystem, COMDAT
; _buffer$ = ecx
; _size$ = edx

; 457  : {

  00000	8b c2		 mov	 eax, edx

; 458  : 
; 459  :     // Create a bufffer which does not recycle memory
; 460  : 
; 461  :     UIntPtr LocalStorageHandle = Class_Microsoft_Singularity_Eventing_MemoryStorage::
; 462  :         g_MemoryStorageCreateImpl(MEMORY_STORAGE_FLAGS_PERMANENT, (uint8 *)buffer, (uint32)size, 0);

  00002	6a 00		 push	 0
  00004	8b d1		 mov	 edx, ecx
  00006	50		 push	 eax
  00007	b9 01 00 00 00	 mov	 ecx, 1
  0000c	e8 00 00 00 00	 call	 ?g_MemoryStorageCreateImpl@Class_Microsoft_Singularity_Eventing_MemoryStorage@@SIPAUuintPtr@@IPAEII@Z ; Class_Microsoft_Singularity_Eventing_MemoryStorage::g_MemoryStorageCreateImpl

; 463  : 
; 464  :     RegisterRepositoryStorage(HANDLE_TO_STORAGE(LocalStorageHandle));

  00011	8b c8		 mov	 ecx, eax
  00013	e9 00 00 00 00	 jmp	 ?RegisterRepositoryStorage@@YIXPAU_MEMORY_STORAGE@@@Z ; RegisterRepositoryStorage
?InitializeRegistrationSystem@@YIXPAXI@Z ENDP		; InitializeRegistrationSystem
_TEXT	ENDS
PUBLIC	??_C@_04OJAHODMC@Text?$AA@			; `string'
PUBLIC	??_C@_07CPCPJPKL@version?$AA@			; `string'
PUBLIC	??_C@_08FGCHIJMN@Provider?$AA@			; `string'
PUBLIC	??_C@_0CN@MCHNEOJN@?$HL0?$HN?3?$HL1?$HN?3?$HL2?$HN?3?$HL3?$HN?5?9?5?$CI?$HL4?$HN?0?$HL5?$HN?0?$HL6?$HN?0?$HL@ ; `string'
PUBLIC	??_C@_0BI@MCHHPJCC@System?4MONITORING_ENTRY?$AA@ ; `string'
PUBLIC	??_C@_07DANJEPLI@StrArg1?$AA@			; `string'
PUBLIC	??_C@_07CJMCHOPJ@StrArg0?$AA@			; `string'
PUBLIC	??_C@_04LDBACBBL@arg5?$AA@			; `string'
PUBLIC	??_C@_04KKALBAFK@arg4?$AA@			; `string'
PUBLIC	??_C@_04OFEKIGJN@arg3?$AA@			; `string'
PUBLIC	??_C@_04PMFBLHNM@arg2?$AA@			; `string'
PUBLIC	??_C@_04NHHMOEBP@arg1?$AA@			; `string'
PUBLIC	??_C@_04MOGHNFFO@arg0?$AA@			; `string'
PUBLIC	??_C@_03MLMOILGK@Msg?$AA@			; `string'
PUBLIC	??_C@_03POOIBDAP@PID?$AA@			; `string'
PUBLIC	??_C@_08PHGLMIHD@severity?$AA@			; `string'
PUBLIC	??_C@_0BB@CMJINLHH@Log?5?$HL0?$HN?3?$HL1?$HN?5?$HL3?$CK?$HN?$AA@ ; `string'
PUBLIC	??_C@_0BI@OENOPLIK@System?4LEGACY_LOG_ENTRY?$AA@ ; `string'
PUBLIC	??_C@_05CALGBKNA@Roots?$AA@			; `string'
PUBLIC	??_C@_0BA@HOFAOCFN@System?4GC_ROOTS?$AA@	; `string'
PUBLIC	??_C@_0L@CKFPHHGA@Genrations?$AA@		; `string'
PUBLIC	??_C@_0BG@JBMENCLG@System?4GC_GENERATIONS?$AA@	; `string'
PUBLIC	??_C@_0O@MAFLGEBO@ParameterList?$AA@		; `string'
PUBLIC	??_C@_0BB@ENIHBHNB@System?4GC_OBJECT?$AA@	; `string'
PUBLIC	??_C@_07BPHJKENM@fncList?$AA@			; `string'
PUBLIC	??_C@_0BA@NJJBMNPE@System?4GC_STACK?$AA@	; `string'
PUBLIC	??_C@_04FABLJDN@Name?$AA@			; `string'
PUBLIC	??_C@_06BCNEEODO@TypeId?$AA@			; `string'
PUBLIC	??_C@_0P@KNGNNKPN@System?4GC_TYPE?$AA@		; `string'
PUBLIC	??_C@_05NFMIDMMK@Delta?$AA@			; `string'
PUBLIC	??_C@_0BD@NCLJCGAP@System?4GC_INTERVAL?$AA@	; `string'
PUBLIC	??_C@_06ELFECKBG@Object?$AA@			; `string'
PUBLIC	??_C@_05LMDDMFKK@StkNo?$AA@			; `string'
PUBLIC	??_C@_0BF@DIODGDLN@System?4GC_ALLOCATION?$AA@	; `string'
PUBLIC	??_C@_02MFEOMNPG@IP?$AA@			; `string'
PUBLIC	??_C@_05PPBKPJLE@FnIdx?$AA@			; `string'
PUBLIC	??_C@_0BD@IGLEBJNP@System?4GC_FUNCTION?$AA@	; `string'
PUBLIC	??_C@_0O@JCJIHLOH@ExceptionName?$AA@		; `string'
PUBLIC	??_C@_07DBMNFLDM@Handler?$AA@			; `string'
PUBLIC	??_C@_09ELMAFJJG@ThrowFrom?$AA@			; `string'
PUBLIC	??_C@_0BH@LPOFBINH@Throw?5?$HL0?$HN?0?5Handler?5?$HL1?$HN?$AA@ ; `string'
PUBLIC	??_C@_0BF@OKDJFMJI@System?4LOG_EXCEPTION?$AA@	; `string'
PUBLIC	??_C@_05GCIPIGEI@Debug?$AA@			; `string'
PUBLIC	??_C@_05DBKMECD@Audit?$AA@			; `string'
PUBLIC	??_C@_05ILLBNNOP@Trace?$AA@			; `string'
PUBLIC	??_C@_06JHGCIHDH@Notice?$AA@			; `string'
PUBLIC	??_C@_07KGMMFLDN@Warning?$AA@			; `string'
PUBLIC	??_C@_05NAOIJFC@Error?$AA@			; `string'
PUBLIC	??_C@_05FHGOFLKH@Fatal?$AA@			; `string'
PUBLIC	??_C@_0BE@KACIDIKN@System?4LOG_SEVERITY?$AA@	; `string'
PUBLIC	??_C@_03FBKDDCND@Cpu?$AA@			; `string'
PUBLIC	??_C@_03HBIKIEFI@TID?$AA@			; `string'
PUBLIC	??_C@_04KOACHJEN@Type?$AA@			; `string'
PUBLIC	??_C@_09KDGENIOP@Timestamp?$AA@			; `string'
PUBLIC	??_C@_05BOOEKJH@Flags?$AA@			; `string'
PUBLIC	??_C@_06GEMKPBPA@Offset?$AA@			; `string'
PUBLIC	??_C@_04CGLAFBGF@Link?$AA@			; `string'
PUBLIC	??_C@_04EBKMHHBE@Size?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0BF@HDPDLHJI@System?4MEMORY_HEADER?$AA@	; `string'
PUBLIC	?RegisterNativeTypes@@YIXXZ			; RegisterNativeTypes
EXTRN	?TracingTypeHandle@@3PAUuintPtr@@A:DWORD	; TracingTypeHandle
EXTRN	?MonitoringTypeHandle@@3PAUuintPtr@@A:DWORD	; MonitoringTypeHandle
;	COMDAT ??_C@_04OJAHODMC@Text?$AA@
CONST	SEGMENT
??_C@_04OJAHODMC@Text?$AA@ DB 'Text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version?$AA@
CONST	SEGMENT
??_C@_07CPCPJPKL@version?$AA@ DB 'version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FGCHIJMN@Provider?$AA@
CONST	SEGMENT
??_C@_08FGCHIJMN@Provider?$AA@ DB 'Provider', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@MCHNEOJN@?$HL0?$HN?3?$HL1?$HN?3?$HL2?$HN?3?$HL3?$HN?5?9?5?$CI?$HL4?$HN?0?$HL5?$HN?0?$HL6?$HN?0?$HL@
CONST	SEGMENT
??_C@_0CN@MCHNEOJN@?$HL0?$HN?3?$HL1?$HN?3?$HL2?$HN?3?$HL3?$HN?5?9?5?$CI?$HL4?$HN?0?$HL5?$HN?0?$HL6?$HN?0?$HL@ DB '{'
	DB	'0}:{1}:{2}:{3} - ({4},{5},{6},{7},{8})  {9}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MCHHPJCC@System?4MONITORING_ENTRY?$AA@
CONST	SEGMENT
??_C@_0BI@MCHHPJCC@System?4MONITORING_ENTRY?$AA@ DB 'System.MONITORING_EN'
	DB	'TRY', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07DANJEPLI@StrArg1?$AA@
CONST	SEGMENT
??_C@_07DANJEPLI@StrArg1?$AA@ DB 'StrArg1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CJMCHOPJ@StrArg0?$AA@
CONST	SEGMENT
??_C@_07CJMCHOPJ@StrArg0?$AA@ DB 'StrArg0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LDBACBBL@arg5?$AA@
CONST	SEGMENT
??_C@_04LDBACBBL@arg5?$AA@ DB 'arg5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KKALBAFK@arg4?$AA@
CONST	SEGMENT
??_C@_04KKALBAFK@arg4?$AA@ DB 'arg4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OFEKIGJN@arg3?$AA@
CONST	SEGMENT
??_C@_04OFEKIGJN@arg3?$AA@ DB 'arg3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PMFBLHNM@arg2?$AA@
CONST	SEGMENT
??_C@_04PMFBLHNM@arg2?$AA@ DB 'arg2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NHHMOEBP@arg1?$AA@
CONST	SEGMENT
??_C@_04NHHMOEBP@arg1?$AA@ DB 'arg1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MOGHNFFO@arg0?$AA@
CONST	SEGMENT
??_C@_04MOGHNFFO@arg0?$AA@ DB 'arg0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MLMOILGK@Msg?$AA@
CONST	SEGMENT
??_C@_03MLMOILGK@Msg?$AA@ DB 'Msg', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03POOIBDAP@PID?$AA@
CONST	SEGMENT
??_C@_03POOIBDAP@PID?$AA@ DB 'PID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08PHGLMIHD@severity?$AA@
CONST	SEGMENT
??_C@_08PHGLMIHD@severity?$AA@ DB 'severity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CMJINLHH@Log?5?$HL0?$HN?3?$HL1?$HN?5?$HL3?$CK?$HN?$AA@
CONST	SEGMENT
??_C@_0BB@CMJINLHH@Log?5?$HL0?$HN?3?$HL1?$HN?5?$HL3?$CK?$HN?$AA@ DB 'Log '
	DB	'{0}:{1} {3*}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OENOPLIK@System?4LEGACY_LOG_ENTRY?$AA@
CONST	SEGMENT
??_C@_0BI@OENOPLIK@System?4LEGACY_LOG_ENTRY?$AA@ DB 'System.LEGACY_LOG_EN'
	DB	'TRY', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05CALGBKNA@Roots?$AA@
CONST	SEGMENT
??_C@_05CALGBKNA@Roots?$AA@ DB 'Roots', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HOFAOCFN@System?4GC_ROOTS?$AA@
CONST	SEGMENT
??_C@_0BA@HOFAOCFN@System?4GC_ROOTS?$AA@ DB 'System.GC_ROOTS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKFPHHGA@Genrations?$AA@
CONST	SEGMENT
??_C@_0L@CKFPHHGA@Genrations?$AA@ DB 'Genrations', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JBMENCLG@System?4GC_GENERATIONS?$AA@
CONST	SEGMENT
??_C@_0BG@JBMENCLG@System?4GC_GENERATIONS?$AA@ DB 'System.GC_GENERATIONS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MAFLGEBO@ParameterList?$AA@
CONST	SEGMENT
??_C@_0O@MAFLGEBO@ParameterList?$AA@ DB 'ParameterList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ENIHBHNB@System?4GC_OBJECT?$AA@
CONST	SEGMENT
??_C@_0BB@ENIHBHNB@System?4GC_OBJECT?$AA@ DB 'System.GC_OBJECT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BPHJKENM@fncList?$AA@
CONST	SEGMENT
??_C@_07BPHJKENM@fncList?$AA@ DB 'fncList', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NJJBMNPE@System?4GC_STACK?$AA@
CONST	SEGMENT
??_C@_0BA@NJJBMNPE@System?4GC_STACK?$AA@ DB 'System.GC_STACK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT
??_C@_04FABLJDN@Name?$AA@ DB 'Name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BCNEEODO@TypeId?$AA@
CONST	SEGMENT
??_C@_06BCNEEODO@TypeId?$AA@ DB 'TypeId', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KNGNNKPN@System?4GC_TYPE?$AA@
CONST	SEGMENT
??_C@_0P@KNGNNKPN@System?4GC_TYPE?$AA@ DB 'System.GC_TYPE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NFMIDMMK@Delta?$AA@
CONST	SEGMENT
??_C@_05NFMIDMMK@Delta?$AA@ DB 'Delta', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NCLJCGAP@System?4GC_INTERVAL?$AA@
CONST	SEGMENT
??_C@_0BD@NCLJCGAP@System?4GC_INTERVAL?$AA@ DB 'System.GC_INTERVAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ELFECKBG@Object?$AA@
CONST	SEGMENT
??_C@_06ELFECKBG@Object?$AA@ DB 'Object', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LMDDMFKK@StkNo?$AA@
CONST	SEGMENT
??_C@_05LMDDMFKK@StkNo?$AA@ DB 'StkNo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DIODGDLN@System?4GC_ALLOCATION?$AA@
CONST	SEGMENT
??_C@_0BF@DIODGDLN@System?4GC_ALLOCATION?$AA@ DB 'System.GC_ALLOCATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02MFEOMNPG@IP?$AA@
CONST	SEGMENT
??_C@_02MFEOMNPG@IP?$AA@ DB 'IP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PPBKPJLE@FnIdx?$AA@
CONST	SEGMENT
??_C@_05PPBKPJLE@FnIdx?$AA@ DB 'FnIdx', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IGLEBJNP@System?4GC_FUNCTION?$AA@
CONST	SEGMENT
??_C@_0BD@IGLEBJNP@System?4GC_FUNCTION?$AA@ DB 'System.GC_FUNCTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JCJIHLOH@ExceptionName?$AA@
CONST	SEGMENT
??_C@_0O@JCJIHLOH@ExceptionName?$AA@ DB 'ExceptionName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBMNFLDM@Handler?$AA@
CONST	SEGMENT
??_C@_07DBMNFLDM@Handler?$AA@ DB 'Handler', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09ELMAFJJG@ThrowFrom?$AA@
CONST	SEGMENT
??_C@_09ELMAFJJG@ThrowFrom?$AA@ DB 'ThrowFrom', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LPOFBINH@Throw?5?$HL0?$HN?0?5Handler?5?$HL1?$HN?$AA@
CONST	SEGMENT
??_C@_0BH@LPOFBINH@Throw?5?$HL0?$HN?0?5Handler?5?$HL1?$HN?$AA@ DB 'Throw '
	DB	'{0}, Handler {1}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OKDJFMJI@System?4LOG_EXCEPTION?$AA@
CONST	SEGMENT
??_C@_0BF@OKDJFMJI@System?4LOG_EXCEPTION?$AA@ DB 'System.LOG_EXCEPTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GCIPIGEI@Debug?$AA@
CONST	SEGMENT
??_C@_05GCIPIGEI@Debug?$AA@ DB 'Debug', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DBKMECD@Audit?$AA@
CONST	SEGMENT
??_C@_05DBKMECD@Audit?$AA@ DB 'Audit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05ILLBNNOP@Trace?$AA@
CONST	SEGMENT
??_C@_05ILLBNNOP@Trace?$AA@ DB 'Trace', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JHGCIHDH@Notice?$AA@
CONST	SEGMENT
??_C@_06JHGCIHDH@Notice?$AA@ DB 'Notice', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KGMMFLDN@Warning?$AA@
CONST	SEGMENT
??_C@_07KGMMFLDN@Warning?$AA@ DB 'Warning', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT
??_C@_05NAOIJFC@Error?$AA@ DB 'Error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FHGOFLKH@Fatal?$AA@
CONST	SEGMENT
??_C@_05FHGOFLKH@Fatal?$AA@ DB 'Fatal', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KACIDIKN@System?4LOG_SEVERITY?$AA@
CONST	SEGMENT
??_C@_0BE@KACIDIKN@System?4LOG_SEVERITY?$AA@ DB 'System.LOG_SEVERITY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FBKDDCND@Cpu?$AA@
CONST	SEGMENT
??_C@_03FBKDDCND@Cpu?$AA@ DB 'Cpu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HBIKIEFI@TID?$AA@
CONST	SEGMENT
??_C@_03HBIKIEFI@TID?$AA@ DB 'TID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KOACHJEN@Type?$AA@
CONST	SEGMENT
??_C@_04KOACHJEN@Type?$AA@ DB 'Type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KDGENIOP@Timestamp?$AA@
CONST	SEGMENT
??_C@_09KDGENIOP@Timestamp?$AA@ DB 'Timestamp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BOOEKJH@Flags?$AA@
CONST	SEGMENT
??_C@_05BOOEKJH@Flags?$AA@ DB 'Flags', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GEMKPBPA@Offset?$AA@
CONST	SEGMENT
??_C@_06GEMKPBPA@Offset?$AA@ DB 'Offset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGLAFBGF@Link?$AA@
CONST	SEGMENT
??_C@_04CGLAFBGF@Link?$AA@ DB 'Link', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBKMHHBE@Size?$AA@
CONST	SEGMENT
??_C@_04EBKMHHBE@Size?$AA@ DB 'Size', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDPDLHJI@System?4MEMORY_HEADER?$AA@
CONST	SEGMENT
??_C@_0BF@HDPDLHJI@System?4MEMORY_HEADER?$AA@ DB 'System.MEMORY_HEADER', 00H ; `string'
; Function compile flags: /Ogtp
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\systemevents.inl
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\eventdescriptor.cpp
CONST	ENDS
;	COMDAT ?RegisterNativeTypes@@YIXXZ
_TEXT	SEGMENT
_array$12984 = -36					; size = 24
_array$12914 = -36					; size = 24
_array$12878 = -36					; size = 24
_array$12842 = -36					; size = 24
_array$12806 = -36					; size = 24
_array$12761 = -36					; size = 24
_array$12722 = -36					; size = 24
_array$12686 = -36					; size = 24
_array$12643 = -36					; size = 24
_array$12604 = -36					; size = 24
_array$12563 = -36					; size = 24
_array$12486 = -36					; size = 24
_Event$12983 = -12					; size = 12
_Event$12913 = -12					; size = 12
_Event$12877 = -12					; size = 12
_Event$12841 = -12					; size = 12
_Event$12805 = -12					; size = 12
_Event$12760 = -12					; size = 12
_Event$12721 = -12					; size = 12
_Event$12685 = -12					; size = 12
_Event$12642 = -12					; size = 12
_Event$12603 = -12					; size = 12
_Event$12562 = -12					; size = 12
_Event$12485 = -12					; size = 12
?RegisterNativeTypes@@YIXXZ PROC			; RegisterNativeTypes, COMDAT

; 469  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\systemevents.inl

; 73   : DECLARE_STRUCTURE_BEGIN(MEMORY_HEADER, "")

  00009	8d 4d dc	 lea	 ecx, DWORD PTR _array$12486[ebp]
  0000c	51		 push	 ecx
  0000d	6a 02		 push	 2
  0000f	6a 0c		 push	 12			; 0000000cH
  00011	33 c0		 xor	 eax, eax
  00013	8d 55 f4	 lea	 edx, DWORD PTR _Event$12485[ebp]
  00016	52		 push	 edx
  00017	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  0001d	bb 01 00 00 00	 mov	 ebx, 1
  00022	50		 push	 eax
  00023	bf 00 20 00 00	 mov	 edi, 8192		; 00002000H
  00028	68 00 81 00 00	 push	 33024			; 00008100H
  0002d	8a cb		 mov	 cl, bl
  0002f	89 45 f4	 mov	 DWORD PTR _Event$12485[ebp], eax
  00032	66 89 45 f8	 mov	 WORD PTR _Event$12485[ebp+4], ax
  00036	66 89 5d fa	 mov	 WORD PTR _Event$12485[ebp+6], bx
  0003a	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12485[ebp+8], 2
  00040	66 c7 45 dc 14
	00		 mov	 WORD PTR _array$12486[ebp], 20 ; 00000014H
  00046	66 89 5d de	 mov	 WORD PTR _array$12486[ebp+2], bx
  0004a	89 7d e0	 mov	 DWORD PTR _array$12486[ebp+4], edi
  0004d	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12486[ebp+8], OFFSET ??_C@_0BF@HDPDLHJI@System?4MEMORY_HEADER?$AA@
  00054	66 89 5d e8	 mov	 WORD PTR _array$12486[ebp+12], bx
  00058	66 89 5d ea	 mov	 WORD PTR _array$12486[ebp+14], bx
  0005c	89 7d ec	 mov	 DWORD PTR _array$12486[ebp+16], edi
  0005f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12486[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  00066	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  0006b	8b f0		 mov	 esi, eax
  0006d	85 f6		 test	 esi, esi
  0006f	0f 84 a6 00 00
	00		 je	 $LN13@RegisterNa

; 74   : 
; 75   :     DECLARE_FIELD(MEMORY_HEADER, TYPE_uint16, Size)

  00075	6a 04		 push	 4
  00077	6a 00		 push	 0
  00079	6a 05		 push	 5
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_04EBKMHHBE@Size?$AA@
  00080	8b d6		 mov	 edx, esi
  00082	8b cf		 mov	 ecx, edi
  00084	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_MEMORY_HEADER@@3PAUuintPtr@@A, esi ; Handle_MEMORY_HEADER
  0008a	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 76   :     DECLARE_FIELD(MEMORY_HEADER, TYPE_uint16, Link)

  0008f	6a 04		 push	 4
  00091	6a 02		 push	 2
  00093	6a 05		 push	 5
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_04CGLAFBGF@Link?$AA@
  0009a	8b d6		 mov	 edx, esi
  0009c	8b cf		 mov	 ecx, edi
  0009e	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 77   :     DECLARE_FIELD(MEMORY_HEADER, TYPE_uint16, Offset)

  000a3	6a 04		 push	 4
  000a5	6a 04		 push	 4
  000a7	6a 07		 push	 7
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_06GEMKPBPA@Offset?$AA@
  000ae	8b d6		 mov	 edx, esi
  000b0	8b cf		 mov	 ecx, edi
  000b2	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 78   :     DECLARE_FIELD(MEMORY_HEADER, TYPE_uint16, Flags)

  000b7	6a 04		 push	 4
  000b9	6a 06		 push	 6
  000bb	6a 06		 push	 6
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_05BOOEKJH@Flags?$AA@
  000c2	8b d6		 mov	 edx, esi
  000c4	8b cf		 mov	 ecx, edi
  000c6	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 79   :     DECLARE_FIELD(MEMORY_HEADER, TYPE_uint64, Timestamp)

  000cb	6a 08		 push	 8
  000cd	6a 08		 push	 8
  000cf	6a 0a		 push	 10			; 0000000aH
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_09KDGENIOP@Timestamp?$AA@
  000d6	8b d6		 mov	 edx, esi
  000d8	8b cf		 mov	 ecx, edi
  000da	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 80   :     DECLARE_FIELD(MEMORY_HEADER, TYPE_UIntPtr, Type)

  000df	6a 0a		 push	 10			; 0000000aH
  000e1	6a 10		 push	 16			; 00000010H
  000e3	6a 05		 push	 5
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_04KOACHJEN@Type?$AA@
  000ea	8b d6		 mov	 edx, esi
  000ec	8b cf		 mov	 ecx, edi
  000ee	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 81   :     DECLARE_FIELD(MEMORY_HEADER, TYPE_uint16, TID)

  000f3	6a 04		 push	 4
  000f5	6a 14		 push	 20			; 00000014H
  000f7	6a 04		 push	 4
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_03HBIKIEFI@TID?$AA@
  000fe	8b d6		 mov	 edx, esi
  00100	8b cf		 mov	 ecx, edi
  00102	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 82   :     DECLARE_FIELD(MEMORY_HEADER, TYPE_uint16, Cpu)

  00107	6a 04		 push	 4
  00109	6a 16		 push	 22			; 00000016H
  0010b	6a 04		 push	 4
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_03FBKDDCND@Cpu?$AA@
  00112	8b d6		 mov	 edx, esi
  00114	8b cf		 mov	 ecx, edi
  00116	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN13@RegisterNa:

; 83   :      
; 84   : DECLARE_STRUCTURE_END(MEMORY_HEADER)
; 85   : 
; 86   : DECLARE_ENUM_BEGIN(LOG_SEVERITY,TYPE_uint8)

  0011b	6a 02		 push	 2
  0011d	6a 13		 push	 19			; 00000013H
  0011f	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BE@KACIDIKN@System?4LOG_SEVERITY?$AA@
  00124	8b cf		 mov	 ecx, edi
  00126	e8 00 00 00 00	 call	 ?RegisterEnumDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAXGG@Z ; RegisterEnumDescriptorImplementation
  0012b	8b f0		 mov	 esi, eax
  0012d	85 f6		 test	 esi, esi
  0012f	0f 84 a0 00 00
	00		 je	 $LN237@RegisterNa

; 87   :     DECLARE_VALUE(LOG_SEVERITY, 0xe, 0, Fatal)

  00135	6a 00		 push	 0
  00137	6a 00		 push	 0
  00139	6a 0e		 push	 14			; 0000000eH
  0013b	6a 06		 push	 6
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_05FHGOFLKH@Fatal?$AA@
  00142	8b d6		 mov	 edx, esi
  00144	8b cf		 mov	 ecx, edi
  00146	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_LOG_SEVERITY@@3PAUuintPtr@@A, esi ; Handle_LOG_SEVERITY
  0014c	e8 00 00 00 00	 call	 ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation

; 88   :     DECLARE_VALUE(LOG_SEVERITY, 0xc, 0, Error)

  00151	6a 00		 push	 0
  00153	6a 00		 push	 0
  00155	6a 0c		 push	 12			; 0000000cH
  00157	6a 06		 push	 6
  00159	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0015e	8b d6		 mov	 edx, esi
  00160	8b cf		 mov	 ecx, edi
  00162	e8 00 00 00 00	 call	 ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation

; 89   :     DECLARE_VALUE(LOG_SEVERITY, 0xa, 0, Warning)

  00167	6a 00		 push	 0
  00169	6a 00		 push	 0
  0016b	6a 0a		 push	 10			; 0000000aH
  0016d	6a 08		 push	 8
  0016f	68 00 00 00 00	 push	 OFFSET ??_C@_07KGMMFLDN@Warning?$AA@
  00174	8b d6		 mov	 edx, esi
  00176	8b cf		 mov	 ecx, edi
  00178	e8 00 00 00 00	 call	 ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation

; 90   :     DECLARE_VALUE(LOG_SEVERITY, 0x8, 0, Notice)

  0017d	6a 00		 push	 0
  0017f	6a 00		 push	 0
  00181	6a 08		 push	 8
  00183	6a 07		 push	 7
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_06JHGCIHDH@Notice?$AA@
  0018a	8b d6		 mov	 edx, esi
  0018c	8b cf		 mov	 ecx, edi
  0018e	e8 00 00 00 00	 call	 ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation

; 91   :     DECLARE_VALUE(LOG_SEVERITY, 0x6, 0, Trace)

  00193	6a 00		 push	 0
  00195	6a 00		 push	 0
  00197	6a 06		 push	 6
  00199	6a 06		 push	 6
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_05ILLBNNOP@Trace?$AA@
  001a0	8b d6		 mov	 edx, esi
  001a2	8b cf		 mov	 ecx, edi
  001a4	e8 00 00 00 00	 call	 ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation

; 92   :     DECLARE_VALUE(LOG_SEVERITY, 0x4, 0, Audit)

  001a9	6a 00		 push	 0
  001ab	6a 00		 push	 0
  001ad	6a 04		 push	 4
  001af	6a 06		 push	 6
  001b1	68 00 00 00 00	 push	 OFFSET ??_C@_05DBKMECD@Audit?$AA@
  001b6	8b d6		 mov	 edx, esi
  001b8	8b cf		 mov	 ecx, edi
  001ba	e8 00 00 00 00	 call	 ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation

; 93   :     DECLARE_VALUE(LOG_SEVERITY, 0x2, 0, Debug)

  001bf	6a 00		 push	 0
  001c1	6a 00		 push	 0
  001c3	6a 02		 push	 2
  001c5	6a 06		 push	 6
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_05GCIPIGEI@Debug?$AA@
  001cc	8b d6		 mov	 edx, esi
  001ce	8b cf		 mov	 ecx, edi
  001d0	e8 00 00 00 00	 call	 ?RegisterValueDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXI_KE@Z ; RegisterValueDescriptorImplementation
$LN237@RegisterNa:

; 94   : DECLARE_ENUM_END(LOG_SEVERITY)
; 95   : 
; 96   : DECLARE_STRUCTURE_BEGIN(LOG_EXCEPTION, "Throw {0}, Handler {1}")

  001d5	8d 4d dc	 lea	 ecx, DWORD PTR _array$12563[ebp]
  001d8	51		 push	 ecx
  001d9	6a 02		 push	 2
  001db	6a 0c		 push	 12			; 0000000cH
  001dd	33 c0		 xor	 eax, eax
  001df	8d 55 f4	 lea	 edx, DWORD PTR _Event$12562[ebp]
  001e2	52		 push	 edx
  001e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  001e9	50		 push	 eax
  001ea	68 00 81 00 00	 push	 33024			; 00008100H
  001ef	8a cb		 mov	 cl, bl
  001f1	89 45 f4	 mov	 DWORD PTR _Event$12562[ebp], eax
  001f4	66 89 45 f8	 mov	 WORD PTR _Event$12562[ebp+4], ax
  001f8	66 89 5d fa	 mov	 WORD PTR _Event$12562[ebp+6], bx
  001fc	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12562[ebp+8], 2
  00202	66 c7 45 dc 14
	00		 mov	 WORD PTR _array$12563[ebp], 20 ; 00000014H
  00208	66 89 5d de	 mov	 WORD PTR _array$12563[ebp+2], bx
  0020c	89 7d e0	 mov	 DWORD PTR _array$12563[ebp+4], edi
  0020f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12563[ebp+8], OFFSET ??_C@_0BF@OKDJFMJI@System?4LOG_EXCEPTION?$AA@
  00216	66 c7 45 e8 17
	00		 mov	 WORD PTR _array$12563[ebp+12], 23 ; 00000017H
  0021c	66 89 5d ea	 mov	 WORD PTR _array$12563[ebp+14], bx
  00220	89 7d ec	 mov	 DWORD PTR _array$12563[ebp+16], edi
  00223	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12563[ebp+20], OFFSET ??_C@_0BH@LPOFBINH@Throw?5?$HL0?$HN?0?5Handler?5?$HL1?$HN?$AA@
  0022a	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  0022f	8b f0		 mov	 esi, eax
  00231	85 f6		 test	 esi, esi
  00233	74 45		 je	 SHORT $LN238@RegisterNa

; 97   : 
; 98   :     DECLARE_FIELD(LOG_EXCEPTION, TYPE_UIntPtr, ThrowFrom)

  00235	6a 0a		 push	 10			; 0000000aH
  00237	6a 00		 push	 0
  00239	6a 0a		 push	 10			; 0000000aH
  0023b	68 00 00 00 00	 push	 OFFSET ??_C@_09ELMAFJJG@ThrowFrom?$AA@
  00240	8b d6		 mov	 edx, esi
  00242	8b cf		 mov	 ecx, edi
  00244	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_LOG_EXCEPTION@@3PAUuintPtr@@A, esi ; Handle_LOG_EXCEPTION
  0024a	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 99   :     DECLARE_FIELD(LOG_EXCEPTION, TYPE_UIntPtr, Handler)

  0024f	6a 0a		 push	 10			; 0000000aH
  00251	6a 04		 push	 4
  00253	6a 08		 push	 8
  00255	68 00 00 00 00	 push	 OFFSET ??_C@_07DBMNFLDM@Handler?$AA@
  0025a	8b d6		 mov	 edx, esi
  0025c	8b cf		 mov	 ecx, edi
  0025e	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 100  :     
; 101  :     DECLARE_EXTENDED_ARRAY_FIELD(LOG_EXCEPTION, TYPE_string, ExceptionName)

  00263	68 00 c0 00 00	 push	 49152			; 0000c000H
  00268	6a 08		 push	 8
  0026a	6a 0e		 push	 14			; 0000000eH
  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JCJIHLOH@ExceptionName?$AA@
  00271	8b d6		 mov	 edx, esi
  00273	8b cf		 mov	 ecx, edi
  00275	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN238@RegisterNa:

; 102  :     
; 103  : DECLARE_STRUCTURE_END(LOG_EXCEPTION)
; 104  : 
; 105  : //
; 106  : //  GC profiler structures
; 107  : //
; 108  : 
; 109  : DECLARE_STRUCTURE_BEGIN(GC_FUNCTION, "")

  0027a	8d 4d dc	 lea	 ecx, DWORD PTR _array$12604[ebp]
  0027d	51		 push	 ecx
  0027e	6a 02		 push	 2
  00280	6a 0c		 push	 12			; 0000000cH
  00282	33 c0		 xor	 eax, eax
  00284	8d 55 f4	 lea	 edx, DWORD PTR _Event$12603[ebp]
  00287	52		 push	 edx
  00288	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  0028e	50		 push	 eax
  0028f	68 00 81 00 00	 push	 33024			; 00008100H
  00294	8a cb		 mov	 cl, bl
  00296	89 45 f4	 mov	 DWORD PTR _Event$12603[ebp], eax
  00299	66 89 45 f8	 mov	 WORD PTR _Event$12603[ebp+4], ax
  0029d	66 89 5d fa	 mov	 WORD PTR _Event$12603[ebp+6], bx
  002a1	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12603[ebp+8], 2
  002a7	66 c7 45 dc 12
	00		 mov	 WORD PTR _array$12604[ebp], 18 ; 00000012H
  002ad	66 89 5d de	 mov	 WORD PTR _array$12604[ebp+2], bx
  002b1	89 7d e0	 mov	 DWORD PTR _array$12604[ebp+4], edi
  002b4	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12604[ebp+8], OFFSET ??_C@_0BD@IGLEBJNP@System?4GC_FUNCTION?$AA@
  002bb	66 89 5d e8	 mov	 WORD PTR _array$12604[ebp+12], bx
  002bf	66 89 5d ea	 mov	 WORD PTR _array$12604[ebp+14], bx
  002c3	89 7d ec	 mov	 DWORD PTR _array$12604[ebp+16], edi
  002c6	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12604[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  002cd	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  002d2	8b f0		 mov	 esi, eax
  002d4	85 f6		 test	 esi, esi
  002d6	74 2e		 je	 SHORT $LN240@RegisterNa

; 110  : 
; 111  :     DECLARE_FIELD(GC_FUNCTION, TYPE_uint32, FnIdx)

  002d8	6a 06		 push	 6
  002da	6a 00		 push	 0
  002dc	6a 06		 push	 6
  002de	68 00 00 00 00	 push	 OFFSET ??_C@_05PPBKPJLE@FnIdx?$AA@
  002e3	8b d6		 mov	 edx, esi
  002e5	8b cf		 mov	 ecx, edi
  002e7	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_GC_FUNCTION@@3PAUuintPtr@@A, esi ; Handle_GC_FUNCTION
  002ed	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 112  :     DECLARE_FIELD(GC_FUNCTION, TYPE_UIntPtr, IP)

  002f2	6a 0a		 push	 10			; 0000000aH
  002f4	6a 04		 push	 4
  002f6	6a 03		 push	 3
  002f8	68 00 00 00 00	 push	 OFFSET ??_C@_02MFEOMNPG@IP?$AA@
  002fd	8b d6		 mov	 edx, esi
  002ff	8b cf		 mov	 ecx, edi
  00301	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN240@RegisterNa:

; 113  :     
; 114  : DECLARE_STRUCTURE_END(GC_FUNCTION)
; 115  : 
; 116  : DECLARE_STRUCTURE_BEGIN(GC_ALLOCATION, "")

  00306	8d 4d dc	 lea	 ecx, DWORD PTR _array$12643[ebp]
  00309	51		 push	 ecx
  0030a	6a 02		 push	 2
  0030c	6a 0c		 push	 12			; 0000000cH
  0030e	33 c0		 xor	 eax, eax
  00310	8d 55 f4	 lea	 edx, DWORD PTR _Event$12642[ebp]
  00313	52		 push	 edx
  00314	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  0031a	50		 push	 eax
  0031b	68 00 81 00 00	 push	 33024			; 00008100H
  00320	8a cb		 mov	 cl, bl
  00322	89 45 f4	 mov	 DWORD PTR _Event$12642[ebp], eax
  00325	66 89 45 f8	 mov	 WORD PTR _Event$12642[ebp+4], ax
  00329	66 89 5d fa	 mov	 WORD PTR _Event$12642[ebp+6], bx
  0032d	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12642[ebp+8], 2
  00333	66 c7 45 dc 14
	00		 mov	 WORD PTR _array$12643[ebp], 20 ; 00000014H
  00339	66 89 5d de	 mov	 WORD PTR _array$12643[ebp+2], bx
  0033d	89 7d e0	 mov	 DWORD PTR _array$12643[ebp+4], edi
  00340	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12643[ebp+8], OFFSET ??_C@_0BF@DIODGDLN@System?4GC_ALLOCATION?$AA@
  00347	66 89 5d e8	 mov	 WORD PTR _array$12643[ebp+12], bx
  0034b	66 89 5d ea	 mov	 WORD PTR _array$12643[ebp+14], bx
  0034f	89 7d ec	 mov	 DWORD PTR _array$12643[ebp+16], edi
  00352	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12643[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  00359	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  0035e	8b f0		 mov	 esi, eax
  00360	85 f6		 test	 esi, esi
  00362	74 42		 je	 SHORT $LN241@RegisterNa

; 117  : 
; 118  :     DECLARE_FIELD(GC_ALLOCATION, TYPE_uint32, TID)

  00364	6a 06		 push	 6
  00366	6a 00		 push	 0
  00368	6a 04		 push	 4
  0036a	68 00 00 00 00	 push	 OFFSET ??_C@_03HBIKIEFI@TID?$AA@
  0036f	8b d6		 mov	 edx, esi
  00371	8b cf		 mov	 ecx, edi
  00373	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_GC_ALLOCATION@@3PAUuintPtr@@A, esi ; Handle_GC_ALLOCATION
  00379	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 119  :     DECLARE_FIELD(GC_ALLOCATION, TYPE_uint32, StkNo)

  0037e	6a 06		 push	 6
  00380	6a 04		 push	 4
  00382	6a 06		 push	 6
  00384	68 00 00 00 00	 push	 OFFSET ??_C@_05LMDDMFKK@StkNo?$AA@
  00389	8b d6		 mov	 edx, esi
  0038b	8b cf		 mov	 ecx, edi
  0038d	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 120  :     DECLARE_FIELD(GC_ALLOCATION, TYPE_UIntPtr, Object)

  00392	6a 0a		 push	 10			; 0000000aH
  00394	6a 08		 push	 8
  00396	6a 07		 push	 7
  00398	68 00 00 00 00	 push	 OFFSET ??_C@_06ELFECKBG@Object?$AA@
  0039d	8b d6		 mov	 edx, esi
  0039f	8b cf		 mov	 ecx, edi
  003a1	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN241@RegisterNa:

; 121  :     
; 122  : DECLARE_STRUCTURE_END(GC_ALLOCATION)
; 123  : 
; 124  : DECLARE_STRUCTURE_BEGIN(GC_INTERVAL, "")

  003a6	8d 4d dc	 lea	 ecx, DWORD PTR _array$12686[ebp]
  003a9	51		 push	 ecx
  003aa	6a 02		 push	 2
  003ac	6a 0c		 push	 12			; 0000000cH
  003ae	33 c0		 xor	 eax, eax
  003b0	8d 55 f4	 lea	 edx, DWORD PTR _Event$12685[ebp]
  003b3	52		 push	 edx
  003b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  003ba	50		 push	 eax
  003bb	68 00 81 00 00	 push	 33024			; 00008100H
  003c0	8a cb		 mov	 cl, bl
  003c2	89 45 f4	 mov	 DWORD PTR _Event$12685[ebp], eax
  003c5	66 89 45 f8	 mov	 WORD PTR _Event$12685[ebp+4], ax
  003c9	66 89 5d fa	 mov	 WORD PTR _Event$12685[ebp+6], bx
  003cd	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12685[ebp+8], 2
  003d3	66 c7 45 dc 12
	00		 mov	 WORD PTR _array$12686[ebp], 18 ; 00000012H
  003d9	66 89 5d de	 mov	 WORD PTR _array$12686[ebp+2], bx
  003dd	89 7d e0	 mov	 DWORD PTR _array$12686[ebp+4], edi
  003e0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12686[ebp+8], OFFSET ??_C@_0BD@NCLJCGAP@System?4GC_INTERVAL?$AA@
  003e7	66 89 5d e8	 mov	 WORD PTR _array$12686[ebp+12], bx
  003eb	66 89 5d ea	 mov	 WORD PTR _array$12686[ebp+14], bx
  003ef	89 7d ec	 mov	 DWORD PTR _array$12686[ebp+16], edi
  003f2	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12686[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  003f9	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  003fe	33 f6		 xor	 esi, esi
  00400	3b c6		 cmp	 eax, esi
  00402	74 18		 je	 SHORT $LN242@RegisterNa

; 125  : 
; 126  :     DECLARE_FIELD(GC_INTERVAL, TYPE_uint64, Delta)

  00404	6a 08		 push	 8
  00406	56		 push	 esi
  00407	6a 06		 push	 6
  00409	68 00 00 00 00	 push	 OFFSET ??_C@_05NFMIDMMK@Delta?$AA@
  0040e	8b d0		 mov	 edx, eax
  00410	8b cf		 mov	 ecx, edi
  00412	a3 00 00 00 00	 mov	 DWORD PTR ?Handle_GC_INTERVAL@@3PAUuintPtr@@A, eax ; Handle_GC_INTERVAL
  00417	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN242@RegisterNa:

; 127  :     
; 128  : DECLARE_STRUCTURE_END(GC_INTERVAL)
; 129  : 
; 130  : DECLARE_STRUCTURE_BEGIN(GC_TYPE, "")

  0041c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  00422	8d 45 dc	 lea	 eax, DWORD PTR _array$12722[ebp]
  00425	50		 push	 eax
  00426	6a 02		 push	 2
  00428	6a 0c		 push	 12			; 0000000cH
  0042a	8d 4d f4	 lea	 ecx, DWORD PTR _Event$12721[ebp]
  0042d	51		 push	 ecx
  0042e	56		 push	 esi
  0042f	68 00 81 00 00	 push	 33024			; 00008100H
  00434	8a cb		 mov	 cl, bl
  00436	89 75 f4	 mov	 DWORD PTR _Event$12721[ebp], esi
  00439	66 89 75 f8	 mov	 WORD PTR _Event$12721[ebp+4], si
  0043d	66 89 5d fa	 mov	 WORD PTR _Event$12721[ebp+6], bx
  00441	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12721[ebp+8], 2
  00447	66 c7 45 dc 0e
	00		 mov	 WORD PTR _array$12722[ebp], 14 ; 0000000eH
  0044d	66 89 5d de	 mov	 WORD PTR _array$12722[ebp+2], bx
  00451	89 7d e0	 mov	 DWORD PTR _array$12722[ebp+4], edi
  00454	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12722[ebp+8], OFFSET ??_C@_0P@KNGNNKPN@System?4GC_TYPE?$AA@
  0045b	66 89 5d e8	 mov	 WORD PTR _array$12722[ebp+12], bx
  0045f	66 89 5d ea	 mov	 WORD PTR _array$12722[ebp+14], bx
  00463	89 7d ec	 mov	 DWORD PTR _array$12722[ebp+16], edi
  00466	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12722[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  0046d	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  00472	8b f0		 mov	 esi, eax
  00474	85 f6		 test	 esi, esi
  00476	74 31		 je	 SHORT $LN239@RegisterNa

; 131  : 
; 132  :     DECLARE_FIELD(GC_TYPE, TYPE_uint32, TypeId)

  00478	6a 06		 push	 6
  0047a	6a 00		 push	 0
  0047c	6a 07		 push	 7
  0047e	68 00 00 00 00	 push	 OFFSET ??_C@_06BCNEEODO@TypeId?$AA@
  00483	8b d6		 mov	 edx, esi
  00485	8b cf		 mov	 ecx, edi
  00487	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_GC_TYPE@@3PAUuintPtr@@A, esi ; Handle_GC_TYPE
  0048d	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 133  :     DECLARE_EXTENDED_ARRAY_FIELD(GC_TYPE, TYPE_string, Name)

  00492	68 00 c0 00 00	 push	 49152			; 0000c000H
  00497	6a 04		 push	 4
  00499	6a 05		 push	 5
  0049b	68 00 00 00 00	 push	 OFFSET ??_C@_04FABLJDN@Name?$AA@
  004a0	8b d6		 mov	 edx, esi
  004a2	8b cf		 mov	 ecx, edi
  004a4	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN239@RegisterNa:

; 134  :     
; 135  : DECLARE_STRUCTURE_END(GC_TYPE)
; 136  : 
; 137  : DECLARE_STRUCTURE_BEGIN(GC_STACK, "")

  004a9	8d 55 dc	 lea	 edx, DWORD PTR _array$12761[ebp]
  004ac	52		 push	 edx
  004ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  004b3	6a 02		 push	 2
  004b5	6a 0c		 push	 12			; 0000000cH
  004b7	8d 4d f4	 lea	 ecx, DWORD PTR _Event$12760[ebp]
  004ba	33 c0		 xor	 eax, eax
  004bc	51		 push	 ecx
  004bd	50		 push	 eax
  004be	68 00 81 00 00	 push	 33024			; 00008100H
  004c3	8a cb		 mov	 cl, bl
  004c5	89 45 f4	 mov	 DWORD PTR _Event$12760[ebp], eax
  004c8	66 89 45 f8	 mov	 WORD PTR _Event$12760[ebp+4], ax
  004cc	66 89 5d fa	 mov	 WORD PTR _Event$12760[ebp+6], bx
  004d0	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12760[ebp+8], 2
  004d6	66 c7 45 dc 0f
	00		 mov	 WORD PTR _array$12761[ebp], 15 ; 0000000fH
  004dc	66 89 5d de	 mov	 WORD PTR _array$12761[ebp+2], bx
  004e0	89 7d e0	 mov	 DWORD PTR _array$12761[ebp+4], edi
  004e3	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12761[ebp+8], OFFSET ??_C@_0BA@NJJBMNPE@System?4GC_STACK?$AA@
  004ea	66 89 5d e8	 mov	 WORD PTR _array$12761[ebp+12], bx
  004ee	66 89 5d ea	 mov	 WORD PTR _array$12761[ebp+14], bx
  004f2	89 7d ec	 mov	 DWORD PTR _array$12761[ebp+16], edi
  004f5	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12761[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  004fc	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  00501	8b f0		 mov	 esi, eax
  00503	85 f6		 test	 esi, esi
  00505	74 59		 je	 SHORT $LN6@RegisterNa

; 138  : 
; 139  :     DECLARE_FIELD(GC_STACK, TYPE_uint32, StkNo)

  00507	6a 06		 push	 6
  00509	6a 00		 push	 0
  0050b	6a 06		 push	 6
  0050d	68 00 00 00 00	 push	 OFFSET ??_C@_05LMDDMFKK@StkNo?$AA@
  00512	8b d6		 mov	 edx, esi
  00514	8b cf		 mov	 ecx, edi
  00516	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_GC_STACK@@3PAUuintPtr@@A, esi ; Handle_GC_STACK
  0051c	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 140  :     DECLARE_FIELD(GC_STACK, TYPE_uint32, TypeId)

  00521	6a 06		 push	 6
  00523	6a 04		 push	 4
  00525	6a 07		 push	 7
  00527	68 00 00 00 00	 push	 OFFSET ??_C@_06BCNEEODO@TypeId?$AA@
  0052c	8b d6		 mov	 edx, esi
  0052e	8b cf		 mov	 ecx, edi
  00530	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 141  :     DECLARE_FIELD(GC_STACK, TYPE_uint32, Size)

  00535	6a 06		 push	 6
  00537	6a 08		 push	 8
  00539	6a 05		 push	 5
  0053b	68 00 00 00 00	 push	 OFFSET ??_C@_04EBKMHHBE@Size?$AA@
  00540	8b d6		 mov	 edx, esi
  00542	8b cf		 mov	 ecx, edi
  00544	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 142  :     DECLARE_EXTENDED_ARRAY_FIELD(GC_STACK, TYPE_uint32, fncList)

  00549	68 06 80 00 00	 push	 32774			; 00008006H
  0054e	6a 0c		 push	 12			; 0000000cH
  00550	6a 08		 push	 8
  00552	68 00 00 00 00	 push	 OFFSET ??_C@_07BPHJKENM@fncList?$AA@
  00557	8b d6		 mov	 edx, esi
  00559	8b cf		 mov	 ecx, edi
  0055b	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN6@RegisterNa:

; 143  :     
; 144  : DECLARE_STRUCTURE_END(GC_STACK)
; 145  : 
; 146  : DECLARE_STRUCTURE_BEGIN(GC_OBJECT, "")

  00560	8d 55 dc	 lea	 edx, DWORD PTR _array$12806[ebp]
  00563	52		 push	 edx
  00564	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  0056a	6a 02		 push	 2
  0056c	6a 0c		 push	 12			; 0000000cH
  0056e	8d 4d f4	 lea	 ecx, DWORD PTR _Event$12805[ebp]
  00571	33 c0		 xor	 eax, eax
  00573	51		 push	 ecx
  00574	50		 push	 eax
  00575	68 00 81 00 00	 push	 33024			; 00008100H
  0057a	8a cb		 mov	 cl, bl
  0057c	89 45 f4	 mov	 DWORD PTR _Event$12805[ebp], eax
  0057f	66 89 45 f8	 mov	 WORD PTR _Event$12805[ebp+4], ax
  00583	66 89 5d fa	 mov	 WORD PTR _Event$12805[ebp+6], bx
  00587	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12805[ebp+8], 2
  0058d	66 c7 45 dc 10
	00		 mov	 WORD PTR _array$12806[ebp], 16 ; 00000010H
  00593	66 89 5d de	 mov	 WORD PTR _array$12806[ebp+2], bx
  00597	89 7d e0	 mov	 DWORD PTR _array$12806[ebp+4], edi
  0059a	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12806[ebp+8], OFFSET ??_C@_0BB@ENIHBHNB@System?4GC_OBJECT?$AA@
  005a1	66 89 5d e8	 mov	 WORD PTR _array$12806[ebp+12], bx
  005a5	66 89 5d ea	 mov	 WORD PTR _array$12806[ebp+14], bx
  005a9	89 7d ec	 mov	 DWORD PTR _array$12806[ebp+16], edi
  005ac	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12806[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  005b3	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  005b8	33 f6		 xor	 esi, esi
  005ba	3b c6		 cmp	 eax, esi
  005bc	74 1b		 je	 SHORT $LN5@RegisterNa

; 147  : 
; 148  :     DECLARE_EXTENDED_ARRAY_FIELD(GC_OBJECT, TYPE_UIntPtr, ParameterList)

  005be	68 0a 80 00 00	 push	 32778			; 0000800aH
  005c3	56		 push	 esi
  005c4	6a 0e		 push	 14			; 0000000eH
  005c6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MAFLGEBO@ParameterList?$AA@
  005cb	8b d0		 mov	 edx, eax
  005cd	8b cf		 mov	 ecx, edi
  005cf	a3 00 00 00 00	 mov	 DWORD PTR ?Handle_GC_OBJECT@@3PAUuintPtr@@A, eax ; Handle_GC_OBJECT
  005d4	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN5@RegisterNa:

; 149  :     
; 150  : DECLARE_STRUCTURE_END(GC_OBJECT)
; 151  : 
; 152  : DECLARE_STRUCTURE_BEGIN(GC_GENERATIONS, "")

  005d9	8d 55 dc	 lea	 edx, DWORD PTR _array$12842[ebp]
  005dc	52		 push	 edx
  005dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  005e3	6a 02		 push	 2
  005e5	6a 0c		 push	 12			; 0000000cH
  005e7	8d 45 f4	 lea	 eax, DWORD PTR _Event$12841[ebp]
  005ea	50		 push	 eax
  005eb	56		 push	 esi
  005ec	68 00 81 00 00	 push	 33024			; 00008100H
  005f1	8a cb		 mov	 cl, bl
  005f3	89 75 f4	 mov	 DWORD PTR _Event$12841[ebp], esi
  005f6	66 89 75 f8	 mov	 WORD PTR _Event$12841[ebp+4], si
  005fa	66 89 5d fa	 mov	 WORD PTR _Event$12841[ebp+6], bx
  005fe	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12841[ebp+8], 2
  00604	66 c7 45 dc 15
	00		 mov	 WORD PTR _array$12842[ebp], 21 ; 00000015H
  0060a	66 89 5d de	 mov	 WORD PTR _array$12842[ebp+2], bx
  0060e	89 7d e0	 mov	 DWORD PTR _array$12842[ebp+4], edi
  00611	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12842[ebp+8], OFFSET ??_C@_0BG@JBMENCLG@System?4GC_GENERATIONS?$AA@
  00618	66 89 5d e8	 mov	 WORD PTR _array$12842[ebp+12], bx
  0061c	66 89 5d ea	 mov	 WORD PTR _array$12842[ebp+14], bx
  00620	89 7d ec	 mov	 DWORD PTR _array$12842[ebp+16], edi
  00623	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12842[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  0062a	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  0062f	3b c6		 cmp	 eax, esi
  00631	74 1b		 je	 SHORT $LN4@RegisterNa

; 153  : 
; 154  :     DECLARE_EXTENDED_ARRAY_FIELD(GC_GENERATIONS, TYPE_int32, Genrations)

  00633	68 05 80 00 00	 push	 32773			; 00008005H
  00638	56		 push	 esi
  00639	6a 0b		 push	 11			; 0000000bH
  0063b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CKFPHHGA@Genrations?$AA@
  00640	8b d0		 mov	 edx, eax
  00642	8b cf		 mov	 ecx, edi
  00644	a3 00 00 00 00	 mov	 DWORD PTR ?Handle_GC_GENERATIONS@@3PAUuintPtr@@A, eax ; Handle_GC_GENERATIONS
  00649	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN4@RegisterNa:

; 155  :     
; 156  : DECLARE_STRUCTURE_END(GC_GENERATIONS)
; 157  : 
; 158  : DECLARE_STRUCTURE_BEGIN(GC_ROOTS, "")

  0064e	8d 4d dc	 lea	 ecx, DWORD PTR _array$12878[ebp]
  00651	51		 push	 ecx
  00652	6a 02		 push	 2
  00654	6a 0c		 push	 12			; 0000000cH
  00656	8d 55 f4	 lea	 edx, DWORD PTR _Event$12877[ebp]
  00659	52		 push	 edx
  0065a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  00660	56		 push	 esi
  00661	68 00 81 00 00	 push	 33024			; 00008100H
  00666	8a cb		 mov	 cl, bl
  00668	89 75 f4	 mov	 DWORD PTR _Event$12877[ebp], esi
  0066b	66 89 75 f8	 mov	 WORD PTR _Event$12877[ebp+4], si
  0066f	66 89 5d fa	 mov	 WORD PTR _Event$12877[ebp+6], bx
  00673	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12877[ebp+8], 2
  00679	66 c7 45 dc 0f
	00		 mov	 WORD PTR _array$12878[ebp], 15 ; 0000000fH
  0067f	66 89 5d de	 mov	 WORD PTR _array$12878[ebp+2], bx
  00683	89 7d e0	 mov	 DWORD PTR _array$12878[ebp+4], edi
  00686	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12878[ebp+8], OFFSET ??_C@_0BA@HOFAOCFN@System?4GC_ROOTS?$AA@
  0068d	66 89 5d e8	 mov	 WORD PTR _array$12878[ebp+12], bx
  00691	66 89 5d ea	 mov	 WORD PTR _array$12878[ebp+14], bx
  00695	89 7d ec	 mov	 DWORD PTR _array$12878[ebp+16], edi
  00698	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12878[ebp+20], OFFSET ??_C@_00CNPNBAHC@?$AA@
  0069f	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  006a4	3b c6		 cmp	 eax, esi
  006a6	74 1b		 je	 SHORT $LN3@RegisterNa

; 159  : 
; 160  :     DECLARE_EXTENDED_ARRAY_FIELD(GC_ROOTS, TYPE_UIntPtr, Roots)

  006a8	68 0a 80 00 00	 push	 32778			; 0000800aH
  006ad	56		 push	 esi
  006ae	6a 06		 push	 6
  006b0	68 00 00 00 00	 push	 OFFSET ??_C@_05CALGBKNA@Roots?$AA@
  006b5	8b d0		 mov	 edx, eax
  006b7	8b cf		 mov	 ecx, edi
  006b9	a3 00 00 00 00	 mov	 DWORD PTR ?Handle_GC_ROOTS@@3PAUuintPtr@@A, eax ; Handle_GC_ROOTS
  006be	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN3@RegisterNa:

; 161  :     
; 162  : DECLARE_STRUCTURE_END(GC_ROOTS)
; 163  : 
; 164  : DECLARE_STRUCTURE_BEGIN(LEGACY_LOG_ENTRY, "Log {0}:{1} {3*}")

  006c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  006c9	8d 45 dc	 lea	 eax, DWORD PTR _array$12914[ebp]
  006cc	50		 push	 eax
  006cd	6a 02		 push	 2
  006cf	6a 0c		 push	 12			; 0000000cH
  006d1	8d 4d f4	 lea	 ecx, DWORD PTR _Event$12913[ebp]
  006d4	51		 push	 ecx
  006d5	56		 push	 esi
  006d6	68 00 81 00 00	 push	 33024			; 00008100H
  006db	8a cb		 mov	 cl, bl
  006dd	89 75 f4	 mov	 DWORD PTR _Event$12913[ebp], esi
  006e0	66 89 75 f8	 mov	 WORD PTR _Event$12913[ebp+4], si
  006e4	66 89 5d fa	 mov	 WORD PTR _Event$12913[ebp+6], bx
  006e8	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12913[ebp+8], 2
  006ee	66 c7 45 dc 17
	00		 mov	 WORD PTR _array$12914[ebp], 23 ; 00000017H
  006f4	66 89 5d de	 mov	 WORD PTR _array$12914[ebp+2], bx
  006f8	89 7d e0	 mov	 DWORD PTR _array$12914[ebp+4], edi
  006fb	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12914[ebp+8], OFFSET ??_C@_0BI@OENOPLIK@System?4LEGACY_LOG_ENTRY?$AA@
  00702	66 c7 45 e8 11
	00		 mov	 WORD PTR _array$12914[ebp+12], 17 ; 00000011H
  00708	66 89 5d ea	 mov	 WORD PTR _array$12914[ebp+14], bx
  0070c	89 7d ec	 mov	 DWORD PTR _array$12914[ebp+16], edi
  0070f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12914[ebp+20], OFFSET ??_C@_0BB@CMJINLHH@Log?5?$HL0?$HN?3?$HL1?$HN?5?$HL3?$CK?$HN?$AA@
  00716	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  0071b	8b f0		 mov	 esi, eax
  0071d	85 f6		 test	 esi, esi
  0071f	0f 84 05 01 00
	00		 je	 $LN2@RegisterNa

; 165  : 
; 166  :     DECLARE_GENERIC_FIELD(LEGACY_LOG_ENTRY, TYPE_uint8, sizeof(uint8), LOG_SEVERITY, severity)

  00725	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?Handle_LOG_SEVERITY@@3PAUuintPtr@@A ; Handle_LOG_SEVERITY
  0072b	52		 push	 edx
  0072c	53		 push	 ebx
  0072d	6a 00		 push	 0
  0072f	6a 09		 push	 9
  00731	68 00 00 00 00	 push	 OFFSET ??_C@_08PHGLMIHD@severity?$AA@
  00736	8b d6		 mov	 edx, esi
  00738	8b cf		 mov	 ecx, edi
  0073a	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_LEGACY_LOG_ENTRY@@3PAUuintPtr@@A, esi ; Handle_LEGACY_LOG_ENTRY
  00740	e8 00 00 00 00	 call	 ?RegisterGenericFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGGPAUuintPtr@@@Z ; RegisterGenericFieldDescriptorImplementation

; 167  :     DECLARE_FIELD(LEGACY_LOG_ENTRY, TYPE_uint16, PID)

  00745	6a 04		 push	 4
  00747	6a 02		 push	 2
  00749	6a 04		 push	 4
  0074b	68 00 00 00 00	 push	 OFFSET ??_C@_03POOIBDAP@PID?$AA@
  00750	8b d6		 mov	 edx, esi
  00752	8b cf		 mov	 ecx, edi
  00754	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 168  :     DECLARE_FIELD(LEGACY_LOG_ENTRY, TYPE_UIntPtr, IP)

  00759	6a 0a		 push	 10			; 0000000aH
  0075b	6a 04		 push	 4
  0075d	6a 03		 push	 3
  0075f	68 00 00 00 00	 push	 OFFSET ??_C@_02MFEOMNPG@IP?$AA@
  00764	8b d6		 mov	 edx, esi
  00766	8b cf		 mov	 ecx, edi
  00768	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 169  :     DECLARE_EXTENDED_ARRAY_FIELD(LEGACY_LOG_ENTRY, TYPE_string, Msg)

  0076d	68 00 c0 00 00	 push	 49152			; 0000c000H
  00772	6a 08		 push	 8
  00774	6a 04		 push	 4
  00776	68 00 00 00 00	 push	 OFFSET ??_C@_03MLMOILGK@Msg?$AA@
  0077b	8b d6		 mov	 edx, esi
  0077d	8b cf		 mov	 ecx, edi
  0077f	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 170  :     DECLARE_FIELD(LEGACY_LOG_ENTRY, TYPE_UIntPtr, arg0)

  00784	6a 0a		 push	 10			; 0000000aH
  00786	6a 0c		 push	 12			; 0000000cH
  00788	6a 05		 push	 5
  0078a	68 00 00 00 00	 push	 OFFSET ??_C@_04MOGHNFFO@arg0?$AA@
  0078f	8b d6		 mov	 edx, esi
  00791	8b cf		 mov	 ecx, edi
  00793	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 171  :     DECLARE_FIELD(LEGACY_LOG_ENTRY, TYPE_UIntPtr, arg1)

  00798	6a 0a		 push	 10			; 0000000aH
  0079a	6a 10		 push	 16			; 00000010H
  0079c	6a 05		 push	 5
  0079e	68 00 00 00 00	 push	 OFFSET ??_C@_04NHHMOEBP@arg1?$AA@
  007a3	8b d6		 mov	 edx, esi
  007a5	8b cf		 mov	 ecx, edi
  007a7	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 172  :     DECLARE_FIELD(LEGACY_LOG_ENTRY, TYPE_UIntPtr, arg2)

  007ac	6a 0a		 push	 10			; 0000000aH
  007ae	6a 14		 push	 20			; 00000014H
  007b0	6a 05		 push	 5
  007b2	68 00 00 00 00	 push	 OFFSET ??_C@_04PMFBLHNM@arg2?$AA@
  007b7	8b d6		 mov	 edx, esi
  007b9	8b cf		 mov	 ecx, edi
  007bb	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 173  :     DECLARE_FIELD(LEGACY_LOG_ENTRY, TYPE_UIntPtr, arg3)

  007c0	6a 0a		 push	 10			; 0000000aH
  007c2	6a 18		 push	 24			; 00000018H
  007c4	6a 05		 push	 5
  007c6	68 00 00 00 00	 push	 OFFSET ??_C@_04OFEKIGJN@arg3?$AA@
  007cb	8b d6		 mov	 edx, esi
  007cd	8b cf		 mov	 ecx, edi
  007cf	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 174  :     DECLARE_FIELD(LEGACY_LOG_ENTRY, TYPE_UIntPtr, arg4)

  007d4	6a 0a		 push	 10			; 0000000aH
  007d6	6a 1c		 push	 28			; 0000001cH
  007d8	6a 05		 push	 5
  007da	68 00 00 00 00	 push	 OFFSET ??_C@_04KKALBAFK@arg4?$AA@
  007df	8b d6		 mov	 edx, esi
  007e1	8b cf		 mov	 ecx, edi
  007e3	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 175  :     DECLARE_FIELD(LEGACY_LOG_ENTRY, TYPE_UIntPtr, arg5)

  007e8	6a 0a		 push	 10			; 0000000aH
  007ea	6a 20		 push	 32			; 00000020H
  007ec	6a 05		 push	 5
  007ee	68 00 00 00 00	 push	 OFFSET ??_C@_04LDBACBBL@arg5?$AA@
  007f3	8b d6		 mov	 edx, esi
  007f5	8b cf		 mov	 ecx, edi
  007f7	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 176  :     
; 177  :     DECLARE_EXTENDED_ARRAY_FIELD(LEGACY_LOG_ENTRY, TYPE_string, StrArg0)

  007fc	68 00 c0 00 00	 push	 49152			; 0000c000H
  00801	6a 24		 push	 36			; 00000024H
  00803	6a 08		 push	 8
  00805	68 00 00 00 00	 push	 OFFSET ??_C@_07CJMCHOPJ@StrArg0?$AA@
  0080a	8b d6		 mov	 edx, esi
  0080c	8b cf		 mov	 ecx, edi
  0080e	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 178  :     DECLARE_EXTENDED_ARRAY_FIELD(LEGACY_LOG_ENTRY, TYPE_string, StrArg1)

  00813	68 00 c0 00 00	 push	 49152			; 0000c000H
  00818	6a 26		 push	 38			; 00000026H
  0081a	6a 08		 push	 8
  0081c	68 00 00 00 00	 push	 OFFSET ??_C@_07DANJEPLI@StrArg1?$AA@
  00821	8b d6		 mov	 edx, esi
  00823	8b cf		 mov	 ecx, edi
  00825	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
$LN2@RegisterNa:

; 179  :     
; 180  : DECLARE_STRUCTURE_END(LEGACY_LOG_ENTRY)
; 181  : 
; 182  : DECLARE_STRUCTURE_BEGIN(MONITORING_ENTRY, "{0}:{1}:{2}:{3} - ({4},{5},{6},{7},{8})  {9}")

  0082a	8d 4d dc	 lea	 ecx, DWORD PTR _array$12984[ebp]
  0082d	51		 push	 ecx
  0082e	6a 02		 push	 2
  00830	6a 0c		 push	 12			; 0000000cH
  00832	33 c0		 xor	 eax, eax
  00834	8d 55 f4	 lea	 edx, DWORD PTR _Event$12983[ebp]
  00837	52		 push	 edx
  00838	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SourceController@@3U_SOURCE_CONTROLLER@@A
  0083e	50		 push	 eax
  0083f	68 00 81 00 00	 push	 33024			; 00008100H
  00844	8a cb		 mov	 cl, bl
  00846	89 45 f4	 mov	 DWORD PTR _Event$12983[ebp], eax
  00849	66 89 45 f8	 mov	 WORD PTR _Event$12983[ebp+4], ax
  0084d	66 89 5d fa	 mov	 WORD PTR _Event$12983[ebp+6], bx
  00851	66 c7 45 fc 02
	00		 mov	 WORD PTR _Event$12983[ebp+8], 2
  00857	66 c7 45 dc 17
	00		 mov	 WORD PTR _array$12984[ebp], 23 ; 00000017H
  0085d	66 89 5d de	 mov	 WORD PTR _array$12984[ebp+2], bx
  00861	89 7d e0	 mov	 DWORD PTR _array$12984[ebp+4], edi
  00864	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _array$12984[ebp+8], OFFSET ??_C@_0BI@MCHHPJCC@System?4MONITORING_ENTRY?$AA@
  0086b	66 c7 45 e8 2d
	00		 mov	 WORD PTR _array$12984[ebp+12], 45 ; 0000002dH
  00871	66 89 5d ea	 mov	 WORD PTR _array$12984[ebp+14], bx
  00875	89 7d ec	 mov	 DWORD PTR _array$12984[ebp+16], edi
  00878	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _array$12984[ebp+20], OFFSET ??_C@_0CN@MCHNEOJN@?$HL0?$HN?3?$HL1?$HN?3?$HL2?$HN?3?$HL3?$HN?5?9?5?$CI?$HL4?$HN?0?$HL5?$HN?0?$HL6?$HN?0?$HL@
  0087f	e8 00 00 00 00	 call	 ?InternalLogVariableRecord@@YIPAU_MEMORY_HEADER@@_NPAUuintPtr@@I1PAXIHPAUStruct_Microsoft_Singularity_Eventing_ArrayType@@@Z ; InternalLogVariableRecord
  00884	8b f0		 mov	 esi, eax
  00886	85 f6		 test	 esi, esi
  00888	0f 84 ee 00 00
	00		 je	 $LN236@RegisterNa

; 183  : 
; 184  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint16, PID)

  0088e	6a 04		 push	 4
  00890	6a 00		 push	 0
  00892	6a 04		 push	 4
  00894	68 00 00 00 00	 push	 OFFSET ??_C@_03POOIBDAP@PID?$AA@
  00899	8b d6		 mov	 edx, esi
  0089b	8b cf		 mov	 ecx, edi
  0089d	89 35 00 00 00
	00		 mov	 DWORD PTR ?Handle_MONITORING_ENTRY@@3PAUuintPtr@@A, esi ; Handle_MONITORING_ENTRY
  008a3	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 185  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint16, Provider)

  008a8	6a 04		 push	 4
  008aa	6a 02		 push	 2
  008ac	6a 09		 push	 9
  008ae	68 00 00 00 00	 push	 OFFSET ??_C@_08FGCHIJMN@Provider?$AA@
  008b3	8b d6		 mov	 edx, esi
  008b5	8b cf		 mov	 ecx, edi
  008b7	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 186  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint16, Type)

  008bc	6a 04		 push	 4
  008be	6a 04		 push	 4
  008c0	6a 05		 push	 5
  008c2	68 00 00 00 00	 push	 OFFSET ??_C@_04KOACHJEN@Type?$AA@
  008c7	8b d6		 mov	 edx, esi
  008c9	8b cf		 mov	 ecx, edi
  008cb	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 187  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint16, version)

  008d0	6a 04		 push	 4
  008d2	6a 06		 push	 6
  008d4	6a 08		 push	 8
  008d6	68 00 00 00 00	 push	 OFFSET ??_C@_07CPCPJPKL@version?$AA@
  008db	8b d6		 mov	 edx, esi
  008dd	8b cf		 mov	 ecx, edi
  008df	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 188  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint32, arg0)

  008e4	6a 06		 push	 6
  008e6	6a 08		 push	 8
  008e8	6a 05		 push	 5
  008ea	68 00 00 00 00	 push	 OFFSET ??_C@_04MOGHNFFO@arg0?$AA@
  008ef	8b d6		 mov	 edx, esi
  008f1	8b cf		 mov	 ecx, edi
  008f3	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 189  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint32, arg1)

  008f8	6a 06		 push	 6
  008fa	6a 0c		 push	 12			; 0000000cH
  008fc	6a 05		 push	 5
  008fe	68 00 00 00 00	 push	 OFFSET ??_C@_04NHHMOEBP@arg1?$AA@
  00903	8b d6		 mov	 edx, esi
  00905	8b cf		 mov	 ecx, edi
  00907	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 190  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint32, arg2)

  0090c	6a 06		 push	 6
  0090e	6a 10		 push	 16			; 00000010H
  00910	6a 05		 push	 5
  00912	68 00 00 00 00	 push	 OFFSET ??_C@_04PMFBLHNM@arg2?$AA@
  00917	8b d6		 mov	 edx, esi
  00919	8b cf		 mov	 ecx, edi
  0091b	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 191  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint32, arg3)

  00920	6a 06		 push	 6
  00922	6a 14		 push	 20			; 00000014H
  00924	6a 05		 push	 5
  00926	68 00 00 00 00	 push	 OFFSET ??_C@_04OFEKIGJN@arg3?$AA@
  0092b	8b d6		 mov	 edx, esi
  0092d	8b cf		 mov	 ecx, edi
  0092f	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 192  :     DECLARE_FIELD(MONITORING_ENTRY, TYPE_uint32, arg4)

  00934	6a 06		 push	 6
  00936	6a 18		 push	 24			; 00000018H
  00938	6a 05		 push	 5
  0093a	68 00 00 00 00	 push	 OFFSET ??_C@_04KKALBAFK@arg4?$AA@
  0093f	8b d6		 mov	 edx, esi
  00941	8b cf		 mov	 ecx, edi
  00943	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation

; 193  :     
; 194  :     DECLARE_EXTENDED_ARRAY_FIELD(MONITORING_ENTRY, TYPE_string, Text)

  00948	68 00 c0 00 00	 push	 49152			; 0000c000H
  0094d	6a 1c		 push	 28			; 0000001cH
  0094f	6a 05		 push	 5
  00951	68 00 00 00 00	 push	 OFFSET ??_C@_04OJAHODMC@Text?$AA@
  00956	8b d6		 mov	 edx, esi
  00958	8b cf		 mov	 ecx, edi
  0095a	e8 00 00 00 00	 call	 ?RegisterFieldDescriptorImplementation@@YIPAU_MEMORY_HEADER@@HPAU1@PAXIGG@Z ; RegisterFieldDescriptorImplementation
; File c:\users\cc\source\repos\singularity-os\base\kernel\native\eventdescriptor.cpp

; 528  :     MonitoringTypeHandle = Handle_MONITORING_ENTRY;

  0095f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Handle_MONITORING_ENTRY@@3PAUuintPtr@@A ; Handle_MONITORING_ENTRY

; 529  :     TracingTypeHandle = Handle_LEGACY_LOG_ENTRY;

  00964	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Handle_LEGACY_LOG_ENTRY@@3PAUuintPtr@@A ; Handle_LEGACY_LOG_ENTRY
  0096a	5f		 pop	 edi
  0096b	5e		 pop	 esi
  0096c	a3 00 00 00 00	 mov	 DWORD PTR ?MonitoringTypeHandle@@3PAUuintPtr@@A, eax ; MonitoringTypeHandle
  00971	89 0d 00 00 00
	00		 mov	 DWORD PTR ?TracingTypeHandle@@3PAUuintPtr@@A, ecx ; TracingTypeHandle
  00977	5b		 pop	 ebx

; 530  : 
; 531  : #endif
; 532  : }

  00978	8b e5		 mov	 esp, ebp
  0097a	5d		 pop	 ebp
  0097b	c3		 ret	 0
$LN236@RegisterNa:

  0097c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?Handle_MONITORING_ENTRY@@3PAUuintPtr@@A ; Handle_MONITORING_ENTRY

  00982	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Handle_LEGACY_LOG_ENTRY@@3PAUuintPtr@@A ; Handle_LEGACY_LOG_ENTRY
  00987	5f		 pop	 edi
  00988	5e		 pop	 esi
  00989	89 15 00 00 00
	00		 mov	 DWORD PTR ?MonitoringTypeHandle@@3PAUuintPtr@@A, edx ; MonitoringTypeHandle
  0098f	a3 00 00 00 00	 mov	 DWORD PTR ?TracingTypeHandle@@3PAUuintPtr@@A, eax ; TracingTypeHandle
  00994	5b		 pop	 ebx

  00995	8b e5		 mov	 esp, ebp
  00997	5d		 pop	 ebp
  00998	c3		 ret	 0
?RegisterNativeTypes@@YIXXZ ENDP			; RegisterNativeTypes
_TEXT	ENDS
END
