//This file is automatically generated
using System;
using System.Collections;
using System.Text;
using System.IO;
using System.Text.RegularExpressions;
using Microsoft.Contracts;

namespace Microsoft.Singularity.Applications{

 class ScriptParser : Parser
{

	bool TRACE = false;
  private Action[,]! actionTable;
  private State[,]! gotoTable;
  private Production[]! productionTable;
  private TokenType[]! tokenList;
public ScriptParser(){
 actionTable = new Parser.Action[,]
	{

		{null,null,new Parser.Action(Parser.ActionType.REDUCE,0),new Parser.Action(Parser.ActionType.SHIFT,1),null,new Parser.Action(Parser.ActionType.SHIFT,2),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,3),new Parser.Action(Parser.ActionType.SHIFT,4),new Parser.Action(Parser.ActionType.SHIFT,5),null,new Parser.Action(Parser.ActionType.SHIFT,6),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,0),null,new Parser.Action(Parser.ActionType.SHIFT,7),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,14),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,15),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,1),new Parser.Action(Parser.ActionType.REDUCE,1),null,new Parser.Action(Parser.ActionType.REDUCE,1),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,1),new Parser.Action(Parser.ActionType.REDUCE,1),new Parser.Action(Parser.ActionType.REDUCE,1),null,new Parser.Action(Parser.ActionType.REDUCE,1),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,1),null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,1),null,new Parser.Action(Parser.ActionType.REDUCE,1),new Parser.Action(Parser.ActionType.REDUCE,1),null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,2),new Parser.Action(Parser.ActionType.REDUCE,2),null,new Parser.Action(Parser.ActionType.REDUCE,2),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,2),new Parser.Action(Parser.ActionType.REDUCE,2),new Parser.Action(Parser.ActionType.REDUCE,2),null,new Parser.Action(Parser.ActionType.REDUCE,2),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,2),null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,2),null,new Parser.Action(Parser.ActionType.REDUCE,2),new Parser.Action(Parser.ActionType.REDUCE,2),null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,3),new Parser.Action(Parser.ActionType.REDUCE,3),null,new Parser.Action(Parser.ActionType.REDUCE,3),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,3),new Parser.Action(Parser.ActionType.REDUCE,3),new Parser.Action(Parser.ActionType.REDUCE,3),null,new Parser.Action(Parser.ActionType.REDUCE,3),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,3),null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,3),null,new Parser.Action(Parser.ActionType.REDUCE,3),new Parser.Action(Parser.ActionType.REDUCE,3),null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,4),new Parser.Action(Parser.ActionType.REDUCE,4),null,new Parser.Action(Parser.ActionType.REDUCE,4),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,4),new Parser.Action(Parser.ActionType.REDUCE,4),new Parser.Action(Parser.ActionType.REDUCE,4),null,new Parser.Action(Parser.ActionType.REDUCE,4),null,new Parser.Action(Parser.ActionType.SHIFT,16),null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,4),null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,4),null,new Parser.Action(Parser.ActionType.REDUCE,4),new Parser.Action(Parser.ActionType.REDUCE,4),null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,5),new Parser.Action(Parser.ActionType.REDUCE,5),null,new Parser.Action(Parser.ActionType.REDUCE,5),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,5),new Parser.Action(Parser.ActionType.REDUCE,5),new Parser.Action(Parser.ActionType.REDUCE,5),null,new Parser.Action(Parser.ActionType.REDUCE,5),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,5),null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,5),null,new Parser.Action(Parser.ActionType.REDUCE,5),new Parser.Action(Parser.ActionType.REDUCE,5),null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.ACCEPT,0),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,6),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,0),new Parser.Action(Parser.ActionType.SHIFT,1),null,new Parser.Action(Parser.ActionType.SHIFT,2),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,3),new Parser.Action(Parser.ActionType.SHIFT,4),new Parser.Action(Parser.ActionType.SHIFT,5),null,new Parser.Action(Parser.ActionType.SHIFT,6),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,0),null,new Parser.Action(Parser.ActionType.SHIFT,7),null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,7),new Parser.Action(Parser.ActionType.REDUCE,7),null,new Parser.Action(Parser.ActionType.REDUCE,7),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,7),new Parser.Action(Parser.ActionType.REDUCE,7),new Parser.Action(Parser.ActionType.REDUCE,7),null,new Parser.Action(Parser.ActionType.REDUCE,7),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,7),null,new Parser.Action(Parser.ActionType.REDUCE,7),null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,8),new Parser.Action(Parser.ActionType.REDUCE,8),null,new Parser.Action(Parser.ActionType.REDUCE,8),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,8),new Parser.Action(Parser.ActionType.REDUCE,8),new Parser.Action(Parser.ActionType.REDUCE,8),null,new Parser.Action(Parser.ActionType.REDUCE,8),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,8),null,new Parser.Action(Parser.ActionType.REDUCE,8),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,3),new Parser.Action(Parser.ActionType.SHIFT,4),new Parser.Action(Parser.ActionType.SHIFT,5),null,new Parser.Action(Parser.ActionType.SHIFT,18),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,9),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,7),new Parser.Action(Parser.ActionType.REDUCE,9),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,10),null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,10),null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,4),new Parser.Action(Parser.ActionType.REDUCE,4),null,new Parser.Action(Parser.ActionType.REDUCE,4),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,4),new Parser.Action(Parser.ActionType.REDUCE,4),new Parser.Action(Parser.ActionType.REDUCE,4),null,new Parser.Action(Parser.ActionType.REDUCE,4),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,4),null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,4),null,new Parser.Action(Parser.ActionType.REDUCE,4),new Parser.Action(Parser.ActionType.REDUCE,4),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,31),null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,32),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,3),new Parser.Action(Parser.ActionType.SHIFT,4),new Parser.Action(Parser.ActionType.SHIFT,5),null,new Parser.Action(Parser.ActionType.SHIFT,18),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,9),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,7),new Parser.Action(Parser.ActionType.REDUCE,9),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,11),new Parser.Action(Parser.ActionType.REDUCE,11),new Parser.Action(Parser.ActionType.REDUCE,11),new Parser.Action(Parser.ActionType.REDUCE,11),new Parser.Action(Parser.ActionType.REDUCE,11),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,11),null,new Parser.Action(Parser.ActionType.REDUCE,11),new Parser.Action(Parser.ActionType.REDUCE,11),new Parser.Action(Parser.ActionType.REDUCE,11),new Parser.Action(Parser.ActionType.REDUCE,11),new Parser.Action(Parser.ActionType.REDUCE,11),null,new Parser.Action(Parser.ActionType.REDUCE,11),null,null,new Parser.Action(Parser.ActionType.REDUCE,11),null,null,new Parser.Action(Parser.ActionType.REDUCE,11),null,new Parser.Action(Parser.ActionType.REDUCE,11),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,12),new Parser.Action(Parser.ActionType.REDUCE,12),new Parser.Action(Parser.ActionType.REDUCE,12),new Parser.Action(Parser.ActionType.REDUCE,12),new Parser.Action(Parser.ActionType.REDUCE,12),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,12),null,new Parser.Action(Parser.ActionType.REDUCE,12),new Parser.Action(Parser.ActionType.REDUCE,12),new Parser.Action(Parser.ActionType.REDUCE,12),new Parser.Action(Parser.ActionType.REDUCE,12),new Parser.Action(Parser.ActionType.REDUCE,12),null,new Parser.Action(Parser.ActionType.REDUCE,12),null,null,new Parser.Action(Parser.ActionType.REDUCE,12),null,null,new Parser.Action(Parser.ActionType.REDUCE,12),null,new Parser.Action(Parser.ActionType.REDUCE,12),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,13),new Parser.Action(Parser.ActionType.REDUCE,13),new Parser.Action(Parser.ActionType.REDUCE,13),new Parser.Action(Parser.ActionType.REDUCE,13),new Parser.Action(Parser.ActionType.REDUCE,13),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,13),null,new Parser.Action(Parser.ActionType.REDUCE,13),new Parser.Action(Parser.ActionType.REDUCE,13),new Parser.Action(Parser.ActionType.REDUCE,13),new Parser.Action(Parser.ActionType.REDUCE,13),new Parser.Action(Parser.ActionType.REDUCE,13),null,new Parser.Action(Parser.ActionType.REDUCE,13),null,null,new Parser.Action(Parser.ActionType.REDUCE,13),null,null,new Parser.Action(Parser.ActionType.REDUCE,13),null,new Parser.Action(Parser.ActionType.REDUCE,13),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,14),new Parser.Action(Parser.ActionType.REDUCE,14),new Parser.Action(Parser.ActionType.REDUCE,14),new Parser.Action(Parser.ActionType.REDUCE,14),new Parser.Action(Parser.ActionType.REDUCE,14),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,14),null,new Parser.Action(Parser.ActionType.REDUCE,14),new Parser.Action(Parser.ActionType.REDUCE,14),new Parser.Action(Parser.ActionType.REDUCE,14),new Parser.Action(Parser.ActionType.REDUCE,14),new Parser.Action(Parser.ActionType.REDUCE,14),null,new Parser.Action(Parser.ActionType.REDUCE,14),null,null,new Parser.Action(Parser.ActionType.REDUCE,14),null,null,new Parser.Action(Parser.ActionType.REDUCE,14),null,new Parser.Action(Parser.ActionType.REDUCE,14),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,15),new Parser.Action(Parser.ActionType.REDUCE,15),new Parser.Action(Parser.ActionType.REDUCE,15),new Parser.Action(Parser.ActionType.REDUCE,15),new Parser.Action(Parser.ActionType.REDUCE,15),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,15),null,new Parser.Action(Parser.ActionType.REDUCE,15),new Parser.Action(Parser.ActionType.REDUCE,15),new Parser.Action(Parser.ActionType.REDUCE,15),new Parser.Action(Parser.ActionType.REDUCE,15),new Parser.Action(Parser.ActionType.REDUCE,15),null,new Parser.Action(Parser.ActionType.REDUCE,15),null,null,new Parser.Action(Parser.ActionType.REDUCE,15),null,null,new Parser.Action(Parser.ActionType.REDUCE,15),null,new Parser.Action(Parser.ActionType.REDUCE,15),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,36),new Parser.Action(Parser.ActionType.SHIFT,37),new Parser.Action(Parser.ActionType.SHIFT,38),new Parser.Action(Parser.ActionType.SHIFT,39),new Parser.Action(Parser.ActionType.SHIFT,40),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.SHIFT,42),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.SHIFT,45),new Parser.Action(Parser.ActionType.SHIFT,46),null,new Parser.Action(Parser.ActionType.SHIFT,47),null,null,new Parser.Action(Parser.ActionType.SHIFT,48),null,null,new Parser.Action(Parser.ActionType.SHIFT,49),null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,36),new Parser.Action(Parser.ActionType.SHIFT,37),new Parser.Action(Parser.ActionType.SHIFT,38),new Parser.Action(Parser.ActionType.SHIFT,39),new Parser.Action(Parser.ActionType.SHIFT,40),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.SHIFT,42),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.SHIFT,45),new Parser.Action(Parser.ActionType.SHIFT,46),null,new Parser.Action(Parser.ActionType.SHIFT,47),null,null,new Parser.Action(Parser.ActionType.SHIFT,50),null,null,new Parser.Action(Parser.ActionType.SHIFT,49),null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,36),new Parser.Action(Parser.ActionType.SHIFT,37),new Parser.Action(Parser.ActionType.SHIFT,38),new Parser.Action(Parser.ActionType.SHIFT,39),new Parser.Action(Parser.ActionType.SHIFT,40),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.SHIFT,42),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.SHIFT,45),new Parser.Action(Parser.ActionType.SHIFT,46),null,new Parser.Action(Parser.ActionType.SHIFT,47),null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,49),null,new Parser.Action(Parser.ActionType.SHIFT,51),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,52),null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,17),new Parser.Action(Parser.ActionType.REDUCE,17),null,new Parser.Action(Parser.ActionType.REDUCE,17),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,17),new Parser.Action(Parser.ActionType.REDUCE,17),new Parser.Action(Parser.ActionType.REDUCE,17),null,new Parser.Action(Parser.ActionType.REDUCE,17),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,17),null,new Parser.Action(Parser.ActionType.REDUCE,17),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,18),null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,18),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,19),new Parser.Action(Parser.ActionType.REDUCE,19),new Parser.Action(Parser.ActionType.REDUCE,19),new Parser.Action(Parser.ActionType.REDUCE,19),new Parser.Action(Parser.ActionType.REDUCE,19),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,19),null,new Parser.Action(Parser.ActionType.REDUCE,19),new Parser.Action(Parser.ActionType.REDUCE,19),new Parser.Action(Parser.ActionType.REDUCE,19),new Parser.Action(Parser.ActionType.REDUCE,19),new Parser.Action(Parser.ActionType.REDUCE,19),null,new Parser.Action(Parser.ActionType.REDUCE,19),null,null,new Parser.Action(Parser.ActionType.REDUCE,19),null,null,new Parser.Action(Parser.ActionType.REDUCE,19),null,new Parser.Action(Parser.ActionType.REDUCE,19),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,36),new Parser.Action(Parser.ActionType.SHIFT,37),new Parser.Action(Parser.ActionType.SHIFT,38),new Parser.Action(Parser.ActionType.SHIFT,39),new Parser.Action(Parser.ActionType.SHIFT,40),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.SHIFT,42),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.SHIFT,45),new Parser.Action(Parser.ActionType.SHIFT,46),null,new Parser.Action(Parser.ActionType.SHIFT,47),null,null,new Parser.Action(Parser.ActionType.SHIFT,53),null,null,new Parser.Action(Parser.ActionType.SHIFT,49),null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,66),null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,21),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,22),new Parser.Action(Parser.ActionType.SHIFT,23),new Parser.Action(Parser.ActionType.SHIFT,24),null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,25),new Parser.Action(Parser.ActionType.SHIFT,26),null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,27),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,68),null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,20),new Parser.Action(Parser.ActionType.REDUCE,20),null,new Parser.Action(Parser.ActionType.REDUCE,20),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,20),new Parser.Action(Parser.ActionType.REDUCE,20),new Parser.Action(Parser.ActionType.REDUCE,20),null,new Parser.Action(Parser.ActionType.REDUCE,20),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,20),null,new Parser.Action(Parser.ActionType.REDUCE,20),null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,21),new Parser.Action(Parser.ActionType.REDUCE,21),null,new Parser.Action(Parser.ActionType.REDUCE,21),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,21),new Parser.Action(Parser.ActionType.REDUCE,21),new Parser.Action(Parser.ActionType.REDUCE,21),null,new Parser.Action(Parser.ActionType.REDUCE,21),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,21),null,new Parser.Action(Parser.ActionType.REDUCE,21),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,22),new Parser.Action(Parser.ActionType.REDUCE,22),new Parser.Action(Parser.ActionType.REDUCE,22),new Parser.Action(Parser.ActionType.REDUCE,22),new Parser.Action(Parser.ActionType.REDUCE,22),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,22),null,new Parser.Action(Parser.ActionType.REDUCE,22),new Parser.Action(Parser.ActionType.REDUCE,22),new Parser.Action(Parser.ActionType.REDUCE,22),new Parser.Action(Parser.ActionType.REDUCE,22),new Parser.Action(Parser.ActionType.REDUCE,22),null,new Parser.Action(Parser.ActionType.REDUCE,22),null,null,new Parser.Action(Parser.ActionType.REDUCE,22),null,null,new Parser.Action(Parser.ActionType.REDUCE,22),null,new Parser.Action(Parser.ActionType.REDUCE,22),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,23),new Parser.Action(Parser.ActionType.REDUCE,23),new Parser.Action(Parser.ActionType.REDUCE,23),new Parser.Action(Parser.ActionType.REDUCE,23),new Parser.Action(Parser.ActionType.REDUCE,23),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,23),null,new Parser.Action(Parser.ActionType.REDUCE,23),new Parser.Action(Parser.ActionType.REDUCE,23),new Parser.Action(Parser.ActionType.REDUCE,23),new Parser.Action(Parser.ActionType.REDUCE,23),new Parser.Action(Parser.ActionType.REDUCE,23),null,new Parser.Action(Parser.ActionType.REDUCE,23),null,null,new Parser.Action(Parser.ActionType.REDUCE,23),null,null,new Parser.Action(Parser.ActionType.REDUCE,23),null,new Parser.Action(Parser.ActionType.REDUCE,23),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,24),new Parser.Action(Parser.ActionType.REDUCE,24),new Parser.Action(Parser.ActionType.REDUCE,24),new Parser.Action(Parser.ActionType.REDUCE,24),new Parser.Action(Parser.ActionType.REDUCE,24),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,24),null,new Parser.Action(Parser.ActionType.REDUCE,24),new Parser.Action(Parser.ActionType.REDUCE,24),new Parser.Action(Parser.ActionType.REDUCE,24),new Parser.Action(Parser.ActionType.REDUCE,24),new Parser.Action(Parser.ActionType.REDUCE,24),null,new Parser.Action(Parser.ActionType.REDUCE,24),null,null,new Parser.Action(Parser.ActionType.REDUCE,24),null,null,new Parser.Action(Parser.ActionType.REDUCE,24),null,new Parser.Action(Parser.ActionType.REDUCE,24),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,25),new Parser.Action(Parser.ActionType.REDUCE,25),new Parser.Action(Parser.ActionType.REDUCE,25),new Parser.Action(Parser.ActionType.REDUCE,25),new Parser.Action(Parser.ActionType.REDUCE,25),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,25),null,new Parser.Action(Parser.ActionType.REDUCE,25),new Parser.Action(Parser.ActionType.REDUCE,25),new Parser.Action(Parser.ActionType.REDUCE,25),new Parser.Action(Parser.ActionType.REDUCE,25),new Parser.Action(Parser.ActionType.REDUCE,25),null,new Parser.Action(Parser.ActionType.REDUCE,25),null,null,new Parser.Action(Parser.ActionType.REDUCE,25),null,null,new Parser.Action(Parser.ActionType.REDUCE,25),null,new Parser.Action(Parser.ActionType.REDUCE,25),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,26),new Parser.Action(Parser.ActionType.REDUCE,26),new Parser.Action(Parser.ActionType.REDUCE,26),new Parser.Action(Parser.ActionType.REDUCE,26),new Parser.Action(Parser.ActionType.REDUCE,26),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,26),null,new Parser.Action(Parser.ActionType.REDUCE,26),new Parser.Action(Parser.ActionType.REDUCE,26),new Parser.Action(Parser.ActionType.REDUCE,26),new Parser.Action(Parser.ActionType.REDUCE,26),new Parser.Action(Parser.ActionType.REDUCE,26),null,new Parser.Action(Parser.ActionType.REDUCE,26),null,null,new Parser.Action(Parser.ActionType.REDUCE,26),null,null,new Parser.Action(Parser.ActionType.REDUCE,26),null,new Parser.Action(Parser.ActionType.REDUCE,26),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,27),new Parser.Action(Parser.ActionType.REDUCE,27),new Parser.Action(Parser.ActionType.REDUCE,27),new Parser.Action(Parser.ActionType.REDUCE,27),new Parser.Action(Parser.ActionType.REDUCE,27),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,27),null,new Parser.Action(Parser.ActionType.REDUCE,27),new Parser.Action(Parser.ActionType.REDUCE,27),new Parser.Action(Parser.ActionType.REDUCE,27),new Parser.Action(Parser.ActionType.REDUCE,27),new Parser.Action(Parser.ActionType.REDUCE,27),null,new Parser.Action(Parser.ActionType.REDUCE,27),null,null,new Parser.Action(Parser.ActionType.REDUCE,27),null,null,new Parser.Action(Parser.ActionType.REDUCE,27),null,new Parser.Action(Parser.ActionType.REDUCE,27),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,28),new Parser.Action(Parser.ActionType.REDUCE,28),new Parser.Action(Parser.ActionType.REDUCE,28),new Parser.Action(Parser.ActionType.REDUCE,28),new Parser.Action(Parser.ActionType.REDUCE,28),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,28),null,new Parser.Action(Parser.ActionType.REDUCE,28),new Parser.Action(Parser.ActionType.REDUCE,28),new Parser.Action(Parser.ActionType.REDUCE,28),new Parser.Action(Parser.ActionType.REDUCE,28),new Parser.Action(Parser.ActionType.REDUCE,28),null,new Parser.Action(Parser.ActionType.REDUCE,28),null,null,new Parser.Action(Parser.ActionType.REDUCE,28),null,null,new Parser.Action(Parser.ActionType.REDUCE,28),null,new Parser.Action(Parser.ActionType.REDUCE,28),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,29),new Parser.Action(Parser.ActionType.REDUCE,29),new Parser.Action(Parser.ActionType.REDUCE,29),new Parser.Action(Parser.ActionType.REDUCE,29),new Parser.Action(Parser.ActionType.REDUCE,29),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.REDUCE,29),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.REDUCE,29),new Parser.Action(Parser.ActionType.REDUCE,29),null,new Parser.Action(Parser.ActionType.REDUCE,29),null,null,new Parser.Action(Parser.ActionType.REDUCE,29),null,null,new Parser.Action(Parser.ActionType.REDUCE,29),null,new Parser.Action(Parser.ActionType.REDUCE,29),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,30),new Parser.Action(Parser.ActionType.REDUCE,30),new Parser.Action(Parser.ActionType.REDUCE,30),new Parser.Action(Parser.ActionType.REDUCE,30),new Parser.Action(Parser.ActionType.REDUCE,30),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,30),null,new Parser.Action(Parser.ActionType.REDUCE,30),new Parser.Action(Parser.ActionType.REDUCE,30),new Parser.Action(Parser.ActionType.REDUCE,30),new Parser.Action(Parser.ActionType.REDUCE,30),new Parser.Action(Parser.ActionType.REDUCE,30),null,new Parser.Action(Parser.ActionType.REDUCE,30),null,null,new Parser.Action(Parser.ActionType.REDUCE,30),null,null,new Parser.Action(Parser.ActionType.REDUCE,30),null,new Parser.Action(Parser.ActionType.REDUCE,30),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,31),new Parser.Action(Parser.ActionType.REDUCE,31),new Parser.Action(Parser.ActionType.REDUCE,31),new Parser.Action(Parser.ActionType.REDUCE,31),new Parser.Action(Parser.ActionType.REDUCE,31),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,31),null,new Parser.Action(Parser.ActionType.REDUCE,31),new Parser.Action(Parser.ActionType.REDUCE,31),new Parser.Action(Parser.ActionType.REDUCE,31),new Parser.Action(Parser.ActionType.REDUCE,31),new Parser.Action(Parser.ActionType.REDUCE,31),null,new Parser.Action(Parser.ActionType.REDUCE,31),null,null,new Parser.Action(Parser.ActionType.REDUCE,31),null,null,new Parser.Action(Parser.ActionType.REDUCE,31),null,new Parser.Action(Parser.ActionType.REDUCE,31),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,32),new Parser.Action(Parser.ActionType.REDUCE,32),new Parser.Action(Parser.ActionType.REDUCE,32),new Parser.Action(Parser.ActionType.REDUCE,32),new Parser.Action(Parser.ActionType.REDUCE,32),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.REDUCE,32),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.REDUCE,32),new Parser.Action(Parser.ActionType.REDUCE,32),null,new Parser.Action(Parser.ActionType.REDUCE,32),null,null,new Parser.Action(Parser.ActionType.REDUCE,32),null,null,new Parser.Action(Parser.ActionType.REDUCE,32),null,new Parser.Action(Parser.ActionType.REDUCE,32),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,33),new Parser.Action(Parser.ActionType.REDUCE,33),new Parser.Action(Parser.ActionType.REDUCE,33),new Parser.Action(Parser.ActionType.REDUCE,33),new Parser.Action(Parser.ActionType.REDUCE,33),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.REDUCE,33),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.REDUCE,33),new Parser.Action(Parser.ActionType.REDUCE,33),null,new Parser.Action(Parser.ActionType.REDUCE,33),null,null,new Parser.Action(Parser.ActionType.REDUCE,33),null,null,new Parser.Action(Parser.ActionType.REDUCE,33),null,new Parser.Action(Parser.ActionType.REDUCE,33),null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,34),new Parser.Action(Parser.ActionType.REDUCE,34),new Parser.Action(Parser.ActionType.REDUCE,34),new Parser.Action(Parser.ActionType.REDUCE,34),new Parser.Action(Parser.ActionType.REDUCE,34),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.REDUCE,34),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.REDUCE,34),new Parser.Action(Parser.ActionType.REDUCE,34),null,new Parser.Action(Parser.ActionType.REDUCE,34),null,null,new Parser.Action(Parser.ActionType.REDUCE,34),null,null,new Parser.Action(Parser.ActionType.REDUCE,34),null,new Parser.Action(Parser.ActionType.REDUCE,34),null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,0),new Parser.Action(Parser.ActionType.SHIFT,1),null,new Parser.Action(Parser.ActionType.SHIFT,2),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,3),new Parser.Action(Parser.ActionType.SHIFT,4),new Parser.Action(Parser.ActionType.SHIFT,5),null,new Parser.Action(Parser.ActionType.SHIFT,6),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,0),null,new Parser.Action(Parser.ActionType.SHIFT,7),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,35),new Parser.Action(Parser.ActionType.REDUCE,35),new Parser.Action(Parser.ActionType.REDUCE,35),new Parser.Action(Parser.ActionType.REDUCE,35),new Parser.Action(Parser.ActionType.REDUCE,35),null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,41),null,new Parser.Action(Parser.ActionType.REDUCE,35),new Parser.Action(Parser.ActionType.SHIFT,43),new Parser.Action(Parser.ActionType.SHIFT,44),new Parser.Action(Parser.ActionType.REDUCE,35),new Parser.Action(Parser.ActionType.REDUCE,35),null,new Parser.Action(Parser.ActionType.REDUCE,35),null,null,new Parser.Action(Parser.ActionType.REDUCE,35),null,null,new Parser.Action(Parser.ActionType.REDUCE,35),null,new Parser.Action(Parser.ActionType.REDUCE,35),null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,0),new Parser.Action(Parser.ActionType.SHIFT,1),null,new Parser.Action(Parser.ActionType.SHIFT,2),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,3),new Parser.Action(Parser.ActionType.SHIFT,4),new Parser.Action(Parser.ActionType.SHIFT,5),null,new Parser.Action(Parser.ActionType.SHIFT,6),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,0),null,new Parser.Action(Parser.ActionType.SHIFT,7),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,71),null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,72),null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,36),new Parser.Action(Parser.ActionType.REDUCE,36),new Parser.Action(Parser.ActionType.SHIFT,73),new Parser.Action(Parser.ActionType.REDUCE,36),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,36),new Parser.Action(Parser.ActionType.REDUCE,36),new Parser.Action(Parser.ActionType.REDUCE,36),null,new Parser.Action(Parser.ActionType.REDUCE,36),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,36),null,new Parser.Action(Parser.ActionType.REDUCE,36),null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,37),new Parser.Action(Parser.ActionType.REDUCE,37),null,new Parser.Action(Parser.ActionType.REDUCE,37),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,37),new Parser.Action(Parser.ActionType.REDUCE,37),new Parser.Action(Parser.ActionType.REDUCE,37),null,new Parser.Action(Parser.ActionType.REDUCE,37),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,37),null,new Parser.Action(Parser.ActionType.REDUCE,37),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,74),null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,0),new Parser.Action(Parser.ActionType.SHIFT,1),null,new Parser.Action(Parser.ActionType.SHIFT,2),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,3),new Parser.Action(Parser.ActionType.SHIFT,4),new Parser.Action(Parser.ActionType.SHIFT,5),null,new Parser.Action(Parser.ActionType.SHIFT,6),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,0),null,new Parser.Action(Parser.ActionType.SHIFT,7),null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.SHIFT,76),null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,new Parser.Action(Parser.ActionType.REDUCE,38),new Parser.Action(Parser.ActionType.REDUCE,38),null,new Parser.Action(Parser.ActionType.REDUCE,38),null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,38),new Parser.Action(Parser.ActionType.REDUCE,38),new Parser.Action(Parser.ActionType.REDUCE,38),null,new Parser.Action(Parser.ActionType.REDUCE,38),null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.Action(Parser.ActionType.REDUCE,38),null,new Parser.Action(Parser.ActionType.REDUCE,38),null,null,null,null,null,null,null,null,null,null}
	};
gotoTable = new State[,]
	{

		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(8),new Parser.State(9),new Parser.State(10),new Parser.State(11),new Parser.State(12),null,new Parser.State(13),null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(17),new Parser.State(10),new Parser.State(11),new Parser.State(12),null,new Parser.State(13),null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(19),new Parser.State(20),null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(28)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(29)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(30)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(33),new Parser.State(20),null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(34)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(35)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(54)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(55)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(56)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(57)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(58)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(59)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(60)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(61)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(62)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(63)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(64)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(65)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(67)},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(69),new Parser.State(10),new Parser.State(11),new Parser.State(12),null,new Parser.State(13),null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(70),new Parser.State(10),new Parser.State(11),new Parser.State(12),null,new Parser.State(13),null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,new Parser.State(75),new Parser.State(10),new Parser.State(11),new Parser.State(12),null,new Parser.State(13),null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null},
		{null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null}
	};
tokenList = new[Delayed] TokenType[] 
		{new  TokenType(3,new Regex(@"^if"),null ),new  TokenType(4,new Regex(@"^else"),null ),new  TokenType(5,new Regex(@"^while"),null ),new  TokenType(6,new Regex(@"^(true|false)"),null ),new  TokenType(7,new Regex(@"^=="),null ),new  TokenType(8,new Regex(@"^<"),null ),new  TokenType(9,new Regex(@"^<="),null ),new  TokenType(10,new Regex(@"^>"),null ),new  TokenType(11,new Regex(@"^>="),null ),new  TokenType(12,new Regex(@"^;"),null ),new  TokenType(13,new Regex(@"^-?\d+"),null ),new  TokenType(14,new Regex(@"^""(([^\\""\r\n])|(\\.))*"""),new Lexer(this.LexActionMethod_0) ),new  TokenType(15,new Regex(@"^'([^'])*'"),new Lexer(this.LexActionMethod_1) ),new  TokenType(16,new Regex(@"^#.*"),new Lexer(this.LexActionMethod_2) ),new  TokenType(17,new Regex(@"^\w+"),null ),new  TokenType(18,new Regex(@"^/"),null ),new  TokenType(19,new Regex(@"^="),null ),new  TokenType(20,new Regex(@"^\+"),null ),new  TokenType(21,new Regex(@"^\*"),null ),new  TokenType(22,new Regex(@"^%"),null ),new  TokenType(23,new Regex(@"^\."),null ),new  TokenType(24,new Regex(@"^&&"),null ),new  TokenType(25,new Regex(@"^&"),null ),new  TokenType(26,new Regex(@"^\|\|"),null ),new  TokenType(27,new Regex(@"^\!"),null ),new  TokenType(28,new Regex(@"^\("),null ),new  TokenType(29,new Regex(@"^\)"),null ),new  TokenType(30,new Regex(@"^{"),null ),new  TokenType(31,new Regex(@"^}"),null ),new  TokenType(32,new Regex(@"^-"),null ),new  TokenType(33,new Regex(@"^((\$\w+)|(\$\(\w+\))|(\$\?)|(\$\(\?\))|(\$#)|(\$\(#\)))"),new Lexer(this.LexActionMethod_3) ),new  TokenType(34,new Regex(@"^\n"),new Lexer(this.LexActionMethod_4) ),new  TokenType(35,new Regex(@"^[ \f\r\t\v]+"),new Lexer(this.LexActionMethod_5) )}
;productionTable = new[Delayed] Production[]{new Production( 37, new Reducer(this.production_action_0)),new Production( 42, new Reducer(this.production_action_1)),new Production( 42, new Reducer(this.production_action_2)),new Production( 42, new Reducer(this.production_action_3)),new Production( 42, new Reducer(this.production_action_4)),new Production( 42, new Reducer(this.production_action_5)),new Production( 36, new Reducer(this.production_action_6)),new Production( 38, new Reducer(this.production_action_7)),new Production( 38, new Reducer(this.production_action_8)),new Production( 41, new Reducer(this.production_action_9)),new Production( 37, new Reducer(this.production_action_10)),new Production( 43, new Reducer(this.production_action_11)),new Production( 43, new Reducer(this.production_action_12)),new Production( 43, new Reducer(this.production_action_13)),new Production( 43, new Reducer(this.production_action_14)),new Production( 43, new Reducer(this.production_action_15)),new Production( 43, new Reducer(this.production_action_16)),new Production( 39, new Reducer(this.production_action_17)),new Production( 41, new Reducer(this.production_action_18)),new Production( 43, new Reducer(this.production_action_19)),new Production( 38, new Reducer(this.production_action_20)),new Production( 40, new Reducer(this.production_action_21)),new Production( 43, new Reducer(this.production_action_22)),new Production( 43, new Reducer(this.production_action_23)),new Production( 43, new Reducer(this.production_action_24)),new Production( 43, new Reducer(this.production_action_25)),new Production( 43, new Reducer(this.production_action_26)),new Production( 43, new Reducer(this.production_action_27)),new Production( 43, new Reducer(this.production_action_28)),new Production( 43, new Reducer(this.production_action_29)),new Production( 43, new Reducer(this.production_action_30)),new Production( 43, new Reducer(this.production_action_31)),new Production( 43, new Reducer(this.production_action_32)),new Production( 43, new Reducer(this.production_action_33)),new Production( 43, new Reducer(this.production_action_34)),new Production( 43, new Reducer(this.production_action_35)),new Production( 38, new Reducer(this.production_action_36)),new Production( 38, new Reducer(this.production_action_37)),new Production( 38, new Reducer(this.production_action_38))};
;
}
	private void LexActionMethod_0(Token! tok) { 
 tok.value = ((String) tok.value).Replace("\"",""); 
	}
	private void LexActionMethod_1(Token! tok) { 
 tok.value = ((String) tok.value).Replace("'",""); 
	}
	private void LexActionMethod_2(Token! tok) { 
 tok.value = null; 
	}
	private void LexActionMethod_3(Token! tok) { 
  
	   tok.value = ((String) tok.value).Replace("$","");
	   tok.value =((String) tok.value).Replace("(","");
	   tok.value = ((String) tok.value).Replace(")","");
    
	}
	private void LexActionMethod_4(Token! tok) { 
 tok.optional = true; 
	}
	private void LexActionMethod_5(Token! tok) { 
 tok.value = null; 
	}
private Object production_action_0(Stack! stack) {
	Object value = null;

		//user code:
 
	  if(TRACE) Console.WriteLine("Rsmt epsilon");
	  value  = new ArrayList();
	 
	return value;
}
private Object production_action_1(Stack! stack) {
	Object value = null;
	Object integer = ( (StackElement!) stack.Pop()).value;
		//user code:
 value = new ScriptEngine.IntegerLiteral(Int32.Parse((String) integer)); 
	return value;
}
private Object production_action_2(Stack! stack) {
	Object value = null;
	Object str = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("Reducing interp: '{0}'", str);
        value = new ScriptEngine.StringInterpolation((String) str); 
    
	return value;
}
private Object production_action_3(Stack! stack) {
	Object value = null;
	Object str = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing string: '{0}'", str);
        value = new ScriptEngine.StringLiteral((String) str); 
    
	return value;
}
private Object production_action_4(Stack! stack) {
	Object value = null;
	Object w = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("Reducing command word: '{0}'", w);
		value = new ScriptEngine.StringLiteral((String) w);
	
	return value;
}
private Object production_action_5(Stack! stack) {
	Object value = null;
	Object varRef = ( (StackElement!) stack.Pop()).value;
		//user code:
   
		if(TRACE) Console.WriteLine("Reducing variable in command reference: '{0}'", varRef);
		value = new ScriptEngine.VariableReference((String) varRef);
	
	return value;
}
private Object production_action_6(Stack! stack) {
	Object value = null;
	Object list = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("Reducing statement list to programm");
		value = new ScriptEngine.Block((ArrayList) list);
	
	return value;
}
private Object production_action_7(Stack! stack) {
	Object value = null;
	Object comm = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("Reducing command list to statement: " + comm);
		value = new ScriptEngine.Command((ArrayList) comm);
	
	return value;
}
private Object production_action_8(Stack! stack) {
	Object value = null;
	Object comm = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("Reducing command list to statement: " + comm);
		value = new ScriptEngine.Command((ArrayList) comm, true);
	
	return value;
}
private Object production_action_9(Stack! stack) {
	Object value = null;

		//user code:
 
		value = new ArrayList(); 
	
	return value;
}
private Object production_action_10(Stack! stack) {
	Object value = null;
	Object list = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	Object stmt = ( (StackElement!) stack.Pop()).value;
		//user code:
  
		if(TRACE) Console.WriteLine("Reduction: adding statement to statement list");
		((ArrayList) list).Insert(0,stmt);
		value = list;
	
	return value;
}
private Object production_action_11(Stack! stack) {
	Object value = null;
	Object boolVal = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("reducing bool literal expression");
		value = new ScriptEngine.BooleanLiteral(Boolean.Parse((String) boolVal));
	
	return value;
}
private Object production_action_12(Stack! stack) {
	Object value = null;
	Object intString = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing integer literal expression: " + intString);
		value = new ScriptEngine.IntegerLiteral(Int32.Parse((String) intString)); 
	
	return value;
}
private Object production_action_13(Stack! stack) {
	Object value = null;
	Object interp = ( (StackElement!) stack.Pop()).value;
		//user code:
 value = new ScriptEngine.StringInterpolation((String) interp); 
	return value;
}
private Object production_action_14(Stack! stack) {
	Object value = null;
	Object strVal = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing string literal expression: " + strVal);
		value = new ScriptEngine.StringLiteral((String) strVal); 
	
	return value;
}
private Object production_action_15(Stack! stack) {
	Object value = null;
	Object varRef = ( (StackElement!) stack.Pop()).value;
		//user code:

		value = new ScriptEngine.VariableReference((String) varRef);
	
	return value;
}
private Object production_action_16(Stack! stack) {
	Object value = null;
	Object varRef = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing expression variable reference");
		value = new ScriptEngine.VariableReference((String) varRef);
	
	return value;
}
private Object production_action_17(Stack! stack) {
	Object value = null;
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object list = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	Object elem = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing command list to command");
		((ArrayList) list).Insert(0,elem);
		value = list;
	
	return value;
}
private Object production_action_18(Stack! stack) {
	Object value = null;
	Object list = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	Object elem = ( (StackElement!) stack.Pop()).value;
		//user code:

        ArrayList rest = (ArrayList)list;
		if(TRACE) {
           Console.WriteLine("reducing commlist: '{0}'", elem);
           int i=0;
           foreach (object o in rest) {
              Console.WriteLine("  [{0}] = {1}", i++, o);
           }
        }
		rest.Insert(0,elem);
		value = list;
	
	return value;
}
private Object production_action_19(Stack! stack) {
	Object value = null;
	Object e1 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
		//user code:
 
		if(TRACE) Console.WriteLine("reducing to boolean and");
		value = new ScriptEngine.Negate((ScriptEngine.Expression) e1);
	
	return value;
}
private Object production_action_20(Stack! stack) {
	Object value = null;
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object expr = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object var = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("Reducing assignment: " + var + "= " + expr);
		value = new ScriptEngine.Assign((String) var, (ScriptEngine.Expression) expr);
	
	return value;
}
private Object production_action_21(Stack! stack) {
	Object value = null;
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object list = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	Object elem = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing command list to command");
		((ArrayList) list).Insert(0,elem);
		value = list;
	
	return value;
}
private Object production_action_22(Stack! stack) {
	Object value = null;
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
		//user code:
 value = e; 
	return value;
}
private Object production_action_23(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing to boolean ==");
		value = new ScriptEngine.Equal((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_24(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing to boolean less");
		value = new ScriptEngine.Less((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_25(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing to boolean less than or equal");
		value = new ScriptEngine.LessEqual((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_26(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing to boolean greater");
		value = new ScriptEngine.Greater((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_27(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing to boolean greater than or equal");
		value = new ScriptEngine.GreaterEqual((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_28(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing divide");
		value = new ScriptEngine.Divide((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_29(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing plus");
		value = new ScriptEngine.Add((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
      
	return value;
}
private Object production_action_30(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing multiply");
		value = new ScriptEngine.Multiply((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_31(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing modulus");
		value = new ScriptEngine.Mod((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_32(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		value = new ScriptEngine.Concat((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);	
	
	return value;
}
private Object production_action_33(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing to boolean and");
		value = new ScriptEngine.And((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_34(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:

		if(TRACE) Console.WriteLine("reducing to boolean or");
		value = new ScriptEngine.Or((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
	
	return value;
}
private Object production_action_35(Stack! stack) {
	Object value = null;
	Object e2 = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object e1 = ( (StackElement!) stack.Pop()).value;
		//user code:
 
		if(TRACE) Console.WriteLine("Reducing minus");
		value = new ScriptEngine.Subtract((ScriptEngine.Expression) e1, (ScriptEngine.Expression) e2);
      
	return value;
}
private Object production_action_36(Stack! stack) {
	Object value = null;
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object stmts = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object cond = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
		//user code:

		if(TRACE) Console.WriteLine("Reducing if");
		value = new ScriptEngine.If((ScriptEngine.Expression) cond, new ScriptEngine.Block((ArrayList) stmts));
	
	return value;
}
private Object production_action_37(Stack! stack) {
	Object value = null;
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object block = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object cond = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
		//user code:

		if(TRACE) Console.WriteLine("Reducing while loop");
		value = new ScriptEngine.While((ScriptEngine.Expression) cond, new ScriptEngine.Block((ArrayList) block));	
	
	return value;
}
private Object production_action_38(Stack! stack) {
	Object value = null;
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object falseBranch = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object trueBranch = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	Object cond = ( (StackElement!) stack.Pop()).value;
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
	stack.Pop(); //pop state
	stack.Pop(); //pop non binding element
		//user code:

		if(TRACE) Console.WriteLine("Reducing if then else");
		value = new ScriptEngine.IfThenElse((ScriptEngine.Expression) cond, new ScriptEngine.Block((ArrayList) trueBranch), new ScriptEngine.Block((ArrayList) falseBranch));
	
	return value;
}
  protected override Action[,]! ActionTable { get { return this.actionTable; } }
  protected override State[,]! GotoTable { get { return this.gotoTable; } }
  protected override Production[]! ProductionTable { get { return this.productionTable; } }
  protected override TokenType[]! TokenList { get { return this.tokenList; } }
	}
}